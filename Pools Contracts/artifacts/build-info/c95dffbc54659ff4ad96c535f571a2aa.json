{
	"id": "c95dffbc54659ff4ad96c535f571a2aa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ShadowChef.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./access/Ownable.sol\";\r\nimport \"./utils/SafeMath.sol\";\r\nimport \"./security/ReentrancyGuard.sol\";\r\nimport \"./interfaces/IBEP20.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\n\r\n\r\ncontract ShadowChefV2 is Ownable, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    /// @notice Info of each SCV2 user.\r\n    /// `amount` LP token amount the user has provided.\r\n    /// `rewardDebt` Used to calculate the correct amount of rewards. See explanation below.\r\n    ///\r\n    /// We do some fancy math here. Basically, any point in time, the amount of SHDWs\r\n    /// entitled to a user but is pending to be distributed is:\r\n    ///\r\n    ///   pending reward = (user share * pool.accShdwPerShare) - user.rewardDebt\r\n    ///\r\n    ///   Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n    ///   1. The pool's `accShdwPerShare` (and `lastRewardBlock`) gets updated.\r\n    ///   2. User receives the pending reward sent to his/her address.\r\n    ///   3. User's `amount` gets updated. Pool's `totalBoostedShare` gets updated.\r\n    ///   4. User's `rewardDebt` gets updated.\r\n    struct UserInfo {\r\n        uint256 amount;\r\n        uint256 rewardDebt;\r\n        uint256 boostMultiplier;\r\n    }\r\n\r\n    /// @notice Info of each MCV2 pool.\r\n    /// `allocPoint` The amount of allocation points assigned to the pool.\r\n    ///     Also known as the amount of \"multipliers\". Combined with `totalXAllocPoint`, it defines the % of\r\n    ///     SHDW rewards each pool gets.\r\n    /// `accShdwPerShare` Accumulated SHDWs per share, times 1e12.\r\n    /// `lastRewardBlock` Last block number that pool update action is executed.\r\n    /// `isRegular` The flag to set pool is regular or special. See below:\r\n    ///     In ShadowChef V2 farms are \"regular pools\". \"special pools\", which use a different sets of\r\n    ///     `allocPoint` and their own `totalSpecialAllocPoint` are designed to handle the distribution of\r\n    ///     the SHDW rewards to all the ShadowSwap products.\r\n    /// `totalBoostedShare` The total amount of user shares in each pool. After considering the share boosts.\r\n    struct PoolInfo {\r\n        uint256 accShdwPerShare;\r\n        uint256 lastRewardBlock;\r\n        uint256 allocPoint;\r\n        uint256 totalBoostedShare;\r\n        bool isRegular;\r\n    }\r\n\r\n   \r\n    /// @notice Address of SHDW contract.\r\n    IBEP20 public immutable SHDW;\r\n\r\n    /// @notice The only address can withdraw all the burn SHDW.\r\n    address public burnAdmin;\r\n    /// @notice The contract handles the share boosts.\r\n    address public boostContract;\r\n\r\n    /// @notice Info of each MCV2 pool.\r\n    PoolInfo[] public poolInfo;\r\n    /// @notice Address of the LP token for each MCV2 pool.\r\n    IBEP20[] public lpToken;\r\n\r\n    /// @notice Info of each pool user.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    /// @notice The whitelist of addresses allowed to deposit in special pools.\r\n    mapping(address => bool) public whiteList;\r\n\r\n    /// @notice Total regular allocation points. Must be the sum of all regular pools' allocation points.\r\n    uint256 public totalRegularAllocPoint;\r\n    /// @notice Total special allocation points. Must be the sum of all special pools' allocation points.\r\n    uint256 public totalSpecialAllocPoint;\r\n    ///  @notice 40 SHDWs per block in MCV1\r\n    uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 1.375 * 1e18;\r\n    uint256 public constant ACC_SHDW_PRECISION = 1e18;\r\n\r\n    /// @notice Basic boost factor, none boosted user's boost factor\r\n    uint256 public constant BOOST_PRECISION = 100 * 1e10;\r\n    /// @notice Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION\r\n    uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10;\r\n    /// @notice total SHDW rate = toBurn + toRegular + toSpecial\r\n    uint256 public constant SHDW_RATE_TOTAL_PRECISION = 1e12;\r\n    /// @notice The last block number of SHDW burn action being executed.\r\n    /// @notice SHDW distribute % for burn\r\n    uint256 public shdwRateToBurn = 50000000000;\r\n    /// @notice SHDW distribute % for regular farm pool\r\n    uint256 public shdwRateToRegularFarm = 250000000000;\r\n    /// @notice SHDW distribute % for special pools\r\n    uint256 public shdwRateToSpecialFarm = 700000000000;\r\n\r\n    uint256 public lastBurnedBlock;\r\n\r\n    event Init();\r\n    event AddPool(uint256 indexed pid, uint256 allocPoint, IBEP20 indexed lpToken, bool isRegular);\r\n    event SetPool(uint256 indexed pid, uint256 allocPoint);\r\n    event UpdatePool(uint256 indexed pid, uint256 lastRewardBlock, uint256 lpSupply, uint256 accShdwPerShare);\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n\r\n    event EventUpdateShdwRate(uint256 burnRate, uint256 regularFarmRate, uint256 specialFarmRate);\r\n    event UpdateBurnAdmin(address indexed oldAdmin, address indexed newAdmin);\r\n    event UpdateWhiteList(address indexed user, bool isValid);\r\n    event UpdateBoostContract(address indexed boostContract);\r\n    event UpdateBoostMultiplier(address indexed user, uint256 pid, uint256 oldMultiplier, uint256 newMultiplier);\r\n\r\n     /// @param _SHDW The SHDW token contract address.\r\n     /// @param _burnAdmin The address of burn admin.\r\n    constructor(\r\n        IBEP20 _SHDW,\r\n        address _burnAdmin\r\n    ) public {\r\n        SHDW = _SHDW;\r\n        burnAdmin = _burnAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if caller is not the boost contract.\r\n     */\r\n    modifier onlyBoostContract() {\r\n        require(boostContract == msg.sender, \"Ownable: caller is not the boost contract\");\r\n        _;\r\n    }\r\n\r\n\r\n    /// @notice Returns the number of MCV2 pools.\r\n    function poolLength() public view returns (uint256 pools) {\r\n        pools = poolInfo.length;\r\n    }\r\n\r\n    /// @notice Add a new pool. Can only be called by the owner.\r\n    /// DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    /// @param _allocPoint Number of allocation points for the new pool.\r\n    /// @param _lpToken Address of the LP BEP-20 token.\r\n    /// @param _isRegular Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    /// only for SHDW distributions within ShadowSwap products.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IBEP20 _lpToken,\r\n        bool _isRegular,\r\n        bool _withUpdate\r\n    ) external onlyOwner {\r\n        require(_lpToken.balanceOf(address(this)) >= 0, \"None BEP20 tokens\");\r\n        // stake SHDW token will cause staked token and reward token mixed up,\r\n        // may cause staked tokens withdraw as reward token,never do it.\r\n        require(_lpToken != SHDW, \"SHDW token can't be added to farm pools\");\r\n\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n\r\n        if (_isRegular) {\r\n            totalRegularAllocPoint = totalRegularAllocPoint.add(_allocPoint);\r\n        } else {\r\n            totalSpecialAllocPoint = totalSpecialAllocPoint.add(_allocPoint);\r\n        }\r\n        lpToken.push(_lpToken);\r\n\r\n        poolInfo.push(\r\n            PoolInfo({\r\n        allocPoint: _allocPoint,\r\n        lastRewardBlock: block.number,\r\n        accShdwPerShare: 0,\r\n        isRegular: _isRegular,\r\n        totalBoostedShare: 0\r\n        })\r\n        );\r\n        emit AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular);\r\n    }\r\n\r\n    /// @notice Update the given pool's SHDW allocation point. Can only be called by the owner.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _allocPoint New number of allocation points for the pool.\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    function set(\r\n        uint256 _pid,\r\n        uint256 _allocPoint,\r\n        bool _withUpdate\r\n    ) external onlyOwner {\r\n        // No matter _withUpdate is true or false, we need to execute updatePool once before set the pool parameters.\r\n        updatePool(_pid);\r\n\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n\r\n        if (poolInfo[_pid].isRegular) {\r\n            totalRegularAllocPoint = totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        } else {\r\n            totalSpecialAllocPoint = totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        }\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n        emit SetPool(_pid, _allocPoint);\r\n    }\r\n\r\n    /// @notice View function for checking pending SHDW rewards.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _user Address of the user.\r\n    function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo memory pool = poolInfo[_pid];\r\n        UserInfo memory user = userInfo[_pid][_user];\r\n        uint256 accShdwPerShare = pool.accShdwPerShare;\r\n        uint256 lpSupply = pool.totalBoostedShare;\r\n\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = block.number.sub(pool.lastRewardBlock);\r\n\r\n            uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r\n                (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint)\r\n            );\r\n            accShdwPerShare = accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply));\r\n        }\r\n\r\n        uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION);\r\n        return boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt);\r\n    }\r\n\r\n    /// @notice Update SHDW reward for all the active pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            PoolInfo memory pool = poolInfo[pid];\r\n            if (pool.allocPoint != 0) {\r\n                updatePool(pid);\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @notice Calculates and returns the `amount` of SHDW per block.\r\n    /// @param _isRegular If the pool belongs to regular or special.\r\n    function shdwPerBlock(bool _isRegular) public view returns (uint256 amount) {\r\n        if (_isRegular) {\r\n            amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION);\r\n        } else {\r\n            amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm).div(SHDW_RATE_TOTAL_PRECISION);\r\n        }\r\n    }\r\n\r\n    /// @notice Calculates and returns the `amount` of SHDW per block to burn.\r\n    function shdwPerBlockToBurn() public view returns (uint256 amount) {\r\n        amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION);\r\n    }\r\n\r\n    /// @notice Update reward variables for the given pool.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @return pool Returns the pool that was updated.\r\n    function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r\n        pool = poolInfo[_pid];\r\n        if (block.number > pool.lastRewardBlock) {\r\n            uint256 lpSupply = pool.totalBoostedShare;\r\n            uint256 totalAllocPoint = (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint);\r\n\r\n            if (lpSupply > 0 && totalAllocPoint > 0) {\r\n                uint256 multiplier = block.number.sub(pool.lastRewardBlock);\r\n                uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r\n                    totalAllocPoint\r\n                );\r\n                pool.accShdwPerShare = pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)));\r\n            }\r\n            pool.lastRewardBlock = block.number;\r\n            poolInfo[_pid] = pool;\r\n            emit UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare);\r\n        }\r\n    }\r\n\r\n    /// @notice Deposit LP tokens to pool.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _amount Amount of LP tokens to deposit.\r\n    function deposit(uint256 _pid, uint256 _amount) external nonReentrant {\r\n        PoolInfo memory pool = updatePool(_pid);\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        require(\r\n            pool.isRegular || whiteList[msg.sender],\r\n            \"ShadowChefV2: The address is not available to deposit in this pool\"\r\n        );\r\n\r\n        uint256 multiplier = getBoostMultiplier(msg.sender, _pid);\r\n\r\n        if (user.amount > 0) {\r\n            settlependingShdw(msg.sender, _pid, multiplier);\r\n        }\r\n\r\n        if (_amount > 0) {\r\n            uint256 before = lpToken[_pid].balanceOf(address(this));\r\n            lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount);\r\n            _amount = lpToken[_pid].balanceOf(address(this)).sub(before);\r\n            user.amount = user.amount.add(_amount);\r\n\r\n            // Update total boosted share.\r\n            pool.totalBoostedShare = pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION));\r\n        }\r\n\r\n        user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r\n            ACC_SHDW_PRECISION\r\n        );\r\n        poolInfo[_pid] = pool;\r\n\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    /// @notice Withdraw LP tokens from pool.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _amount Amount of LP tokens to withdraw.\r\n    function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r\n        PoolInfo memory pool = updatePool(_pid);\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        require(user.amount >= _amount, \"withdraw: Insufficient\");\r\n\r\n        uint256 multiplier = getBoostMultiplier(msg.sender, _pid);\r\n\r\n        settlependingShdw(msg.sender, _pid, multiplier);\r\n\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            lpToken[_pid].safeTransfer(msg.sender, _amount);\r\n        }\r\n\r\n        user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r\n            ACC_SHDW_PRECISION\r\n        );\r\n        poolInfo[_pid].totalBoostedShare = poolInfo[_pid].totalBoostedShare.sub(\r\n            _amount.mul(multiplier).div(BOOST_PRECISION)\r\n        );\r\n\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n\r\n    /// @notice Withdraw without caring about the rewards. EMERGENCY ONLY.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    function emergencyWithdraw(uint256 _pid) external nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        uint256 amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        uint256 boostedAmount = amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION);\r\n        pool.totalBoostedShare = pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0;\r\n\r\n        // Note: transfer can fail or succeed if `amount` is zero.\r\n        lpToken[_pid].safeTransfer(msg.sender, amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\r\n    }\r\n\r\n    /// @notice Send SHDW pending for burn to `burnAdmin`.\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    function burnShdw(bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n\r\n        uint256 multiplier = block.number.sub(lastBurnedBlock);\r\n        uint256 pendingShdwToBurn = multiplier.mul(shdwPerBlockToBurn());\r\n\r\n        // SafeTransfer SHDW\r\n        _safeTransfer(burnAdmin, pendingShdwToBurn);\r\n        lastBurnedBlock = block.number;\r\n    }\r\n\r\n    /// @notice Update the % of SHDW distributions for burn, regular pools and special pools.\r\n    /// @param _burnRate The % of SHDW to burn each block.\r\n    /// @param _regularFarmRate The % of SHDW to regular pools each block.\r\n    /// @param _specialFarmRate The % of SHDW to special pools each block.\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    function updateShdwRate(\r\n        uint256 _burnRate,\r\n        uint256 _regularFarmRate,\r\n        uint256 _specialFarmRate,\r\n        bool _withUpdate\r\n    ) external onlyOwner {\r\n        require(\r\n            _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0,\r\n            \"ShadowChefV2: SHDW rate must be greater than 0\"\r\n        );\r\n        require(\r\n            _burnRate.add(_regularFarmRate).add(_specialFarmRate) == SHDW_RATE_TOTAL_PRECISION,\r\n            \"ShadowChefV2: Total rate must be 1e12\"\r\n        );\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        // burn SHDW base on old burn SHDW rate\r\n        burnShdw(false);\r\n\r\n        shdwRateToBurn = _burnRate;\r\n        shdwRateToRegularFarm = _regularFarmRate;\r\n        shdwRateToSpecialFarm = _specialFarmRate;\r\n\r\n        emit EventUpdateShdwRate(_burnRate, _regularFarmRate, _specialFarmRate);\r\n    }\r\n\r\n    /// @notice Update burn admin address.\r\n    /// @param _newAdmin The new burn admin address.\r\n    function updateBurnAdmin(address _newAdmin) external onlyOwner {\r\n        require(_newAdmin != address(0), \"ShadowChefV2: Burn admin address must be valid\");\r\n        require(_newAdmin != burnAdmin, \"ShadowChefV2: Burn admin address is the same with current address\");\r\n        address _oldAdmin = burnAdmin;\r\n        burnAdmin = _newAdmin;\r\n        emit UpdateBurnAdmin(_oldAdmin, _newAdmin);\r\n    }\r\n\r\n    /// @notice Update whitelisted addresses for special pools.\r\n    /// @param _user The address to be updated.\r\n    /// @param _isValid The flag for valid or invalid.\r\n    function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r\n        require(_user != address(0), \"ShadowChefV2: The white list address must be valid\");\r\n\r\n        whiteList[_user] = _isValid;\r\n        emit UpdateWhiteList(_user, _isValid);\r\n    }\r\n\r\n    /// @notice Update boost contract address and max boost factor.\r\n    /// @param _newBoostContract The new address for handling all the share boosts.\r\n    function updateBoostContract(address _newBoostContract) external onlyOwner {\r\n        require(\r\n            _newBoostContract != address(0) && _newBoostContract != boostContract,\r\n            \"ShadowChefV2: New boost contract address must be valid\"\r\n        );\r\n\r\n        boostContract = _newBoostContract;\r\n        emit UpdateBoostContract(_newBoostContract);\r\n    }\r\n\r\n    /// @notice Update user boost factor.\r\n    /// @param _user The user address for boost factor updates.\r\n    /// @param _pid The pool id for the boost factor updates.\r\n    /// @param _newMultiplier New boost multiplier.\r\n    function updateBoostMultiplier(\r\n        address _user,\r\n        uint256 _pid,\r\n        uint256 _newMultiplier\r\n    ) external onlyBoostContract nonReentrant {\r\n        require(_user != address(0), \"ShadowChefV2: The user address must be valid\");\r\n        require(poolInfo[_pid].isRegular, \"ShadowChefV2: Only regular farm could be boosted\");\r\n        require(\r\n            _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION,\r\n            \"ShadowChefV2: Invalid new boost multiplier\"\r\n        );\r\n\r\n        PoolInfo memory pool = updatePool(_pid);\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n\r\n        uint256 prevMultiplier = getBoostMultiplier(_user, _pid);\r\n        settlependingShdw(_user, _pid, prevMultiplier);\r\n\r\n        user.rewardDebt = user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r\n            ACC_SHDW_PRECISION\r\n        );\r\n        pool.totalBoostedShare = pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r\n            user.amount.mul(_newMultiplier).div(BOOST_PRECISION)\r\n        );\r\n        poolInfo[_pid] = pool;\r\n        userInfo[_pid][_user].boostMultiplier = _newMultiplier;\r\n\r\n        emit UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier);\r\n    }\r\n\r\n    /// @notice Get user boost multiplier for specific pool id.\r\n    /// @param _user The user address.\r\n    /// @param _pid The pool id.\r\n    function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r\n        uint256 multiplier = userInfo[_pid][_user].boostMultiplier;\r\n        return multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION;\r\n    }\r\n\r\n    /// @notice Settles, distribute the pending SHDW rewards for given user.\r\n    /// @param _user The user address for settling rewards.\r\n    /// @param _pid The pool id.\r\n    /// @param _boostMultiplier The user boost multiplier in specific pool id.\r\n    function settlependingShdw(\r\n        address _user,\r\n        uint256 _pid,\r\n        uint256 _boostMultiplier\r\n    ) internal {\r\n        UserInfo memory user = userInfo[_pid][_user];\r\n\r\n        uint256 boostedAmount = user.amount.mul(_boostMultiplier).div(BOOST_PRECISION);\r\n        uint256 accShdw = boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION);\r\n        uint256 pending = accShdw.sub(user.rewardDebt);\r\n        // SafeTransfer SHDW\r\n        _safeTransfer(_user, pending);\r\n    }\r\n\r\n    /// @notice Safe Transfer SHDW.\r\n    /// @param _to The SHDW receiver address.\r\n    /// @param _amount transfer SHDW amounts.\r\n    function _safeTransfer(address _to, uint256 _amount) internal {\r\n        if (_amount > 0) {\r\n             // Check whether SC has enough SHDW. If not, dev should transfer in SHDW in SC\r\n            uint256 balance = SHDW.balanceOf(address(this));\r\n            if (balance < _amount) {\r\n                _amount = balance;\r\n            }\r\n            SHDW.safeTransfer(_to, _amount);\r\n        }\r\n    }\r\n}"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\nimport \"./interfaces/IBEP20.sol\";\r\nimport \"./utils/Address.sol\";\r\nimport \"./utils/SafeMath.sol\";\r\n\r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IBEP20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.transfer.selector, to, value)\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IBEP20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n   * {IBEP20-approve}, and its usage is discouraged.\r\n   *\r\n   * Whenever possible, use {safeIncreaseAllowance} and\r\n   * {safeDecreaseAllowance} instead.\r\n   */\r\n    function safeApprove(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.approve.selector, spender, value)\r\n        );\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\r\n        );\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IBEP20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance =\r\n        token.allowance(address(this), spender).sub(\r\n            value,\r\n            \"SafeBEP20: decreased allowance below zero\"\r\n        );\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n   * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n   * @param token The token targeted by the call.\r\n   * @param data The call data (encoded using abi.encode or one of its variants).\r\n   */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata =\r\n        address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(\r\n                abi.decode(returndata, (bool)),\r\n                \"SafeBEP20: BEP20 operation did not succeed\"\r\n            );\r\n        }\r\n    }\r\n}"
			},
			"contracts/interfaces/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n   */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n   */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n   */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n   */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n   */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n    function allowance(address _owner, address spender)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\ncontract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor () internal {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"contracts/utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\nimport \"../GSN/Context.sol\";\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}"
			},
			"contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			},
			"contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GSN/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/GSN/Context.sol\":{\"keccak256\":\"0xac3640fab06aaa5fc0af5b6548a8636bc14b78229779b692bae195c699221797\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48fcd027633a742c81fcfa81dfa2a0a22cee177971fb32e6f8cb5197fdf951d1\",\"dweb:/ipfs/QmeGieEzcGUKHppbDZ3PySE4yi8gTzcRQ7ayobMobbmwJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":627:4265  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":627:4265  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122017082f2910e64cebc9009d96b057fe01077c834ba391e51ae142fd3b9c08d69364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017082f2910e64cebc9009d96b057fe01077c834ba391e51ae142fd3b9c08d69364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ADDMOD 0x2F 0x29 LT 0xE6 0x4C 0xEB 0xC9 STOP SWAP14 SWAP7 0xB0 JUMPI INVALID ADD SMOD PUSH29 0x834BA391E51AE142FD3B9C08D69364736F6C634300060C003300000000 ",
							"sourceMap": "627:3638:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017082f2910e64cebc9009d96b057fe01077c834ba391e51ae142fd3b9c08d69364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ADDMOD 0x2F 0x29 LT 0xE6 0x4C 0xEB 0xC9 STOP SWAP14 SWAP7 0xB0 JUMPI INVALID ADD SMOD PUSH29 0x834BA391E51AE142FD3B9C08D69364736F6C634300060C003300000000 ",
							"sourceMap": "627:3638:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 4265,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017082f2910e64cebc9009d96b057fe01077c834ba391e51ae142fd3b9c08d69364736f6c634300060c0033",
									".code": [
										{
											"begin": 627,
											"end": 4265,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 627,
											"end": 4265,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ba8fde3a8428b9970384f82f685191d0fe20eba7888323aebf4160e723a9874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2d8ad03ea9da4af418de1da1a857a6ff030b70fbb302f510f14e1185f7a35b9\",\"dweb:/ipfs/Qmdo6P18HCGyneMzgSnykq6b5L5QRL9r4N1xYiEz6U2t9k\"]},\"contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0x0fc9133e1f7e76899bbfd283f50eab584517d7718627a4105e57b2573b4424ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a25ad611946438cc409d0164af42bfd325a9e0d4741cca6aebfc4655287940c\",\"dweb:/ipfs/QmWcjwcbWDcmBDuwzyFWaqg9B5NKy7T1YuPAG6JMGxoqyC\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x6fdd4f22c4b1bad566163a8372598724aa1f4e7ac2e91996f5195d896f866347\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05f30f1b8664b6ed2027ba8b89d3b4d18fcf31cc516b77f0862f3c10e209e080\",\"dweb:/ipfs/QmaWnyw6CVaiXohboJVrixXyCb4KiAP7LiMmcGRczX79zB\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xaa5974a17de3ff0a3b5132f2d65f957c60450c398b0e6bf252cd8c80c43a4724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f8f9836ee7504a2010136587fdfb373937cb5ae822f44f7c5110be984c552c8\",\"dweb:/ipfs/QmPsVWWUEiPZ9gmFRaR491L1pYWuGrGKRaBt86j8YcDdgQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ShadowChef.sol": {
				"ShadowChefV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_SHDW",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_burnAdmin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "contract IBEP20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isRegular",
									"type": "bool"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "regularFarmRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "specialFarmRate",
									"type": "uint256"
								}
							],
							"name": "EventUpdateShdwRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Init",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								}
							],
							"name": "SetPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "boostContract",
									"type": "address"
								}
							],
							"name": "UpdateBoostContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldMultiplier",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMultiplier",
									"type": "uint256"
								}
							],
							"name": "UpdateBoostMultiplier",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAdmin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "UpdateBurnAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lpSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "accShdwPerShare",
									"type": "uint256"
								}
							],
							"name": "UpdatePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"name": "UpdateWhiteList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_SHDW_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BOOST_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MASTERCHEF_SHDW_PER_BLOCK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_BOOST_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHDW",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHDW_RATE_TOTAL_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isRegular",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "boostContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "burnShdw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getBoostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastBurnedBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingShdw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "accShdwPerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBoostedShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRegular",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "pools",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isRegular",
									"type": "bool"
								}
							],
							"name": "shdwPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwPerBlockToBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwRateToBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwRateToRegularFarm",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwRateToSpecialFarm",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRegularAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSpecialAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newBoostContract",
									"type": "address"
								}
							],
							"name": "updateBoostContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newMultiplier",
									"type": "uint256"
								}
							],
							"name": "updateBoostMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAdmin",
									"type": "address"
								}
							],
							"name": "updateBurnAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "accShdwPerShare",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastRewardBlock",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "allocPoint",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalBoostedShare",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isRegular",
											"type": "bool"
										}
									],
									"internalType": "struct ShadowChefV2.PoolInfo",
									"name": "pool",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_burnRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_regularFarmRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_specialFarmRate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "updateShdwRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isValid",
									"type": "bool"
								}
							],
							"name": "updateWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "boostMultiplier",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"add(uint256,address,bool,bool)": {
								"params": {
									"_allocPoint": "Number of allocation points for the new pool.",
									"_isRegular": "Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are",
									"_lpToken": "Address of the LP BEP-20 token.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation. only for SHDW distributions within ShadowSwap products."
								}
							},
							"burnShdw(bool)": {
								"params": {
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"constructor": {
								"params": {
									"_SHDW": "The SHDW token contract address.",
									"_burnAdmin": "The address of burn admin."
								}
							},
							"deposit(uint256,uint256)": {
								"params": {
									"_amount": "Amount of LP tokens to deposit.",
									"_pid": "The id of the pool. See `poolInfo`."
								}
							},
							"emergencyWithdraw(uint256)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`."
								}
							},
							"getBoostMultiplier(address,uint256)": {
								"params": {
									"_pid": "The pool id.",
									"_user": "The user address."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingShdw(uint256,address)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`.",
									"_user": "Address of the user."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"set(uint256,uint256,bool)": {
								"params": {
									"_allocPoint": "New number of allocation points for the pool.",
									"_pid": "The id of the pool. See `poolInfo`.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"shdwPerBlock(bool)": {
								"params": {
									"_isRegular": "If the pool belongs to regular or special."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateBoostContract(address)": {
								"params": {
									"_newBoostContract": "The new address for handling all the share boosts."
								}
							},
							"updateBoostMultiplier(address,uint256,uint256)": {
								"params": {
									"_newMultiplier": "New boost multiplier.",
									"_pid": "The pool id for the boost factor updates.",
									"_user": "The user address for boost factor updates."
								}
							},
							"updateBurnAdmin(address)": {
								"params": {
									"_newAdmin": "The new burn admin address."
								}
							},
							"updatePool(uint256)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`."
								},
								"returns": {
									"pool": "Returns the pool that was updated."
								}
							},
							"updateShdwRate(uint256,uint256,uint256,bool)": {
								"params": {
									"_burnRate": "The % of SHDW to burn each block.",
									"_regularFarmRate": "The % of SHDW to regular pools each block.",
									"_specialFarmRate": "The % of SHDW to special pools each block.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"updateWhiteList(address,bool)": {
								"params": {
									"_isValid": "The flag for valid or invalid.",
									"_user": "The address to be updated."
								}
							},
							"withdraw(uint256,uint256)": {
								"params": {
									"_amount": "Amount of LP tokens to withdraw.",
									"_pid": "The id of the pool. See `poolInfo`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ShadowChef.sol\":271:22001  contract ShadowChefV2 is Ownable, ReentrancyGuard {\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ShadowChef.sol\":4140:4151  50000000000 */\n  0x0ba43b7400\n    /* \"contracts/ShadowChef.sol\":4108:4151  uint256 public shdwRateToBurn = 50000000000 */\n  0x0a\n  sstore\n    /* \"contracts/ShadowChef.sol\":4254:4266  250000000000 */\n  0x3a35294400\n    /* \"contracts/ShadowChef.sol\":4215:4266  uint256 public shdwRateToRegularFarm = 250000000000 */\n  0x0b\n  sstore\n    /* \"contracts/ShadowChef.sol\":4365:4377  700000000000 */\n  0xa2fb405800\n    /* \"contracts/ShadowChef.sol\":4326:4377  uint256 public shdwRateToSpecialFarm = 700000000000 */\n  0x0c\n  sstore\n    /* \"contracts/ShadowChef.sol\":5503:5645  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/access/Ownable.sol\":891:908  address msgSender */\n  0x00\n    /* \"contracts/access/Ownable.sol\":911:923  _msgSender() */\n  tag_8\n    /* \"contracts/access/Ownable.sol\":911:921  _msgSender */\n  tag_9\n    /* \"contracts/access/Ownable.sol\":911:923  _msgSender() */\n  jump\t// in\ntag_8:\n    /* \"contracts/access/Ownable.sol\":934:940  _owner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":934:952  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/access/Ownable.sol\":968:1011  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/access/Ownable.sol\":934:952  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/access/Ownable.sol\":968:1011  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/access/Ownable.sol\":934:940  _owner */\n  dup3\n  swap1\n    /* \"contracts/access/Ownable.sol\":968:1011  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/security/ReentrancyGuard.sol\":1660:1661  1 */\n  0x01\n    /* \"contracts/security/ReentrancyGuard.sol\":1781:1803  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/ShadowChef.sol\":5592:5604  SHDW = _SHDW */\n  0x60\n  swap2\n  swap1\n  swap2\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0x80\n  mstore\n    /* \"contracts/ShadowChef.sol\":5615:5624  burnAdmin */\n  0x02\n    /* \"contracts/ShadowChef.sol\":5615:5637  burnAdmin = _burnAdmin */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/ShadowChef.sol\":271:22001  contract ShadowChefV2 is Ownable, ReentrancyGuard {\r... */\n  jump(tag_14)\n    /* \"contracts/GSN/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_9:\n    /* \"contracts/GSN/Context.sol\":693:703  msg.sender */\n  caller\n    /* \"contracts/GSN/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"--CODEGEN--\":317:746   */\ntag_3:\n  0x00\n  dup1\n    /* \"--CODEGEN--\":464:466   */\n  0x40\n    /* \"--CODEGEN--\":452:461   */\n  dup4\n    /* \"--CODEGEN--\":443:450   */\n  dup6\n    /* \"--CODEGEN--\":439:462   */\n  sub\n    /* \"--CODEGEN--\":435:467   */\n  slt\n    /* \"--CODEGEN--\":432:434   */\n  iszero\n  tag_16\n  jumpi\n  dup2\n  dup3\n    /* \"--CODEGEN--\":470:482   */\n  revert\n    /* \"--CODEGEN--\":432:434   */\ntag_16:\n    /* \"--CODEGEN--\":245:251   */\n  dup3\n    /* \"--CODEGEN--\":239:252   */\n  mload\n    /* \"--CODEGEN--\":257:305   */\n  tag_17\n    /* \"--CODEGEN--\":299:304   */\n  dup2\n    /* \"--CODEGEN--\":257:305   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"--CODEGEN--\":648:650   */\n  0x20\n    /* \"--CODEGEN--\":698:720   */\n  dup5\n  add\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":522:611   */\n  swap1\n  swap3\n  pop\n    /* \"--CODEGEN--\":101:134   */\n  tag_19\n    /* \"--CODEGEN--\":83:96   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  tag_18\n  jump\t// in\ntag_19:\n    /* \"--CODEGEN--\":656:730   */\n  dup1\n  swap2\n  pop\n  pop\n    /* \"--CODEGEN--\":426:746   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1092:1209   */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":1026:1080   */\n  dup2\n  and\n    /* \"--CODEGEN--\":1151:1186   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":1141:1143   */\n  tag_21\n  jumpi\n    /* \"--CODEGEN--\":1200:1201   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":1190:1202   */\n  revert\n    /* \"--CODEGEN--\":1141:1143   */\ntag_21:\n    /* \"--CODEGEN--\":1135:1209   */\n  pop\n  jump\t// out\ntag_14:\n    /* \"contracts/ShadowChef.sol\":271:22001  contract ShadowChefV2 is Ownable, ReentrancyGuard {\r... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xdb56024b3d6cde3a6cd02fd327b99549871e338b958b94e29cae4ab4619605ef\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ShadowChef.sol\":271:22001  contract ShadowChefV2 is Ownable, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x78db4c34\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xc507aeaa\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xe2bbb158\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xf474309e\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xf474309e\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf5a26f40\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf5b91cd3\n      eq\n      tag_41\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0xe2bbb158\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0xcc6db2da\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xcc6db2da\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd2ce6ae8\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdfcedeee\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0xc507aeaa\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc799b59d\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x93f1a40b\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x9dd2fcc3\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x9dd2fcc3\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xac1d0609\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc40d337b\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x93f1a40b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x99d7e84a\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x815d087f\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x815d087f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x81bdf98c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x78db4c34\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x78ed5d1f\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x372c12b1\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x64482f79\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x69b02128\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x69b02128\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6fda08c3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x64482f79\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6661100f\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x51eb05a6\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_53:\n      dup1\n      0x372c12b1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x0bb844bc\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x16e80f4d\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x16e80f4d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x19f95e2e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36183ed6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_55:\n      dup1\n      0x0bb844bc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_54:\n      dup1\n      0x033186e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x03dcff74\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x041a84c9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081e3eda\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ShadowChef.sol\":20450:20691  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r... */\n    tag_3:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ShadowChef.sol\":2464:2492  IBEP20 public immutable SHDW */\n    tag_4:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":19007:20303  function updateBoostMultiplier(\r... */\n    tag_5:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/ShadowChef.sol\":5930:6030  function poolLength() public view returns (uint256 pools) {\r... */\n    tag_6:\n      tag_56\n      tag_71\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":17405:17805  function updateBurnAdmin(address _newAdmin) external onlyOwner {\r... */\n    tag_7:\n      tag_66\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":2732:2758  PoolInfo[] public poolInfo */\n    tag_8:\n      tag_77\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_60\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":3519:3568  uint256 public constant ACC_SHDW_PRECISION = 1e18 */\n    tag_9:\n      tag_56\n      tag_84\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":10850:11021  function shdwPerBlockToBurn() public view returns (uint256 amount) {\r... */\n    tag_10:\n      tag_56\n      tag_87\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":15611:16012  function burnShdw(bool _withUpdate) public onlyOwner {\r... */\n    tag_11:\n      tag_66\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":3051:3092  mapping(address => bool) public whiteList */\n    tag_12:\n      tag_93\n      tag_94\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":13736:14640  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_13:\n      tag_66\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":11204:12153  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r... */\n    tag_14:\n      tag_102\n      tag_103\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":14783:15473  function emergencyWithdraw(uint256 _pid) external nonReentrant {\r... */\n    tag_15:\n      tag_66\n      tag_108\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":9967:10258  function massUpdatePools() public {\r... */\n    tag_16:\n      tag_66\n      tag_111\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":7995:8725  function set(\r... */\n    tag_17:\n      tag_66\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":4108:4151  uint256 public shdwRateToBurn = 50000000000 */\n    tag_18:\n      tag_56\n      tag_117\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":3797:3853  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n    tag_19:\n      tag_56\n      tag_120\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":4326:4377  uint256 public shdwRateToSpecialFarm = 700000000000 */\n    tag_20:\n      tag_56\n      tag_123\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":1742:1890  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_21:\n      tag_66\n      tag_126\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":4386:4416  uint256 public lastBurnedBlock */\n    tag_22:\n      tag_56\n      tag_128\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":2826:2849  IBEP20[] public lpToken */\n    tag_23:\n      tag_62\n      tag_131\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":16397:17299  function updateShdwRate(\r... */\n    tag_24:\n      tag_66\n      tag_135\n      calldatasize\n      0x04\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":2567:2591  address public burnAdmin */\n    tag_25:\n      tag_62\n      tag_139\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":1100:1179  function owner() public view returns (address) {\r... */\n    tag_26:\n      tag_62\n      tag_143\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":2899:2963  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_27:\n      tag_145\n      tag_146\n      calldatasize\n      0x04\n      tag_147\n      jump\t// in\n    tag_146:\n      tag_148\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_60\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":3359:3396  uint256 public totalSpecialAllocPoint */\n    tag_28:\n      tag_56\n      tag_152\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":18408:18775  function updateBoostContract(address _newBoostContract) external onlyOwner {\r... */\n    tag_29:\n      tag_66\n      tag_155\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":17983:18246  function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r... */\n    tag_30:\n      tag_66\n      tag_158\n      calldatasize\n      0x04\n      tag_159\n      jump\t// in\n    tag_158:\n      tag_160\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":3208:3245  uint256 public totalRegularAllocPoint */\n    tag_31:\n      tag_56\n      tag_162\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":6579:7689  function add(\r... */\n    tag_32:\n      tag_66\n      tag_165\n      calldatasize\n      0x04\n      tag_166\n      jump\t// in\n    tag_165:\n      tag_167\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":8899:9869  function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_33:\n      tag_56\n      tag_169\n      calldatasize\n      0x04\n      tag_147\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":3647:3699  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n    tag_34:\n      tag_56\n      tag_173\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":2654:2682  address public boostContract */\n    tag_36:\n      tag_62\n      tag_179\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":12318:13567  function deposit(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_37:\n      tag_66\n      tag_182\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":2045:2289  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_38:\n      tag_66\n      tag_185\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_185:\n      tag_186\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":10408:10762  function shdwPerBlock(bool _isRegular) public view returns (uint256 amount) {\r... */\n    tag_39:\n      tag_56\n      tag_188\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_188:\n      tag_189\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":4215:4266  uint256 public shdwRateToRegularFarm = 250000000000 */\n    tag_40:\n      tag_56\n      tag_192\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":3448:3512  uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 1.375 * 1e18 */\n    tag_41:\n      tag_56\n      tag_195\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":20450:20691  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r... */\n    tag_59:\n        /* \"contracts/ShadowChef.sol\":20528:20535  uint256 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":20569:20583  userInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":20569:20577  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":20569:20583  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":20569:20590  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ShadowChef.sol\":20569:20606  userInfo[_pid][_user].boostMultiplier */\n      0x02\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":20624:20652  multiplier > BOOST_PRECISION */\n      dup2\n      gt\n        /* \"contracts/ShadowChef.sol\":20624:20683  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      tag_198\n      jumpi\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":20624:20683  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      jump(tag_199)\n    tag_198:\n        /* \"contracts/ShadowChef.sol\":20655:20665  multiplier */\n      dup1\n        /* \"contracts/ShadowChef.sol\":20624:20683  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n    tag_199:\n        /* \"contracts/ShadowChef.sol\":20617:20683  return multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      swap2\n      pop\n      pop\n        /* \"contracts/ShadowChef.sol\":20450:20691  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r... */\n    tag_197:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":2464:2492  IBEP20 public immutable SHDW */\n    tag_63:\n      immutable(\"0xdb56024b3d6cde3a6cd02fd327b99549871e338b958b94e29cae4ab4619605ef\")\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":19007:20303  function updateBoostMultiplier(\r... */\n    tag_69:\n        /* \"contracts/ShadowChef.sol\":5776:5789  boostContract */\n      sload(0x03)\n        /* \"contracts/ShadowChef.sol\":5776:5803  boostContract == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowChef.sol\":5776:5789  boostContract */\n      and\n        /* \"contracts/ShadowChef.sol\":5793:5803  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":5776:5803  boostContract == msg.sender */\n      eq\n        /* \"contracts/ShadowChef.sol\":5768:5849  require(boostContract == msg.sender, \"Ownable: caller is not the boost contract\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2317  _status */\n      sload(0x01)\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2329  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/security/ReentrancyGuard.sol\":2302:2365  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_207\n      jump\t// in\n    tag_205:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2450  _status */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2461  _status = _ENTERED */\n      sstore\n        /* \"contracts/ShadowChef.sol\":19184:19203  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"contracts/ShadowChef.sol\":19176:19252  require(_user != address(0), \"ShadowChefV2: The user address must be valid\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_211\n      jump\t// in\n    tag_209:\n        /* \"contracts/ShadowChef.sol\":19271:19279  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":19280:19284  _pid */\n      dup3\n        /* \"contracts/ShadowChef.sol\":19271:19285  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_212\n      jumpi\n      invalid\n    tag_212:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ShadowChef.sol\":19271:19295  poolInfo[_pid].isRegular */\n      0x04\n        /* \"contracts/ShadowChef.sol\":19271:19285  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":19271:19295  poolInfo[_pid].isRegular */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowChef.sol\":19263:19348  require(poolInfo[_pid].isRegular, \"ShadowChefV2: Only regular farm could be boosted\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_216\n      jump\t// in\n    tag_214:\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":19381:19395  _newMultiplier */\n      dup2\n        /* \"contracts/ShadowChef.sol\":19381:19414  _newMultiplier >= BOOST_PRECISION */\n      lt\n      iszero\n        /* \"contracts/ShadowChef.sol\":19381:19455  _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/ShadowChef.sol\":3843:3853  200 * 1e10 */\n      0x01d1a94a2000\n        /* \"contracts/ShadowChef.sol\":19418:19432  _newMultiplier */\n      dup2\n        /* \"contracts/ShadowChef.sol\":19418:19455  _newMultiplier <= MAX_BOOST_PRECISION */\n      gt\n      iszero\n        /* \"contracts/ShadowChef.sol\":19381:19455  _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION */\n    tag_217:\n        /* \"contracts/ShadowChef.sol\":19359:19525  require(\r... */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_220\n      jump\t// in\n    tag_218:\n        /* \"contracts/ShadowChef.sol\":19538:19558  PoolInfo memory pool */\n      tag_221\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"contracts/ShadowChef.sol\":19561:19577  updatePool(_pid) */\n      tag_223\n        /* \"contracts/ShadowChef.sol\":19572:19576  _pid */\n      dup4\n        /* \"contracts/ShadowChef.sol\":19561:19571  updatePool */\n      tag_104\n        /* \"contracts/ShadowChef.sol\":19561:19577  updatePool(_pid) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/ShadowChef.sol\":19588:19609  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowChef.sol\":19612:19626  userInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":19612:19620  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":19612:19626  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":19612:19633  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ShadowChef.sol\":19538:19577  PoolInfo memory pool = updatePool(_pid) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/ShadowChef.sol\":19671:19702  getBoostMultiplier(_user, _pid) */\n      tag_224\n        /* \"contracts/ShadowChef.sol\":19627:19632  _user */\n      dup7\n        /* \"contracts/ShadowChef.sol\":19621:19625  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":19671:19689  getBoostMultiplier */\n      tag_59\n        /* \"contracts/ShadowChef.sol\":19671:19702  getBoostMultiplier(_user, _pid) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/ShadowChef.sol\":19646:19702  uint256 prevMultiplier = getBoostMultiplier(_user, _pid) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":19713:19759  settlependingShdw(_user, _pid, prevMultiplier) */\n      tag_225\n        /* \"contracts/ShadowChef.sol\":19731:19736  _user */\n      dup7\n        /* \"contracts/ShadowChef.sol\":19738:19742  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":19744:19758  prevMultiplier */\n      dup4\n        /* \"contracts/ShadowChef.sol\":19713:19730  settlependingShdw */\n      tag_226\n        /* \"contracts/ShadowChef.sol\":19713:19759  settlependingShdw(_user, _pid, prevMultiplier) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/ShadowChef.sol\":19790:19916  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      tag_227\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":19790:19868  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":19847:19851  pool */\n      dup6\n        /* \"contracts/ShadowChef.sol\":19847:19867  pool.accShdwPerShare */\n      0x00\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":19790:19842  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      tag_229\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":19790:19821  user.amount.mul(_newMultiplier) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":19806:19820  _newMultiplier */\n      dup11\n        /* \"contracts/ShadowChef.sol\":19790:19794  user */\n      dup10\n        /* \"contracts/ShadowChef.sol\":19790:19801  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":19790:19805  user.amount.mul */\n      tag_231\n      swap1\n        /* \"contracts/ShadowChef.sol\":19790:19821  user.amount.mul(_newMultiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/ShadowChef.sol\":19790:19825  user.amount.mul(_newMultiplier).div */\n      swap1\n      tag_232\n        /* \"contracts/ShadowChef.sol\":19790:19842  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/ShadowChef.sol\":19790:19846  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul */\n      swap1\n      tag_231\n        /* \"contracts/ShadowChef.sol\":19790:19868  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":19790:19916  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n    tag_227:\n        /* \"contracts/ShadowChef.sol\":19772:19787  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/ShadowChef.sol\":19772:19916  user.rewardDebt = user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      sstore\n        /* \"contracts/ShadowChef.sol\":20051:20062  user.amount */\n      dup2\n      sload\n        /* \"contracts/ShadowChef.sol\":19952:20114  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r... */\n      tag_233\n      swap1\n        /* \"contracts/ShadowChef.sol\":20051:20103  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      tag_234\n      swap1\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/ShadowChef.sol\":20051:20082  user.amount.mul(_newMultiplier) */\n      tag_230\n      swap1\n        /* \"contracts/ShadowChef.sol\":20067:20081  _newMultiplier */\n      dup9\n        /* \"contracts/ShadowChef.sol\":20051:20066  user.amount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":20051:20082  user.amount.mul(_newMultiplier) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":20051:20103  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n    tag_234:\n        /* \"contracts/ShadowChef.sol\":19979:19990  user.amount */\n      dup4\n      sload\n        /* \"contracts/ShadowChef.sol\":19952:20032  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)) */\n      tag_236\n      swap1\n        /* \"contracts/ShadowChef.sol\":19979:20031  user.amount.mul(prevMultiplier).div(BOOST_PRECISION) */\n      tag_237\n      swap1\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/ShadowChef.sol\":19979:20010  user.amount.mul(prevMultiplier) */\n      tag_230\n      swap1\n        /* \"contracts/ShadowChef.sol\":19995:20009  prevMultiplier */\n      dup8\n        /* \"contracts/ShadowChef.sol\":19979:19994  user.amount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":19979:20010  user.amount.mul(prevMultiplier) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":19979:20031  user.amount.mul(prevMultiplier).div(BOOST_PRECISION) */\n    tag_237:\n        /* \"contracts/ShadowChef.sol\":19952:19974  pool.totalBoostedShare */\n      0x60\n      dup8\n      add\n      mload\n      swap1\n        /* \"contracts/ShadowChef.sol\":19952:19978  pool.totalBoostedShare.sub */\n      tag_239\n        /* \"contracts/ShadowChef.sol\":19952:20032  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/ShadowChef.sol\":19952:20036  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add */\n      swap1\n      tag_240\n        /* \"contracts/ShadowChef.sol\":19952:20114  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r... */\n      jump\t// in\n    tag_233:\n        /* \"contracts/ShadowChef.sol\":19927:19949  pool.totalBoostedShare */\n      0x60\n      dup5\n      add\n        /* \"contracts/ShadowChef.sol\":19927:20114  pool.totalBoostedShare = pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r... */\n      mstore\n        /* \"contracts/ShadowChef.sol\":20125:20133  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":20125:20139  poolInfo[_pid] */\n      dup1\n      sload\n        /* \"contracts/ShadowChef.sol\":19927:19931  pool */\n      dup5\n      swap2\n        /* \"contracts/ShadowChef.sol\":20125:20133  poolInfo */\n      swap1\n        /* \"contracts/ShadowChef.sol\":20134:20138  _pid */\n      dup8\n      swap1\n        /* \"contracts/ShadowChef.sol\":20125:20139  poolInfo[_pid] */\n      dup2\n      lt\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":20125:20146  poolInfo[_pid] = pool */\n      dup5\n      mload\n        /* \"contracts/ShadowChef.sol\":20125:20139  poolInfo[_pid] */\n      0x05\n      swap4\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":20125:20146  poolInfo[_pid] = pool */\n      swap2\n      dup3\n      sstore\n      dup4\n      dup2\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      0x40\n      dup1\n      dup6\n      add\n      mload\n      0x02\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0x60\n      dup7\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      swap1\n      swap6\n      add\n      mload\n      0x04\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap4\n      iszero\n      iszero\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ShadowChef.sol\":20157:20171  userInfo[_pid] */\n      dup9\n      dup4\n      mstore\n        /* \"contracts/ShadowChef.sol\":20157:20165  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":20157:20171  userInfo[_pid] */\n      dup2\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":20157:20178  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      and\n      dup1\n      dup6\n      mstore\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":20157:20194  userInfo[_pid][_user].boostMultiplier */\n      swap1\n      swap3\n      add\n        /* \"contracts/ShadowChef.sol\":20157:20211  userInfo[_pid][_user].boostMultiplier = _newMultiplier */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":20229:20295  UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier) */\n      swap1\n      mload\n      0x01abd62439b64f6c5dab6f94d56099495bd0c094f9c21f98f4d3562a21edb4ba\n      swap1\n      tag_243\n      swap1\n        /* \"contracts/ShadowChef.sol\":20157:20171  userInfo[_pid] */\n      dup9\n      swap1\n        /* \"contracts/ShadowChef.sol\":20264:20278  prevMultiplier */\n      dup6\n      swap1\n        /* \"contracts/ShadowChef.sol\":20157:20211  userInfo[_pid][_user].boostMultiplier = _newMultiplier */\n      dup10\n      swap1\n        /* \"contracts/ShadowChef.sol\":20229:20295  UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier) */\n      tag_150\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":1660:1661  1 */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2622:2644  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ShadowChef.sol\":19007:20303  function updateBoostMultiplier(\r... */\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":5930:6030  function poolLength() public view returns (uint256 pools) {\r... */\n    tag_71:\n        /* \"contracts/ShadowChef.sol\":6007:6015  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":6007:6022  poolInfo.length */\n      sload\n      swap1\n        /* \"contracts/ShadowChef.sol\":5930:6030  function poolLength() public view returns (uint256 pools) {\r... */\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":17405:17805  function updateBurnAdmin(address _newAdmin) external onlyOwner {\r... */\n    tag_76:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_246\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_248:\n        /* \"contracts/ShadowChef.sol\":17487:17510  _newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowChef.sol\":17479:17561  require(_newAdmin != address(0), \"ShadowChefV2: Burn admin address must be valid\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_254\n      jump\t// in\n    tag_252:\n        /* \"contracts/ShadowChef.sol\":17593:17602  burnAdmin */\n      sload(0x02)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowChef.sol\":17580:17602  _newAdmin != burnAdmin */\n      dup3\n      dup2\n      and\n        /* \"contracts/ShadowChef.sol\":17593:17602  burnAdmin */\n      swap2\n      and\n        /* \"contracts/ShadowChef.sol\":17580:17602  _newAdmin != burnAdmin */\n      eq\n      iszero\n        /* \"contracts/ShadowChef.sol\":17572:17672  require(_newAdmin != burnAdmin, \"ShadowChefV2: Burn admin address is the same with current address\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_257\n      jump\t// in\n    tag_255:\n        /* \"contracts/ShadowChef.sol\":17703:17712  burnAdmin */\n      0x02\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowChef.sol\":17723:17744  burnAdmin = _newAdmin */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ShadowChef.sol\":17760:17797  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      mload(0x40)\n        /* \"contracts/ShadowChef.sol\":17703:17712  burnAdmin */\n      swap2\n      and\n      swap2\n        /* \"contracts/ShadowChef.sol\":17723:17744  burnAdmin = _newAdmin */\n      swap1\n        /* \"contracts/ShadowChef.sol\":17703:17712  burnAdmin */\n      dup3\n      swap1\n        /* \"contracts/ShadowChef.sol\":17760:17797  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      0xd146fe330fdddf682413850a35b28edfccd4c4b53cfee802fd24950de5be1dbe\n      swap1\n        /* \"contracts/ShadowChef.sol\":17683:17700  address _oldAdmin */\n      0x00\n      swap1\n        /* \"contracts/ShadowChef.sol\":17760:17797  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      log3\n        /* \"contracts/access/Ownable.sol\":1382:1383  _ */\n      pop\n        /* \"contracts/ShadowChef.sol\":17405:17805  function updateBurnAdmin(address _newAdmin) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":2732:2758  PoolInfo[] public poolInfo */\n    tag_80:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_258\n      jumpi\n      invalid\n    tag_258:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap5\n      pop\n      swap1\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup6\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":3519:3568  uint256 public constant ACC_SHDW_PRECISION = 1e18 */\n    tag_84:\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":3519:3568  uint256 public constant ACC_SHDW_PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":10850:11021  function shdwPerBlockToBurn() public view returns (uint256 amount) {\r... */\n    tag_87:\n        /* \"contracts/ShadowChef.sol\":10901:10915  uint256 amount */\n      0x00\n        /* \"contracts/ShadowChef.sol\":10937:11013  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION) */\n      tag_261\n        /* \"contracts/ShadowChef.sol\":3978:3982  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":10937:10982  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":10967:10981  shdwRateToBurn */\n      sload(0x0a)\n        /* \"contracts/ShadowChef.sol\":3500:3512  1.375 * 1e18 */\n      0x1314fb3706298000\n        /* \"contracts/ShadowChef.sol\":10937:10966  MASTERCHEF_SHDW_PER_BLOCK.mul */\n      tag_231\n      swap1\n        /* \"contracts/ShadowChef.sol\":10937:10982  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":10937:11013  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION) */\n    tag_261:\n        /* \"contracts/ShadowChef.sol\":10928:11013  amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":10850:11021  function shdwPerBlockToBurn() public view returns (uint256 amount) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":15611:16012  function burnShdw(bool _withUpdate) public onlyOwner {\r... */\n    tag_92:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_264\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_265:\n        /* \"contracts/ShadowChef.sol\":15679:15690  _withUpdate */\n      dup1\n        /* \"contracts/ShadowChef.sol\":15675:15736  if (_withUpdate) {\r... */\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/ShadowChef.sol\":15707:15724  massUpdatePools() */\n      tag_269\n        /* \"contracts/ShadowChef.sol\":15707:15722  massUpdatePools */\n      tag_111\n        /* \"contracts/ShadowChef.sol\":15707:15724  massUpdatePools() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/ShadowChef.sol\":15748:15766  uint256 multiplier */\n      0x00\n        /* \"contracts/ShadowChef.sol\":15769:15802  block.number.sub(lastBurnedBlock) */\n      tag_270\n        /* \"contracts/ShadowChef.sol\":15786:15801  lastBurnedBlock */\n      sload(0x0d)\n        /* \"contracts/ShadowChef.sol\":15769:15781  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":15769:15785  block.number.sub */\n      tag_239\n      swap1\n        /* \"contracts/ShadowChef.sol\":15769:15802  block.number.sub(lastBurnedBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/ShadowChef.sol\":15748:15802  uint256 multiplier = block.number.sub(lastBurnedBlock) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":15813:15838  uint256 pendingShdwToBurn */\n      0x00\n        /* \"contracts/ShadowChef.sol\":15841:15877  multiplier.mul(shdwPerBlockToBurn()) */\n      tag_271\n        /* \"contracts/ShadowChef.sol\":15856:15876  shdwPerBlockToBurn() */\n      tag_272\n        /* \"contracts/ShadowChef.sol\":15856:15874  shdwPerBlockToBurn */\n      tag_87\n        /* \"contracts/ShadowChef.sol\":15856:15876  shdwPerBlockToBurn() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/ShadowChef.sol\":15841:15851  multiplier */\n      dup4\n      swap1\n        /* \"contracts/ShadowChef.sol\":15841:15855  multiplier.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":15841:15877  multiplier.mul(shdwPerBlockToBurn()) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/ShadowChef.sol\":15934:15943  burnAdmin */\n      sload(0x02)\n        /* \"contracts/ShadowChef.sol\":15813:15877  uint256 pendingShdwToBurn = multiplier.mul(shdwPerBlockToBurn()) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowChef.sol\":15920:15963  _safeTransfer(burnAdmin, pendingShdwToBurn) */\n      tag_273\n      swap1\n        /* \"contracts/ShadowChef.sol\":15934:15943  burnAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ShadowChef.sol\":15813:15877  uint256 pendingShdwToBurn = multiplier.mul(shdwPerBlockToBurn()) */\n      dup3\n        /* \"contracts/ShadowChef.sol\":15920:15933  _safeTransfer */\n      tag_274\n        /* \"contracts/ShadowChef.sol\":15920:15963  _safeTransfer(burnAdmin, pendingShdwToBurn) */\n      jump\t// in\n    tag_273:\n      pop\n      pop\n        /* \"contracts/ShadowChef.sol\":15992:16004  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":15974:15989  lastBurnedBlock */\n      0x0d\n        /* \"contracts/ShadowChef.sol\":15974:16004  lastBurnedBlock = block.number */\n      sstore\n      pop\n        /* \"contracts/ShadowChef.sol\":15611:16012  function burnShdw(bool _withUpdate) public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":3051:3092  mapping(address => bool) public whiteList */\n    tag_95:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":13736:14640  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_101:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2317  _status */\n      sload(0x01)\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2329  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/security/ReentrancyGuard.sol\":2302:2365  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_207\n      jump\t// in\n    tag_276:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2450  _status */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2461  _status = _ENTERED */\n      sstore\n        /* \"contracts/ShadowChef.sol\":13818:13838  PoolInfo memory pool */\n      tag_279\n      tag_222\n      jump\t// in\n    tag_279:\n        /* \"contracts/ShadowChef.sol\":13841:13857  updatePool(_pid) */\n      tag_280\n        /* \"contracts/ShadowChef.sol\":13852:13856  _pid */\n      dup4\n        /* \"contracts/ShadowChef.sol\":13841:13851  updatePool */\n      tag_104\n        /* \"contracts/ShadowChef.sol\":13841:13857  updatePool(_pid) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/ShadowChef.sol\":13868:13889  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowChef.sol\":13892:13906  userInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":13892:13900  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":13892:13906  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":13907:13917  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":13892:13918  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":13939:13950  user.amount */\n      dup1\n      sload\n        /* \"contracts/ShadowChef.sol\":13818:13857  PoolInfo memory pool = updatePool(_pid) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/ShadowChef.sol\":13892:13918  userInfo[_pid][msg.sender] */\n      swap1\n        /* \"contracts/ShadowChef.sol\":13939:13961  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"contracts/ShadowChef.sol\":13931:13988  require(user.amount >= _amount, \"withdraw: Insufficient\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_283\n      jump\t// in\n    tag_281:\n        /* \"contracts/ShadowChef.sol\":14001:14019  uint256 multiplier */\n      0x00\n        /* \"contracts/ShadowChef.sol\":14022:14058  getBoostMultiplier(msg.sender, _pid) */\n      tag_284\n        /* \"contracts/ShadowChef.sol\":14041:14051  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":14053:14057  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":14022:14040  getBoostMultiplier */\n      tag_59\n        /* \"contracts/ShadowChef.sol\":14022:14058  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/ShadowChef.sol\":14001:14058  uint256 multiplier = getBoostMultiplier(msg.sender, _pid) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":14071:14118  settlependingShdw(msg.sender, _pid, multiplier) */\n      tag_285\n        /* \"contracts/ShadowChef.sol\":14089:14099  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":14101:14105  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":14107:14117  multiplier */\n      dup4\n        /* \"contracts/ShadowChef.sol\":14071:14088  settlependingShdw */\n      tag_226\n        /* \"contracts/ShadowChef.sol\":14071:14118  settlependingShdw(msg.sender, _pid, multiplier) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/ShadowChef.sol\":14135:14146  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/ShadowChef.sol\":14131:14275  if (_amount > 0) {\r... */\n      tag_288\n      jumpi\n        /* \"contracts/ShadowChef.sol\":14177:14188  user.amount */\n      dup2\n      sload\n        /* \"contracts/ShadowChef.sol\":14177:14201  user.amount.sub(_amount) */\n      tag_287\n      swap1\n        /* \"contracts/ShadowChef.sol\":14193:14200  _amount */\n      dup6\n        /* \"contracts/ShadowChef.sol\":14177:14192  user.amount.sub */\n      tag_239\n        /* \"contracts/ShadowChef.sol\":14177:14201  user.amount.sub(_amount) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/ShadowChef.sol\":14163:14167  user */\n      dup3\n        /* \"contracts/ShadowChef.sol\":14163:14174  user.amount */\n      0x00\n      add\n        /* \"contracts/ShadowChef.sol\":14163:14201  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowChef.sol\":14216:14263  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      tag_288\n        /* \"contracts/ShadowChef.sol\":14243:14253  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":14255:14262  _amount */\n      dup6\n        /* \"contracts/ShadowChef.sol\":14216:14223  lpToken */\n      0x05\n        /* \"contracts/ShadowChef.sol\":14224:14228  _pid */\n      dup9\n        /* \"contracts/ShadowChef.sol\":14216:14229  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_289\n      jumpi\n      invalid\n    tag_289:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap2\n        /* \"contracts/ShadowChef.sol\":14216:14263  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      swap1\n        /* \"contracts/ShadowChef.sol\":14216:14242  lpToken[_pid].safeTransfer */\n      tag_291\n        /* \"contracts/ShadowChef.sol\":14216:14263  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/ShadowChef.sol\":14305:14427  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      tag_292\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":14305:14379  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":14358:14362  pool */\n      dup6\n        /* \"contracts/ShadowChef.sol\":14358:14378  pool.accShdwPerShare */\n      0x00\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":14305:14353  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_229\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":14305:14332  user.amount.mul(multiplier) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":14321:14331  multiplier */\n      dup8\n        /* \"contracts/ShadowChef.sol\":14305:14309  user */\n      dup10\n        /* \"contracts/ShadowChef.sol\":14305:14316  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":14305:14320  user.amount.mul */\n      tag_231\n      swap1\n        /* \"contracts/ShadowChef.sol\":14305:14332  user.amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":14305:14427  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n    tag_292:\n        /* \"contracts/ShadowChef.sol\":14287:14302  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/ShadowChef.sol\":14287:14427  user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      sstore\n        /* \"contracts/ShadowChef.sol\":14473:14579  poolInfo[_pid].totalBoostedShare.sub(\r... */\n      tag_296\n        /* \"contracts/ShadowChef.sol\":14524:14568  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_297\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":14524:14547  _amount.mul(multiplier) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":14524:14531  _amount */\n      dup8\n        /* \"contracts/ShadowChef.sol\":14536:14546  multiplier */\n      dup6\n        /* \"contracts/ShadowChef.sol\":14524:14535  _amount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":14524:14547  _amount.mul(multiplier) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":14524:14568  _amount.mul(multiplier).div(BOOST_PRECISION) */\n    tag_297:\n        /* \"contracts/ShadowChef.sol\":14473:14481  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":14482:14486  _pid */\n      dup8\n        /* \"contracts/ShadowChef.sol\":14473:14487  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_299\n      jumpi\n      invalid\n    tag_299:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":14473:14505  poolInfo[_pid].totalBoostedShare */\n      0x03\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":14473:14509  poolInfo[_pid].totalBoostedShare.sub */\n      tag_239\n      swap1\n        /* \"contracts/ShadowChef.sol\":14473:14579  poolInfo[_pid].totalBoostedShare.sub(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"contracts/ShadowChef.sol\":14438:14446  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":14447:14451  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":14438:14452  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_301\n      jumpi\n      invalid\n    tag_301:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":14438:14470  poolInfo[_pid].totalBoostedShare */\n      0x03\n      add\n        /* \"contracts/ShadowChef.sol\":14438:14579  poolInfo[_pid].totalBoostedShare = poolInfo[_pid].totalBoostedShare.sub(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowChef.sol\":14618:14622  _pid */\n      dup5\n        /* \"contracts/ShadowChef.sol\":14606:14616  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":14597:14632  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/ShadowChef.sol\":14624:14631  _amount */\n      dup7\n        /* \"contracts/ShadowChef.sol\":14597:14632  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_303\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":1660:1661  1 */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2622:2644  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/ShadowChef.sol\":13736:14640  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":11204:12153  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r... */\n    tag_104:\n        /* \"contracts/ShadowChef.sol\":11254:11274  PoolInfo memory pool */\n      tag_304\n      tag_222\n      jump\t// in\n    tag_304:\n        /* \"contracts/ShadowChef.sol\":11294:11302  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":11303:11307  _pid */\n      dup3\n        /* \"contracts/ShadowChef.sol\":11294:11308  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      invalid\n    tag_306:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":11287:11308  pool = poolInfo[_pid] */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/ShadowChef.sol\":11294:11308  poolInfo[_pid] */\n      0x05\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/ShadowChef.sol\":11287:11308  pool = poolInfo[_pid] */\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      swap2\n      pop\n        /* \"contracts/ShadowChef.sol\":11323:11335  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":11323:11358  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/ShadowChef.sol\":11319:12146  if (block.number > pool.lastRewardBlock) {\r... */\n      iszero\n      tag_308\n      jumpi\n        /* \"contracts/ShadowChef.sol\":11394:11416  pool.totalBoostedShare */\n      0x60\n      dup2\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":11458:11472  pool.isRegular */\n      0x80\n      dup3\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":11375:11391  uint256 lpSupply */\n      0x00\n      swap1\n        /* \"contracts/ShadowChef.sol\":11458:11522  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      tag_309\n      jumpi\n        /* \"contracts/ShadowChef.sol\":11500:11522  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/ShadowChef.sol\":11458:11522  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      jump(tag_310)\n    tag_309:\n        /* \"contracts/ShadowChef.sol\":11475:11497  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/ShadowChef.sol\":11458:11522  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n    tag_310:\n        /* \"contracts/ShadowChef.sol\":11431:11523  uint256 totalAllocPoint = (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":11555:11556  0 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":11544:11552  lpSupply */\n      dup3\n        /* \"contracts/ShadowChef.sol\":11544:11556  lpSupply > 0 */\n      gt\n        /* \"contracts/ShadowChef.sol\":11544:11579  lpSupply > 0 && totalAllocPoint > 0 */\n      dup1\n      iszero\n      tag_311\n      jumpi\n      pop\n        /* \"contracts/ShadowChef.sol\":11578:11579  0 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":11560:11575  totalAllocPoint */\n      dup2\n        /* \"contracts/ShadowChef.sol\":11560:11579  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/ShadowChef.sol\":11544:11579  lpSupply > 0 && totalAllocPoint > 0 */\n    tag_311:\n        /* \"contracts/ShadowChef.sol\":11540:11959  if (lpSupply > 0 && totalAllocPoint > 0) {\r... */\n      iszero\n      tag_312\n      jumpi\n        /* \"contracts/ShadowChef.sol\":11600:11618  uint256 multiplier */\n      0x00\n        /* \"contracts/ShadowChef.sol\":11621:11659  block.number.sub(pool.lastRewardBlock) */\n      tag_313\n        /* \"contracts/ShadowChef.sol\":11638:11642  pool */\n      dup5\n        /* \"contracts/ShadowChef.sol\":11638:11658  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":11621:11633  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":11621:11637  block.number.sub */\n      tag_239\n      swap1\n        /* \"contracts/ShadowChef.sol\":11621:11659  block.number.sub(pool.lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/ShadowChef.sol\":11600:11659  uint256 multiplier = block.number.sub(pool.lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":11678:11696  uint256 shdwReward */\n      0x00\n        /* \"contracts/ShadowChef.sol\":11699:11825  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      tag_314\n        /* \"contracts/ShadowChef.sol\":11791:11806  totalAllocPoint */\n      dup4\n        /* \"contracts/ShadowChef.sol\":11699:11764  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":11748:11752  pool */\n      dup8\n        /* \"contracts/ShadowChef.sol\":11748:11763  pool.allocPoint */\n      0x40\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":11699:11743  multiplier.mul(shdwPerBlock(pool.isRegular)) */\n      tag_229\n        /* \"contracts/ShadowChef.sol\":11714:11742  shdwPerBlock(pool.isRegular) */\n      tag_317\n        /* \"contracts/ShadowChef.sol\":11727:11731  pool */\n      dup11\n        /* \"contracts/ShadowChef.sol\":11727:11741  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":11714:11726  shdwPerBlock */\n      tag_189\n        /* \"contracts/ShadowChef.sol\":11714:11742  shdwPerBlock(pool.isRegular) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/ShadowChef.sol\":11699:11709  multiplier */\n      dup8\n      swap1\n        /* \"contracts/ShadowChef.sol\":11699:11713  multiplier.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":11699:11743  multiplier.mul(shdwPerBlock(pool.isRegular)) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":11699:11825  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n    tag_314:\n        /* \"contracts/ShadowChef.sol\":11678:11825  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":11867:11943  pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply))) */\n      tag_318\n        /* \"contracts/ShadowChef.sol\":11893:11941  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n      tag_319\n        /* \"contracts/ShadowChef.sol\":11932:11940  lpSupply */\n      dup6\n        /* \"contracts/ShadowChef.sol\":11893:11927  shdwReward.mul(ACC_SHDW_PRECISION) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":11678:11825  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      dup5\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":11893:11907  shdwReward.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":11893:11927  shdwReward.mul(ACC_SHDW_PRECISION) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":11893:11941  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n    tag_319:\n        /* \"contracts/ShadowChef.sol\":11867:11887  pool.accShdwPerShare */\n      dup7\n      mload\n      swap1\n        /* \"contracts/ShadowChef.sol\":11867:11891  pool.accShdwPerShare.add */\n      tag_240\n        /* \"contracts/ShadowChef.sol\":11867:11943  pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply))) */\n      jump\t// in\n    tag_318:\n        /* \"contracts/ShadowChef.sol\":11844:11943  pool.accShdwPerShare = pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply))) */\n      dup6\n      mstore\n      pop\n      pop\n        /* \"contracts/ShadowChef.sol\":11540:11959  if (lpSupply > 0 && totalAllocPoint > 0) {\r... */\n    tag_312:\n        /* \"contracts/ShadowChef.sol\":11996:12008  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":11973:11993  pool.lastRewardBlock */\n      0x20\n      dup5\n      add\n        /* \"contracts/ShadowChef.sol\":11973:12008  pool.lastRewardBlock = block.number */\n      mstore\n        /* \"contracts/ShadowChef.sol\":12023:12031  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":12023:12037  poolInfo[_pid] */\n      dup1\n      sload\n        /* \"contracts/ShadowChef.sol\":11973:11977  pool */\n      dup5\n      swap2\n        /* \"contracts/ShadowChef.sol\":12023:12031  poolInfo */\n      swap1\n        /* \"contracts/ShadowChef.sol\":12032:12036  _pid */\n      dup7\n      swap1\n        /* \"contracts/ShadowChef.sol\":12023:12037  poolInfo[_pid] */\n      dup2\n      lt\n      tag_321\n      jumpi\n      invalid\n    tag_321:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":12023:12044  poolInfo[_pid] = pool */\n      dup4\n      mload\n        /* \"contracts/ShadowChef.sol\":12023:12037  poolInfo[_pid] */\n      0x05\n      swap3\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":12023:12044  poolInfo[_pid] = pool */\n      swap1\n      dup2\n      sstore\n      dup3\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      dup1\n      dup5\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup5\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      swap1\n      swap4\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":12081:12101  pool.lastRewardBlock */\n      dup5\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":12113:12133  pool.accShdwPerShare */\n      dup5\n      mload\n        /* \"contracts/ShadowChef.sol\":12064:12134  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare) */\n      swap2\n      mload\n        /* \"contracts/ShadowChef.sol\":12075:12079  _pid */\n      dup7\n      swap3\n        /* \"contracts/ShadowChef.sol\":12064:12134  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare) */\n      0x3be3541fc42237d611b30329040bfa4569541d156560acdbbae57640d20b8f46\n      swap3\n      tag_323\n      swap3\n        /* \"contracts/ShadowChef.sol\":12081:12101  pool.lastRewardBlock */\n      swap1\n      swap2\n        /* \"contracts/ShadowChef.sol\":12103:12111  lpSupply */\n      dup8\n      swap2\n        /* \"contracts/ShadowChef.sol\":12064:12134  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare) */\n      tag_150\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowChef.sol\":11319:12146  if (block.number > pool.lastRewardBlock) {\r... */\n      pop\n      pop\n    tag_308:\n        /* \"contracts/ShadowChef.sol\":11204:12153  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":14783:15473  function emergencyWithdraw(uint256 _pid) external nonReentrant {\r... */\n    tag_109:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2317  _status */\n      sload(0x01)\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2329  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/security/ReentrancyGuard.sol\":2302:2365  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_207\n      jump\t// in\n    tag_325:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2450  _status */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2461  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowChef.sol\":14857:14878  PoolInfo storage pool */\n      0x00\n        /* \"contracts/ShadowChef.sol\":14881:14889  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":14890:14894  _pid */\n      dup3\n        /* \"contracts/ShadowChef.sol\":14881:14895  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_328\n      jumpi\n      invalid\n    tag_328:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":14930:14944  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/ShadowChef.sol\":14930:14938  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":14930:14944  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/ShadowChef.sol\":14945:14955  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":14930:14956  userInfo[_pid][msg.sender] */\n      dup1\n      dup8\n      mstore\n      swap4\n      mstore\n      dup5\n      keccak256\n        /* \"contracts/ShadowChef.sol\":14986:14997  user.amount */\n      dup1\n      sload\n        /* \"contracts/ShadowChef.sol\":15008:15023  user.amount = 0 */\n      dup6\n      dup3\n      sstore\n      0x01\n        /* \"contracts/ShadowChef.sol\":15034:15049  user.rewardDebt */\n      dup3\n      add\n        /* \"contracts/ShadowChef.sol\":15034:15053  user.rewardDebt = 0 */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":14881:14895  poolInfo[_pid] */\n      0x05\n      swap1\n      swap5\n      mul\n      swap1\n      swap2\n      add\n      swap5\n      pop\n        /* \"contracts/ShadowChef.sol\":14930:14956  userInfo[_pid][msg.sender] */\n      swap3\n        /* \"contracts/ShadowChef.sol\":14881:14895  poolInfo[_pid] */\n      swap1\n        /* \"contracts/ShadowChef.sol\":15088:15157  amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n      tag_330\n      swap1\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/ShadowChef.sol\":15088:15136  amount.mul(getBoostMultiplier(msg.sender, _pid)) */\n      tag_230\n      swap1\n        /* \"contracts/ShadowChef.sol\":15099:15135  getBoostMultiplier(msg.sender, _pid) */\n      tag_332\n      swap1\n        /* \"contracts/ShadowChef.sol\":14939:14943  _pid */\n      dup10\n        /* \"contracts/ShadowChef.sol\":15099:15117  getBoostMultiplier */\n      tag_59\n        /* \"contracts/ShadowChef.sol\":15099:15135  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/ShadowChef.sol\":15088:15094  amount */\n      dup6\n      swap1\n        /* \"contracts/ShadowChef.sol\":15088:15098  amount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":15088:15136  amount.mul(getBoostMultiplier(msg.sender, _pid)) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":15088:15157  amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n    tag_330:\n        /* \"contracts/ShadowChef.sol\":15064:15157  uint256 boostedAmount = amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":15218:15231  boostedAmount */\n      dup1\n        /* \"contracts/ShadowChef.sol\":15193:15197  pool */\n      dup5\n        /* \"contracts/ShadowChef.sol\":15193:15215  pool.totalBoostedShare */\n      0x03\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":15193:15231  pool.totalBoostedShare > boostedAmount */\n      gt\n        /* \"contracts/ShadowChef.sol\":15193:15279  pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      tag_333\n      jumpi\n        /* \"contracts/ShadowChef.sol\":15278:15279  0 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":15193:15279  pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      jump(tag_335)\n    tag_333:\n        /* \"contracts/ShadowChef.sol\":15234:15256  pool.totalBoostedShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":15234:15275  pool.totalBoostedShare.sub(boostedAmount) */\n      tag_335\n      swap1\n        /* \"contracts/ShadowChef.sol\":15261:15274  boostedAmount */\n      dup3\n        /* \"contracts/ShadowChef.sol\":15234:15260  pool.totalBoostedShare.sub */\n      tag_239\n        /* \"contracts/ShadowChef.sol\":15234:15275  pool.totalBoostedShare.sub(boostedAmount) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/ShadowChef.sol\":15168:15172  pool */\n      dup5\n        /* \"contracts/ShadowChef.sol\":15168:15190  pool.totalBoostedShare */\n      0x03\n      add\n        /* \"contracts/ShadowChef.sol\":15168:15279  pool.totalBoostedShare = pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowChef.sol\":15360:15406  lpToken[_pid].safeTransfer(msg.sender, amount) */\n      tag_336\n        /* \"contracts/ShadowChef.sol\":15387:15397  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":15399:15405  amount */\n      dup4\n        /* \"contracts/ShadowChef.sol\":15360:15367  lpToken */\n      0x05\n        /* \"contracts/ShadowChef.sol\":15368:15372  _pid */\n      dup9\n        /* \"contracts/ShadowChef.sol\":15360:15373  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_289\n      jumpi\n      invalid\n        /* \"contracts/ShadowChef.sol\":15360:15406  lpToken[_pid].safeTransfer(msg.sender, amount) */\n    tag_336:\n        /* \"contracts/ShadowChef.sol\":15452:15456  _pid */\n      dup5\n        /* \"contracts/ShadowChef.sol\":15440:15450  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":15422:15465  EmergencyWithdraw(msg.sender, _pid, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/ShadowChef.sol\":15458:15464  amount */\n      dup5\n        /* \"contracts/ShadowChef.sol\":15422:15465  EmergencyWithdraw(msg.sender, _pid, amount) */\n      mload(0x40)\n      tag_303\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":9967:10258  function massUpdatePools() public {\r... */\n    tag_111:\n        /* \"contracts/ShadowChef.sol\":10029:10037  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":10029:10044  poolInfo.length */\n      sload\n        /* \"contracts/ShadowChef.sol\":10012:10026  uint256 length */\n      0x00\n        /* \"contracts/ShadowChef.sol\":10055:10251  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_341:\n        /* \"contracts/ShadowChef.sol\":10083:10089  length */\n      dup2\n        /* \"contracts/ShadowChef.sol\":10077:10080  pid */\n      dup2\n        /* \"contracts/ShadowChef.sol\":10077:10089  pid < length */\n      lt\n        /* \"contracts/ShadowChef.sol\":10055:10251  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_342\n      jumpi\n        /* \"contracts/ShadowChef.sol\":10113:10133  PoolInfo memory pool */\n      tag_344\n      tag_222\n      jump\t// in\n    tag_344:\n        /* \"contracts/ShadowChef.sol\":10136:10144  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":10145:10148  pid */\n      dup3\n        /* \"contracts/ShadowChef.sol\":10136:10149  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_345\n      jumpi\n      invalid\n    tag_345:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":10113:10149  PoolInfo memory pool = poolInfo[pid] */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/ShadowChef.sol\":10136:10149  poolInfo[pid] */\n      0x05\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/ShadowChef.sol\":10113:10149  PoolInfo memory pool = poolInfo[pid] */\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      swap1\n      swap3\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      swap2\n      pop\n        /* \"contracts/ShadowChef.sol\":10168:10188  pool.allocPoint != 0 */\n      iszero\n        /* \"contracts/ShadowChef.sol\":10164:10240  if (pool.allocPoint != 0) {\r... */\n      tag_347\n      jumpi\n        /* \"contracts/ShadowChef.sol\":10209:10224  updatePool(pid) */\n      tag_348\n        /* \"contracts/ShadowChef.sol\":10220:10223  pid */\n      dup3\n        /* \"contracts/ShadowChef.sol\":10209:10219  updatePool */\n      tag_104\n        /* \"contracts/ShadowChef.sol\":10209:10224  updatePool(pid) */\n      jump\t// in\n    tag_348:\n      pop\n        /* \"contracts/ShadowChef.sol\":10164:10240  if (pool.allocPoint != 0) {\r... */\n    tag_347:\n      pop\n        /* \"contracts/ShadowChef.sol\":10091:10096  ++pid */\n      0x01\n      add\n        /* \"contracts/ShadowChef.sol\":10055:10251  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_341)\n    tag_342:\n      pop\n        /* \"contracts/ShadowChef.sol\":9967:10258  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":7995:8725  function set(\r... */\n    tag_115:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_350\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_350:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_351:\n        /* \"contracts/ShadowChef.sol\":8244:8260  updatePool(_pid) */\n      tag_354\n        /* \"contracts/ShadowChef.sol\":8255:8259  _pid */\n      dup4\n        /* \"contracts/ShadowChef.sol\":8244:8254  updatePool */\n      tag_104\n        /* \"contracts/ShadowChef.sol\":8244:8260  updatePool(_pid) */\n      jump\t// in\n    tag_354:\n      pop\n        /* \"contracts/ShadowChef.sol\":8277:8288  _withUpdate */\n      dup1\n        /* \"contracts/ShadowChef.sol\":8273:8334  if (_withUpdate) {\r... */\n      iszero\n      tag_356\n      jumpi\n        /* \"contracts/ShadowChef.sol\":8305:8322  massUpdatePools() */\n      tag_356\n        /* \"contracts/ShadowChef.sol\":8305:8320  massUpdatePools */\n      tag_111\n        /* \"contracts/ShadowChef.sol\":8305:8322  massUpdatePools() */\n      jump\t// in\n    tag_356:\n        /* \"contracts/ShadowChef.sol\":8350:8358  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":8359:8363  _pid */\n      dup4\n        /* \"contracts/ShadowChef.sol\":8350:8364  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_357\n      jumpi\n      invalid\n    tag_357:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ShadowChef.sol\":8350:8374  poolInfo[_pid].isRegular */\n      0x04\n        /* \"contracts/ShadowChef.sol\":8350:8364  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":8350:8374  poolInfo[_pid].isRegular */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowChef.sol\":8346:8626  if (poolInfo[_pid].isRegular) {\r... */\n      iszero\n      tag_359\n      jumpi\n        /* \"contracts/ShadowChef.sol\":8416:8486  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_360\n        /* \"contracts/ShadowChef.sol\":8474:8485  _allocPoint */\n      dup3\n        /* \"contracts/ShadowChef.sol\":8416:8469  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_236\n        /* \"contracts/ShadowChef.sol\":8443:8451  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":8452:8456  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":8443:8457  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_362\n      jumpi\n      invalid\n    tag_362:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":8443:8468  poolInfo[_pid].allocPoint */\n      0x02\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":8416:8438  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/ShadowChef.sol\":8416:8442  totalRegularAllocPoint.sub */\n      tag_239\n      swap1\n        /* \"contracts/ShadowChef.sol\":8416:8469  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":8416:8486  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n    tag_360:\n        /* \"contracts/ShadowChef.sol\":8391:8413  totalRegularAllocPoint */\n      0x08\n        /* \"contracts/ShadowChef.sol\":8391:8486  totalRegularAllocPoint = totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      sstore\n        /* \"contracts/ShadowChef.sol\":8346:8626  if (poolInfo[_pid].isRegular) {\r... */\n      jump(tag_364)\n    tag_359:\n        /* \"contracts/ShadowChef.sol\":8544:8614  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_365\n        /* \"contracts/ShadowChef.sol\":8602:8613  _allocPoint */\n      dup3\n        /* \"contracts/ShadowChef.sol\":8544:8597  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_236\n        /* \"contracts/ShadowChef.sol\":8571:8579  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":8580:8584  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":8571:8585  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_367\n      jumpi\n      invalid\n    tag_367:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":8571:8596  poolInfo[_pid].allocPoint */\n      0x02\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":8544:8566  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/ShadowChef.sol\":8544:8570  totalSpecialAllocPoint.sub */\n      tag_239\n      swap1\n        /* \"contracts/ShadowChef.sol\":8544:8597  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":8544:8614  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n    tag_365:\n        /* \"contracts/ShadowChef.sol\":8519:8541  totalSpecialAllocPoint */\n      0x09\n        /* \"contracts/ShadowChef.sol\":8519:8614  totalSpecialAllocPoint = totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      sstore\n        /* \"contracts/ShadowChef.sol\":8346:8626  if (poolInfo[_pid].isRegular) {\r... */\n    tag_364:\n        /* \"contracts/ShadowChef.sol\":8664:8675  _allocPoint */\n      dup2\n        /* \"contracts/ShadowChef.sol\":8636:8644  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":8645:8649  _pid */\n      dup5\n        /* \"contracts/ShadowChef.sol\":8636:8650  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_369\n      jumpi\n      invalid\n    tag_369:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":8636:8661  poolInfo[_pid].allocPoint */\n      0x02\n      add\n        /* \"contracts/ShadowChef.sol\":8636:8675  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowChef.sol\":8699:8703  _pid */\n      dup3\n        /* \"contracts/ShadowChef.sol\":8691:8717  SetPool(_pid, _allocPoint) */\n      0xc0cfd54d2de2b55f1e6e108d3ec53ff0a1abe6055401d32c61e9433b747ef9f8\n        /* \"contracts/ShadowChef.sol\":8705:8716  _allocPoint */\n      dup4\n        /* \"contracts/ShadowChef.sol\":8691:8717  SetPool(_pid, _allocPoint) */\n      mload(0x40)\n      tag_371\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_371:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowChef.sol\":7995:8725  function set(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":4108:4151  uint256 public shdwRateToBurn = 50000000000 */\n    tag_117:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":3797:3853  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n    tag_120:\n        /* \"contracts/ShadowChef.sol\":3843:3853  200 * 1e10 */\n      0x01d1a94a2000\n        /* \"contracts/ShadowChef.sol\":3797:3853  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":4326:4377  uint256 public shdwRateToSpecialFarm = 700000000000 */\n    tag_123:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1742:1890  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_126:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_373\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_373:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_374:\n        /* \"contracts/access/Ownable.sol\":1849:1850  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1833:1839  _owner */\n      dup1\n      sload\n        /* \"contracts/access/Ownable.sol\":1812:1852  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1833:1839  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/access/Ownable.sol\":1812:1852  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/access/Ownable.sol\":1849:1850  0 */\n      dup4\n      swap1\n        /* \"contracts/access/Ownable.sol\":1812:1852  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/access/Ownable.sol\":1880:1881  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1863:1882  _owner = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"contracts/access/Ownable.sol\":1742:1890  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":4386:4416  uint256 public lastBurnedBlock */\n    tag_128:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":2826:2849  IBEP20[] public lpToken */\n    tag_132:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_377\n      jumpi\n      invalid\n    tag_377:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":16397:17299  function updateShdwRate(\r... */\n    tag_137:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_380\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_380:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_381:\n        /* \"contracts/ShadowChef.sol\":16617:16618  0 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":16605:16614  _burnRate */\n      dup5\n        /* \"contracts/ShadowChef.sol\":16605:16618  _burnRate > 0 */\n      gt\n        /* \"contracts/ShadowChef.sol\":16605:16642  _burnRate > 0 && _regularFarmRate > 0 */\n      dup1\n      iszero\n      tag_384\n      jumpi\n      pop\n        /* \"contracts/ShadowChef.sol\":16641:16642  0 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":16622:16638  _regularFarmRate */\n      dup4\n        /* \"contracts/ShadowChef.sol\":16622:16642  _regularFarmRate > 0 */\n      gt\n        /* \"contracts/ShadowChef.sol\":16605:16642  _burnRate > 0 && _regularFarmRate > 0 */\n    tag_384:\n        /* \"contracts/ShadowChef.sol\":16605:16666  _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0 */\n      dup1\n      iszero\n      tag_385\n      jumpi\n      pop\n        /* \"contracts/ShadowChef.sol\":16665:16666  0 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":16646:16662  _specialFarmRate */\n      dup3\n        /* \"contracts/ShadowChef.sol\":16646:16666  _specialFarmRate > 0 */\n      gt\n        /* \"contracts/ShadowChef.sol\":16605:16666  _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0 */\n    tag_385:\n        /* \"contracts/ShadowChef.sol\":16583:16740  require(\r... */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_388\n      jump\t// in\n    tag_386:\n        /* \"contracts/ShadowChef.sol\":3978:3982  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":16773:16826  _burnRate.add(_regularFarmRate).add(_specialFarmRate) */\n      tag_389\n        /* \"contracts/ShadowChef.sol\":16809:16825  _specialFarmRate */\n      dup4\n        /* \"contracts/ShadowChef.sol\":16773:16804  _burnRate.add(_regularFarmRate) */\n      tag_236\n        /* \"contracts/ShadowChef.sol\":16773:16782  _burnRate */\n      dup8\n        /* \"contracts/ShadowChef.sol\":16787:16803  _regularFarmRate */\n      dup8\n        /* \"contracts/ShadowChef.sol\":16773:16786  _burnRate.add */\n      tag_240\n        /* \"contracts/ShadowChef.sol\":16773:16804  _burnRate.add(_regularFarmRate) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":16773:16826  _burnRate.add(_regularFarmRate).add(_specialFarmRate) */\n    tag_389:\n        /* \"contracts/ShadowChef.sol\":16773:16855  _burnRate.add(_regularFarmRate).add(_specialFarmRate) == SHDW_RATE_TOTAL_PRECISION */\n      eq\n        /* \"contracts/ShadowChef.sol\":16751:16920  require(\r... */\n      tag_391\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_393\n      jump\t// in\n    tag_391:\n        /* \"contracts/ShadowChef.sol\":16935:16946  _withUpdate */\n      dup1\n        /* \"contracts/ShadowChef.sol\":16931:16992  if (_withUpdate) {\r... */\n      iszero\n      tag_395\n      jumpi\n        /* \"contracts/ShadowChef.sol\":16963:16980  massUpdatePools() */\n      tag_395\n        /* \"contracts/ShadowChef.sol\":16963:16978  massUpdatePools */\n      tag_111\n        /* \"contracts/ShadowChef.sol\":16963:16980  massUpdatePools() */\n      jump\t// in\n    tag_395:\n        /* \"contracts/ShadowChef.sol\":17051:17066  burnShdw(false) */\n      tag_396\n        /* \"contracts/ShadowChef.sol\":17060:17065  false */\n      0x00\n        /* \"contracts/ShadowChef.sol\":17051:17059  burnShdw */\n      tag_92\n        /* \"contracts/ShadowChef.sol\":17051:17066  burnShdw(false) */\n      jump\t// in\n    tag_396:\n        /* \"contracts/ShadowChef.sol\":17079:17093  shdwRateToBurn */\n      0x0a\n        /* \"contracts/ShadowChef.sol\":17079:17105  shdwRateToBurn = _burnRate */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":17116:17137  shdwRateToRegularFarm */\n      0x0b\n        /* \"contracts/ShadowChef.sol\":17116:17156  shdwRateToRegularFarm = _regularFarmRate */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":17167:17188  shdwRateToSpecialFarm */\n      0x0c\n        /* \"contracts/ShadowChef.sol\":17167:17207  shdwRateToSpecialFarm = _specialFarmRate */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":17225:17291  EventUpdateShdwRate(_burnRate, _regularFarmRate, _specialFarmRate) */\n      mload(0x40)\n      0x49f805c5fed16b2296163d4fd1958b1961efe39fef41cbb4b981aaa3d80d22d2\n      swap1\n      tag_397\n      swap1\n        /* \"contracts/ShadowChef.sol\":17096:17105  _burnRate */\n      dup7\n      swap1\n        /* \"contracts/ShadowChef.sol\":17140:17156  _regularFarmRate */\n      dup7\n      swap1\n        /* \"contracts/ShadowChef.sol\":17191:17207  _specialFarmRate */\n      dup7\n      swap1\n        /* \"contracts/ShadowChef.sol\":17225:17291  EventUpdateShdwRate(_burnRate, _regularFarmRate, _specialFarmRate) */\n      tag_150\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ShadowChef.sol\":16397:17299  function updateShdwRate(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":2567:2591  address public burnAdmin */\n    tag_139:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1100:1179  function owner() public view returns (address) {\r... */\n    tag_143:\n        /* \"contracts/access/Ownable.sol\":1138:1145  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1165:1171  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1100:1179  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":2899:2963  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_148:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":3359:3396  uint256 public totalSpecialAllocPoint */\n    tag_152:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":18408:18775  function updateBoostContract(address _newBoostContract) external onlyOwner {\r... */\n    tag_156:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_400\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_400:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_401:\n        /* \"contracts/ShadowChef.sol\":18516:18547  _newBoostContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ShadowChef.sol\":18516:18585  _newBoostContract != address(0) && _newBoostContract != boostContract */\n      tag_404\n      jumpi\n      pop\n        /* \"contracts/ShadowChef.sol\":18572:18585  boostContract */\n      sload(0x03)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowChef.sol\":18551:18585  _newBoostContract != boostContract */\n      dup3\n      dup2\n      and\n        /* \"contracts/ShadowChef.sol\":18572:18585  boostContract */\n      swap2\n      and\n        /* \"contracts/ShadowChef.sol\":18551:18585  _newBoostContract != boostContract */\n      eq\n      iszero\n        /* \"contracts/ShadowChef.sol\":18516:18585  _newBoostContract != address(0) && _newBoostContract != boostContract */\n    tag_404:\n        /* \"contracts/ShadowChef.sol\":18494:18667  require(\r... */\n      tag_405\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_407\n      jump\t// in\n    tag_405:\n        /* \"contracts/ShadowChef.sol\":18680:18693  boostContract */\n      0x03\n        /* \"contracts/ShadowChef.sol\":18680:18713  boostContract = _newBoostContract */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ShadowChef.sol\":18729:18767  UpdateBoostContract(_newBoostContract) */\n      mload(0x40)\n      0x4c0c07d0b548b824a1b998eb4d11fccf1cfbc1e47edcdb309970ba88315eb303\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/ShadowChef.sol\":18408:18775  function updateBoostContract(address _newBoostContract) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":17983:18246  function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r... */\n    tag_160:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_409\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_409:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_410:\n        /* \"contracts/ShadowChef.sol\":18076:18095  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/ShadowChef.sol\":18068:18150  require(_user != address(0), \"ShadowChefV2: The white list address must be valid\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_415\n      jump\t// in\n    tag_413:\n        /* \"contracts/ShadowChef.sol\":18163:18179  whiteList[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":18163:18172  whiteList */\n      0x07\n        /* \"contracts/ShadowChef.sol\":18163:18179  whiteList[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":18163:18190  whiteList[_user] = _isValid */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup5\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":18206:18238  UpdateWhiteList(_user, _isValid) */\n      mload\n      0xc551bbb22d0406dbfb8b6b7740cc521bcf44e1106029cf899c19b6a8e4c99d51\n      swap1\n      tag_416\n      swap1\n        /* \"contracts/ShadowChef.sol\":18163:18190  whiteList[_user] = _isValid */\n      dup5\n      swap1\n        /* \"contracts/ShadowChef.sol\":18206:18238  UpdateWhiteList(_user, _isValid) */\n      tag_97\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowChef.sol\":17983:18246  function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":3208:3245  uint256 public totalRegularAllocPoint */\n    tag_162:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":6579:7689  function add(\r... */\n    tag_167:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_418\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_418:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_419\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_419:\n        /* \"contracts/ShadowChef.sol\":6746:6779  _lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":6783:6784  0 */\n      0x00\n      swap1\n        /* \"contracts/ShadowChef.sol\":6746:6764  _lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/ShadowChef.sol\":6746:6779  _lpToken.balanceOf(address(this)) */\n      tag_422\n      swap1\n        /* \"contracts/ShadowChef.sol\":6773:6777  this */\n      address\n      swap1\n        /* \"contracts/ShadowChef.sol\":6746:6779  _lpToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_141\n      jump\t// in\n    tag_422:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_423\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_423:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_425\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_425:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_426\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"contracts/ShadowChef.sol\":6746:6784  _lpToken.balanceOf(address(this)) >= 0 */\n      lt\n      iszero\n        /* \"contracts/ShadowChef.sol\":6738:6806  require(_lpToken.balanceOf(address(this)) >= 0, \"None BEP20 tokens\") */\n      tag_428\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_430\n      jump\t// in\n    tag_428:\n        /* \"contracts/ShadowChef.sol\":6991:6995  SHDW */\n      immutable(\"0xdb56024b3d6cde3a6cd02fd327b99549871e338b958b94e29cae4ab4619605ef\")\n        /* \"contracts/ShadowChef.sol\":6979:6995  _lpToken != SHDW */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ShadowChef.sol\":6979:6987  _lpToken */\n      dup4\n        /* \"contracts/ShadowChef.sol\":6979:6995  _lpToken != SHDW */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ShadowChef.sol\":6971:7039  require(_lpToken != SHDW, \"SHDW token can't be added to farm pools\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_433\n      jump\t// in\n    tag_431:\n        /* \"contracts/ShadowChef.sol\":7056:7067  _withUpdate */\n      dup1\n        /* \"contracts/ShadowChef.sol\":7052:7113  if (_withUpdate) {\r... */\n      iszero\n      tag_435\n      jumpi\n        /* \"contracts/ShadowChef.sol\":7084:7101  massUpdatePools() */\n      tag_435\n        /* \"contracts/ShadowChef.sol\":7084:7099  massUpdatePools */\n      tag_111\n        /* \"contracts/ShadowChef.sol\":7084:7101  massUpdatePools() */\n      jump\t// in\n    tag_435:\n        /* \"contracts/ShadowChef.sol\":7129:7139  _isRegular */\n      dup2\n        /* \"contracts/ShadowChef.sol\":7125:7329  if (_isRegular) {\r... */\n      iszero\n      tag_436\n      jumpi\n        /* \"contracts/ShadowChef.sol\":7181:7203  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/ShadowChef.sol\":7181:7220  totalRegularAllocPoint.add(_allocPoint) */\n      tag_437\n      swap1\n        /* \"contracts/ShadowChef.sol\":7208:7219  _allocPoint */\n      dup6\n        /* \"contracts/ShadowChef.sol\":7181:7207  totalRegularAllocPoint.add */\n      tag_240\n        /* \"contracts/ShadowChef.sol\":7181:7220  totalRegularAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_437:\n        /* \"contracts/ShadowChef.sol\":7156:7178  totalRegularAllocPoint */\n      0x08\n        /* \"contracts/ShadowChef.sol\":7156:7220  totalRegularAllocPoint = totalRegularAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/ShadowChef.sol\":7125:7329  if (_isRegular) {\r... */\n      jump(tag_438)\n    tag_436:\n        /* \"contracts/ShadowChef.sol\":7278:7300  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/ShadowChef.sol\":7278:7317  totalSpecialAllocPoint.add(_allocPoint) */\n      tag_439\n      swap1\n        /* \"contracts/ShadowChef.sol\":7305:7316  _allocPoint */\n      dup6\n        /* \"contracts/ShadowChef.sol\":7278:7304  totalSpecialAllocPoint.add */\n      tag_240\n        /* \"contracts/ShadowChef.sol\":7278:7317  totalSpecialAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_439:\n        /* \"contracts/ShadowChef.sol\":7253:7275  totalSpecialAllocPoint */\n      0x09\n        /* \"contracts/ShadowChef.sol\":7253:7317  totalSpecialAllocPoint = totalSpecialAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/ShadowChef.sol\":7125:7329  if (_isRegular) {\r... */\n    tag_438:\n        /* \"contracts/ShadowChef.sol\":7339:7346  lpToken */\n      0x05\n        /* \"contracts/ShadowChef.sol\":7339:7361  lpToken.push(_lpToken) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ShadowChef.sol\":7402:7589  PoolInfo({\r... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n        /* \"contracts/ShadowChef.sol\":7473:7485  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":7339:7361  lpToken.push(_lpToken) */\n      0x20\n        /* \"contracts/ShadowChef.sol\":7402:7589  PoolInfo({\r... */\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup11\n      dup2\n      mstore\n      0x60\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      dup10\n      iszero\n      iszero\n      0x80\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":7374:7382  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":7374:7600  poolInfo.push(\r... */\n      dup1\n      sload\n      dup1\n      dup11\n      add\n      dup3\n      sstore\n      swap5\n      mstore\n      swap4\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      swap4\n      dup10\n      mul\n      swap4\n      dup5\n      add\n      sstore\n      swap4\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c\n      dup4\n      add\n      sstore\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d\n      dup3\n      add\n      sstore\n      swap2\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e\n      dup4\n      add\n      sstore\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":7624:7638  lpToken.length */\n      swap2\n      sload\n        /* \"contracts/ShadowChef.sol\":7624:7645  lpToken.length.sub(1) */\n      tag_442\n      swap2\n        /* \"contracts/ShadowChef.sol\":7624:7642  lpToken.length.sub */\n      tag_239\n        /* \"contracts/ShadowChef.sol\":7624:7645  lpToken.length.sub(1) */\n      jump\t// in\n    tag_442:\n        /* \"contracts/ShadowChef.sol\":7616:7681  AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular) */\n      0x18caa0724a26384928efe604ae6ddc99c242548876259770fc88fcb7e719d8fa\n        /* \"contracts/ShadowChef.sol\":7647:7658  _allocPoint */\n      dup7\n        /* \"contracts/ShadowChef.sol\":7670:7680  _isRegular */\n      dup6\n        /* \"contracts/ShadowChef.sol\":7616:7681  AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular) */\n      mload(0x40)\n      tag_443\n      swap3\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_443:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ShadowChef.sol\":6579:7689  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":8899:9869  function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_170:\n        /* \"contracts/ShadowChef.sol\":8972:8979  uint256 */\n      0x00\n        /* \"contracts/ShadowChef.sol\":8992:9012  PoolInfo memory pool */\n      tag_446\n      tag_222\n      jump\t// in\n    tag_446:\n        /* \"contracts/ShadowChef.sol\":9015:9023  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":9024:9028  _pid */\n      dup5\n        /* \"contracts/ShadowChef.sol\":9015:9029  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_447\n      jumpi\n      invalid\n    tag_447:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":8992:9029  PoolInfo memory pool = poolInfo[_pid] */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/ShadowChef.sol\":9015:9029  poolInfo[_pid] */\n      0x05\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/ShadowChef.sol\":8992:9029  PoolInfo memory pool = poolInfo[_pid] */\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":9040:9060  UserInfo memory user */\n      tag_449\n      tag_450\n      jump\t// in\n    tag_449:\n      pop\n        /* \"contracts/ShadowChef.sol\":9063:9077  userInfo[_pid] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":9063:9071  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":9063:9077  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":9063:9084  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":9040:9084  UserInfo memory user = userInfo[_pid][_user] */\n      dup3\n      mload\n      0x60\n      dup1\n      dup3\n      add\n      dup6\n      mstore\n      dup3\n      sload\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      dup3\n      dup6\n      add\n      mstore\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/ShadowChef.sol\":9121:9141  pool.accShdwPerShare */\n      dup4\n      mload\n        /* \"contracts/ShadowChef.sol\":9171:9193  pool.totalBoostedShare */\n      swap1\n      dup5\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":9225:9245  pool.lastRewardBlock */\n      swap2\n      dup5\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":9121:9141  pool.accShdwPerShare */\n      swap1\n      swap2\n        /* \"contracts/ShadowChef.sol\":9171:9193  pool.totalBoostedShare */\n      swap1\n        /* \"contracts/ShadowChef.sol\":9210:9222  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":9210:9245  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/ShadowChef.sol\":9210:9262  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_451\n      jumpi\n      pop\n        /* \"contracts/ShadowChef.sol\":9249:9262  lpSupply != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/ShadowChef.sol\":9210:9262  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_451:\n        /* \"contracts/ShadowChef.sol\":9206:9659  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_452\n      jumpi\n        /* \"contracts/ShadowChef.sol\":9279:9297  uint256 multiplier */\n      0x00\n        /* \"contracts/ShadowChef.sol\":9300:9338  block.number.sub(pool.lastRewardBlock) */\n      tag_453\n        /* \"contracts/ShadowChef.sol\":9317:9321  pool */\n      dup6\n        /* \"contracts/ShadowChef.sol\":9317:9337  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":9300:9312  block.number */\n      number\n        /* \"contracts/ShadowChef.sol\":9300:9316  block.number.sub */\n      tag_239\n      swap1\n        /* \"contracts/ShadowChef.sol\":9300:9338  block.number.sub(pool.lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_453:\n        /* \"contracts/ShadowChef.sol\":9279:9338  uint256 multiplier = block.number.sub(pool.lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":9355:9373  uint256 shdwReward */\n      0x00\n        /* \"contracts/ShadowChef.sol\":9376:9545  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      tag_454\n        /* \"contracts/ShadowChef.sol\":9465:9469  pool */\n      dup7\n        /* \"contracts/ShadowChef.sol\":9465:9479  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":9465:9529  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      tag_455\n      jumpi\n        /* \"contracts/ShadowChef.sol\":9507:9529  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/ShadowChef.sol\":9465:9529  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      jump(tag_456)\n    tag_455:\n        /* \"contracts/ShadowChef.sol\":9482:9504  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/ShadowChef.sol\":9465:9529  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n    tag_456:\n        /* \"contracts/ShadowChef.sol\":9376:9441  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":9425:9429  pool */\n      dup9\n        /* \"contracts/ShadowChef.sol\":9425:9440  pool.allocPoint */\n      0x40\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":9376:9420  multiplier.mul(shdwPerBlock(pool.isRegular)) */\n      tag_229\n        /* \"contracts/ShadowChef.sol\":9391:9419  shdwPerBlock(pool.isRegular) */\n      tag_317\n        /* \"contracts/ShadowChef.sol\":9404:9408  pool */\n      dup12\n        /* \"contracts/ShadowChef.sol\":9404:9418  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":9391:9403  shdwPerBlock */\n      tag_189\n        /* \"contracts/ShadowChef.sol\":9391:9419  shdwPerBlock(pool.isRegular) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":9376:9545  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n    tag_454:\n        /* \"contracts/ShadowChef.sol\":9355:9545  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":9578:9647  accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)) */\n      tag_460\n        /* \"contracts/ShadowChef.sol\":9598:9646  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n      tag_461\n        /* \"contracts/ShadowChef.sol\":9637:9645  lpSupply */\n      dup5\n        /* \"contracts/ShadowChef.sol\":9598:9632  shdwReward.mul(ACC_SHDW_PRECISION) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":9355:9545  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      dup5\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":9598:9612  shdwReward.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":9598:9632  shdwReward.mul(ACC_SHDW_PRECISION) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":9598:9646  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n    tag_461:\n        /* \"contracts/ShadowChef.sol\":9578:9593  accShdwPerShare */\n      dup6\n      swap1\n        /* \"contracts/ShadowChef.sol\":9578:9597  accShdwPerShare.add */\n      tag_240\n        /* \"contracts/ShadowChef.sol\":9578:9647  accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)) */\n      jump\t// in\n    tag_460:\n        /* \"contracts/ShadowChef.sol\":9560:9647  accShdwPerShare = accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/ShadowChef.sol\":9206:9659  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      pop\n      pop\n    tag_452:\n        /* \"contracts/ShadowChef.sol\":9671:9692  uint256 boostedAmount */\n      0x00\n        /* \"contracts/ShadowChef.sol\":9695:9764  user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      tag_463\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":9695:9743  user.amount.mul(getBoostMultiplier(_user, _pid)) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":9711:9742  getBoostMultiplier(_user, _pid) */\n      tag_465\n        /* \"contracts/ShadowChef.sol\":9730:9735  _user */\n      dup11\n        /* \"contracts/ShadowChef.sol\":9737:9741  _pid */\n      dup13\n        /* \"contracts/ShadowChef.sol\":9711:9729  getBoostMultiplier */\n      tag_59\n        /* \"contracts/ShadowChef.sol\":9711:9742  getBoostMultiplier(_user, _pid) */\n      jump\t// in\n    tag_465:\n        /* \"contracts/ShadowChef.sol\":9695:9706  user.amount */\n      dup8\n      mload\n      swap1\n        /* \"contracts/ShadowChef.sol\":9695:9710  user.amount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":9695:9743  user.amount.mul(getBoostMultiplier(_user, _pid)) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":9695:9764  user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n    tag_463:\n        /* \"contracts/ShadowChef.sol\":9845:9860  user.rewardDebt */\n      0x20\n      dup6\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":9671:9764  uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowChef.sol\":9782:9861  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt) */\n      tag_466\n      swap1\n        /* \"contracts/ShadowChef.sol\":9782:9840  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION) */\n      tag_467\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":9782:9816  boostedAmount.mul(accShdwPerShare) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":9671:9764  uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      dup6\n        /* \"contracts/ShadowChef.sol\":9800:9815  accShdwPerShare */\n      dup9\n        /* \"contracts/ShadowChef.sol\":9782:9799  boostedAmount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":9782:9816  boostedAmount.mul(accShdwPerShare) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":9782:9840  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION) */\n    tag_467:\n        /* \"contracts/ShadowChef.sol\":9782:9844  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub */\n      swap1\n      tag_239\n        /* \"contracts/ShadowChef.sol\":9782:9861  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt) */\n      jump\t// in\n    tag_466:\n        /* \"contracts/ShadowChef.sol\":9775:9861  return boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt) */\n      swap9\n        /* \"contracts/ShadowChef.sol\":8899:9869  function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":3647:3699  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n    tag_173:\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":3647:3699  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":2654:2682  address public boostContract */\n    tag_179:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x03))\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":12318:13567  function deposit(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_183:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2317  _status */\n      sload(0x01)\n        /* \"contracts/security/ReentrancyGuard.sol\":2310:2329  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/security/ReentrancyGuard.sol\":2302:2365  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_470\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_207\n      jump\t// in\n    tag_470:\n        /* \"contracts/security/ReentrancyGuard.sol\":1704:1705  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2450  _status */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2443:2461  _status = _ENTERED */\n      sstore\n        /* \"contracts/ShadowChef.sol\":12399:12419  PoolInfo memory pool */\n      tag_473\n      tag_222\n      jump\t// in\n    tag_473:\n        /* \"contracts/ShadowChef.sol\":12422:12438  updatePool(_pid) */\n      tag_474\n        /* \"contracts/ShadowChef.sol\":12433:12437  _pid */\n      dup4\n        /* \"contracts/ShadowChef.sol\":12422:12432  updatePool */\n      tag_104\n        /* \"contracts/ShadowChef.sol\":12422:12438  updatePool(_pid) */\n      jump\t// in\n    tag_474:\n        /* \"contracts/ShadowChef.sol\":12449:12470  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowChef.sol\":12473:12487  userInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":12473:12481  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":12473:12487  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":12488:12498  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":12473:12499  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":12534:12548  pool.isRegular */\n      0x80\n      dup3\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":12399:12438  PoolInfo memory pool = updatePool(_pid) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/ShadowChef.sol\":12473:12499  userInfo[_pid][msg.sender] */\n      swap1\n        /* \"contracts/ShadowChef.sol\":12534:12548  pool.isRegular */\n      dup1\n        /* \"contracts/ShadowChef.sol\":12534:12573  pool.isRegular || whiteList[msg.sender] */\n      tag_475\n      jumpi\n      pop\n        /* \"contracts/ShadowChef.sol\":12562:12572  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":12552:12573  whiteList[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":12552:12561  whiteList */\n      0x07\n        /* \"contracts/ShadowChef.sol\":12552:12573  whiteList[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowChef.sol\":12534:12573  pool.isRegular || whiteList[msg.sender] */\n    tag_475:\n        /* \"contracts/ShadowChef.sol\":12512:12667  require(\r... */\n      tag_476\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_478\n      jump\t// in\n    tag_476:\n        /* \"contracts/ShadowChef.sol\":12680:12698  uint256 multiplier */\n      0x00\n        /* \"contracts/ShadowChef.sol\":12701:12737  getBoostMultiplier(msg.sender, _pid) */\n      tag_479\n        /* \"contracts/ShadowChef.sol\":12720:12730  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":12732:12736  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":12701:12719  getBoostMultiplier */\n      tag_59\n        /* \"contracts/ShadowChef.sol\":12701:12737  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_479:\n        /* \"contracts/ShadowChef.sol\":12754:12765  user.amount */\n      dup3\n      sload\n        /* \"contracts/ShadowChef.sol\":12680:12737  uint256 multiplier = getBoostMultiplier(msg.sender, _pid) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowChef.sol\":12754:12769  user.amount > 0 */\n      iszero\n        /* \"contracts/ShadowChef.sol\":12750:12845  if (user.amount > 0) {\r... */\n      tag_481\n      jumpi\n        /* \"contracts/ShadowChef.sol\":12786:12833  settlependingShdw(msg.sender, _pid, multiplier) */\n      tag_481\n        /* \"contracts/ShadowChef.sol\":12804:12814  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":12816:12820  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":12822:12832  multiplier */\n      dup4\n        /* \"contracts/ShadowChef.sol\":12786:12803  settlependingShdw */\n      tag_226\n        /* \"contracts/ShadowChef.sol\":12786:12833  settlependingShdw(msg.sender, _pid, multiplier) */\n      jump\t// in\n    tag_481:\n        /* \"contracts/ShadowChef.sol\":12861:12872  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/ShadowChef.sol\":12857:13323  if (_amount > 0) {\r... */\n      tag_482\n      jumpi\n        /* \"contracts/ShadowChef.sol\":12889:12903  uint256 before */\n      0x00\n        /* \"contracts/ShadowChef.sol\":12906:12913  lpToken */\n      0x05\n        /* \"contracts/ShadowChef.sol\":12914:12918  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":12906:12919  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_483\n      jumpi\n      invalid\n    tag_483:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":12906:12944  lpToken[_pid].balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":12906:12919  lpToken[_pid] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ShadowChef.sol\":12906:12929  lpToken[_pid].balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/ShadowChef.sol\":12906:12944  lpToken[_pid].balanceOf(address(this)) */\n      tag_485\n      swap1\n        /* \"contracts/ShadowChef.sol\":12938:12942  this */\n      address\n      swap1\n        /* \"contracts/ShadowChef.sol\":12906:12944  lpToken[_pid].balanceOf(address(this)) */\n      0x04\n      add\n      tag_141\n      jump\t// in\n    tag_485:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_486\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_486:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_488\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_488:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_489\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n    tag_489:\n        /* \"contracts/ShadowChef.sol\":12889:12944  uint256 before = lpToken[_pid].balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":12959:13025  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_490\n        /* \"contracts/ShadowChef.sol\":12990:13000  msg.sender */\n      caller\n        /* \"contracts/ShadowChef.sol\":13010:13014  this */\n      address\n        /* \"contracts/ShadowChef.sol\":13017:13024  _amount */\n      dup8\n        /* \"contracts/ShadowChef.sol\":12959:12966  lpToken */\n      0x05\n        /* \"contracts/ShadowChef.sol\":12967:12971  _pid */\n      dup11\n        /* \"contracts/ShadowChef.sol\":12959:12972  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_491\n      jumpi\n      invalid\n    tag_491:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap3\n        /* \"contracts/ShadowChef.sol\":12959:13025  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      swap2\n      swap1\n        /* \"contracts/ShadowChef.sol\":12959:12989  lpToken[_pid].safeTransferFrom */\n      tag_493\n        /* \"contracts/ShadowChef.sol\":12959:13025  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_490:\n        /* \"contracts/ShadowChef.sol\":13050:13100  lpToken[_pid].balanceOf(address(this)).sub(before) */\n      tag_494\n        /* \"contracts/ShadowChef.sol\":13093:13099  before */\n      dup2\n        /* \"contracts/ShadowChef.sol\":13050:13057  lpToken */\n      0x05\n        /* \"contracts/ShadowChef.sol\":13058:13062  _pid */\n      dup9\n        /* \"contracts/ShadowChef.sol\":13050:13063  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_495\n      jumpi\n      invalid\n    tag_495:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":13050:13088  lpToken[_pid].balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":13050:13063  lpToken[_pid] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ShadowChef.sol\":13050:13073  lpToken[_pid].balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/ShadowChef.sol\":13050:13088  lpToken[_pid].balanceOf(address(this)) */\n      tag_497\n      swap1\n        /* \"contracts/ShadowChef.sol\":13082:13086  this */\n      address\n      swap1\n        /* \"contracts/ShadowChef.sol\":13050:13088  lpToken[_pid].balanceOf(address(this)) */\n      0x04\n      add\n      tag_141\n      jump\t// in\n    tag_497:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_498\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_498:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_500\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_500:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_467\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":13050:13100  lpToken[_pid].balanceOf(address(this)).sub(before) */\n    tag_494:\n        /* \"contracts/ShadowChef.sol\":13129:13140  user.amount */\n      dup4\n      sload\n        /* \"contracts/ShadowChef.sol\":13040:13100  _amount = lpToken[_pid].balanceOf(address(this)).sub(before) */\n      swap1\n      swap6\n      pop\n        /* \"contracts/ShadowChef.sol\":13129:13153  user.amount.add(_amount) */\n      tag_502\n      swap1\n        /* \"contracts/ShadowChef.sol\":13040:13100  _amount = lpToken[_pid].balanceOf(address(this)).sub(before) */\n      dup7\n        /* \"contracts/ShadowChef.sol\":13129:13144  user.amount.add */\n      tag_240\n        /* \"contracts/ShadowChef.sol\":13129:13153  user.amount.add(_amount) */\n      jump\t// in\n    tag_502:\n        /* \"contracts/ShadowChef.sol\":13115:13153  user.amount = user.amount.add(_amount) */\n      dup4\n      sstore\n        /* \"contracts/ShadowChef.sol\":13239:13311  pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      tag_503\n        /* \"contracts/ShadowChef.sol\":13266:13310  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_504\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":13266:13289  _amount.mul(multiplier) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":13266:13273  _amount */\n      dup9\n        /* \"contracts/ShadowChef.sol\":13278:13288  multiplier */\n      dup7\n        /* \"contracts/ShadowChef.sol\":13266:13277  _amount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":13266:13289  _amount.mul(multiplier) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":13266:13310  _amount.mul(multiplier).div(BOOST_PRECISION) */\n    tag_504:\n        /* \"contracts/ShadowChef.sol\":13239:13261  pool.totalBoostedShare */\n      0x60\n      dup7\n      add\n      mload\n      swap1\n        /* \"contracts/ShadowChef.sol\":13239:13265  pool.totalBoostedShare.add */\n      tag_240\n        /* \"contracts/ShadowChef.sol\":13239:13311  pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      jump\t// in\n    tag_503:\n        /* \"contracts/ShadowChef.sol\":13214:13236  pool.totalBoostedShare */\n      0x60\n      dup6\n      add\n        /* \"contracts/ShadowChef.sol\":13214:13311  pool.totalBoostedShare = pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      mstore\n      pop\n        /* \"contracts/ShadowChef.sol\":12857:13323  if (_amount > 0) {\r... */\n    tag_482:\n        /* \"contracts/ShadowChef.sol\":13353:13475  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      tag_506\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":13353:13427  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":13406:13410  pool */\n      dup6\n        /* \"contracts/ShadowChef.sol\":13406:13426  pool.accShdwPerShare */\n      0x00\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":13353:13401  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_229\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":13353:13380  user.amount.mul(multiplier) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":13369:13379  multiplier */\n      dup8\n        /* \"contracts/ShadowChef.sol\":13353:13357  user */\n      dup10\n        /* \"contracts/ShadowChef.sol\":13353:13364  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowChef.sol\":13353:13368  user.amount.mul */\n      tag_231\n      swap1\n        /* \"contracts/ShadowChef.sol\":13353:13380  user.amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":13353:13475  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n    tag_506:\n        /* \"contracts/ShadowChef.sol\":13335:13339  user */\n      dup3\n        /* \"contracts/ShadowChef.sol\":13335:13350  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/ShadowChef.sol\":13335:13475  user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowChef.sol\":13503:13507  pool */\n      dup3\n        /* \"contracts/ShadowChef.sol\":13486:13494  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":13495:13499  _pid */\n      dup7\n        /* \"contracts/ShadowChef.sol\":13486:13500  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_510\n      jumpi\n      invalid\n    tag_510:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ShadowChef.sol\":13486:13507  poolInfo[_pid] = pool */\n      dup4\n      mload\n        /* \"contracts/ShadowChef.sol\":13486:13500  poolInfo[_pid] */\n      0x05\n      swap3\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":13486:13507  poolInfo[_pid] = pool */\n      swap1\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      dup1\n      dup4\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup4\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      swap1\n      swap3\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ShadowChef.sol\":13525:13559  Deposit(msg.sender, _pid, _amount) */\n      mload\n        /* \"contracts/ShadowChef.sol\":13545:13549  _pid */\n      dup6\n      swap1\n        /* \"contracts/ShadowChef.sol\":13533:13543  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ShadowChef.sol\":13525:13559  Deposit(msg.sender, _pid, _amount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n      tag_303\n      swap1\n        /* \"contracts/ShadowChef.sol\":13551:13558  _amount */\n      dup9\n      swap1\n        /* \"contracts/ShadowChef.sol\":13525:13559  Deposit(msg.sender, _pid, _amount) */\n      tag_61\n      jump\t// in\n        /* \"contracts/access/Ownable.sol\":2045:2289  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_186:\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      tag_514\n        /* \"contracts/access/Ownable.sol\":1322:1332  _msgSender */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1322:1334  _msgSender() */\n      jump\t// in\n    tag_514:\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      sload(0x00)\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/access/Ownable.sol\":1312:1318  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":1312:1334  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1304:1371  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_515\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_250\n      jump\t// in\n    tag_515:\n        /* \"contracts/access/Ownable.sol\":2134:2156  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/access/Ownable.sol\":2126:2199  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_518\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_520\n      jump\t// in\n    tag_518:\n        /* \"contracts/access/Ownable.sol\":2236:2242  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/access/Ownable.sol\":2215:2253  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/access/Ownable.sol\":2236:2242  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/access/Ownable.sol\":2215:2253  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/access/Ownable.sol\":2264:2270  _owner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2264:2281  _owner = newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/access/Ownable.sol\":2045:2289  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":10408:10762  function shdwPerBlock(bool _isRegular) public view returns (uint256 amount) {\r... */\n    tag_189:\n        /* \"contracts/ShadowChef.sol\":10468:10482  uint256 amount */\n      0x00\n        /* \"contracts/ShadowChef.sol\":10499:10509  _isRegular */\n      dup2\n        /* \"contracts/ShadowChef.sol\":10495:10755  if (_isRegular) {\r... */\n      iszero\n      tag_522\n      jumpi\n        /* \"contracts/ShadowChef.sol\":10535:10618  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n      tag_523\n        /* \"contracts/ShadowChef.sol\":3978:3982  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":10535:10587  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":10565:10586  shdwRateToRegularFarm */\n      sload(0x0b)\n        /* \"contracts/ShadowChef.sol\":3500:3512  1.375 * 1e18 */\n      0x1314fb3706298000\n        /* \"contracts/ShadowChef.sol\":10535:10564  MASTERCHEF_SHDW_PER_BLOCK.mul */\n      tag_231\n      swap1\n        /* \"contracts/ShadowChef.sol\":10535:10587  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":10535:10618  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n    tag_523:\n        /* \"contracts/ShadowChef.sol\":10526:10618  amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":10495:10755  if (_isRegular) {\r... */\n      jump(tag_308)\n    tag_522:\n        /* \"contracts/ShadowChef.sol\":10660:10743  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n      tag_197\n        /* \"contracts/ShadowChef.sol\":3978:3982  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowChef.sol\":10660:10712  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":10690:10711  shdwRateToSpecialFarm */\n      sload(0x0c)\n        /* \"contracts/ShadowChef.sol\":3500:3512  1.375 * 1e18 */\n      0x1314fb3706298000\n        /* \"contracts/ShadowChef.sol\":10660:10689  MASTERCHEF_SHDW_PER_BLOCK.mul */\n      tag_231\n      swap1\n        /* \"contracts/ShadowChef.sol\":10660:10712  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":4215:4266  uint256 public shdwRateToRegularFarm = 250000000000 */\n    tag_192:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":3448:3512  uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 1.375 * 1e18 */\n    tag_195:\n        /* \"contracts/ShadowChef.sol\":3500:3512  1.375 * 1e18 */\n      0x1314fb3706298000\n        /* \"contracts/ShadowChef.sol\":3448:3512  uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 1.375 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":20952:21460  function settlependingShdw(\r... */\n    tag_226:\n        /* \"contracts/ShadowChef.sol\":21088:21108  UserInfo memory user */\n      tag_529\n      tag_450\n      jump\t// in\n    tag_529:\n      pop\n        /* \"contracts/ShadowChef.sol\":21111:21125  userInfo[_pid] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":21111:21119  userInfo */\n      0x06\n        /* \"contracts/ShadowChef.sol\":21111:21125  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":21111:21132  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ShadowChef.sol\":21088:21132  UserInfo memory user = userInfo[_pid][_user] */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n        /* \"contracts/ShadowChef.sol\":21111:21125  userInfo[_pid] */\n      swap1\n        /* \"contracts/ShadowChef.sol\":21169:21223  user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n      tag_530\n      swap1\n        /* \"contracts/ShadowChef.sol\":3689:3699  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/ShadowChef.sol\":21169:21202  user.amount.mul(_boostMultiplier) */\n      tag_230\n      swap1\n        /* \"contracts/ShadowChef.sol\":21185:21201  _boostMultiplier */\n      dup7\n        /* \"contracts/ShadowChef.sol\":21169:21184  user.amount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":21169:21202  user.amount.mul(_boostMultiplier) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":21169:21223  user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n    tag_530:\n        /* \"contracts/ShadowChef.sol\":21145:21223  uint256 boostedAmount = user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":21234:21249  uint256 accShdw */\n      0x00\n        /* \"contracts/ShadowChef.sol\":21252:21325  boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION) */\n      tag_532\n        /* \"contracts/ShadowChef.sol\":3564:3568  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowChef.sol\":21252:21301  boostedAmount.mul(poolInfo[_pid].accShdwPerShare) */\n      tag_230\n        /* \"contracts/ShadowChef.sol\":21270:21278  poolInfo */\n      0x04\n        /* \"contracts/ShadowChef.sol\":21279:21283  _pid */\n      dup9\n        /* \"contracts/ShadowChef.sol\":21270:21284  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_534\n      jumpi\n      invalid\n    tag_534:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/ShadowChef.sol\":21270:21300  poolInfo[_pid].accShdwPerShare */\n      sload\n        /* \"contracts/ShadowChef.sol\":21252:21265  boostedAmount */\n      dup6\n      swap1\n        /* \"contracts/ShadowChef.sol\":21252:21269  boostedAmount.mul */\n      tag_231\n        /* \"contracts/ShadowChef.sol\":21252:21301  boostedAmount.mul(poolInfo[_pid].accShdwPerShare) */\n      jump\t// in\n        /* \"contracts/ShadowChef.sol\":21252:21325  boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION) */\n    tag_532:\n        /* \"contracts/ShadowChef.sol\":21234:21325  uint256 accShdw = boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":21336:21351  uint256 pending */\n      0x00\n        /* \"contracts/ShadowChef.sol\":21354:21382  accShdw.sub(user.rewardDebt) */\n      tag_536\n        /* \"contracts/ShadowChef.sol\":21366:21370  user */\n      dup5\n        /* \"contracts/ShadowChef.sol\":21366:21381  user.rewardDebt */\n      0x20\n      add\n      mload\n        /* \"contracts/ShadowChef.sol\":21354:21361  accShdw */\n      dup4\n        /* \"contracts/ShadowChef.sol\":21354:21365  accShdw.sub */\n      tag_239\n      swap1\n        /* \"contracts/ShadowChef.sol\":21354:21382  accShdw.sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_536:\n        /* \"contracts/ShadowChef.sol\":21336:21382  uint256 pending = accShdw.sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":21423:21452  _safeTransfer(_user, pending) */\n      tag_537\n        /* \"contracts/ShadowChef.sol\":21437:21442  _user */\n      dup8\n        /* \"contracts/ShadowChef.sol\":21444:21451  pending */\n      dup3\n        /* \"contracts/ShadowChef.sol\":21423:21436  _safeTransfer */\n      tag_274\n        /* \"contracts/ShadowChef.sol\":21423:21452  _safeTransfer(_user, pending) */\n      jump\t// in\n    tag_537:\n        /* \"contracts/ShadowChef.sol\":20952:21460  function settlependingShdw(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/SafeMath.sol\":2256:2727  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_231:\n        /* \"contracts/utils/SafeMath.sol\":2314:2321  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":2559:2565  a == 0 */\n      dup3\n        /* \"contracts/utils/SafeMath.sol\":2555:2602  if (a == 0) {\r... */\n      tag_539\n      jumpi\n      pop\n        /* \"contracts/utils/SafeMath.sol\":2589:2590  0 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":2582:2590  return 0 */\n      jump(tag_197)\n        /* \"contracts/utils/SafeMath.sol\":2555:2602  if (a == 0) {\r... */\n    tag_539:\n        /* \"contracts/utils/SafeMath.sol\":2626:2631  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/utils/SafeMath.sol\":2630:2631  b */\n      dup3\n        /* \"contracts/utils/SafeMath.sol\":2626:2627  a */\n      dup5\n        /* \"contracts/utils/SafeMath.sol\":2626:2631  a * b */\n      dup3\n        /* \"contracts/utils/SafeMath.sol\":2626:2627  a */\n      dup2\n        /* \"contracts/utils/SafeMath.sol\":2650:2655  c / a */\n      tag_540\n      jumpi\n      invalid\n    tag_540:\n      div\n        /* \"contracts/utils/SafeMath.sol\":2650:2660  c / a == b */\n      eq\n        /* \"contracts/utils/SafeMath.sol\":2642:2698  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_543\n      jump\t// in\n        /* \"contracts/utils/SafeMath.sol\":3203:3335  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_232:\n        /* \"contracts/utils/SafeMath.sol\":3261:3268  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":3288:3327  div(a, b, \"SafeMath: division by zero\") */\n      tag_545\n        /* \"contracts/utils/SafeMath.sol\":3292:3293  a */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":3295:3296  b */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":3288:3327  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/utils/SafeMath.sol\":3288:3291  div */\n      tag_546\n        /* \"contracts/utils/SafeMath.sol\":3288:3327  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_545:\n        /* \"contracts/utils/SafeMath.sol\":3281:3327  return div(a, b, \"SafeMath: division by zero\") */\n      swap4\n        /* \"contracts/utils/SafeMath.sol\":3203:3335  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/SafeMath.sol\":1366:1502  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_239:\n        /* \"contracts/utils/SafeMath.sol\":1424:1431  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":1451:1494  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_545\n        /* \"contracts/utils/SafeMath.sol\":1455:1456  a */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":1458:1459  b */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":1451:1494  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/utils/SafeMath.sol\":1451:1454  sub */\n      tag_549\n        /* \"contracts/utils/SafeMath.sol\":1451:1494  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/utils/SafeMath.sol\":902:1083  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_240:\n        /* \"contracts/utils/SafeMath.sol\":960:967  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":992:997  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/utils/SafeMath.sol\":1016:1022  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/utils/SafeMath.sol\":1008:1054  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_553\n      jump\t// in\n        /* \"contracts/GSN/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_247:\n        /* \"contracts/GSN/Context.sol\":693:703  msg.sender */\n      caller\n        /* \"contracts/GSN/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ShadowChef.sol\":21599:21998  function _safeTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_274:\n        /* \"contracts/ShadowChef.sol\":21676:21687  _amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/ShadowChef.sol\":21672:21991  if (_amount > 0) {\r... */\n      tag_342\n      jumpi\n        /* \"contracts/ShadowChef.sol\":21815:21844  SHDW.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowChef.sol\":21797:21812  uint256 balance */\n      0x00\n      swap1\n        /* \"contracts/ShadowChef.sol\":21815:21829  SHDW.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowChef.sol\":21815:21819  SHDW */\n      immutable(\"0xdb56024b3d6cde3a6cd02fd327b99549871e338b958b94e29cae4ab4619605ef\")\n        /* \"contracts/ShadowChef.sol\":21815:21829  SHDW.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/ShadowChef.sol\":21815:21844  SHDW.balanceOf(address(this)) */\n      tag_557\n      swap1\n        /* \"contracts/ShadowChef.sol\":21838:21842  this */\n      address\n      swap1\n        /* \"contracts/ShadowChef.sol\":21815:21844  SHDW.balanceOf(address(this)) */\n      0x04\n      add\n      tag_141\n      jump\t// in\n    tag_557:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_558\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_558:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_560\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_560:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_561\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n    tag_561:\n        /* \"contracts/ShadowChef.sol\":21797:21844  uint256 balance = SHDW.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/ShadowChef.sol\":21873:21880  _amount */\n      dup2\n        /* \"contracts/ShadowChef.sol\":21863:21870  balance */\n      dup2\n        /* \"contracts/ShadowChef.sol\":21863:21880  balance < _amount */\n      lt\n        /* \"contracts/ShadowChef.sol\":21859:21934  if (balance < _amount) {\r... */\n      iszero\n      tag_562\n      jumpi\n        /* \"contracts/ShadowChef.sol\":21911:21918  balance */\n      dup1\n        /* \"contracts/ShadowChef.sol\":21901:21918  _amount = balance */\n      swap2\n      pop\n        /* \"contracts/ShadowChef.sol\":21859:21934  if (balance < _amount) {\r... */\n    tag_562:\n        /* \"contracts/ShadowChef.sol\":21948:21979  SHDW.safeTransfer(_to, _amount) */\n      tag_563\n        /* \"contracts/ShadowChef.sol\":21948:21965  SHDW.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowChef.sol\":21948:21952  SHDW */\n      immutable(\"0xdb56024b3d6cde3a6cd02fd327b99549871e338b958b94e29cae4ab4619605ef\")\n        /* \"contracts/ShadowChef.sol\":21948:21965  SHDW.safeTransfer */\n      and\n        /* \"contracts/ShadowChef.sol\":21966:21969  _to */\n      dup5\n        /* \"contracts/ShadowChef.sol\":21971:21978  _amount */\n      dup5\n        /* \"contracts/ShadowChef.sol\":21948:21965  SHDW.safeTransfer */\n      tag_291\n        /* \"contracts/ShadowChef.sol\":21948:21979  SHDW.safeTransfer(_to, _amount) */\n      jump\t// in\n    tag_563:\n        /* \"contracts/ShadowChef.sol\":21672:21991  if (_amount > 0) {\r... */\n      pop\n        /* \"contracts/ShadowChef.sol\":21599:21998  function _safeTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":719:967  function safeTransfer(\r... */\n    tag_291:\n        /* \"contracts/SafeBEP20.sol\":836:959  _callOptionalReturn(\r... */\n      tag_563\n        /* \"contracts/SafeBEP20.sol\":870:875  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":913:936  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":938:940  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":942:947  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":890:948  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_566\n      swap3\n      swap2\n      swap1\n      tag_567\n      jump\t// in\n    tag_566:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"contracts/SafeBEP20.sol\":836:855  _callOptionalReturn */\n      tag_568\n        /* \"contracts/SafeBEP20.sol\":836:959  _callOptionalReturn(\r... */\n      jump\t// in\n        /* \"contracts/SafeBEP20.sol\":975:1260  function safeTransferFrom(\r... */\n    tag_493:\n        /* \"contracts/SafeBEP20.sol\":1119:1252  _callOptionalReturn(\r... */\n      tag_570\n        /* \"contracts/SafeBEP20.sol\":1153:1158  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":1196:1223  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":1225:1229  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":1231:1233  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":1235:1240  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":1173:1241  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_566\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_572\n      jump\t// in\n        /* \"contracts/SafeBEP20.sol\":1119:1252  _callOptionalReturn(\r... */\n    tag_570:\n        /* \"contracts/SafeBEP20.sol\":975:1260  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/SafeMath.sol\":3831:4109  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_546:\n        /* \"contracts/utils/SafeMath.sol\":3917:3924  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":3952:3964  errorMessage */\n      dup2\n        /* \"contracts/utils/SafeMath.sol\":3945:3950  b > 0 */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":3937:3965  require(b > 0, errorMessage) */\n      tag_574\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_576\n      jump\t// in\n    tag_574:\n      pop\n        /* \"contracts/utils/SafeMath.sol\":3976:3985  uint256 c */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":3992:3993  b */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":3988:3989  a */\n      dup6\n        /* \"contracts/utils/SafeMath.sol\":3988:3993  a / b */\n      dup2\n      tag_577\n      jumpi\n      invalid\n    tag_577:\n      div\n      swap6\n        /* \"contracts/utils/SafeMath.sol\":3831:4109  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/SafeMath.sol\":1805:1997  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_549:\n        /* \"contracts/utils/SafeMath.sol\":1891:1898  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":1927:1939  errorMessage */\n      dup2\n        /* \"contracts/utils/SafeMath.sol\":1919:1925  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/utils/SafeMath.sol\":1911:1940  require(b <= a, errorMessage) */\n      tag_579\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_576\n      jump\t// in\n    tag_579:\n      pop\n      pop\n      pop\n        /* \"contracts/utils/SafeMath.sol\":1963:1968  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/utils/SafeMath.sol\":1805:1997  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":3430:4262  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_568:\n        /* \"contracts/SafeBEP20.sol\":3854:3877  bytes memory returndata */\n      0x60\n        /* \"contracts/SafeBEP20.sol\":3889:3958  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_582\n        /* \"contracts/SafeBEP20.sol\":3917:3921  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3889:3958  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3897:3902  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3889:3916  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_583\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3889:3958  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_582:\n        /* \"contracts/SafeBEP20.sol\":3973:3990  returndata.length */\n      dup1\n      mload\n        /* \"contracts/SafeBEP20.sol\":3854:3958  bytes memory returndata =\r... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SafeBEP20.sol\":3973:3994  returndata.length > 0 */\n      iszero\n        /* \"contracts/SafeBEP20.sol\":3969:4255  if (returndata.length > 0) {\r... */\n      tag_563\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":4146:4156  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":4135:4165  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_585\n      swap2\n      swap1\n      tag_586\n      jump\t// in\n    tag_585:\n        /* \"contracts/SafeBEP20.sol\":4109:4243  require(\r... */\n      tag_563\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_589\n      jump\t// in\n        /* \"contracts/utils/Address.sol\":3661:3857  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_583:\n        /* \"contracts/utils/Address.sol\":3764:3776  bytes memory */\n      0x60\n        /* \"contracts/utils/Address.sol\":3796:3849  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_591\n        /* \"contracts/utils/Address.sol\":3819:3825  target */\n      dup5\n        /* \"contracts/utils/Address.sol\":3827:3831  data */\n      dup5\n        /* \"contracts/utils/Address.sol\":3833:3834  0 */\n      0x00\n        /* \"contracts/utils/Address.sol\":3836:3848  errorMessage */\n      dup6\n        /* \"contracts/utils/Address.sol\":3796:3818  _functionCallWithValue */\n      tag_592\n        /* \"contracts/utils/Address.sol\":3796:3849  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_591:\n        /* \"contracts/utils/Address.sol\":3789:3849  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"contracts/utils/Address.sol\":3661:3857  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Address.sol\":5038:6017  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_592:\n        /* \"contracts/utils/Address.sol\":5168:5180  bytes memory */\n      0x60\n        /* \"contracts/utils/Address.sol\":5201:5219  isContract(target) */\n      tag_594\n        /* \"contracts/utils/Address.sol\":5212:5218  target */\n      dup6\n        /* \"contracts/utils/Address.sol\":5201:5211  isContract */\n      tag_595\n        /* \"contracts/utils/Address.sol\":5201:5219  isContract(target) */\n      jump\t// in\n    tag_594:\n        /* \"contracts/utils/Address.sol\":5193:5253  require(isContract(target), \"Address: call to non-contract\") */\n      tag_596\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_598\n      jump\t// in\n    tag_596:\n        /* \"contracts/utils/Address.sol\":5327:5339  bool success */\n      0x00\n        /* \"contracts/utils/Address.sol\":5341:5364  bytes memory returndata */\n      0x60\n        /* \"contracts/utils/Address.sol\":5368:5374  target */\n      dup7\n        /* \"contracts/utils/Address.sol\":5368:5379  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Address.sol\":5388:5396  weiValue */\n      dup6\n        /* \"contracts/utils/Address.sol\":5399:5403  data */\n      dup8\n        /* \"contracts/utils/Address.sol\":5368:5404  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      tag_599\n      swap2\n      swap1\n      tag_600\n      jump\t// in\n    tag_599:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_603\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_602)\n    tag_603:\n      0x60\n      swap2\n      pop\n    tag_602:\n      pop\n        /* \"contracts/utils/Address.sol\":5326:5404  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/utils/Address.sol\":5419:5426  success */\n      dup2\n        /* \"contracts/utils/Address.sol\":5415:6010  if (success) {\r... */\n      iszero\n      tag_604\n      jumpi\n        /* \"contracts/utils/Address.sol\":5450:5460  returndata */\n      swap2\n      pop\n        /* \"contracts/utils/Address.sol\":5443:5460  return returndata */\n      tag_591\n      swap1\n      pop\n      jump\n        /* \"contracts/utils/Address.sol\":5415:6010  if (success) {\r... */\n    tag_604:\n        /* \"contracts/utils/Address.sol\":5564:5581  returndata.length */\n      dup1\n      mload\n        /* \"contracts/utils/Address.sol\":5564:5585  returndata.length > 0 */\n      iszero\n        /* \"contracts/utils/Address.sol\":5560:5999  if (returndata.length > 0) {\r... */\n      tag_606\n      jumpi\n        /* \"contracts/utils/Address.sol\":5827:5837  returndata */\n      dup1\n        /* \"contracts/utils/Address.sol\":5821:5838  mload(returndata) */\n      mload\n        /* \"contracts/utils/Address.sol\":5888:5903  returndata_size */\n      dup1\n        /* \"contracts/utils/Address.sol\":5875:5885  returndata */\n      dup3\n        /* \"contracts/utils/Address.sol\":5871:5873  32 */\n      0x20\n        /* \"contracts/utils/Address.sol\":5867:5886  add(32, returndata) */\n      add\n        /* \"contracts/utils/Address.sol\":5860:5904  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/utils/Address.sol\":5775:5923  {\r... */\n    tag_606:\n        /* \"contracts/utils/Address.sol\":5970:5982  errorMessage */\n      dup4\n        /* \"contracts/utils/Address.sol\":5963:5983  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_576\n      jump\t// in\n        /* \"contracts/utils/Address.sol\":743:1165  function isContract(address account) internal view returns (bool) {\r... */\n    tag_595:\n        /* \"contracts/utils/Address.sol\":1110:1130  extcodesize(account) */\n      extcodesize\n        /* \"contracts/utils/Address.sol\":1149:1157  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/utils/Address.sol\":743:1165  function isContract(address account) internal view returns (bool) {\r... */\n      jump\t// out\n    tag_222:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_450:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":853:1094   */\n    tag_75:\n      0x00\n        /* \"--CODEGEN--\":957:959   */\n      0x20\n        /* \"--CODEGEN--\":945:954   */\n      dup3\n        /* \"--CODEGEN--\":936:943   */\n      dup5\n        /* \"--CODEGEN--\":932:955   */\n      sub\n        /* \"--CODEGEN--\":928:960   */\n      slt\n        /* \"--CODEGEN--\":925:927   */\n      iszero\n      tag_612\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":963:975   */\n      revert\n        /* \"--CODEGEN--\":925:927   */\n    tag_612:\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_198\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_614\n      jump\t// in\n        /* \"--CODEGEN--\":1101:1461   */\n    tag_159:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1219:1221   */\n      0x40\n        /* \"--CODEGEN--\":1207:1216   */\n      dup4\n        /* \"--CODEGEN--\":1198:1205   */\n      dup6\n        /* \"--CODEGEN--\":1194:1217   */\n      sub\n        /* \"--CODEGEN--\":1190:1222   */\n      slt\n        /* \"--CODEGEN--\":1187:1189   */\n      iszero\n      tag_616\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1225:1237   */\n      revert\n        /* \"--CODEGEN--\":1187:1189   */\n    tag_616:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_617\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_614\n      jump\t// in\n    tag_617:\n        /* \"--CODEGEN--\":1277:1340   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1377:1379   */\n      0x20\n        /* \"--CODEGEN--\":1413:1435   */\n      dup4\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_618\n        /* \"--CODEGEN--\":206:226   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_619\n      jump\t// in\n    tag_618:\n        /* \"--CODEGEN--\":1385:1445   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":1181:1461   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1468:1834   */\n    tag_58:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1589:1591   */\n      0x40\n        /* \"--CODEGEN--\":1577:1586   */\n      dup4\n        /* \"--CODEGEN--\":1568:1575   */\n      dup6\n        /* \"--CODEGEN--\":1564:1587   */\n      sub\n        /* \"--CODEGEN--\":1560:1592   */\n      slt\n        /* \"--CODEGEN--\":1557:1559   */\n      iszero\n      tag_621\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":1595:1607   */\n      revert\n        /* \"--CODEGEN--\":1557:1559   */\n    tag_621:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_622\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_614\n      jump\t// in\n    tag_622:\n        /* \"--CODEGEN--\":1647:1710   */\n      swap5\n        /* \"--CODEGEN--\":1747:1749   */\n      0x20\n        /* \"--CODEGEN--\":1786:1808   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":1551:1834   */\n      jump\t// out\n        /* \"--CODEGEN--\":1841:2332   */\n    tag_68:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1979:1981   */\n      0x60\n        /* \"--CODEGEN--\":1967:1976   */\n      dup5\n        /* \"--CODEGEN--\":1958:1965   */\n      dup7\n        /* \"--CODEGEN--\":1954:1977   */\n      sub\n        /* \"--CODEGEN--\":1950:1982   */\n      slt\n        /* \"--CODEGEN--\":1947:1949   */\n      iszero\n      tag_624\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1985:1997   */\n      revert\n        /* \"--CODEGEN--\":1947:1949   */\n    tag_624:\n        /* \"--CODEGEN--\":85:91   */\n      dup4\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_625\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_614\n      jump\t// in\n    tag_625:\n        /* \"--CODEGEN--\":2037:2100   */\n      swap6\n        /* \"--CODEGEN--\":2137:2139   */\n      0x20\n        /* \"--CODEGEN--\":2176:2198   */\n      dup6\n      add\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n      swap6\n      pop\n        /* \"--CODEGEN--\":2245:2247   */\n      0x40\n        /* \"--CODEGEN--\":2284:2306   */\n      swap1\n      swap5\n      add\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n      swap4\n        /* \"--CODEGEN--\":1941:2332   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2339:2574   */\n    tag_91:\n      0x00\n        /* \"--CODEGEN--\":2440:2442   */\n      0x20\n        /* \"--CODEGEN--\":2428:2437   */\n      dup3\n        /* \"--CODEGEN--\":2419:2426   */\n      dup5\n        /* \"--CODEGEN--\":2415:2438   */\n      sub\n        /* \"--CODEGEN--\":2411:2443   */\n      slt\n        /* \"--CODEGEN--\":2408:2410   */\n      iszero\n      tag_627\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2446:2458   */\n      revert\n        /* \"--CODEGEN--\":2408:2410   */\n    tag_627:\n        /* \"--CODEGEN--\":219:225   */\n      dup2\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_198\n        /* \"--CODEGEN--\":255:260   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_619\n      jump\t// in\n        /* \"--CODEGEN--\":2581:2838   */\n    tag_586:\n      0x00\n        /* \"--CODEGEN--\":2693:2695   */\n      0x20\n        /* \"--CODEGEN--\":2681:2690   */\n      dup3\n        /* \"--CODEGEN--\":2672:2679   */\n      dup5\n        /* \"--CODEGEN--\":2668:2691   */\n      sub\n        /* \"--CODEGEN--\":2664:2696   */\n      slt\n        /* \"--CODEGEN--\":2661:2663   */\n      iszero\n      tag_630\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2699:2711   */\n      revert\n        /* \"--CODEGEN--\":2661:2663   */\n    tag_630:\n        /* \"--CODEGEN--\":354:360   */\n      dup2\n        /* \"--CODEGEN--\":348:361   */\n      mload\n        /* \"--CODEGEN--\":366:396   */\n      tag_198\n        /* \"--CODEGEN--\":390:395   */\n      dup2\n        /* \"--CODEGEN--\":366:396   */\n      tag_619\n      jump\t// in\n        /* \"--CODEGEN--\":2845:3086   */\n    tag_79:\n      0x00\n        /* \"--CODEGEN--\":2949:2951   */\n      0x20\n        /* \"--CODEGEN--\":2937:2946   */\n      dup3\n        /* \"--CODEGEN--\":2928:2935   */\n      dup5\n        /* \"--CODEGEN--\":2924:2947   */\n      sub\n        /* \"--CODEGEN--\":2920:2952   */\n      slt\n        /* \"--CODEGEN--\":2917:2919   */\n      iszero\n      tag_633\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2955:2967   */\n      revert\n        /* \"--CODEGEN--\":2917:2919   */\n    tag_633:\n      pop\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n      swap2\n        /* \"--CODEGEN--\":2911:3086   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3093:3356   */\n    tag_427:\n      0x00\n        /* \"--CODEGEN--\":3208:3210   */\n      0x20\n        /* \"--CODEGEN--\":3196:3205   */\n      dup3\n        /* \"--CODEGEN--\":3187:3194   */\n      dup5\n        /* \"--CODEGEN--\":3183:3206   */\n      sub\n        /* \"--CODEGEN--\":3179:3211   */\n      slt\n        /* \"--CODEGEN--\":3176:3178   */\n      iszero\n      tag_635\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3214:3226   */\n      revert\n        /* \"--CODEGEN--\":3176:3178   */\n    tag_635:\n      pop\n        /* \"--CODEGEN--\":790:803   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":3170:3356   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3363:3729   */\n    tag_147:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3484:3486   */\n      0x40\n        /* \"--CODEGEN--\":3472:3481   */\n      dup4\n        /* \"--CODEGEN--\":3463:3470   */\n      dup6\n        /* \"--CODEGEN--\":3459:3482   */\n      sub\n        /* \"--CODEGEN--\":3455:3487   */\n      slt\n        /* \"--CODEGEN--\":3452:3454   */\n      iszero\n      tag_637\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":3490:3502   */\n      revert\n        /* \"--CODEGEN--\":3452:3454   */\n    tag_637:\n        /* \"--CODEGEN--\":655:661   */\n      dup3\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":3542:3605   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3642:3644   */\n      0x20\n        /* \"--CODEGEN--\":3685:3694   */\n      dup4\n        /* \"--CODEGEN--\":3681:3703   */\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_618\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_614\n      jump\t// in\n        /* \"--CODEGEN--\":3736:4371   */\n    tag_166:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3900:3903   */\n      0x80\n        /* \"--CODEGEN--\":3888:3897   */\n      dup6\n        /* \"--CODEGEN--\":3879:3886   */\n      dup8\n        /* \"--CODEGEN--\":3875:3898   */\n      sub\n        /* \"--CODEGEN--\":3871:3904   */\n      slt\n        /* \"--CODEGEN--\":3868:3870   */\n      iszero\n      tag_640\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3907:3919   */\n      revert\n        /* \"--CODEGEN--\":3868:3870   */\n    tag_640:\n        /* \"--CODEGEN--\":655:661   */\n      dup5\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":3959:4022   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":4059:4061   */\n      0x20\n        /* \"--CODEGEN--\":4117:4126   */\n      dup6\n        /* \"--CODEGEN--\":4113:4135   */\n      add\n        /* \"--CODEGEN--\":490:510   */\n      calldataload\n        /* \"--CODEGEN--\":515:563   */\n      tag_641\n        /* \"--CODEGEN--\":557:562   */\n      dup2\n        /* \"--CODEGEN--\":515:563   */\n      tag_614\n      jump\t// in\n    tag_641:\n        /* \"--CODEGEN--\":4067:4145   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":4182:4184   */\n      0x40\n        /* \"--CODEGEN--\":4218:4240   */\n      dup6\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_642\n        /* \"--CODEGEN--\":206:226   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_619\n      jump\t// in\n    tag_642:\n        /* \"--CODEGEN--\":4190:4250   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4287:4289   */\n      0x60\n        /* \"--CODEGEN--\":4323:4345   */\n      dup6\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_643\n        /* \"--CODEGEN--\":206:226   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_619\n      jump\t// in\n    tag_643:\n        /* \"--CODEGEN--\":3862:4371   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4378:4744   */\n    tag_100:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4499:4501   */\n      0x40\n        /* \"--CODEGEN--\":4487:4496   */\n      dup4\n        /* \"--CODEGEN--\":4478:4485   */\n      dup6\n        /* \"--CODEGEN--\":4474:4497   */\n      sub\n        /* \"--CODEGEN--\":4470:4502   */\n      slt\n        /* \"--CODEGEN--\":4467:4469   */\n      iszero\n      tag_645\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":4505:4517   */\n      revert\n        /* \"--CODEGEN--\":4467:4469   */\n    tag_645:\n      pop\n      pop\n        /* \"--CODEGEN--\":642:662   */\n      dup1\n      calldataload\n      swap3\n        /* \"--CODEGEN--\":4657:4659   */\n      0x20\n        /* \"--CODEGEN--\":4696:4718   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n      swap2\n      pop\n        /* \"--CODEGEN--\":4461:4744   */\n      jump\t// out\n        /* \"--CODEGEN--\":4751:5236   */\n    tag_114:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":4886:4888   */\n      0x60\n        /* \"--CODEGEN--\":4874:4883   */\n      dup5\n        /* \"--CODEGEN--\":4865:4872   */\n      dup7\n        /* \"--CODEGEN--\":4861:4884   */\n      sub\n        /* \"--CODEGEN--\":4857:4889   */\n      slt\n        /* \"--CODEGEN--\":4854:4856   */\n      iszero\n      tag_647\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":4892:4904   */\n      revert\n        /* \"--CODEGEN--\":4854:4856   */\n    tag_647:\n        /* \"--CODEGEN--\":655:661   */\n      dup4\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":4944:5007   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":5044:5046   */\n      0x20\n        /* \"--CODEGEN--\":5087:5096   */\n      dup5\n        /* \"--CODEGEN--\":5083:5105   */\n      add\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":5052:5115   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5152:5154   */\n      0x40\n        /* \"--CODEGEN--\":5192:5201   */\n      dup5\n        /* \"--CODEGEN--\":5188:5210   */\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_648\n        /* \"--CODEGEN--\":255:260   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_619\n      jump\t// in\n    tag_648:\n        /* \"--CODEGEN--\":5160:5220   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":4848:5236   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":5243:5854   */\n    tag_136:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":5395:5398   */\n      0x80\n        /* \"--CODEGEN--\":5383:5392   */\n      dup6\n        /* \"--CODEGEN--\":5374:5381   */\n      dup8\n        /* \"--CODEGEN--\":5370:5393   */\n      sub\n        /* \"--CODEGEN--\":5366:5399   */\n      slt\n        /* \"--CODEGEN--\":5363:5365   */\n      iszero\n      tag_650\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":5402:5414   */\n      revert\n        /* \"--CODEGEN--\":5363:5365   */\n    tag_650:\n        /* \"--CODEGEN--\":655:661   */\n      dup5\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":5454:5517   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":5554:5556   */\n      0x20\n        /* \"--CODEGEN--\":5597:5606   */\n      dup6\n        /* \"--CODEGEN--\":5593:5615   */\n      add\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":5562:5625   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":5662:5664   */\n      0x40\n        /* \"--CODEGEN--\":5705:5714   */\n      dup6\n        /* \"--CODEGEN--\":5701:5723   */\n      add\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":5670:5733   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5770:5772   */\n      0x60\n        /* \"--CODEGEN--\":5810:5819   */\n      dup6\n        /* \"--CODEGEN--\":5806:5828   */\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_643\n        /* \"--CODEGEN--\":255:260   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_619\n      jump\t// in\n        /* \"--CODEGEN--\":16322:16593   */\n    tag_600:\n      0x00\n        /* \"--CODEGEN--\":6353:6358   */\n      dup3\n        /* \"--CODEGEN--\":29384:29396   */\n      mload\n        /* \"--CODEGEN--\":6464:6516   */\n      tag_653\n        /* \"--CODEGEN--\":6509:6515   */\n      dup2\n        /* \"--CODEGEN--\":6504:6507   */\n      dup5\n        /* \"--CODEGEN--\":6497:6501   */\n      0x20\n        /* \"--CODEGEN--\":6490:6495   */\n      dup8\n        /* \"--CODEGEN--\":6486:6502   */\n      add\n        /* \"--CODEGEN--\":6464:6516   */\n      tag_654\n      jump\t// in\n    tag_653:\n        /* \"--CODEGEN--\":6528:6544   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"--CODEGEN--\":16456:16593   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":16600:16822   */\n    tag_141:\n        /* \"--CODEGEN--\":30255:30297   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":30244:30298   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":5932:5969   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":16727:16729   */\n      0x20\n        /* \"--CODEGEN--\":16712:16730   */\n      add\n      swap1\n        /* \"--CODEGEN--\":16698:16822   */\n      jump\t// out\n        /* \"--CODEGEN--\":16829:17273   */\n    tag_572:\n        /* \"--CODEGEN--\":30255:30297   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":30244:30298   */\n      swap4\n      dup5\n      and\n        /* \"--CODEGEN--\":5932:5969   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":30244:30298   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":17176:17178   */\n      0x20\n        /* \"--CODEGEN--\":17161:17179   */\n      dup3\n      add\n        /* \"--CODEGEN--\":5932:5969   */\n      mstore\n        /* \"--CODEGEN--\":17259:17261   */\n      0x40\n        /* \"--CODEGEN--\":17244:17262   */\n      dup2\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":17012:17014   */\n      0x60\n        /* \"--CODEGEN--\":16997:17015   */\n      add\n      swap1\n        /* \"--CODEGEN--\":16983:17273   */\n      jump\t// out\n        /* \"--CODEGEN--\":17280:17613   */\n    tag_567:\n        /* \"--CODEGEN--\":30255:30297   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":30244:30298   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":5932:5969   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":17599:17601   */\n      0x20\n        /* \"--CODEGEN--\":17584:17602   */\n      dup3\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      mstore\n        /* \"--CODEGEN--\":17435:17437   */\n      0x40\n        /* \"--CODEGEN--\":17420:17438   */\n      add\n      swap1\n        /* \"--CODEGEN--\":17406:17613   */\n      jump\t// out\n        /* \"--CODEGEN--\":17620:17830   */\n    tag_97:\n        /* \"--CODEGEN--\":30043:30056   */\n      swap1\n      iszero\n        /* \"--CODEGEN--\":30036:30057   */\n      iszero\n        /* \"--CODEGEN--\":6036:6070   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":17741:17743   */\n      0x20\n        /* \"--CODEGEN--\":17726:17744   */\n      add\n      swap1\n        /* \"--CODEGEN--\":17712:17830   */\n      jump\t// out\n        /* \"--CODEGEN--\":18096:18406   */\n    tag_576:\n      0x00\n        /* \"--CODEGEN--\":18243:18245   */\n      0x20\n        /* \"--CODEGEN--\":18264:18281   */\n      dup3\n        /* \"--CODEGEN--\":18257:18304   */\n      mstore\n        /* \"--CODEGEN--\":6864:6869   */\n      dup3\n        /* \"--CODEGEN--\":29384:29396   */\n      mload\n        /* \"--CODEGEN--\":29823:29829   */\n      dup1\n        /* \"--CODEGEN--\":18243:18245   */\n      0x20\n        /* \"--CODEGEN--\":18232:18241   */\n      dup5\n        /* \"--CODEGEN--\":18228:18246   */\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":6958:7010   */\n      tag_661\n        /* \"--CODEGEN--\":7003:7009   */\n      dup2\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n        /* \"--CODEGEN--\":18232:18241   */\n      dup6\n        /* \"--CODEGEN--\":29851:29865   */\n      add\n        /* \"--CODEGEN--\":18243:18245   */\n      0x20\n        /* \"--CODEGEN--\":6984:6989   */\n      dup8\n        /* \"--CODEGEN--\":6980:6996   */\n      add\n        /* \"--CODEGEN--\":6958:7010   */\n      tag_654\n      jump\t// in\n    tag_661:\n        /* \"--CODEGEN--\":31042:31044   */\n      0x1f\n        /* \"--CODEGEN--\":31022:31036   */\n      add\n        /* \"--CODEGEN--\":31038:31045   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"--CODEGEN--\":31018:31046   */\n      and\n        /* \"--CODEGEN--\":7022:7061   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n        /* \"--CODEGEN--\":7022:7061   */\n      add\n      swap3\n        /* \"--CODEGEN--\":18214:18406   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":18413:18829   */\n    tag_220:\n        /* \"--CODEGEN--\":18613:18615   */\n      0x20\n        /* \"--CODEGEN--\":18627:18674   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":7298:7300   */\n      0x2a\n        /* \"--CODEGEN--\":18598:18616   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":7334:7368   */\n      0x536861646f774368656656323a20496e76616c6964206e657720626f6f737420\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":7314:7369   */\n      mstore\n        /* \"--CODEGEN--\":7403:7415   */\n      0x6d756c7469706c69657200000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":7389:7401   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":7382:7416   */\n      mstore\n        /* \"--CODEGEN--\":7435:7447   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":18584:18829   */\n      jump\t// out\n        /* \"--CODEGEN--\":18836:19252   */\n    tag_211:\n        /* \"--CODEGEN--\":19036:19038   */\n      0x20\n        /* \"--CODEGEN--\":19050:19097   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":7686:7688   */\n      0x2c\n        /* \"--CODEGEN--\":19021:19039   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":7722:7756   */\n      0x536861646f774368656656323a2054686520757365722061646472657373206d\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":7702:7757   */\n      mstore\n        /* \"--CODEGEN--\":7791:7805   */\n      0x7573742062652076616c69640000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":7777:7789   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":7770:7806   */\n      mstore\n        /* \"--CODEGEN--\":7825:7837   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":19007:19252   */\n      jump\t// out\n        /* \"--CODEGEN--\":19259:19675   */\n    tag_589:\n        /* \"--CODEGEN--\":19459:19461   */\n      0x20\n        /* \"--CODEGEN--\":19473:19520   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8076:8078   */\n      0x2a\n        /* \"--CODEGEN--\":19444:19462   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":8112:8146   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8092:8147   */\n      mstore\n        /* \"--CODEGEN--\":8181:8193   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8167:8179   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":8160:8194   */\n      mstore\n        /* \"--CODEGEN--\":8213:8225   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":19430:19675   */\n      jump\t// out\n        /* \"--CODEGEN--\":19682:20098   */\n    tag_520:\n        /* \"--CODEGEN--\":19882:19884   */\n      0x20\n        /* \"--CODEGEN--\":19896:19943   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8464:8466   */\n      0x26\n        /* \"--CODEGEN--\":19867:19885   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":8500:8534   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8480:8535   */\n      mstore\n        /* \"--CODEGEN--\":8569:8577   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8555:8567   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":8548:8578   */\n      mstore\n        /* \"--CODEGEN--\":8597:8609   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":19853:20098   */\n      jump\t// out\n        /* \"--CODEGEN--\":20105:20521   */\n    tag_553:\n        /* \"--CODEGEN--\":20305:20307   */\n      0x20\n        /* \"--CODEGEN--\":20319:20366   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8848:8850   */\n      0x1b\n        /* \"--CODEGEN--\":20290:20308   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":8884:8913   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8864:8914   */\n      mstore\n        /* \"--CODEGEN--\":8933:8945   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":20276:20521   */\n      jump\t// out\n        /* \"--CODEGEN--\":20528:20944   */\n    tag_254:\n        /* \"--CODEGEN--\":20728:20730   */\n      0x20\n        /* \"--CODEGEN--\":20742:20789   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9184:9186   */\n      0x2e\n        /* \"--CODEGEN--\":20713:20731   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":9220:9254   */\n      0x536861646f774368656656323a204275726e2061646d696e2061646472657373\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9200:9255   */\n      mstore\n        /* \"--CODEGEN--\":9289:9305   */\n      0x206d7573742062652076616c6964000000000000000000000000000000000000\n        /* \"--CODEGEN--\":9275:9287   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":9268:9306   */\n      mstore\n        /* \"--CODEGEN--\":9325:9337   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":20699:20944   */\n      jump\t// out\n        /* \"--CODEGEN--\":20951:21367   */\n    tag_478:\n        /* \"--CODEGEN--\":21151:21153   */\n      0x20\n        /* \"--CODEGEN--\":21165:21212   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9576:9578   */\n      0x42\n        /* \"--CODEGEN--\":21136:21154   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":9612:9646   */\n      0x536861646f774368656656323a205468652061646472657373206973206e6f74\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9592:9647   */\n      mstore\n        /* \"--CODEGEN--\":9681:9715   */\n      0x20617661696c61626c6520746f206465706f73697420696e207468697320706f\n        /* \"--CODEGEN--\":9667:9679   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":9660:9716   */\n      mstore\n        /* \"--CODEGEN--\":9750:9754   */\n      0x6f6c000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":9736:9748   */\n      0x80\n      dup3\n      add\n        /* \"--CODEGEN--\":9729:9755   */\n      mstore\n        /* \"--CODEGEN--\":9774:9786   */\n      0xa0\n      add\n      swap1\n        /* \"--CODEGEN--\":21122:21367   */\n      jump\t// out\n        /* \"--CODEGEN--\":21374:21790   */\n    tag_388:\n        /* \"--CODEGEN--\":21574:21576   */\n      0x20\n        /* \"--CODEGEN--\":21588:21635   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10025:10027   */\n      0x2e\n        /* \"--CODEGEN--\":21559:21577   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":10061:10095   */\n      0x536861646f774368656656323a20534844572072617465206d75737420626520\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10041:10096   */\n      mstore\n        /* \"--CODEGEN--\":10130:10146   */\n      0x67726561746572207468616e2030000000000000000000000000000000000000\n        /* \"--CODEGEN--\":10116:10128   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":10109:10147   */\n      mstore\n        /* \"--CODEGEN--\":10166:10178   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":21545:21790   */\n      jump\t// out\n        /* \"--CODEGEN--\":21797:22213   */\n    tag_393:\n        /* \"--CODEGEN--\":21997:21999   */\n      0x20\n        /* \"--CODEGEN--\":22011:22058   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10417:10419   */\n      0x25\n        /* \"--CODEGEN--\":21982:22000   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":10453:10487   */\n      0x536861646f774368656656323a20546f74616c2072617465206d757374206265\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10433:10488   */\n      mstore\n        /* \"--CODEGEN--\":10522:10529   */\n      0x2031653132000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":10508:10520   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":10501:10530   */\n      mstore\n        /* \"--CODEGEN--\":10549:10561   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":21968:22213   */\n      jump\t// out\n        /* \"--CODEGEN--\":22220:22636   */\n    tag_415:\n        /* \"--CODEGEN--\":22420:22422   */\n      0x20\n        /* \"--CODEGEN--\":22434:22481   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10800:10802   */\n      0x32\n        /* \"--CODEGEN--\":22405:22423   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":10836:10870   */\n      0x536861646f774368656656323a20546865207768697465206c69737420616464\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10816:10871   */\n      mstore\n        /* \"--CODEGEN--\":10905:10925   */\n      0x72657373206d7573742062652076616c69640000000000000000000000000000\n        /* \"--CODEGEN--\":10891:10903   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":10884:10926   */\n      mstore\n        /* \"--CODEGEN--\":10945:10957   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":22391:22636   */\n      jump\t// out\n        /* \"--CODEGEN--\":22643:23059   */\n    tag_543:\n        /* \"--CODEGEN--\":22843:22845   */\n      0x20\n        /* \"--CODEGEN--\":22857:22904   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11196:11198   */\n      0x21\n        /* \"--CODEGEN--\":22828:22846   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":11232:11266   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11212:11267   */\n      mstore\n        /* \"--CODEGEN--\":11301:11304   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":11287:11299   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":11280:11305   */\n      mstore\n        /* \"--CODEGEN--\":11324:11336   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":22814:23059   */\n      jump\t// out\n        /* \"--CODEGEN--\":23066:23482   */\n    tag_283:\n        /* \"--CODEGEN--\":23266:23268   */\n      0x20\n        /* \"--CODEGEN--\":23280:23327   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11575:11577   */\n      0x16\n        /* \"--CODEGEN--\":23251:23269   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":11611:11635   */\n      0x77697468647261773a20496e73756666696369656e7400000000000000000000\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11591:11636   */\n      mstore\n        /* \"--CODEGEN--\":11655:11667   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23237:23482   */\n      jump\t// out\n        /* \"--CODEGEN--\":23489:23905   */\n    tag_430:\n        /* \"--CODEGEN--\":23689:23691   */\n      0x20\n        /* \"--CODEGEN--\":23703:23750   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11906:11908   */\n      0x11\n        /* \"--CODEGEN--\":23674:23692   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":11942:11961   */\n      0x4e6f6e6520424550323020746f6b656e73000000000000000000000000000000\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11922:11962   */\n      mstore\n        /* \"--CODEGEN--\":11981:11993   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23660:23905   */\n      jump\t// out\n        /* \"--CODEGEN--\":23912:24328   */\n    tag_250:\n        /* \"--CODEGEN--\":24112:24114   */\n      0x20\n        /* \"--CODEGEN--\":24126:24173   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":24097:24115   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":12268:12302   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":12248:12303   */\n      mstore\n        /* \"--CODEGEN--\":12322:12334   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":24083:24328   */\n      jump\t// out\n        /* \"--CODEGEN--\":24335:24751   */\n    tag_203:\n        /* \"--CODEGEN--\":24535:24537   */\n      0x20\n        /* \"--CODEGEN--\":24549:24596   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12573:12575   */\n      0x29\n        /* \"--CODEGEN--\":24520:24538   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":12609:12643   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f7374\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":12589:12644   */\n      mstore\n        /* \"--CODEGEN--\":12678:12689   */\n      0x20636f6e74726163740000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":12664:12676   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":12657:12690   */\n      mstore\n        /* \"--CODEGEN--\":12709:12721   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":24506:24751   */\n      jump\t// out\n        /* \"--CODEGEN--\":24758:25174   */\n    tag_407:\n        /* \"--CODEGEN--\":24958:24960   */\n      0x20\n        /* \"--CODEGEN--\":24972:25019   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12960:12962   */\n      0x36\n        /* \"--CODEGEN--\":24943:24961   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":12996:13030   */\n      0x536861646f774368656656323a204e657720626f6f737420636f6e7472616374\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":12976:13031   */\n      mstore\n        /* \"--CODEGEN--\":13065:13089   */\n      0x2061646472657373206d7573742062652076616c696400000000000000000000\n        /* \"--CODEGEN--\":13051:13063   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":13044:13090   */\n      mstore\n        /* \"--CODEGEN--\":13109:13121   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":24929:25174   */\n      jump\t// out\n        /* \"--CODEGEN--\":25181:25597   */\n    tag_598:\n        /* \"--CODEGEN--\":25381:25383   */\n      0x20\n        /* \"--CODEGEN--\":25395:25442   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":13360:13362   */\n      0x1d\n        /* \"--CODEGEN--\":25366:25384   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":13396:13427   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":13376:13428   */\n      mstore\n        /* \"--CODEGEN--\":13447:13459   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":25352:25597   */\n      jump\t// out\n        /* \"--CODEGEN--\":25604:26020   */\n    tag_257:\n        /* \"--CODEGEN--\":25804:25806   */\n      0x20\n        /* \"--CODEGEN--\":25818:25865   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":13698:13700   */\n      0x41\n        /* \"--CODEGEN--\":25789:25807   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":13734:13768   */\n      0x536861646f774368656656323a204275726e2061646d696e2061646472657373\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":13714:13769   */\n      mstore\n        /* \"--CODEGEN--\":13803:13837   */\n      0x206973207468652073616d6520776974682063757272656e7420616464726573\n        /* \"--CODEGEN--\":13789:13801   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":13782:13838   */\n      mstore\n        /* \"--CODEGEN--\":13872:13875   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":13858:13870   */\n      0x80\n      dup3\n      add\n        /* \"--CODEGEN--\":13851:13876   */\n      mstore\n        /* \"--CODEGEN--\":13895:13907   */\n      0xa0\n      add\n      swap1\n        /* \"--CODEGEN--\":25775:26020   */\n      jump\t// out\n        /* \"--CODEGEN--\":26027:26443   */\n    tag_216:\n        /* \"--CODEGEN--\":26227:26229   */\n      0x20\n        /* \"--CODEGEN--\":26241:26288   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14146:14148   */\n      0x30\n        /* \"--CODEGEN--\":26212:26230   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":14182:14216   */\n      0x536861646f774368656656323a204f6e6c7920726567756c6172206661726d20\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14162:14217   */\n      mstore\n        /* \"--CODEGEN--\":14251:14269   */\n      0x636f756c6420626520626f6f7374656400000000000000000000000000000000\n        /* \"--CODEGEN--\":14237:14249   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":14230:14270   */\n      mstore\n        /* \"--CODEGEN--\":14289:14301   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":26198:26443   */\n      jump\t// out\n        /* \"--CODEGEN--\":26450:26866   */\n    tag_433:\n        /* \"--CODEGEN--\":26650:26652   */\n      0x20\n        /* \"--CODEGEN--\":26664:26711   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14540:14542   */\n      0x27\n        /* \"--CODEGEN--\":26635:26653   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":14576:14610   */\n      0x5348445720746f6b656e2063616e277420626520616464656420746f20666172\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14556:14611   */\n      mstore\n        /* \"--CODEGEN--\":14645:14654   */\n      0x6d20706f6f6c7300000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":14631:14643   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":14624:14655   */\n      mstore\n        /* \"--CODEGEN--\":14674:14686   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":26621:26866   */\n      jump\t// out\n        /* \"--CODEGEN--\":26873:27289   */\n    tag_207:\n        /* \"--CODEGEN--\":27073:27075   */\n      0x20\n        /* \"--CODEGEN--\":27087:27134   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14925:14927   */\n      0x1f\n        /* \"--CODEGEN--\":27058:27076   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":29811:29830   */\n      mstore\n        /* \"--CODEGEN--\":14961:14994   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"--CODEGEN--\":29851:29865   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14941:14995   */\n      mstore\n        /* \"--CODEGEN--\":15014:15026   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":27044:27289   */\n      jump\t// out\n        /* \"--CODEGEN--\":27296:27619   */\n    tag_106:\n      0x00\n        /* \"--CODEGEN--\":27473:27476   */\n      0xa0\n        /* \"--CODEGEN--\":27462:27471   */\n      dup3\n        /* \"--CODEGEN--\":27458:27477   */\n      add\n        /* \"--CODEGEN--\":27450:27477   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15333:15349   */\n      dup3\n        /* \"--CODEGEN--\":15327:15350   */\n      mload\n        /* \"--CODEGEN--\":16160:16163   */\n      dup3\n        /* \"--CODEGEN--\":16153:16190   */\n      mstore\n        /* \"--CODEGEN--\":15509:15513   */\n      0x20\n        /* \"--CODEGEN--\":15502:15507   */\n      dup4\n        /* \"--CODEGEN--\":15498:15514   */\n      add\n        /* \"--CODEGEN--\":15492:15515   */\n      mload\n        /* \"--CODEGEN--\":15509:15513   */\n      0x20\n        /* \"--CODEGEN--\":15573:15576   */\n      dup4\n        /* \"--CODEGEN--\":15569:15583   */\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      mstore\n        /* \"--CODEGEN--\":15669:15673   */\n      0x40\n        /* \"--CODEGEN--\":15662:15667   */\n      dup4\n        /* \"--CODEGEN--\":15658:15674   */\n      add\n        /* \"--CODEGEN--\":15652:15675   */\n      mload\n        /* \"--CODEGEN--\":15669:15673   */\n      0x40\n        /* \"--CODEGEN--\":15733:15736   */\n      dup4\n        /* \"--CODEGEN--\":15729:15743   */\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      mstore\n        /* \"--CODEGEN--\":15836:15840   */\n      0x60\n        /* \"--CODEGEN--\":15829:15834   */\n      dup4\n        /* \"--CODEGEN--\":15825:15841   */\n      add\n        /* \"--CODEGEN--\":15819:15842   */\n      mload\n        /* \"--CODEGEN--\":15836:15840   */\n      0x60\n        /* \"--CODEGEN--\":15900:15903   */\n      dup4\n        /* \"--CODEGEN--\":15896:15910   */\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      mstore\n        /* \"--CODEGEN--\":15995:15999   */\n      0x80\n        /* \"--CODEGEN--\":15988:15993   */\n      dup4\n        /* \"--CODEGEN--\":15984:16000   */\n      add\n        /* \"--CODEGEN--\":15978:16001   */\n      mload\n        /* \"--CODEGEN--\":30043:30056   */\n      iszero\n        /* \"--CODEGEN--\":30036:30057   */\n      iszero\n        /* \"--CODEGEN--\":15995:15999   */\n      0x80\n        /* \"--CODEGEN--\":16053:16056   */\n      dup4\n        /* \"--CODEGEN--\":16049:16063   */\n      add\n        /* \"--CODEGEN--\":6036:6070   */\n      mstore\n        /* \"--CODEGEN--\":27444:27619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":27626:27848   */\n    tag_61:\n        /* \"--CODEGEN--\":16153:16190   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":27753:27755   */\n      0x20\n        /* \"--CODEGEN--\":27738:27756   */\n      add\n      swap1\n        /* \"--CODEGEN--\":27724:27848   */\n      jump\t// out\n        /* \"--CODEGEN--\":27855:28176   */\n    tag_444:\n        /* \"--CODEGEN--\":16153:16190   */\n      swap2\n      dup3\n      mstore\n        /* \"--CODEGEN--\":30043:30056   */\n      iszero\n        /* \"--CODEGEN--\":30036:30057   */\n      iszero\n        /* \"--CODEGEN--\":28162:28164   */\n      0x20\n        /* \"--CODEGEN--\":28147:28165   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6036:6070   */\n      mstore\n        /* \"--CODEGEN--\":28004:28006   */\n      0x40\n        /* \"--CODEGEN--\":27989:28007   */\n      add\n      swap1\n        /* \"--CODEGEN--\":27975:28176   */\n      jump\t// out\n        /* \"--CODEGEN--\":28183:28627   */\n    tag_150:\n        /* \"--CODEGEN--\":16153:16190   */\n      swap3\n      dup4\n      mstore\n        /* \"--CODEGEN--\":28530:28532   */\n      0x20\n        /* \"--CODEGEN--\":28515:28533   */\n      dup4\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":28613:28615   */\n      0x40\n        /* \"--CODEGEN--\":28598:28616   */\n      dup3\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      mstore\n        /* \"--CODEGEN--\":28366:28368   */\n      0x60\n        /* \"--CODEGEN--\":28351:28369   */\n      add\n      swap1\n        /* \"--CODEGEN--\":28337:28627   */\n      jump\t// out\n        /* \"--CODEGEN--\":28634:29290   */\n    tag_82:\n        /* \"--CODEGEN--\":16153:16190   */\n      swap5\n      dup6\n      mstore\n        /* \"--CODEGEN--\":29032:29034   */\n      0x20\n        /* \"--CODEGEN--\":29017:29035   */\n      dup6\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"--CODEGEN--\":29115:29117   */\n      0x40\n        /* \"--CODEGEN--\":29100:29118   */\n      dup5\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":29198:29200   */\n      0x60\n        /* \"--CODEGEN--\":29183:29201   */\n      dup4\n      add\n        /* \"--CODEGEN--\":16153:16190   */\n      mstore\n        /* \"--CODEGEN--\":30043:30056   */\n      iszero\n        /* \"--CODEGEN--\":30036:30057   */\n      iszero\n        /* \"--CODEGEN--\":29275:29278   */\n      0x80\n        /* \"--CODEGEN--\":29260:29279   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6036:6070   */\n      mstore\n        /* \"--CODEGEN--\":28867:28870   */\n      0xa0\n        /* \"--CODEGEN--\":28852:28871   */\n      add\n      swap1\n        /* \"--CODEGEN--\":28838:29290   */\n      jump\t// out\n        /* \"--CODEGEN--\":30678:30946   */\n    tag_654:\n        /* \"--CODEGEN--\":30743:30744   */\n      0x00\n        /* \"--CODEGEN--\":30750:30851   */\n    tag_689:\n        /* \"--CODEGEN--\":30764:30770   */\n      dup4\n        /* \"--CODEGEN--\":30761:30762   */\n      dup2\n        /* \"--CODEGEN--\":30758:30771   */\n      lt\n        /* \"--CODEGEN--\":30750:30851   */\n      iszero\n      tag_691\n      jumpi\n        /* \"--CODEGEN--\":30831:30842   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":30825:30843   */\n      mload\n        /* \"--CODEGEN--\":30812:30823   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":30805:30844   */\n      mstore\n        /* \"--CODEGEN--\":30786:30788   */\n      0x20\n        /* \"--CODEGEN--\":30779:30789   */\n      add\n        /* \"--CODEGEN--\":30750:30851   */\n      jump(tag_689)\n    tag_691:\n        /* \"--CODEGEN--\":30866:30872   */\n      dup4\n        /* \"--CODEGEN--\":30863:30864   */\n      dup2\n        /* \"--CODEGEN--\":30860:30873   */\n      gt\n        /* \"--CODEGEN--\":30857:30859   */\n      iszero\n      tag_570\n      jumpi\n      pop\n      pop\n        /* \"--CODEGEN--\":30743:30744   */\n      0x00\n        /* \"--CODEGEN--\":30913:30929   */\n      swap2\n      add\n        /* \"--CODEGEN--\":30906:30933   */\n      mstore\n        /* \"--CODEGEN--\":30727:30946   */\n      jump\t// out\n        /* \"--CODEGEN--\":31059:31176   */\n    tag_614:\n        /* \"--CODEGEN--\":30255:30297   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":31146:31151   */\n      dup2\n        /* \"--CODEGEN--\":30244:30298   */\n      and\n        /* \"--CODEGEN--\":31121:31126   */\n      dup2\n        /* \"--CODEGEN--\":31118:31153   */\n      eq\n        /* \"--CODEGEN--\":31108:31110   */\n      tag_694\n      jumpi\n        /* \"--CODEGEN--\":31167:31168   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":31157:31169   */\n      revert\n        /* \"--CODEGEN--\":31108:31110   */\n    tag_694:\n        /* \"--CODEGEN--\":31102:31176   */\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":31183:31294   */\n    tag_619:\n        /* \"--CODEGEN--\":31264:31269   */\n      dup1\n        /* \"--CODEGEN--\":30043:30056   */\n      iszero\n        /* \"--CODEGEN--\":30036:30057   */\n      iszero\n        /* \"--CODEGEN--\":31242:31247   */\n      dup2\n        /* \"--CODEGEN--\":31239:31271   */\n      eq\n        /* \"--CODEGEN--\":31229:31231   */\n      tag_694\n      jumpi\n        /* \"--CODEGEN--\":31285:31286   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":31275:31287   */\n      revert\n\n    auxdata: 0xa26469706673582212208258375ac1461dc0f29a035a916da3fbd5d3fac1fe1c167088369b432b73787f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a0604052640ba43b7400600a55643a35294400600b5564a2fb405800600c553480156200002c57600080fd5b50604051620036c4380380620036c48339810160408190526200004f91620000e5565b60006200005b620000e1565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001805560609190911b6001600160601b031916608052600280546001600160a01b0319166001600160a01b039092169190911790556200013c565b3390565b60008060408385031215620000f8578182fd5b8251620001058162000123565b6020840151909250620001188162000123565b809150509250929050565b6001600160a01b03811681146200013957600080fd5b50565b60805160601c61355b6200016960003980610575528061199c52806125be528061266b525061355b6000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c806378db4c341161017b578063c507aeaa116100d8578063e2bbb1581161008c578063f474309e11610071578063f474309e146104fa578063f5a26f401461050d578063f5b91cd314610515576102ad565b8063e2bbb158146104d4578063f2fde38b146104e7576102ad565b8063cc6db2da116100bd578063cc6db2da146104c4578063d2ce6ae8146104c4578063dfcedeee146104cc576102ad565b8063c507aeaa1461049e578063c799b59d146104b1576102ad565b806393f1a40b1161012f5780639dd2fcc3116101145780639dd2fcc314610470578063ac1d060914610483578063c40d337b14610496576102ad565b806393f1a40b1461044657806399d7e84a14610468576102ad565b8063815d087f11610160578063815d087f1461042357806381bdf98c146104365780638da5cb5b1461043e576102ad565b806378db4c341461040857806378ed5d1f14610410576102ad565b8063372c12b11161022957806364482f79116101dd57806369b02128116101c257806369b02128146103f05780636fda08c3146103f8578063715018a614610400576102ad565b806364482f79146103d55780636661100f146103e8576102ad565b806351eb05a61161020e57806351eb05a61461039a5780635312ea8e146103ba578063630b5ba1146103cd576102ad565b8063372c12b114610367578063441a3e7014610387576102ad565b80630bb844bc1161028057806316e80f4d1161026557806316e80f4d1461034457806319f95e2e1461034c57806336183ed614610354576102ad565b80630bb844bc1461030d5780631526fe2714610320576102ad565b8063033186e8146102b257806303dcff74146102db578063041a84c9146102f0578063081e3eda14610305575b600080fd5b6102c56102c0366004612a74565b61051d565b6040516102d29190613472565b60405180910390f35b6102e3610573565b6040516102d29190612c5b565b6103036102fe366004612a9f565b610597565b005b6102c561090f565b61030361031b366004612a20565b610915565b61033361032e366004612b0b565b610a8a565b6040516102d29594939291906134a1565b6102c5610acb565b6102c5610ad7565b610303610362366004612ad3565b610b04565b61037a610375366004612a20565b610bca565b6040516102d29190612cd3565b610303610395366004612bb1565b610bdf565b6103ad6103a8366004612b0b565b610df0565b6040516102d29190613436565b6103036103c8366004612b0b565b610fc6565b6103036110f4565b6103036103e3366004612bd2565b611188565b6102c56112ff565b6102c5611305565b6102c561130f565b610303611315565b6102c56113e0565b6102e361041e366004612b0b565b6113e6565b610303610431366004612c0a565b61141a565b6102e361157c565b6102e3611598565b610459610454366004612b3b565b6115b4565b6040516102d29392919061348b565b6102c56115e0565b61030361047e366004612a20565b6115e6565b610303610491366004612a3c565b611727565b6102c561185b565b6103036104ac366004612b5f565b611861565b6102c56104bf366004612b3b565b611c3a565b6102c5611de6565b6102e3611def565b6103036104e2366004612bb1565b611e0b565b6103036104f5366004612a20565b6121d6565b6102c5610508366004612ad3565b61230c565b6102c5612367565b6102c561236d565b600081815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281206002015464e8d4a5100081116105675764e8d4a51000610569565b805b9150505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035473ffffffffffffffffffffffffffffffffffffffff1633146105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906131d1565b60405180910390fd5b6002600154141561062e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b600260015573ffffffffffffffffffffffffffffffffffffffff8316610680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612d8c565b6004828154811061068d57fe5b600091825260209091206004600590920201015460ff166106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613345565b64e8d4a5100081101580156106f557506501d1a94a20008111155b61072b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612d2f565b6107336129ce565b61073c83610df0565b600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091528120919250610778868661051d565b9050610785868683612379565b6107c5670de0b6b3a76400006107b985600001516107bf64e8d4a510006107b98a896000015461245690919063ffffffff16565b906124aa565b90612456565b60018301558154610811906107e59064e8d4a51000906107b99088612456565b835461080b906108009064e8d4a51000906107b99087612456565b6060870151906124f3565b90612535565b6060840152600480548491908790811061082757fe5b6000918252602080832084516005939093020191825583810151600183015560408085015160028085019190915560608601516003850155608090950151600490930180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016931515939093179092558883526006815281832073ffffffffffffffffffffffffffffffffffffffff8b1680855291529181902090920186905590517f01abd62439b64f6c5dab6f94d56099495bd0c094f9c21f98f4d3562a21edb4ba906108fb9088908590899061348b565b60405180910390a250506001805550505050565b60045490565b61091d612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610971576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff81166109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612eda565b60025473ffffffffffffffffffffffffffffffffffffffff82811691161415610a13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906132c2565b6002805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907fd146fe330fdddf682413850a35b28edfccd4c4b53cfee802fd24950de5be1dbe90600090a35050565b60048181548110610a9757fe5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294509092909160ff1685565b670de0b6b3a764000081565b6000610aff64e8d4a510006107b9600a54671314fb370629800061245690919063ffffffff16565b905090565b610b0c612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610b60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b8015610b6e57610b6e6110f4565b6000610b85600d54436124f390919063ffffffff16565b90506000610b9b610b94610ad7565b8390612456565b600254909150610bc19073ffffffffffffffffffffffffffffffffffffffff1682612578565b505043600d5550565b60076020526000908152604090205460ff1681565b60026001541415610c1c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b6002600155610c296129ce565b610c3283610df0565b60008481526006602090815260408083203384529091529020805491925090831115610c8a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061312e565b6000610c96338661051d565b9050610ca3338683612379565b8315610cf8578154610cb590856124f3565b8260000181905550610cf8338560058881548110610ccf57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169190612697565b610d2c670de0b6b3a76400006107b985600001516107bf64e8d4a510006107b987896000015461245690919063ffffffff16565b6001830155610d74610d4764e8d4a510006107b98785612456565b60048781548110610d5457fe5b9060005260206000209060050201600301546124f390919063ffffffff16565b60048681548110610d8157fe5b906000526020600020906005020160030181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610ddd9190613472565b60405180910390a3505060018055505050565b610df86129ce565b60048281548110610e0557fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301849052600281015491830191909152600381015460608301526004015460ff16151560808201529150431115610fc15760608101516080820151600090610e7757600954610e7b565b6008545b9050600082118015610e8d5750600081115b15610efa576000610eab8460200151436124f390919063ffffffff16565b90506000610ed2836107b987604001516107bf610ecb8a6080015161230c565b8790612456565b9050610ef5610eed856107b984670de0b6b3a7640000612456565b865190612535565b855250505b4360208401526004805484919086908110610f1157fe5b6000918252602091829020835160059290920201908155828201516001820155604080840151600283015560608401516003830155608090930151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558401518451915186927f3be3541fc42237d611b30329040bfa4569541d156560acdbbae57640d20b8f4692610fb6929091879161348b565b60405180910390a250505b919050565b60026001541415611003576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b600260018190555060006004828154811061101a57fe5b6000918252602080832085845260068252604080852033808752935284208054858255600182018690556005909402909101945092906110709064e8d4a51000906107b990611069908961051d565b8590612456565b905080846003015411611084576000611093565b600384015461109390826124f3565b84600301819055506110ad338360058881548110610ccf57fe5b843373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059584604051610ddd9190613472565b60045460005b818110156111845761110a6129ce565b6004828154811061111757fe5b60009182526020918290206040805160a08101825260059093029091018054835260018101549383019390935260028301549082018190526003830154606083015260049092015460ff161515608082015291501561117b5761117982610df0565b505b506001016110fa565b5050565b611190612574565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146111e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6111ed83610df0565b5080156111fc576111fc6110f4565b6004838154811061120957fe5b600091825260209091206004600590920201015460ff16156112645761125c8261080b6004868154811061123957fe5b9060005260206000209060050201600201546008546124f390919063ffffffff16565b60085561129f565b61129b8261080b6004868154811061127857fe5b9060005260206000209060050201600201546009546124f390919063ffffffff16565b6009555b81600484815481106112ad57fe5b906000526020600020906005020160020181905550827fc0cfd54d2de2b55f1e6e108d3ec53ff0a1abe6055401d32c61e9433b747ef9f8836040516112f29190613472565b60405180910390a2505050565b600a5481565b6501d1a94a200081565b600c5481565b61131d612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611371576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600d5481565b600581815481106113f357fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b611422612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611476576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6000841180156114865750600083115b80156114925750600082115b6114c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612fba565b64e8d4a510006114dc8361080b8787612535565b14611513576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613017565b8015611521576115216110f4565b61152b6000610b04565b600a849055600b839055600c8290556040517f49f805c5fed16b2296163d4fd1958b1961efe39fef41cbb4b981aaa3d80d22d29061156e9086908690869061348b565b60405180910390a150505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b60095481565b6115ee612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff811615801590611682575060035473ffffffffffffffffffffffffffffffffffffffff828116911614155b6116b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061322e565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f4c0c07d0b548b824a1b998eb4d11fccf1cfbc1e47edcdb309970ba88315eb30390600090a250565b61172f612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611783576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff82166117d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613074565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600760205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016841515179055517fc551bbb22d0406dbfb8b6b7740cc521bcf44e1106029cf899c19b6a8e4c99d519061184f908490612cd3565b60405180910390a25050565b60085481565b611869612574565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146118bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190611912903090600401612c5b565b60206040518083038186803b15801561192a57600080fd5b505afa15801561193e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119629190612b23565b101561199a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613165565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133a2565b8015611a2e57611a2e6110f4565b8115611a4957600854611a419085612535565b600855611a5a565b600954611a569085612535565b6009555b60058054600180820183557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091556040805160a081018252600080825243602083019081529282018a8152606083018281528915156080850190815260048054808a018255945293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9389029384015593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d82015591517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790559154611bfb916124f3565b7f18caa0724a26384928efe604ae6ddc99c242548876259770fc88fcb7e719d8fa8685604051611c2c92919061347b565b60405180910390a350505050565b6000611c446129ce565b60048481548110611c5157fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301939093526002830154908201526003820154606082015260049091015460ff16151560808201529050611cab6129ff565b50600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845282529182902082516060808201855282548252600183015482850152600290920154938101939093528351908401519184015190919043118015611d1957508015155b15611d92576000611d378560200151436124f390919063ffffffff16565b90506000611d6b8660800151611d4f57600954611d53565b6008545b6107b988604001516107bf610ecb8b6080015161230c565b9050611d8d611d86846107b984670de0b6b3a7640000612456565b8590612535565b935050505b6000611db264e8d4a510006107b9611daa8a8c61051d565b875190612456565b6020850151909150611dda90611dd4670de0b6b3a76400006107b98588612456565b906124f3565b98975050505050505050565b64e8d4a5100081565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60026001541415611e48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b6002600155611e556129ce565b611e5e83610df0565b6000848152600660209081526040808320338452909152902060808201519192509080611e9a57503360009081526007602052604090205460ff165b611ed0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612f37565b6000611edc338661051d565b825490915015611ef157611ef1338683612379565b83156120ed57600060058681548110611f0657fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190611f65903090600401612c5b565b60206040518083038186803b158015611f7d57600080fd5b505afa158015611f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb59190612b23565b9050611ff433308760058a81548110611fca57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16929190612738565b6120b4816005888154811061200557fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190612064903090600401612c5b565b60206040518083038186803b15801561207c57600080fd5b505afa158015612090573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd49190612b23565b83549095506120c39086612535565b83556120e66120db64e8d4a510006107b98886612456565b606086015190612535565b6060850152505b612121670de0b6b3a76400006107b985600001516107bf64e8d4a510006107b987896000015461245690919063ffffffff16565b8260010181905550826004868154811061213757fe5b6000918252602091829020835160059290920201908155908201516001820155604080830151600283015560608301516003830155608090920151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905551859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590610ddd908890613472565b6121de612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614612232576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff811661227f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612e46565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081156123415761233a64e8d4a510006107b9600b54671314fb370629800061245690919063ffffffff16565b9050610fc1565b61056d64e8d4a510006107b9600c54671314fb370629800061245690919063ffffffff16565b600b5481565b671314fb370629800081565b6123816129ff565b50600082815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320815160608101835281548082526001830154948201949094526002909101549181019190915291906123ee9064e8d4a51000906107b99086612456565b90506000612426670de0b6b3a76400006107b96004888154811061240e57fe5b60009182526020909120600590910201548590612456565b905060006124418460200151836124f390919063ffffffff16565b905061244d8782612578565b50505050505050565b6000826124655750600061056d565b8282028284828161247257fe5b0414610567576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906130d1565b60006124ec83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061275f565b9392505050565b60006124ec83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127b0565b600082820183811015610567576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612ea3565b3390565b8015611184576040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906125f3903090600401612c5b565b60206040518083038186803b15801561260b57600080fd5b505afa15801561261f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126439190612b23565b905081811015612651578091505b61269273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168484612697565b505050565b6126928363a9059cbb60e01b84846040516024016126b6929190612cad565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526127f6565b612759846323b872dd60e01b8585856040516024016126b693929190612c7c565b50505050565b6000818361279a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89190612cde565b5060008385816127a657fe5b0495945050505050565b600081848411156127ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89190612cde565b505050900390565b6060612858826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166128ac9092919063ffffffff16565b80519091501561269257808060200190518101906128769190612aef565b612692576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612de9565b60606128bb84846000856128c3565b949350505050565b60606128ce856129c8565b612904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061328b565b600060608673ffffffffffffffffffffffffffffffffffffffff16858760405161292e9190612c3f565b60006040518083038185875af1925050503d806000811461296b576040519150601f19603f3d011682016040523d82523d6000602084013e612970565b606091505b509150915081156129845791506128bb9050565b8051156129945780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89190612cde565b3b151590565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b60405180606001604052806000815260200160008152602001600081525090565b600060208284031215612a31578081fd5b8135610567816134f2565b60008060408385031215612a4e578081fd5b8235612a59816134f2565b91506020830135612a6981613517565b809150509250929050565b60008060408385031215612a86578182fd5b8235612a91816134f2565b946020939093013593505050565b600080600060608486031215612ab3578081fd5b8335612abe816134f2565b95602085013595506040909401359392505050565b600060208284031215612ae4578081fd5b813561056781613517565b600060208284031215612b00578081fd5b815161056781613517565b600060208284031215612b1c578081fd5b5035919050565b600060208284031215612b34578081fd5b5051919050565b60008060408385031215612b4d578182fd5b823591506020830135612a69816134f2565b60008060008060808587031215612b74578081fd5b843593506020850135612b86816134f2565b92506040850135612b9681613517565b91506060850135612ba681613517565b939692955090935050565b60008060408385031215612bc3578182fd5b50508035926020909101359150565b600080600060608486031215612be6578283fd5b83359250602084013591506040840135612bff81613517565b809150509250925092565b60008060008060808587031215612c1f578384fd5b8435935060208501359250604085013591506060850135612ba681613517565b60008251612c518184602087016134c6565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152612cfd8160408501602087016134c6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252602a908201527f536861646f774368656656323a20496e76616c6964206e657720626f6f73742060408201527f6d756c7469706c69657200000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f536861646f774368656656323a2054686520757365722061646472657373206d60408201527f7573742062652076616c69640000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252602e908201527f536861646f774368656656323a204275726e2061646d696e206164647265737360408201527f206d7573742062652076616c6964000000000000000000000000000000000000606082015260800190565b60208082526042908201527f536861646f774368656656323a205468652061646472657373206973206e6f7460408201527f20617661696c61626c6520746f206465706f73697420696e207468697320706f60608201527f6f6c000000000000000000000000000000000000000000000000000000000000608082015260a00190565b6020808252602e908201527f536861646f774368656656323a20534844572072617465206d7573742062652060408201527f67726561746572207468616e2030000000000000000000000000000000000000606082015260800190565b60208082526025908201527f536861646f774368656656323a20546f74616c2072617465206d75737420626560408201527f2031653132000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f536861646f774368656656323a20546865207768697465206c6973742061646460408201527f72657373206d7573742062652076616c69640000000000000000000000000000606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f77697468647261773a20496e73756666696369656e7400000000000000000000604082015260600190565b60208082526011908201527f4e6f6e6520424550323020746f6b656e73000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f737460408201527f20636f6e74726163740000000000000000000000000000000000000000000000606082015260800190565b60208082526036908201527f536861646f774368656656323a204e657720626f6f737420636f6e747261637460408201527f2061646472657373206d7573742062652076616c696400000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526041908201527f536861646f774368656656323a204275726e2061646d696e206164647265737360408201527f206973207468652073616d6520776974682063757272656e742061646472657360608201527f7300000000000000000000000000000000000000000000000000000000000000608082015260a00190565b60208082526030908201527f536861646f774368656656323a204f6e6c7920726567756c6172206661726d2060408201527f636f756c6420626520626f6f7374656400000000000000000000000000000000606082015260800190565b60208082526027908201527f5348445720746f6b656e2063616e277420626520616464656420746f2066617260408201527f6d20706f6f6c7300000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060a0820190508251825260208301516020830152604083015160408301526060830151606083015260808301511515608083015292915050565b90815260200190565b9182521515602082015260400190565b9283526020830191909152604082015260600190565b9485526020850193909352604084019190915260608301521515608082015260a00190565b60005b838110156134e15781810151838201526020016134c9565b838111156127595750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461351457600080fd5b50565b801515811461351457600080fdfea26469706673582212208258375ac1461dc0f29a035a916da3fbd5d3fac1fe1c167088369b432b73787f64736f6c634300060c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH5 0xBA43B7400 PUSH1 0xA SSTORE PUSH5 0x3A35294400 PUSH1 0xB SSTORE PUSH5 0xA2FB405800 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x36C4 CODESIZE SUB DUP1 PUSH3 0x36C4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4F SWAP2 PUSH3 0xE5 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B PUSH3 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x13C JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xF8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x105 DUP2 PUSH3 0x123 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x118 DUP2 PUSH3 0x123 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x355B PUSH3 0x169 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x575 MSTORE DUP1 PUSH2 0x199C MSTORE DUP1 PUSH2 0x25BE MSTORE DUP1 PUSH2 0x266B MSTORE POP PUSH2 0x355B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78DB4C34 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0xC507AEAA GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF474309E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF474309E EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF5A26F40 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xF5B91CD3 EQ PUSH2 0x515 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E7 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xCC6DB2DA GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xCC6DB2DA EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xD2CE6AE8 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x4CC JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xC507AEAA EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xC799B59D EQ PUSH2 0x4B1 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x93F1A40B GT PUSH2 0x12F JUMPI DUP1 PUSH4 0x9DD2FCC3 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x9DD2FCC3 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xAC1D0609 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xC40D337B EQ PUSH2 0x496 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x99D7E84A EQ PUSH2 0x468 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x815D087F GT PUSH2 0x160 JUMPI DUP1 PUSH4 0x815D087F EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x81BDF98C EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43E JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x78DB4C34 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x78ED5D1F EQ PUSH2 0x410 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 GT PUSH2 0x229 JUMPI DUP1 PUSH4 0x64482F79 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x69B02128 GT PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x69B02128 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x6FDA08C3 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x400 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x6661100F EQ PUSH2 0x3E8 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x3CD JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x387 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xBB844BC GT PUSH2 0x280 JUMPI DUP1 PUSH4 0x16E80F4D GT PUSH2 0x265 JUMPI DUP1 PUSH4 0x16E80F4D EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x19F95E2E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x36183ED6 EQ PUSH2 0x354 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xBB844BC EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x320 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x33186E8 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x3DCFF74 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x41A84C9 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x305 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2A9F JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x303 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH2 0x333 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34A1 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x3AD PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD2 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x303 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x141A JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A3C JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x303 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x303 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x303 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x230C JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x567 JUMPI PUSH5 0xE8D4A51000 PUSH2 0x569 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x68D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3345 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI POP PUSH6 0x1D1A94A2000 DUP2 GT ISZERO JUMPDEST PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x733 PUSH2 0x29CE JUMP JUMPDEST PUSH2 0x73C DUP4 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x778 DUP7 DUP7 PUSH2 0x51D JUMP JUMPDEST SWAP1 POP PUSH2 0x785 DUP7 DUP7 DUP4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x7C5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x7BF PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP11 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x24AA JUMP JUMPDEST SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP2 SLOAD PUSH2 0x811 SWAP1 PUSH2 0x7E5 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 DUP9 PUSH2 0x2456 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x80B SWAP1 PUSH2 0x800 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 DUP8 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD SWAP1 PUSH2 0x24F3 JUMP JUMPDEST SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x827 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 SWAP1 SWAP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP1 DUP6 MSTORE SWAP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA SWAP1 PUSH2 0x8FB SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP10 SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x91D PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x32C2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xD146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA97 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH1 0xA SLOAD PUSH8 0x1314FB3706298000 PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0C PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6E PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH1 0xD SLOAD NUMBER PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB9B PUSH2 0xB94 PUSH2 0xAD7 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0xBC1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x2578 JUMP JUMPDEST POP POP NUMBER PUSH1 0xD SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xC29 PUSH2 0x29CE JUMP JUMPDEST PUSH2 0xC32 DUP4 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP4 GT ISZERO PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC96 CALLER DUP7 PUSH2 0x51D JUMP JUMPDEST SWAP1 POP PUSH2 0xCA3 CALLER DUP7 DUP4 PUSH2 0x2379 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xCF8 JUMPI DUP2 SLOAD PUSH2 0xCB5 SWAP1 DUP6 PUSH2 0x24F3 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xCF8 CALLER DUP6 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xCCF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0xD2C PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x7BF PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xD74 PUSH2 0xD47 PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP8 DUP6 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xD54 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDF8 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE05 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP NUMBER GT ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0xE77 JUMPI PUSH1 0x9 SLOAD PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xE8D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xEFA JUMPI PUSH1 0x0 PUSH2 0xEAB DUP5 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xED2 DUP4 PUSH2 0x7B9 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x7BF PUSH2 0xECB DUP11 PUSH1 0x80 ADD MLOAD PUSH2 0x230C JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH2 0xEF5 PUSH2 0xEED DUP6 PUSH2 0x7B9 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2456 JUMP JUMPDEST DUP7 MLOAD SWAP1 PUSH2 0x2535 JUMP JUMPDEST DUP6 MSTORE POP POP JUMPDEST NUMBER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xF11 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 ADD MLOAD DUP5 MLOAD SWAP2 MLOAD DUP7 SWAP3 PUSH32 0x3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46 SWAP3 PUSH2 0xFB6 SWAP3 SWAP1 SWAP2 DUP8 SWAP2 PUSH2 0x348B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x101A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD SWAP5 POP SWAP3 SWAP1 PUSH2 0x1070 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 PUSH2 0x1069 SWAP1 DUP10 PUSH2 0x51D JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x3 ADD SLOAD GT PUSH2 0x1084 JUMPI PUSH1 0x0 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x1093 SWAP1 DUP3 PUSH2 0x24F3 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10AD CALLER DUP4 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xCCF JUMPI INVALID JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1184 JUMPI PUSH2 0x110A PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1117 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP ISZERO PUSH2 0x117B JUMPI PUSH2 0x1179 DUP3 PUSH2 0xDF0 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1190 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH2 0x11ED DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11FC PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1209 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1264 JUMPI PUSH2 0x125C DUP3 PUSH2 0x80B PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1239 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x129F JUMP JUMPDEST PUSH2 0x129B DUP3 PUSH2 0x80B PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1278 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12AD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0xC0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH6 0x1D1A94A2000 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x131D PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13F3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1422 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x1486 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1492 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2FBA JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x14DC DUP4 PUSH2 0x80B DUP8 DUP8 PUSH2 0x2535 JUMP JUMPDEST EQ PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3017 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1521 JUMPI PUSH2 0x1521 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x152B PUSH1 0x0 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x49F805C5FED16B2296163D4FD1958B1961EFE39FEF41CBB4B981AAA3D80D22D2 SWAP1 PUSH2 0x156E SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15EE PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1682 JUMPI POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x322E JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x172F PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x17D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xC551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51 SWAP1 PUSH2 0x184F SWAP1 DUP5 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1869 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x18BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1912 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x193E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1962 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST LT ISZERO PUSH2 0x199A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A2E JUMPI PUSH2 0x1A2E PUSH2 0x10F4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x8 SLOAD PUSH2 0x1A41 SWAP1 DUP6 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1A56 SWAP1 DUP6 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE NUMBER PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP3 DUP2 MSTORE DUP10 ISZERO ISZERO PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 SLOAD DUP1 DUP11 ADD DUP3 SSTORE SWAP5 MSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 DUP10 MUL SWAP4 DUP5 ADD SSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19D DUP3 ADD SSTORE SWAP2 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19E DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19F SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 SLOAD PUSH2 0x1BFB SWAP2 PUSH2 0x24F3 JUMP JUMPDEST PUSH32 0x18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C2C SWAP3 SWAP2 SWAP1 PUSH2 0x347B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C44 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C51 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x1CAB PUSH2 0x29FF JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 MLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD SWAP1 SWAP2 SWAP1 NUMBER GT DUP1 ISZERO PUSH2 0x1D19 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1D92 JUMPI PUSH1 0x0 PUSH2 0x1D37 DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D6B DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0x1D4F JUMPI PUSH1 0x9 SLOAD PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH2 0x7B9 DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x7BF PUSH2 0xECB DUP12 PUSH1 0x80 ADD MLOAD PUSH2 0x230C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D8D PUSH2 0x1D86 DUP5 PUSH2 0x7B9 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2456 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH2 0x1DAA DUP11 DUP13 PUSH2 0x51D JUMP JUMPDEST DUP8 MLOAD SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1DDA SWAP1 PUSH2 0x1DD4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 DUP9 PUSH2 0x2456 JUMP JUMPDEST SWAP1 PUSH2 0x24F3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1E48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1E55 PUSH2 0x29CE JUMP JUMPDEST PUSH2 0x1E5E DUP4 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x80 DUP3 ADD MLOAD SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0x1E9A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1ED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2F37 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC CALLER DUP7 PUSH2 0x51D JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1EF1 JUMPI PUSH2 0x1EF1 CALLER DUP7 DUP4 PUSH2 0x2379 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x20ED JUMPI PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F06 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1F65 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB5 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FF4 CALLER ADDRESS DUP8 PUSH1 0x5 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x1FCA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 SWAP1 PUSH2 0x2738 JUMP JUMPDEST PUSH2 0x20B4 DUP2 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x2005 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2064 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2090 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD4 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP6 POP PUSH2 0x20C3 SWAP1 DUP7 PUSH2 0x2535 JUMP JUMPDEST DUP4 SSTORE PUSH2 0x20E6 PUSH2 0x20DB PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP9 DUP7 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP JUMPDEST PUSH2 0x2121 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x7BF PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2137 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0xDDD SWAP1 DUP9 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH2 0x21DE PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2232 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2E46 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2341 JUMPI PUSH2 0x233A PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH1 0xB SLOAD PUSH8 0x1314FB3706298000 PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x56D PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH1 0xC SLOAD PUSH8 0x1314FB3706298000 PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH8 0x1314FB3706298000 DUP2 JUMP JUMPDEST PUSH2 0x2381 PUSH2 0x29FF JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH2 0x23EE SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 DUP7 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2426 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x240E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP6 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2441 DUP5 PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x244D DUP8 DUP3 PUSH2 0x2578 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2465 JUMPI POP PUSH1 0x0 PUSH2 0x56D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2472 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x275F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x25F3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2643 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2651 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x2692 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP5 DUP5 PUSH2 0x2697 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2692 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x26B6 SWAP3 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x2759 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x26B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x279A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x27A6 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x27EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2858 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2692 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2876 SWAP2 SWAP1 PUSH2 0x2AEF JUMP JUMPDEST PUSH2 0x2692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28BB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x28C3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28CE DUP6 PUSH2 0x29C8 JUMP JUMPDEST PUSH2 0x2904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x328B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x292E SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x296B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2984 JUMPI SWAP2 POP PUSH2 0x28BB SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2994 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A31 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x567 DUP2 PUSH2 0x34F2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A4E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A59 DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2A69 DUP2 PUSH2 0x3517 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A86 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A91 DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AB3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2ABE DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AE4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x567 DUP2 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x567 DUP2 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B1C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B34 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B4D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2A69 DUP2 PUSH2 0x34F2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B74 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2B86 DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2B96 DUP2 PUSH2 0x3517 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2BA6 DUP2 PUSH2 0x3517 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BC3 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BE6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2BFF DUP2 PUSH2 0x3517 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C1F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2BA6 DUP2 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C51 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x34C6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2CFD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x34C6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20496E76616C6964206E657720626F6F737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C69657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A2054686520757365722061646472657373206D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7573742062652076616C69640000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206D7573742062652076616C6964000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x42 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A205468652061646472657373206973206E6F74 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20617661696C61626C6520746F206465706F73697420696E207468697320706F PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6F6C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20534844572072617465206D75737420626520 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20546F74616C2072617465206D757374206265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2031653132000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20546865207768697465206C69737420616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72657373206D7573742062652076616C69640000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20496E73756666696369656E7400000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F6E6520424550323020746F6B656E73000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20636F6E74726163740000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204E657720626F6F737420636F6E7472616374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2061646472657373206D7573742062652076616C696400000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206973207468652073616D6520776974682063757272656E7420616464726573 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204F6E6C7920726567756C6172206661726D20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x636F756C6420626520626F6F7374656400000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x5348445720746F6B656E2063616E277420626520616464656420746F20666172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D20706F6F6C7300000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34C9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2759 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3514 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PC CALLDATACOPY GAS 0xC1 CHAINID SAR 0xC0 CALLCODE SWAP11 SUB GAS SWAP2 PUSH14 0xA3FBD5D3FAC1FE1C167088369B43 0x2B PUSH20 0x787F64736F6C634300060C003300000000000000 ",
							"sourceMap": "271:21730:2:-:0;;;4140:11;4108:43;;4254:12;4215:51;;4365:12;4326:51;;5503:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;891:17:3;911:12;:10;:12::i;:::-;934:6;:18;;-1:-1:-1;;;;;;934:18:3;-1:-1:-1;;;;;934:18:3;;;;;;;968:43;;934:18;;-1:-1:-1;934:18:3;968:43;;934:6;;968:43;-1:-1:-1;1660:1:5;1781:22;;5592:12:2;;;;;-1:-1:-1;;;;;;5592:12:2;;;5615:9;:22;;-1:-1:-1;;;;;;5615:22:2;-1:-1:-1;;;;;5615:22:2;;;;;;;;;271:21730;;605:106:0;693:10;605:106;:::o;317:429:-1:-;;;464:2;452:9;443:7;439:23;435:32;432:2;;;-1:-1;;470:12;432:2;245:6;239:13;257:48;299:5;257:48;:::i;:::-;648:2;698:22;;83:13;522:89;;-1:-1;101:33;83:13;101:33;:::i;:::-;656:74;;;;426:320;;;;;:::o;1092:117::-;-1:-1;;;;;1026:54;;1151:35;;1141:2;;1200:1;;1190:12;1141:2;1135:74;:::o;:::-;271:21730:2;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"274": [
									{
										"length": 32,
										"start": 1397
									},
									{
										"length": 32,
										"start": 6556
									},
									{
										"length": 32,
										"start": 9662
									},
									{
										"length": 32,
										"start": 9835
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102ad5760003560e01c806378db4c341161017b578063c507aeaa116100d8578063e2bbb1581161008c578063f474309e11610071578063f474309e146104fa578063f5a26f401461050d578063f5b91cd314610515576102ad565b8063e2bbb158146104d4578063f2fde38b146104e7576102ad565b8063cc6db2da116100bd578063cc6db2da146104c4578063d2ce6ae8146104c4578063dfcedeee146104cc576102ad565b8063c507aeaa1461049e578063c799b59d146104b1576102ad565b806393f1a40b1161012f5780639dd2fcc3116101145780639dd2fcc314610470578063ac1d060914610483578063c40d337b14610496576102ad565b806393f1a40b1461044657806399d7e84a14610468576102ad565b8063815d087f11610160578063815d087f1461042357806381bdf98c146104365780638da5cb5b1461043e576102ad565b806378db4c341461040857806378ed5d1f14610410576102ad565b8063372c12b11161022957806364482f79116101dd57806369b02128116101c257806369b02128146103f05780636fda08c3146103f8578063715018a614610400576102ad565b806364482f79146103d55780636661100f146103e8576102ad565b806351eb05a61161020e57806351eb05a61461039a5780635312ea8e146103ba578063630b5ba1146103cd576102ad565b8063372c12b114610367578063441a3e7014610387576102ad565b80630bb844bc1161028057806316e80f4d1161026557806316e80f4d1461034457806319f95e2e1461034c57806336183ed614610354576102ad565b80630bb844bc1461030d5780631526fe2714610320576102ad565b8063033186e8146102b257806303dcff74146102db578063041a84c9146102f0578063081e3eda14610305575b600080fd5b6102c56102c0366004612a74565b61051d565b6040516102d29190613472565b60405180910390f35b6102e3610573565b6040516102d29190612c5b565b6103036102fe366004612a9f565b610597565b005b6102c561090f565b61030361031b366004612a20565b610915565b61033361032e366004612b0b565b610a8a565b6040516102d29594939291906134a1565b6102c5610acb565b6102c5610ad7565b610303610362366004612ad3565b610b04565b61037a610375366004612a20565b610bca565b6040516102d29190612cd3565b610303610395366004612bb1565b610bdf565b6103ad6103a8366004612b0b565b610df0565b6040516102d29190613436565b6103036103c8366004612b0b565b610fc6565b6103036110f4565b6103036103e3366004612bd2565b611188565b6102c56112ff565b6102c5611305565b6102c561130f565b610303611315565b6102c56113e0565b6102e361041e366004612b0b565b6113e6565b610303610431366004612c0a565b61141a565b6102e361157c565b6102e3611598565b610459610454366004612b3b565b6115b4565b6040516102d29392919061348b565b6102c56115e0565b61030361047e366004612a20565b6115e6565b610303610491366004612a3c565b611727565b6102c561185b565b6103036104ac366004612b5f565b611861565b6102c56104bf366004612b3b565b611c3a565b6102c5611de6565b6102e3611def565b6103036104e2366004612bb1565b611e0b565b6103036104f5366004612a20565b6121d6565b6102c5610508366004612ad3565b61230c565b6102c5612367565b6102c561236d565b600081815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281206002015464e8d4a5100081116105675764e8d4a51000610569565b805b9150505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035473ffffffffffffffffffffffffffffffffffffffff1633146105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906131d1565b60405180910390fd5b6002600154141561062e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b600260015573ffffffffffffffffffffffffffffffffffffffff8316610680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612d8c565b6004828154811061068d57fe5b600091825260209091206004600590920201015460ff166106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613345565b64e8d4a5100081101580156106f557506501d1a94a20008111155b61072b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612d2f565b6107336129ce565b61073c83610df0565b600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091528120919250610778868661051d565b9050610785868683612379565b6107c5670de0b6b3a76400006107b985600001516107bf64e8d4a510006107b98a896000015461245690919063ffffffff16565b906124aa565b90612456565b60018301558154610811906107e59064e8d4a51000906107b99088612456565b835461080b906108009064e8d4a51000906107b99087612456565b6060870151906124f3565b90612535565b6060840152600480548491908790811061082757fe5b6000918252602080832084516005939093020191825583810151600183015560408085015160028085019190915560608601516003850155608090950151600490930180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016931515939093179092558883526006815281832073ffffffffffffffffffffffffffffffffffffffff8b1680855291529181902090920186905590517f01abd62439b64f6c5dab6f94d56099495bd0c094f9c21f98f4d3562a21edb4ba906108fb9088908590899061348b565b60405180910390a250506001805550505050565b60045490565b61091d612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610971576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff81166109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612eda565b60025473ffffffffffffffffffffffffffffffffffffffff82811691161415610a13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906132c2565b6002805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907fd146fe330fdddf682413850a35b28edfccd4c4b53cfee802fd24950de5be1dbe90600090a35050565b60048181548110610a9757fe5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294509092909160ff1685565b670de0b6b3a764000081565b6000610aff64e8d4a510006107b9600a54671314fb370629800061245690919063ffffffff16565b905090565b610b0c612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610b60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b8015610b6e57610b6e6110f4565b6000610b85600d54436124f390919063ffffffff16565b90506000610b9b610b94610ad7565b8390612456565b600254909150610bc19073ffffffffffffffffffffffffffffffffffffffff1682612578565b505043600d5550565b60076020526000908152604090205460ff1681565b60026001541415610c1c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b6002600155610c296129ce565b610c3283610df0565b60008481526006602090815260408083203384529091529020805491925090831115610c8a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061312e565b6000610c96338661051d565b9050610ca3338683612379565b8315610cf8578154610cb590856124f3565b8260000181905550610cf8338560058881548110610ccf57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169190612697565b610d2c670de0b6b3a76400006107b985600001516107bf64e8d4a510006107b987896000015461245690919063ffffffff16565b6001830155610d74610d4764e8d4a510006107b98785612456565b60048781548110610d5457fe5b9060005260206000209060050201600301546124f390919063ffffffff16565b60048681548110610d8157fe5b906000526020600020906005020160030181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610ddd9190613472565b60405180910390a3505060018055505050565b610df86129ce565b60048281548110610e0557fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301849052600281015491830191909152600381015460608301526004015460ff16151560808201529150431115610fc15760608101516080820151600090610e7757600954610e7b565b6008545b9050600082118015610e8d5750600081115b15610efa576000610eab8460200151436124f390919063ffffffff16565b90506000610ed2836107b987604001516107bf610ecb8a6080015161230c565b8790612456565b9050610ef5610eed856107b984670de0b6b3a7640000612456565b865190612535565b855250505b4360208401526004805484919086908110610f1157fe5b6000918252602091829020835160059290920201908155828201516001820155604080840151600283015560608401516003830155608090930151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558401518451915186927f3be3541fc42237d611b30329040bfa4569541d156560acdbbae57640d20b8f4692610fb6929091879161348b565b60405180910390a250505b919050565b60026001541415611003576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b600260018190555060006004828154811061101a57fe5b6000918252602080832085845260068252604080852033808752935284208054858255600182018690556005909402909101945092906110709064e8d4a51000906107b990611069908961051d565b8590612456565b905080846003015411611084576000611093565b600384015461109390826124f3565b84600301819055506110ad338360058881548110610ccf57fe5b843373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059584604051610ddd9190613472565b60045460005b818110156111845761110a6129ce565b6004828154811061111757fe5b60009182526020918290206040805160a08101825260059093029091018054835260018101549383019390935260028301549082018190526003830154606083015260049092015460ff161515608082015291501561117b5761117982610df0565b505b506001016110fa565b5050565b611190612574565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146111e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6111ed83610df0565b5080156111fc576111fc6110f4565b6004838154811061120957fe5b600091825260209091206004600590920201015460ff16156112645761125c8261080b6004868154811061123957fe5b9060005260206000209060050201600201546008546124f390919063ffffffff16565b60085561129f565b61129b8261080b6004868154811061127857fe5b9060005260206000209060050201600201546009546124f390919063ffffffff16565b6009555b81600484815481106112ad57fe5b906000526020600020906005020160020181905550827fc0cfd54d2de2b55f1e6e108d3ec53ff0a1abe6055401d32c61e9433b747ef9f8836040516112f29190613472565b60405180910390a2505050565b600a5481565b6501d1a94a200081565b600c5481565b61131d612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611371576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600d5481565b600581815481106113f357fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b611422612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611476576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6000841180156114865750600083115b80156114925750600082115b6114c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612fba565b64e8d4a510006114dc8361080b8787612535565b14611513576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613017565b8015611521576115216110f4565b61152b6000610b04565b600a849055600b839055600c8290556040517f49f805c5fed16b2296163d4fd1958b1961efe39fef41cbb4b981aaa3d80d22d29061156e9086908690869061348b565b60405180910390a150505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b60095481565b6115ee612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff811615801590611682575060035473ffffffffffffffffffffffffffffffffffffffff828116911614155b6116b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061322e565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f4c0c07d0b548b824a1b998eb4d11fccf1cfbc1e47edcdb309970ba88315eb30390600090a250565b61172f612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611783576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff82166117d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613074565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600760205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016841515179055517fc551bbb22d0406dbfb8b6b7740cc521bcf44e1106029cf899c19b6a8e4c99d519061184f908490612cd3565b60405180910390a25050565b60085481565b611869612574565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146118bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190611912903090600401612c5b565b60206040518083038186803b15801561192a57600080fd5b505afa15801561193e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119629190612b23565b101561199a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890613165565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133a2565b8015611a2e57611a2e6110f4565b8115611a4957600854611a419085612535565b600855611a5a565b600954611a569085612535565b6009555b60058054600180820183557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091556040805160a081018252600080825243602083019081529282018a8152606083018281528915156080850190815260048054808a018255945293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9389029384015593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d82015591517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790559154611bfb916124f3565b7f18caa0724a26384928efe604ae6ddc99c242548876259770fc88fcb7e719d8fa8685604051611c2c92919061347b565b60405180910390a350505050565b6000611c446129ce565b60048481548110611c5157fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301939093526002830154908201526003820154606082015260049091015460ff16151560808201529050611cab6129ff565b50600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845282529182902082516060808201855282548252600183015482850152600290920154938101939093528351908401519184015190919043118015611d1957508015155b15611d92576000611d378560200151436124f390919063ffffffff16565b90506000611d6b8660800151611d4f57600954611d53565b6008545b6107b988604001516107bf610ecb8b6080015161230c565b9050611d8d611d86846107b984670de0b6b3a7640000612456565b8590612535565b935050505b6000611db264e8d4a510006107b9611daa8a8c61051d565b875190612456565b6020850151909150611dda90611dd4670de0b6b3a76400006107b98588612456565b906124f3565b98975050505050505050565b64e8d4a5100081565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60026001541415611e48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906133ff565b6002600155611e556129ce565b611e5e83610df0565b6000848152600660209081526040808320338452909152902060808201519192509080611e9a57503360009081526007602052604090205460ff165b611ed0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612f37565b6000611edc338661051d565b825490915015611ef157611ef1338683612379565b83156120ed57600060058681548110611f0657fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190611f65903090600401612c5b565b60206040518083038186803b158015611f7d57600080fd5b505afa158015611f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb59190612b23565b9050611ff433308760058a81548110611fca57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16929190612738565b6120b4816005888154811061200557fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190612064903090600401612c5b565b60206040518083038186803b15801561207c57600080fd5b505afa158015612090573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd49190612b23565b83549095506120c39086612535565b83556120e66120db64e8d4a510006107b98886612456565b606086015190612535565b6060850152505b612121670de0b6b3a76400006107b985600001516107bf64e8d4a510006107b987896000015461245690919063ffffffff16565b8260010181905550826004868154811061213757fe5b6000918252602091829020835160059290920201908155908201516001820155604080830151600283015560608301516003830155608090920151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905551859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590610ddd908890613472565b6121de612574565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614612232576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061319c565b73ffffffffffffffffffffffffffffffffffffffff811661227f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612e46565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081156123415761233a64e8d4a510006107b9600b54671314fb370629800061245690919063ffffffff16565b9050610fc1565b61056d64e8d4a510006107b9600c54671314fb370629800061245690919063ffffffff16565b600b5481565b671314fb370629800081565b6123816129ff565b50600082815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320815160608101835281548082526001830154948201949094526002909101549181019190915291906123ee9064e8d4a51000906107b99086612456565b90506000612426670de0b6b3a76400006107b96004888154811061240e57fe5b60009182526020909120600590910201548590612456565b905060006124418460200151836124f390919063ffffffff16565b905061244d8782612578565b50505050505050565b6000826124655750600061056d565b8282028284828161247257fe5b0414610567576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906130d1565b60006124ec83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061275f565b9392505050565b60006124ec83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127b0565b600082820183811015610567576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612ea3565b3390565b8015611184576040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906125f3903090600401612c5b565b60206040518083038186803b15801561260b57600080fd5b505afa15801561261f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126439190612b23565b905081811015612651578091505b61269273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168484612697565b505050565b6126928363a9059cbb60e01b84846040516024016126b6929190612cad565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526127f6565b612759846323b872dd60e01b8585856040516024016126b693929190612c7c565b50505050565b6000818361279a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89190612cde565b5060008385816127a657fe5b0495945050505050565b600081848411156127ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89190612cde565b505050900390565b6060612858826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166128ac9092919063ffffffff16565b80519091501561269257808060200190518101906128769190612aef565b612692576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890612de9565b60606128bb84846000856128c3565b949350505050565b60606128ce856129c8565b612904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061328b565b600060608673ffffffffffffffffffffffffffffffffffffffff16858760405161292e9190612c3f565b60006040518083038185875af1925050503d806000811461296b576040519150601f19603f3d011682016040523d82523d6000602084013e612970565b606091505b509150915081156129845791506128bb9050565b8051156129945780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89190612cde565b3b151590565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b60405180606001604052806000815260200160008152602001600081525090565b600060208284031215612a31578081fd5b8135610567816134f2565b60008060408385031215612a4e578081fd5b8235612a59816134f2565b91506020830135612a6981613517565b809150509250929050565b60008060408385031215612a86578182fd5b8235612a91816134f2565b946020939093013593505050565b600080600060608486031215612ab3578081fd5b8335612abe816134f2565b95602085013595506040909401359392505050565b600060208284031215612ae4578081fd5b813561056781613517565b600060208284031215612b00578081fd5b815161056781613517565b600060208284031215612b1c578081fd5b5035919050565b600060208284031215612b34578081fd5b5051919050565b60008060408385031215612b4d578182fd5b823591506020830135612a69816134f2565b60008060008060808587031215612b74578081fd5b843593506020850135612b86816134f2565b92506040850135612b9681613517565b91506060850135612ba681613517565b939692955090935050565b60008060408385031215612bc3578182fd5b50508035926020909101359150565b600080600060608486031215612be6578283fd5b83359250602084013591506040840135612bff81613517565b809150509250925092565b60008060008060808587031215612c1f578384fd5b8435935060208501359250604085013591506060850135612ba681613517565b60008251612c518184602087016134c6565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152612cfd8160408501602087016134c6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252602a908201527f536861646f774368656656323a20496e76616c6964206e657720626f6f73742060408201527f6d756c7469706c69657200000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f536861646f774368656656323a2054686520757365722061646472657373206d60408201527f7573742062652076616c69640000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252602e908201527f536861646f774368656656323a204275726e2061646d696e206164647265737360408201527f206d7573742062652076616c6964000000000000000000000000000000000000606082015260800190565b60208082526042908201527f536861646f774368656656323a205468652061646472657373206973206e6f7460408201527f20617661696c61626c6520746f206465706f73697420696e207468697320706f60608201527f6f6c000000000000000000000000000000000000000000000000000000000000608082015260a00190565b6020808252602e908201527f536861646f774368656656323a20534844572072617465206d7573742062652060408201527f67726561746572207468616e2030000000000000000000000000000000000000606082015260800190565b60208082526025908201527f536861646f774368656656323a20546f74616c2072617465206d75737420626560408201527f2031653132000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f536861646f774368656656323a20546865207768697465206c6973742061646460408201527f72657373206d7573742062652076616c69640000000000000000000000000000606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f77697468647261773a20496e73756666696369656e7400000000000000000000604082015260600190565b60208082526011908201527f4e6f6e6520424550323020746f6b656e73000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f737460408201527f20636f6e74726163740000000000000000000000000000000000000000000000606082015260800190565b60208082526036908201527f536861646f774368656656323a204e657720626f6f737420636f6e747261637460408201527f2061646472657373206d7573742062652076616c696400000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526041908201527f536861646f774368656656323a204275726e2061646d696e206164647265737360408201527f206973207468652073616d6520776974682063757272656e742061646472657360608201527f7300000000000000000000000000000000000000000000000000000000000000608082015260a00190565b60208082526030908201527f536861646f774368656656323a204f6e6c7920726567756c6172206661726d2060408201527f636f756c6420626520626f6f7374656400000000000000000000000000000000606082015260800190565b60208082526027908201527f5348445720746f6b656e2063616e277420626520616464656420746f2066617260408201527f6d20706f6f6c7300000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060a0820190508251825260208301516020830152604083015160408301526060830151606083015260808301511515608083015292915050565b90815260200190565b9182521515602082015260400190565b9283526020830191909152604082015260600190565b9485526020850193909352604084019190915260608301521515608082015260a00190565b60005b838110156134e15781810151838201526020016134c9565b838111156127595750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461351457600080fd5b50565b801515811461351457600080fdfea26469706673582212208258375ac1461dc0f29a035a916da3fbd5d3fac1fe1c167088369b432b73787f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78DB4C34 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0xC507AEAA GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF474309E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF474309E EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF5A26F40 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xF5B91CD3 EQ PUSH2 0x515 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E7 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xCC6DB2DA GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xCC6DB2DA EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xD2CE6AE8 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x4CC JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xC507AEAA EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xC799B59D EQ PUSH2 0x4B1 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x93F1A40B GT PUSH2 0x12F JUMPI DUP1 PUSH4 0x9DD2FCC3 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x9DD2FCC3 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xAC1D0609 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xC40D337B EQ PUSH2 0x496 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x99D7E84A EQ PUSH2 0x468 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x815D087F GT PUSH2 0x160 JUMPI DUP1 PUSH4 0x815D087F EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x81BDF98C EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43E JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x78DB4C34 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x78ED5D1F EQ PUSH2 0x410 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 GT PUSH2 0x229 JUMPI DUP1 PUSH4 0x64482F79 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x69B02128 GT PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x69B02128 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x6FDA08C3 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x400 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x6661100F EQ PUSH2 0x3E8 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x3CD JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x387 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xBB844BC GT PUSH2 0x280 JUMPI DUP1 PUSH4 0x16E80F4D GT PUSH2 0x265 JUMPI DUP1 PUSH4 0x16E80F4D EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x19F95E2E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x36183ED6 EQ PUSH2 0x354 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xBB844BC EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x320 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x33186E8 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x3DCFF74 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x41A84C9 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x305 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2A9F JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x303 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH2 0x333 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34A1 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x3AD PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD2 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x303 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x141A JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A3C JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x303 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x303 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x303 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x230C JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x567 JUMPI PUSH5 0xE8D4A51000 PUSH2 0x569 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x68D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3345 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI POP PUSH6 0x1D1A94A2000 DUP2 GT ISZERO JUMPDEST PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x733 PUSH2 0x29CE JUMP JUMPDEST PUSH2 0x73C DUP4 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x778 DUP7 DUP7 PUSH2 0x51D JUMP JUMPDEST SWAP1 POP PUSH2 0x785 DUP7 DUP7 DUP4 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x7C5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x7BF PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP11 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x24AA JUMP JUMPDEST SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP2 SLOAD PUSH2 0x811 SWAP1 PUSH2 0x7E5 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 DUP9 PUSH2 0x2456 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x80B SWAP1 PUSH2 0x800 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 DUP8 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD SWAP1 PUSH2 0x24F3 JUMP JUMPDEST SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x827 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 SWAP1 SWAP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP1 DUP6 MSTORE SWAP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA SWAP1 PUSH2 0x8FB SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP10 SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x91D PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x32C2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xD146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA97 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH1 0xA SLOAD PUSH8 0x1314FB3706298000 PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0C PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6E PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH1 0xD SLOAD NUMBER PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB9B PUSH2 0xB94 PUSH2 0xAD7 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0xBC1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x2578 JUMP JUMPDEST POP POP NUMBER PUSH1 0xD SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xC29 PUSH2 0x29CE JUMP JUMPDEST PUSH2 0xC32 DUP4 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP4 GT ISZERO PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC96 CALLER DUP7 PUSH2 0x51D JUMP JUMPDEST SWAP1 POP PUSH2 0xCA3 CALLER DUP7 DUP4 PUSH2 0x2379 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xCF8 JUMPI DUP2 SLOAD PUSH2 0xCB5 SWAP1 DUP6 PUSH2 0x24F3 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xCF8 CALLER DUP6 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xCCF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0xD2C PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x7BF PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xD74 PUSH2 0xD47 PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP8 DUP6 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xD54 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDF8 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE05 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP NUMBER GT ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0xE77 JUMPI PUSH1 0x9 SLOAD PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xE8D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xEFA JUMPI PUSH1 0x0 PUSH2 0xEAB DUP5 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xED2 DUP4 PUSH2 0x7B9 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x7BF PUSH2 0xECB DUP11 PUSH1 0x80 ADD MLOAD PUSH2 0x230C JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH2 0xEF5 PUSH2 0xEED DUP6 PUSH2 0x7B9 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2456 JUMP JUMPDEST DUP7 MLOAD SWAP1 PUSH2 0x2535 JUMP JUMPDEST DUP6 MSTORE POP POP JUMPDEST NUMBER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xF11 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 ADD MLOAD DUP5 MLOAD SWAP2 MLOAD DUP7 SWAP3 PUSH32 0x3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46 SWAP3 PUSH2 0xFB6 SWAP3 SWAP1 SWAP2 DUP8 SWAP2 PUSH2 0x348B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x101A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD SWAP5 POP SWAP3 SWAP1 PUSH2 0x1070 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 PUSH2 0x1069 SWAP1 DUP10 PUSH2 0x51D JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x3 ADD SLOAD GT PUSH2 0x1084 JUMPI PUSH1 0x0 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x1093 SWAP1 DUP3 PUSH2 0x24F3 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10AD CALLER DUP4 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xCCF JUMPI INVALID JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1184 JUMPI PUSH2 0x110A PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1117 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP ISZERO PUSH2 0x117B JUMPI PUSH2 0x1179 DUP3 PUSH2 0xDF0 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1190 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH2 0x11ED DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11FC PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1209 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1264 JUMPI PUSH2 0x125C DUP3 PUSH2 0x80B PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1239 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x129F JUMP JUMPDEST PUSH2 0x129B DUP3 PUSH2 0x80B PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1278 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12AD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0xC0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH6 0x1D1A94A2000 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x131D PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13F3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1422 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x1486 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1492 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2FBA JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x14DC DUP4 PUSH2 0x80B DUP8 DUP8 PUSH2 0x2535 JUMP JUMPDEST EQ PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3017 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1521 JUMPI PUSH2 0x1521 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x152B PUSH1 0x0 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x49F805C5FED16B2296163D4FD1958B1961EFE39FEF41CBB4B981AAA3D80D22D2 SWAP1 PUSH2 0x156E SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15EE PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1682 JUMPI POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x322E JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x172F PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x17D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3074 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xC551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51 SWAP1 PUSH2 0x184F SWAP1 DUP5 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1869 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x18BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1912 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x193E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1962 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST LT ISZERO PUSH2 0x199A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A2E JUMPI PUSH2 0x1A2E PUSH2 0x10F4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x8 SLOAD PUSH2 0x1A41 SWAP1 DUP6 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1A56 SWAP1 DUP6 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE NUMBER PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP3 DUP2 MSTORE DUP10 ISZERO ISZERO PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 SLOAD DUP1 DUP11 ADD DUP3 SSTORE SWAP5 MSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 DUP10 MUL SWAP4 DUP5 ADD SSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19D DUP3 ADD SSTORE SWAP2 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19E DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19F SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 SLOAD PUSH2 0x1BFB SWAP2 PUSH2 0x24F3 JUMP JUMPDEST PUSH32 0x18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C2C SWAP3 SWAP2 SWAP1 PUSH2 0x347B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C44 PUSH2 0x29CE JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C51 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x1CAB PUSH2 0x29FF JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 MLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD SWAP1 SWAP2 SWAP1 NUMBER GT DUP1 ISZERO PUSH2 0x1D19 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1D92 JUMPI PUSH1 0x0 PUSH2 0x1D37 DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D6B DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0x1D4F JUMPI PUSH1 0x9 SLOAD PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH2 0x7B9 DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x7BF PUSH2 0xECB DUP12 PUSH1 0x80 ADD MLOAD PUSH2 0x230C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D8D PUSH2 0x1D86 DUP5 PUSH2 0x7B9 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2456 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH2 0x1DAA DUP11 DUP13 PUSH2 0x51D JUMP JUMPDEST DUP8 MLOAD SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1DDA SWAP1 PUSH2 0x1DD4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 DUP9 PUSH2 0x2456 JUMP JUMPDEST SWAP1 PUSH2 0x24F3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1E48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1E55 PUSH2 0x29CE JUMP JUMPDEST PUSH2 0x1E5E DUP4 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x80 DUP3 ADD MLOAD SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0x1E9A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1ED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2F37 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC CALLER DUP7 PUSH2 0x51D JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1EF1 JUMPI PUSH2 0x1EF1 CALLER DUP7 DUP4 PUSH2 0x2379 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x20ED JUMPI PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F06 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1F65 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB5 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FF4 CALLER ADDRESS DUP8 PUSH1 0x5 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x1FCA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 SWAP1 PUSH2 0x2738 JUMP JUMPDEST PUSH2 0x20B4 DUP2 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x2005 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2064 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2090 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD4 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP6 POP PUSH2 0x20C3 SWAP1 DUP7 PUSH2 0x2535 JUMP JUMPDEST DUP4 SSTORE PUSH2 0x20E6 PUSH2 0x20DB PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP9 DUP7 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP JUMPDEST PUSH2 0x2121 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x7BF PUSH5 0xE8D4A51000 PUSH2 0x7B9 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2137 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0xDDD SWAP1 DUP9 SWAP1 PUSH2 0x3472 JUMP JUMPDEST PUSH2 0x21DE PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2232 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2E46 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2341 JUMPI PUSH2 0x233A PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH1 0xB SLOAD PUSH8 0x1314FB3706298000 PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x56D PUSH5 0xE8D4A51000 PUSH2 0x7B9 PUSH1 0xC SLOAD PUSH8 0x1314FB3706298000 PUSH2 0x2456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH8 0x1314FB3706298000 DUP2 JUMP JUMPDEST PUSH2 0x2381 PUSH2 0x29FF JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH2 0x23EE SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x7B9 SWAP1 DUP7 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2426 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B9 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x240E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP6 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2441 DUP5 PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x24F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x244D DUP8 DUP3 PUSH2 0x2578 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2465 JUMPI POP PUSH1 0x0 PUSH2 0x56D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2472 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x275F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x25F3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2643 SWAP2 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2651 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x2692 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP5 DUP5 PUSH2 0x2697 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2692 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x26B6 SWAP3 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x2759 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x26B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x279A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x27A6 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x27EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2858 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2692 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2876 SWAP2 SWAP1 PUSH2 0x2AEF JUMP JUMPDEST PUSH2 0x2692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28BB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x28C3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28CE DUP6 PUSH2 0x29C8 JUMP JUMPDEST PUSH2 0x2904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x328B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x292E SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x296B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2984 JUMPI SWAP2 POP PUSH2 0x28BB SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2994 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A31 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x567 DUP2 PUSH2 0x34F2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A4E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A59 DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2A69 DUP2 PUSH2 0x3517 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A86 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A91 DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AB3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2ABE DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AE4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x567 DUP2 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x567 DUP2 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B1C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B34 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B4D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2A69 DUP2 PUSH2 0x34F2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B74 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2B86 DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2B96 DUP2 PUSH2 0x3517 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2BA6 DUP2 PUSH2 0x3517 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BC3 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BE6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2BFF DUP2 PUSH2 0x3517 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C1F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2BA6 DUP2 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C51 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x34C6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2CFD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x34C6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20496E76616C6964206E657720626F6F737420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D756C7469706C69657200000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A2054686520757365722061646472657373206D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7573742062652076616C69640000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206D7573742062652076616C6964000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x42 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A205468652061646472657373206973206E6F74 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20617661696C61626C6520746F206465706F73697420696E207468697320706F PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6F6C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20534844572072617465206D75737420626520 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20546F74616C2072617465206D757374206265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2031653132000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A20546865207768697465206C69737420616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72657373206D7573742062652076616C69640000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20496E73756666696369656E7400000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F6E6520424550323020746F6B656E73000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20636F6E74726163740000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204E657720626F6F737420636F6E7472616374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2061646472657373206D7573742062652076616C696400000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206973207468652073616D6520776974682063757272656E7420616464726573 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x536861646F774368656656323A204F6E6C7920726567756C6172206661726D20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x636F756C6420626520626F6F7374656400000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x5348445720746F6B656E2063616E277420626520616464656420746F20666172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D20706F6F6C7300000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34C9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2759 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3514 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PC CALLDATACOPY GAS 0xC1 CHAINID SAR 0xC0 CALLCODE SWAP11 SUB GAS SWAP2 PUSH14 0xA3FBD5D3FAC1FE1C167088369B43 0x2B PUSH20 0x787F64736F6C634300060C003300000000000000 ",
							"sourceMap": "271:21730:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20450:241;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2464:28;;;:::i;:::-;;;;;;;:::i;19007:1296::-;;;;;;:::i;:::-;;:::i;:::-;;5930:100;;;:::i;17405:400::-;;;;;;:::i;:::-;;:::i;2732:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;3519:49::-;;;:::i;10850:171::-;;;:::i;15611:401::-;;;;;;:::i;:::-;;:::i;3051:41::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13736:904::-;;;;;;:::i;:::-;;:::i;11204:949::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14783:690::-;;;;;;:::i;:::-;;:::i;9967:291::-;;;:::i;7995:730::-;;;;;;:::i;:::-;;:::i;4108:43::-;;;:::i;3797:56::-;;;:::i;4326:51::-;;;:::i;1742:148:3:-;;;:::i;4386:30:2:-;;;:::i;2826:23::-;;;;;;:::i;:::-;;:::i;16397:902::-;;;;;;:::i;:::-;;:::i;2567:24::-;;;:::i;1100:79:3:-;;;:::i;2899:64:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3359:37::-;;;:::i;18408:367::-;;;;;;:::i;:::-;;:::i;17983:263::-;;;;;;:::i;:::-;;:::i;3208:37::-;;;:::i;6579:1110::-;;;;;;:::i;:::-;;:::i;8899:970::-;;;;;;:::i;:::-;;:::i;3647:52::-;;;:::i;2654:28::-;;;:::i;12318:1249::-;;;;;;:::i;:::-;;:::i;2045:244:3:-;;;;;;:::i;:::-;;:::i;10408:354:2:-;;;;;;:::i;:::-;;:::i;4215:51::-;;;:::i;3448:64::-;;;:::i;20450:241::-;20528:7;20569:14;;;:8;:14;;;;;;;;:21;;;;;;;;;;:37;;;3689:10;20624:28;;:59;;3689:10;20624:59;;;20655:10;20624:59;20617:66;;;20450:241;;;;;:::o;2464:28::-;;;:::o;19007:1296::-;5776:13;;:27;:13;5793:10;5776:27;5768:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1704:1:5::1;2310:7;;:19;;2302:63;;;;;;;;;;;;:::i;:::-;1704:1;2443:7;:18:::0;19184:19:2::2;::::0;::::2;19176:76;;;;;;;;;;;;:::i;:::-;19271:8;19280:4;19271:14;;;;;;;;;::::0;;;::::2;::::0;;;:24:::2;:14;::::0;;::::2;;:24;::::0;::::2;;19263:85;;;;;;;;;;;;:::i;:::-;3689:10;19381:14;:33;;:74;;;;;3843:10;19418:14;:37;;19381:74;19359:166;;;;;;;;;;;;:::i;:::-;19538:20;;:::i;:::-;19561:16;19572:4;19561:10;:16::i;:::-;19588:21;19612:14:::0;;;:8:::2;:14;::::0;;;;;;;:21:::2;::::0;::::2;::::0;;;;;;;19538:39;;-1:-1:-1;19671:31:2::2;19627:5:::0;19621:4;19671:18:::2;:31::i;:::-;19646:56;;19713:46;19731:5;19738:4;19744:14;19713:17;:46::i;:::-;19790:126;3564:4;19790:78;19847:4;:20;;;19790:52;3689:10;19790:31;19806:14;19790:4;:11;;;:15;;:31;;;;:::i;:::-;:35:::0;::::2;:52::i;:::-;:56:::0;::::2;:78::i;:126::-;19772:15;::::0;::::2;:144:::0;20051:11;;19952:162:::2;::::0;20051:52:::2;::::0;3689:10:::2;::::0;20051:31:::2;::::0;20067:14;20051:15:::2;:31::i;:52::-;19979:11:::0;;19952:80:::2;::::0;19979:52:::2;::::0;3689:10:::2;::::0;19979:31:::2;::::0;19995:14;19979:15:::2;:31::i;:52::-;19952:22;::::0;::::2;::::0;;:26:::2;:80::i;:::-;:84:::0;::::2;:162::i;:::-;19927:22;::::0;::::2;:187:::0;20125:8:::2;:14:::0;;19927:4;;20125:8;20134:4;;20125:14;::::2;;;;;;::::0;;;::::2;::::0;;;:21;;:14:::2;::::0;;;::::2;;:21:::0;;;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;;::::0;;;::::2;::::0;;;20157:14;;;:8:::2;:14:::0;;;;;:21:::2;::::0;::::2;::::0;;;;;;;;;:37;;::::2;:54:::0;;;20229:66;;::::2;::::0;::::2;::::0;20157:14;;20264;;20157:54;;20229:66:::2;:::i;:::-;;;;;;;;-1:-1:-1::0;;1660:1:5::1;2622:22:::0;;-1:-1:-1;;;;19007:1296:2:o;5930:100::-;6007:8;:15;;5930:100::o;17405:400::-;1322:12:3;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;17487:23:2::1;::::0;::::1;17479:82;;;;;;;;;;;;:::i;:::-;17593:9;::::0;::::1;17580:22:::0;;::::1;17593:9:::0;::::1;17580:22;;17572:100;;;;;;;;;;;;:::i;:::-;17703:9;::::0;;::::1;17723:21:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;17760:37:::1;::::0;17703:9;::::1;::::0;17723:21;17703:9;;17760:37:::1;::::0;17683:17:::1;::::0;17760:37:::1;1382:1:3;17405:400:2::0;:::o;2732:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2732:26:2;;;;;;;:::o;3519:49::-;3564:4;3519:49;:::o;10850:171::-;10901:14;10937:76;3978:4;10937:45;10967:14;;3500:12;10937:29;;:45;;;;:::i;:76::-;10928:85;;10850:171;:::o;15611:401::-;1322:12:3;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;15679:11:2::1;15675:61;;;15707:17;:15;:17::i;:::-;15748:18;15769:33;15786:15;;15769:12;:16;;:33;;;;:::i;:::-;15748:54;;15813:25;15841:36;15856:20;:18;:20::i;:::-;15841:10:::0;;:14:::1;:36::i;:::-;15934:9;::::0;15813:64;;-1:-1:-1;15920:43:2::1;::::0;15934:9:::1;;15813:64:::0;15920:13:::1;:43::i;:::-;-1:-1:-1::0;;15992:12:2::1;15974:15;:30:::0;-1:-1:-1;15611:401:2:o;3051:41::-;;;;;;;;;;;;;;;:::o;13736:904::-;1704:1:5;2310:7;;:19;;2302:63;;;;;;;;;;;;:::i;:::-;1704:1;2443:7;:18;13818:20:2::1;;:::i;:::-;13841:16;13852:4;13841:10;:16::i;:::-;13868:21;13892:14:::0;;;:8:::1;:14;::::0;;;;;;;13907:10:::1;13892:26:::0;;;;;;;13939:11;;13818:39;;-1:-1:-1;13892:26:2;13939:22;-1:-1:-1;13939:22:2::1;13931:57;;;;;;;;;;;;:::i;:::-;14001:18;14022:36;14041:10;14053:4;14022:18;:36::i;:::-;14001:57;;14071:47;14089:10;14101:4;14107:10;14071:17;:47::i;:::-;14135:11:::0;;14131:144:::1;;14177:11:::0;;:24:::1;::::0;14193:7;14177:15:::1;:24::i;:::-;14163:4;:11;;:38;;;;14216:47;14243:10;14255:7;14216;14224:4;14216:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;;::::0;:47;:26:::1;:47::i;:::-;14305:122;3564:4;14305:74;14358:4;:20;;;14305:48;3689:10;14305:27;14321:10;14305:4;:11;;;:15;;:27;;;;:::i;:122::-;14287:15;::::0;::::1;:140:::0;14473:106:::1;14524:44;3689:10;14524:23;:7:::0;14536:10;14524:11:::1;:23::i;:44::-;14473:8;14482:4;14473:14;;;;;;;;;;;;;;;;;;:32;;;:36;;:106;;;;:::i;:::-;14438:8;14447:4;14438:14;;;;;;;;;;;;;;;;;;:32;;:141;;;;14618:4;14606:10;14597:35;;;14624:7;14597:35;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1660:1:5;2622:22;;-1:-1:-1;;;13736:904:2:o;11204:949::-;11254:20;;:::i;:::-;11294:8;11303:4;11294:14;;;;;;;;;;;;;;;;;11287:21;;;;;;;;11294:14;;;;;;;11287:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11323:12:2;:35;11319:827;;;11394:22;;;;11458:14;;;;11375:16;;11458:64;;11500:22;;11458:64;;;11475:22;;11458:64;11431:92;;11555:1;11544:8;:12;:35;;;;;11578:1;11560:15;:19;11544:35;11540:419;;;11600:18;11621:38;11638:4;:20;;;11621:12;:16;;:38;;;;:::i;:::-;11600:59;;11678:18;11699:126;11791:15;11699:65;11748:4;:15;;;11699:44;11714:28;11727:4;:14;;;11714:12;:28::i;:::-;11699:10;;:14;:44::i;:126::-;11678:147;-1:-1:-1;11867:76:2;11893:48;11932:8;11893:34;11678:147;3564:4;11893:14;:34::i;:48::-;11867:20;;;:24;:76::i;:::-;11844:99;;-1:-1:-1;;11540:419:2;11996:12;11973:20;;;:35;12023:8;:14;;11973:4;;12023:8;12032:4;;12023:14;;;;;;;;;;;;;;;:21;;:14;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12081:20;;;12113;;12064:70;;12075:4;;12064:70;;;;12081:20;;12103:8;;12064:70;:::i;:::-;;;;;;;;11319:827;;;11204:949;;;:::o;14783:690::-;1704:1:5;2310:7;;:19;;2302:63;;;;;;;;;;;;:::i;:::-;1704:1;2443:7;:18;;;;14857:21:2::1;14881:8;14890:4;14881:14;;;;;;;;;::::0;;;::::1;::::0;;;14930;;;:8:::1;:14:::0;;;;;;14945:10:::1;14930:26:::0;;;;;;;14986:11;;15008:15;;;-1:-1:-1;15034:15:2;::::1;:19:::0;;;14881:14:::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;14930:26:2;14881:14;15088:69:::1;::::0;3689:10:::1;::::0;15088:48:::1;::::0;15099:36:::1;::::0;14939:4;15099:18:::1;:36::i;:::-;15088:6:::0;;:10:::1;:48::i;:69::-;15064:93;;15218:13;15193:4;:22;;;:38;:86;;15278:1;15193:86;;;15234:22;::::0;::::1;::::0;:41:::1;::::0;15261:13;15234:26:::1;:41::i;:::-;15168:4;:22;;:111;;;;15360:46;15387:10;15399:6;15360:7;15368:4;15360:13;;;;;;;:46;15452:4;15440:10;15422:43;;;15458:6;15422:43;;;;;;:::i;9967:291::-:0;10029:8;:15;10012:14;10055:196;10083:6;10077:3;:12;10055:196;;;10113:20;;:::i;:::-;10136:8;10145:3;10136:13;;;;;;;;;;;;;;;;;10113:36;;;;;;;;10136:13;;;;;;;10113:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10168:20:2;10164:76;;10209:15;10220:3;10209:10;:15::i;:::-;;10164:76;-1:-1:-1;10091:5:2;;10055:196;;;;9967:291;:::o;7995:730::-;1322:12:3;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;8244:16:2::1;8255:4;8244:10;:16::i;:::-;;8277:11;8273:61;;;8305:17;:15;:17::i;:::-;8350:8;8359:4;8350:14;;;;;;;;;::::0;;;::::1;::::0;;;:24:::1;:14;::::0;;::::1;;:24;::::0;::::1;;8346:280;;;8416:70;8474:11;8416:53;8443:8;8452:4;8443:14;;;;;;;;;;;;;;;;;;:25;;;8416:22;;:26;;:53;;;;:::i;:70::-;8391:22;:95:::0;8346:280:::1;;;8544:70;8602:11;8544:53;8571:8;8580:4;8571:14;;;;;;;;;;;;;;;;;;:25;;;8544:22;;:26;;:53;;;;:::i;:70::-;8519:22;:95:::0;8346:280:::1;8664:11;8636:8;8645:4;8636:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;8699:4;8691:26;8705:11;8691:26;;;;;;:::i;:::-;;;;;;;;7995:730:::0;;;:::o;4108:43::-;;;;:::o;3797:56::-;3843:10;3797:56;:::o;4326:51::-;;;;:::o;1742:148:3:-;1322:12;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;1849:1:::1;1833:6:::0;;1812:40:::1;::::0;::::1;1833:6:::0;;::::1;::::0;1812:40:::1;::::0;1849:1;;1812:40:::1;1880:1;1863:19:::0;;;::::1;::::0;;1742:148::o;4386:30:2:-;;;;:::o;2826:23::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2826:23:2;:::o;16397:902::-;1322:12:3;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;16617:1:2::1;16605:9;:13;:37;;;;;16641:1;16622:16;:20;16605:37;:61;;;;;16665:1;16646:16;:20;16605:61;16583:157;;;;;;;;;;;;:::i;:::-;3978:4;16773:53;16809:16:::0;16773:31:::1;:9:::0;16787:16;16773:13:::1;:31::i;:53::-;:82;16751:169;;;;;;;;;;;;:::i;:::-;16935:11;16931:61;;;16963:17;:15;:17::i;:::-;17051:15;17060:5;17051:8;:15::i;:::-;17079:14;:26:::0;;;17116:21:::1;:40:::0;;;17167:21:::1;:40:::0;;;17225:66:::1;::::0;::::1;::::0;::::1;::::0;17096:9;;17140:16;;17191;;17225:66:::1;:::i;:::-;;;;;;;;16397:902:::0;;;;:::o;2567:24::-;;;;;;:::o;1100:79:3:-;1138:7;1165:6;;;1100:79;:::o;2899:64:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3359:37::-;;;;:::o;18408:367::-;1322:12:3;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;18516:31:2::1;::::0;::::1;::::0;;::::1;::::0;:69:::1;;-1:-1:-1::0;18572:13:2::1;::::0;::::1;18551:34:::0;;::::1;18572:13:::0;::::1;18551:34;;18516:69;18494:173;;;;;;;;;;;;:::i;:::-;18680:13;:33:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;18729:38:::1;::::0;::::1;::::0;-1:-1:-1;;18729:38:2::1;18408:367:::0;:::o;17983:263::-;1322:12:3;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;18076:19:2::1;::::0;::::1;18068:82;;;;;;;;;;;;:::i;:::-;18163:16;::::0;::::1;;::::0;;;:9:::1;:16;::::0;;;;;;:27;;;::::1;::::0;::::1;;;::::0;;18206:32;::::1;::::0;::::1;::::0;18163:27;;18206:32:::1;:::i;:::-;;;;;;;;17983:263:::0;;:::o;3208:37::-;;;;:::o;6579:1110::-;1322:12:3;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;6746:33:2::1;::::0;;;;6783:1:::1;::::0;6746:18:::1;::::0;::::1;::::0;::::1;::::0;:33:::1;::::0;6773:4:::1;::::0;6746:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;6738:68;;;;;;;;;;;;:::i;:::-;6991:4;6979:16;;:8;:16;;;;6971:68;;;;;;;;;;;;:::i;:::-;7056:11;7052:61;;;7084:17;:15;:17::i;:::-;7129:10;7125:204;;;7181:22;::::0;:39:::1;::::0;7208:11;7181:26:::1;:39::i;:::-;7156:22;:64:::0;7125:204:::1;;;7278:22;::::0;:39:::1;::::0;7305:11;7278:26:::1;:39::i;:::-;7253:22;:64:::0;7125:204:::1;7339:7;:22:::0;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;7402:187:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;7402:187:2;;;7473:12:::1;7339:22;7402:187:::0;::::1;::::0;;;;;;;;;;;;;;;;::::1;;::::0;;;;;;7374:8:::1;:226:::0;;;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;7624:14;;:21:::1;::::0;:18:::1;:21::i;:::-;7616:65;7647:11;7670:10;7616:65;;;;;;;:::i;:::-;;;;;;;;6579:1110:::0;;;;:::o;8899:970::-;8972:7;8992:20;;:::i;:::-;9015:8;9024:4;9015:14;;;;;;;;;;;;;;;;;8992:37;;;;;;;;9015:14;;;;;;;8992:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9040:20:2;;:::i;:::-;-1:-1:-1;9063:14:2;;;;:8;:14;;;;;;;;:21;;;;;;;;;;;9040:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9121:20;;9171:22;;;;9225:20;;;;9121;;9171:22;9210:12;:35;:52;;;;-1:-1:-1;9249:13:2;;;9210:52;9206:453;;;9279:18;9300:38;9317:4;:20;;;9300:12;:16;;:38;;;;:::i;:::-;9279:59;;9355:18;9376:169;9465:4;:14;;;:64;;9507:22;;9465:64;;;9482:22;;9465:64;9376:65;9425:4;:15;;;9376:44;9391:28;9404:4;:14;;;9391:12;:28::i;9376:169::-;9355:190;-1:-1:-1;9578:69:2;9598:48;9637:8;9598:34;9355:190;3564:4;9598:14;:34::i;:48::-;9578:15;;:19;:69::i;:::-;9560:87;;9206:453;;;9671:21;9695:69;3689:10;9695:48;9711:31;9730:5;9737:4;9711:18;:31::i;:::-;9695:11;;;:15;:48::i;:69::-;9845:15;;;;9671:93;;-1:-1:-1;9782:79:2;;:58;3564:4;9782:34;9671:93;9800:15;9782:17;:34::i;:58::-;:62;;:79::i;:::-;9775:86;8899:970;-1:-1:-1;;;;;;;;8899:970:2:o;3647:52::-;3689:10;3647:52;:::o;2654:28::-;;;;;;:::o;12318:1249::-;1704:1:5;2310:7;;:19;;2302:63;;;;;;;;;;;;:::i;:::-;1704:1;2443:7;:18;12399:20:2::1;;:::i;:::-;12422:16;12433:4;12422:10;:16::i;:::-;12449:21;12473:14:::0;;;:8:::1;:14;::::0;;;;;;;12488:10:::1;12473:26:::0;;;;;;;12534:14:::1;::::0;::::1;::::0;12399:39;;-1:-1:-1;12473:26:2;12534:14;:39:::1;;-1:-1:-1::0;12562:10:2::1;12552:21;::::0;;;:9:::1;:21;::::0;;;;;::::1;;12534:39;12512:155;;;;;;;;;;;;:::i;:::-;12680:18;12701:36;12720:10;12732:4;12701:18;:36::i;:::-;12754:11:::0;;12680:57;;-1:-1:-1;12754:15:2;12750:95:::1;;12786:47;12804:10;12816:4;12822:10;12786:17;:47::i;:::-;12861:11:::0;;12857:466:::1;;12889:14;12906:7;12914:4;12906:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;:38:::1;::::0;;;;:13:::1;::::0;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;12938:4:::1;::::0;12906:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12889:55;;12959:66;12990:10;13010:4;13017:7;12959;12967:4;12959:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;;::::0;:66;;:30:::1;:66::i;:::-;13050:50;13093:6;13050:7;13058:4;13050:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;:38:::1;::::0;;;;:13:::1;::::0;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;13082:4:::1;::::0;13050:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:50::-;13129:11:::0;;13040:60;;-1:-1:-1;13129:24:2::1;::::0;13040:60;13129:15:::1;:24::i;:::-;13115:38:::0;;13239:72:::1;13266:44;3689:10;13266:23;:7:::0;13278:10;13266:11:::1;:23::i;:44::-;13239:22;::::0;::::1;::::0;;:26:::1;:72::i;:::-;13214:22;::::0;::::1;:97:::0;-1:-1:-1;12857:466:2::1;13353:122;3564:4;13353:74;13406:4;:20;;;13353:48;3689:10;13353:27;13369:10;13353:4;:11;;;:15;;:27;;;;:::i;:122::-;13335:4;:15;;:140;;;;13503:4;13486:8;13495:4;13486:14;;;;;;;;;::::0;;;::::1;::::0;;;;:21;;:14:::1;::::0;;;::::1;;:21:::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;13525:34;13545:4;;13533:10:::1;::::0;13525:34:::1;::::0;::::1;::::0;13551:7;;13525:34:::1;:::i;2045:244:3:-:0;1322:12;:10;:12::i;:::-;1312:6;;:22;:6;;;:22;;;1304:67;;;;;;;;;;;;:::i;:::-;2134:22:::1;::::0;::::1;2126:73;;;;;;;;;;;;:::i;:::-;2236:6;::::0;;2215:38:::1;::::0;::::1;::::0;;::::1;::::0;2236:6;::::1;::::0;2215:38:::1;::::0;::::1;2264:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2045:244::o;10408:354:2:-;10468:14;10499:10;10495:260;;;10535:83;3978:4;10535:52;10565:21;;3500:12;10535:29;;:52;;;;:::i;:83::-;10526:92;;10495:260;;;10660:83;3978:4;10660:52;10690:21;;3500:12;10660:29;;:52;;;;:::i;4215:51::-;;;;:::o;3448:64::-;3500:12;3448:64;:::o;20952:508::-;21088:20;;:::i;:::-;-1:-1:-1;21111:14:2;;;;:8;:14;;;;;;;;:21;;;;;;;;;;21088:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21111:14;21169:54;;3689:10;;21169:33;;21185:16;21169:15;:33::i;:54::-;21145:78;;21234:15;21252:73;3564:4;21252:49;21270:8;21279:4;21270:14;;;;;;;;;;;;;;;;;;;;;:30;21252:13;;:17;:49::i;:73::-;21234:91;;21336:15;21354:28;21366:4;:15;;;21354:7;:11;;:28;;;;:::i;:::-;21336:46;;21423:29;21437:5;21444:7;21423:13;:29::i;:::-;20952:508;;;;;;;:::o;2256:471:7:-;2314:7;2559:6;2555:47;;-1:-1:-1;2589:1:7;2582:8;;2555:47;2626:5;;;2630:1;2626;:5;:1;2650:5;;;;;:10;2642:56;;;;;;;;;;;;:::i;3203:132::-;3261:7;3288:39;3292:1;3295;3288:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3281:46;3203:132;-1:-1:-1;;;3203:132:7:o;1366:136::-;1424:7;1451:43;1455:1;1458;1451:43;;;;;;;;;;;;;;;;;:3;:43::i;902:181::-;960:7;992:5;;;1016:6;;;;1008:46;;;;;;;;;;;;:::i;605:106:0:-;693:10;605:106;:::o;21599:399:2:-;21676:11;;21672:319;;21815:29;;;;;21797:15;;21815:14;:4;:14;;;;:29;;21838:4;;21815:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21797:47;;21873:7;21863;:17;21859:75;;;21911:7;21901:17;;21859:75;21948:31;:17;:4;:17;21966:3;21971:7;21948:17;:31::i;:::-;21672:319;21599:399;;:::o;719:248:1:-;836:123;870:5;913:23;;;938:2;942:5;890:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:19;:123::i;975:285::-;1119:133;1153:5;1196:27;;;1225:4;1231:2;1235:5;1173:68;;;;;;;;;;:::i;1119:133::-;975:285;;;;:::o;3831:278:7:-;3917:7;3952:12;3945:5;3937:28;;;;;;;;;;;;;:::i;:::-;;3976:9;3992:1;3988;:5;;;;;;;3831:278;-1:-1:-1;;;;;3831:278:7:o;1805:192::-;1891:7;1927:12;1919:6;;;;1911:29;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1963:5:7;;;1805:192::o;3430:832:1:-;3854:23;3889:69;3917:4;3889:69;;;;;;;;;;;;;;;;;3897:5;3889:27;;;;:69;;;;;:::i;:::-;3973:17;;3854:104;;-1:-1:-1;3973:21:1;3969:286;;4146:10;4135:30;;;;;;;;;;;;:::i;:::-;4109:134;;;;;;;;;;;;:::i;3661:196:6:-;3764:12;3796:53;3819:6;3827:4;3833:1;3836:12;3796:22;:53::i;:::-;3789:60;3661:196;-1:-1:-1;;;;3661:196:6:o;5038:979::-;5168:12;5201:18;5212:6;5201:10;:18::i;:::-;5193:60;;;;;;;;;;;;:::i;:::-;5327:12;5341:23;5368:6;:11;;5388:8;5399:4;5368:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5326:78;;;;5419:7;5415:595;;;5450:10;-1:-1:-1;5443:17:6;;-1:-1:-1;5443:17:6;5415:595;5564:17;;:21;5560:439;;5827:10;5821:17;5888:15;5875:10;5871:2;5867:19;5860:44;5775:148;5970:12;5963:20;;;;;;;;;;;:::i;743:422::-;1110:20;1149:8;;;743:422::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;853:241::-;;957:2;945:9;936:7;932:23;928:32;925:2;;;-1:-1;;963:12;925:2;85:6;72:20;97:33;124:5;97:33;:::i;1101:360::-;;;1219:2;1207:9;1198:7;1194:23;1190:32;1187:2;;;-1:-1;;1225:12;1187:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1277:63;-1:-1;1377:2;1413:22;;206:20;231:30;206:20;231:30;:::i;:::-;1385:60;;;;1181:280;;;;;:::o;1468:366::-;;;1589:2;1577:9;1568:7;1564:23;1560:32;1557:2;;;-1:-1;;1595:12;1557:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1647:63;1747:2;1786:22;;;;642:20;;-1:-1;;;1551:283::o;1841:491::-;;;;1979:2;1967:9;1958:7;1954:23;1950:32;1947:2;;;-1:-1;;1985:12;1947:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2037:63;2137:2;2176:22;;642:20;;-1:-1;2245:2;2284:22;;;642:20;;1941:391;-1:-1;;;1941:391::o;2339:235::-;;2440:2;2428:9;2419:7;2415:23;2411:32;2408:2;;;-1:-1;;2446:12;2408:2;219:6;206:20;231:30;255:5;231:30;:::i;2581:257::-;;2693:2;2681:9;2672:7;2668:23;2664:32;2661:2;;;-1:-1;;2699:12;2661:2;354:6;348:13;366:30;390:5;366:30;:::i;2845:241::-;;2949:2;2937:9;2928:7;2924:23;2920:32;2917:2;;;-1:-1;;2955:12;2917:2;-1:-1;642:20;;2911:175;-1:-1;2911:175::o;3093:263::-;;3208:2;3196:9;3187:7;3183:23;3179:32;3176:2;;;-1:-1;;3214:12;3176:2;-1:-1;790:13;;3170:186;-1:-1;3170:186::o;3363:366::-;;;3484:2;3472:9;3463:7;3459:23;3455:32;3452:2;;;-1:-1;;3490:12;3452:2;655:6;642:20;3542:63;;3642:2;3685:9;3681:22;72:20;97:33;124:5;97:33;:::i;3736:635::-;;;;;3900:3;3888:9;3879:7;3875:23;3871:33;3868:2;;;-1:-1;;3907:12;3868:2;655:6;642:20;3959:63;;4059:2;4117:9;4113:22;490:20;515:48;557:5;515:48;:::i;:::-;4067:78;-1:-1;4182:2;4218:22;;206:20;231:30;206:20;231:30;:::i;:::-;4190:60;-1:-1;4287:2;4323:22;;206:20;231:30;206:20;231:30;:::i;:::-;3862:509;;;;-1:-1;3862:509;;-1:-1;;3862:509::o;4378:366::-;;;4499:2;4487:9;4478:7;4474:23;4470:32;4467:2;;;-1:-1;;4505:12;4467:2;-1:-1;;642:20;;;4657:2;4696:22;;;642:20;;-1:-1;4461:283::o;4751:485::-;;;;4886:2;4874:9;4865:7;4861:23;4857:32;4854:2;;;-1:-1;;4892:12;4854:2;655:6;642:20;4944:63;;5044:2;5087:9;5083:22;642:20;5052:63;;5152:2;5192:9;5188:22;206:20;231:30;255:5;231:30;:::i;:::-;5160:60;;;;4848:388;;;;;:::o;5243:611::-;;;;;5395:3;5383:9;5374:7;5370:23;5366:33;5363:2;;;-1:-1;;5402:12;5363:2;655:6;642:20;5454:63;;5554:2;5597:9;5593:22;642:20;5562:63;;5662:2;5705:9;5701:22;642:20;5670:63;;5770:2;5810:9;5806:22;206:20;231:30;255:5;231:30;:::i;16322:271::-;;6353:5;29384:12;6464:52;6509:6;6504:3;6497:4;6490:5;6486:16;6464:52;:::i;:::-;6528:16;;;;;16456:137;-1:-1;;16456:137::o;16600:222::-;30255:42;30244:54;;;;5932:37;;16727:2;16712:18;;16698:124::o;16829:444::-;30255:42;30244:54;;;5932:37;;30244:54;;;;17176:2;17161:18;;5932:37;17259:2;17244:18;;16153:37;;;;17012:2;16997:18;;16983:290::o;17280:333::-;30255:42;30244:54;;;;5932:37;;17599:2;17584:18;;16153:37;17435:2;17420:18;;17406:207::o;17620:210::-;30043:13;;30036:21;6036:34;;17741:2;17726:18;;17712:118::o;18096:310::-;;18243:2;18264:17;18257:47;6864:5;29384:12;29823:6;18243:2;18232:9;18228:18;29811:19;6958:52;7003:6;29851:14;18232:9;29851:14;18243:2;6984:5;6980:16;6958:52;:::i;:::-;31042:2;31022:14;31038:7;31018:28;7022:39;;;;29851:14;7022:39;;18214:192;-1:-1;;18214:192::o;18413:416::-;18613:2;18627:47;;;7298:2;18598:18;;;29811:19;7334:34;29851:14;;;7314:55;7403:12;7389;;;7382:34;7435:12;;;18584:245::o;18836:416::-;19036:2;19050:47;;;7686:2;19021:18;;;29811:19;7722:34;29851:14;;;7702:55;7791:14;7777:12;;;7770:36;7825:12;;;19007:245::o;19259:416::-;19459:2;19473:47;;;8076:2;19444:18;;;29811:19;8112:34;29851:14;;;8092:55;8181:12;8167;;;8160:34;8213:12;;;19430:245::o;19682:416::-;19882:2;19896:47;;;8464:2;19867:18;;;29811:19;8500:34;29851:14;;;8480:55;8569:8;8555:12;;;8548:30;8597:12;;;19853:245::o;20105:416::-;20305:2;20319:47;;;8848:2;20290:18;;;29811:19;8884:29;29851:14;;;8864:50;8933:12;;;20276:245::o;20528:416::-;20728:2;20742:47;;;9184:2;20713:18;;;29811:19;9220:34;29851:14;;;9200:55;9289:16;9275:12;;;9268:38;9325:12;;;20699:245::o;20951:416::-;21151:2;21165:47;;;9576:2;21136:18;;;29811:19;9612:34;29851:14;;;9592:55;9681:34;9667:12;;;9660:56;9750:4;9736:12;;;9729:26;9774:12;;;21122:245::o;21374:416::-;21574:2;21588:47;;;10025:2;21559:18;;;29811:19;10061:34;29851:14;;;10041:55;10130:16;10116:12;;;10109:38;10166:12;;;21545:245::o;21797:416::-;21997:2;22011:47;;;10417:2;21982:18;;;29811:19;10453:34;29851:14;;;10433:55;10522:7;10508:12;;;10501:29;10549:12;;;21968:245::o;22220:416::-;22420:2;22434:47;;;10800:2;22405:18;;;29811:19;10836:34;29851:14;;;10816:55;10905:20;10891:12;;;10884:42;10945:12;;;22391:245::o;22643:416::-;22843:2;22857:47;;;11196:2;22828:18;;;29811:19;11232:34;29851:14;;;11212:55;11301:3;11287:12;;;11280:25;11324:12;;;22814:245::o;23066:416::-;23266:2;23280:47;;;11575:2;23251:18;;;29811:19;11611:24;29851:14;;;11591:45;11655:12;;;23237:245::o;23489:416::-;23689:2;23703:47;;;11906:2;23674:18;;;29811:19;11942;29851:14;;;11922:40;11981:12;;;23660:245::o;23912:416::-;24112:2;24126:47;;;24097:18;;;29811:19;12268:34;29851:14;;;12248:55;12322:12;;;24083:245::o;24335:416::-;24535:2;24549:47;;;12573:2;24520:18;;;29811:19;12609:34;29851:14;;;12589:55;12678:11;12664:12;;;12657:33;12709:12;;;24506:245::o;24758:416::-;24958:2;24972:47;;;12960:2;24943:18;;;29811:19;12996:34;29851:14;;;12976:55;13065:24;13051:12;;;13044:46;13109:12;;;24929:245::o;25181:416::-;25381:2;25395:47;;;13360:2;25366:18;;;29811:19;13396:31;29851:14;;;13376:52;13447:12;;;25352:245::o;25604:416::-;25804:2;25818:47;;;13698:2;25789:18;;;29811:19;13734:34;29851:14;;;13714:55;13803:34;13789:12;;;13782:56;13872:3;13858:12;;;13851:25;13895:12;;;25775:245::o;26027:416::-;26227:2;26241:47;;;14146:2;26212:18;;;29811:19;14182:34;29851:14;;;14162:55;14251:18;14237:12;;;14230:40;14289:12;;;26198:245::o;26450:416::-;26650:2;26664:47;;;14540:2;26635:18;;;29811:19;14576:34;29851:14;;;14556:55;14645:9;14631:12;;;14624:31;14674:12;;;26621:245::o;26873:416::-;27073:2;27087:47;;;14925:2;27058:18;;;29811:19;14961:33;29851:14;;;14941:54;15014:12;;;27044:245::o;27296:323::-;;27473:3;27462:9;27458:19;27450:27;;15333:16;15327:23;16160:3;16153:37;15509:4;15502:5;15498:16;15492:23;15509:4;15573:3;15569:14;16153:37;15669:4;15662:5;15658:16;15652:23;15669:4;15733:3;15729:14;16153:37;15836:4;15829:5;15825:16;15819:23;15836:4;15900:3;15896:14;16153:37;15995:4;15988:5;15984:16;15978:23;30043:13;30036:21;15995:4;16053:3;16049:14;6036:34;27444:175;;;;:::o;27626:222::-;16153:37;;;27753:2;27738:18;;27724:124::o;27855:321::-;16153:37;;;30043:13;30036:21;28162:2;28147:18;;6036:34;28004:2;27989:18;;27975:201::o;28183:444::-;16153:37;;;28530:2;28515:18;;16153:37;;;;28613:2;28598:18;;16153:37;28366:2;28351:18;;28337:290::o;28634:656::-;16153:37;;;29032:2;29017:18;;16153:37;;;;29115:2;29100:18;;16153:37;;;;29198:2;29183:18;;16153:37;30043:13;30036:21;29275:3;29260:19;;6036:34;28867:3;28852:19;;28838:452::o;30678:268::-;30743:1;30750:101;30764:6;30761:1;30758:13;30750:101;;;30831:11;;;30825:18;30812:11;;;30805:39;30786:2;30779:10;30750:101;;;30866:6;30863:1;30860:13;30857:2;;;-1:-1;;30743:1;30913:16;;30906:27;30727:219::o;31059:117::-;30255:42;31146:5;30244:54;31121:5;31118:35;31108:2;;31167:1;;31157:12;31108:2;31102:74;:::o;31183:111::-;31264:5;30043:13;30036:21;31242:5;31239:32;31229:2;;31285:1;;31275:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2731800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_SHDW_PRECISION()": "296",
								"BOOST_PRECISION()": "295",
								"MASTERCHEF_SHDW_PER_BLOCK()": "338",
								"MAX_BOOST_PRECISION()": "295",
								"SHDW()": "infinite",
								"SHDW_RATE_TOTAL_PRECISION()": "317",
								"add(uint256,address,bool,bool)": "infinite",
								"boostContract()": "1157",
								"burnAdmin()": "1136",
								"burnShdw(bool)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getBoostMultiplier(address,uint256)": "1438",
								"lastBurnedBlock()": "1097",
								"lpToken(uint256)": "2105",
								"massUpdatePools()": "infinite",
								"owner()": "1158",
								"pendingShdw(uint256,address)": "infinite",
								"poolInfo(uint256)": "5460",
								"poolLength()": "1141",
								"renounceOwnership()": "24276",
								"set(uint256,uint256,bool)": "infinite",
								"shdwPerBlock(bool)": "infinite",
								"shdwPerBlockToBurn()": "infinite",
								"shdwRateToBurn()": "1118",
								"shdwRateToRegularFarm()": "1116",
								"shdwRateToSpecialFarm()": "1117",
								"totalRegularAllocPoint()": "1139",
								"totalSpecialAllocPoint()": "1118",
								"transferOwnership(address)": "24457",
								"updateBoostContract(address)": "24087",
								"updateBoostMultiplier(address,uint256,uint256)": "infinite",
								"updateBurnAdmin(address)": "24473",
								"updatePool(uint256)": "infinite",
								"updateShdwRate(uint256,uint256,uint256,bool)": "infinite",
								"updateWhiteList(address,bool)": "infinite",
								"userInfo(uint256,address)": "3083",
								"whiteList(address)": "1325",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"_safeTransfer(address,uint256)": "infinite",
								"settlependingShdw(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4140,
									"end": 4151,
									"name": "PUSH",
									"source": 2,
									"value": "BA43B7400"
								},
								{
									"begin": 4108,
									"end": 4151,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 4108,
									"end": 4151,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4254,
									"end": 4266,
									"name": "PUSH",
									"source": 2,
									"value": "3A35294400"
								},
								{
									"begin": 4215,
									"end": 4266,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 4215,
									"end": 4266,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4377,
									"name": "PUSH",
									"source": 2,
									"value": "A2FB405800"
								},
								{
									"begin": 4326,
									"end": 4377,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 4326,
									"end": 4377,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5503,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 891,
									"end": 908,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 911,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 911,
									"end": 923,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 911,
									"end": 923,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 911,
									"end": 923,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 934,
									"end": 940,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 934,
									"end": 952,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 934,
									"end": 952,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 934,
									"end": 952,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 968,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 968,
									"end": 1011,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 934,
									"end": 952,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 934,
									"end": 952,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 968,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 968,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 934,
									"end": 940,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 934,
									"end": 940,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 968,
									"end": 1011,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1660,
									"end": 1661,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1781,
									"end": 1803,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1781,
									"end": 1803,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5592,
									"end": 5604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5624,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5637,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 605,
									"end": 711,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 605,
									"end": 711,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 693,
									"end": 703,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 605,
									"end": 711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 605,
									"end": 711,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 317,
									"end": 746,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 317,
									"end": 746,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 317,
									"end": 746,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 746,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 464,
									"end": 466,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 452,
									"end": 461,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 443,
									"end": 450,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 439,
									"end": 462,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 435,
									"end": 467,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 432,
									"end": 434,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 432,
									"end": 434,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "16"
								},
								{
									"begin": 432,
									"end": 434,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 470,
									"end": 482,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 432,
									"end": 434,
									"name": "tag",
									"source": -1,
									"value": "16"
								},
								{
									"begin": 432,
									"end": 434,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 245,
									"end": 251,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 239,
									"end": 252,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 257,
									"end": 305,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 299,
									"end": 304,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 257,
									"end": 305,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 257,
									"end": 305,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 257,
									"end": 305,
									"name": "tag",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 257,
									"end": 305,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 648,
									"end": 650,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 698,
									"end": 720,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 698,
									"end": 720,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 522,
									"end": 611,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 522,
									"end": 611,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "19"
								},
								{
									"begin": 83,
									"end": 96,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"source": -1,
									"value": "19"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 656,
									"end": 730,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 656,
									"end": 730,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 656,
									"end": 730,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 656,
									"end": 730,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 426,
									"end": 746,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 426,
									"end": 746,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 426,
									"end": 746,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 426,
									"end": 746,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 426,
									"end": 746,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 426,
									"end": 746,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1092,
									"end": 1209,
									"name": "tag",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 1092,
									"end": 1209,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1026,
									"end": 1080,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1026,
									"end": 1080,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 1151,
									"end": 1186,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1151,
									"end": 1186,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "21"
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 1190,
									"end": 1202,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "tag",
									"source": -1,
									"value": "21"
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1135,
									"end": 1209,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1135,
									"end": 1209,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1135,
									"end": 1209,
									"name": "tag",
									"source": -1,
									"value": "14"
								},
								{
									"begin": 1135,
									"end": 1209,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "274"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 22001,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208258375ac1461dc0f29a035a916da3fbd5d3fac1fe1c167088369b432b73787f64736f6c634300060c0033",
									".code": [
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "78DB4C34"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "C507AEAA"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "E2BBB158"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "F474309E"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "F474309E"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "F5A26F40"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "F5B91CD3"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "E2BBB158"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "CC6DB2DA"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "CC6DB2DA"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "D2CE6AE8"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "DFCEDEEE"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "C507AEAA"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "C799B59D"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "93F1A40B"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "9DD2FCC3"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "9DD2FCC3"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "AC1D0609"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "C40D337B"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "93F1A40B"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "99D7E84A"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "815D087F"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "815D087F"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "81BDF98C"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "78DB4C34"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "78ED5D1F"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "372C12B1"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "64482F79"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "69B02128"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "69B02128"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "6FDA08C3"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "64482F79"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "6661100F"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "51EB05A6"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "51EB05A6"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "5312EA8E"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "630B5BA1"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "372C12B1"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "441A3E70"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "BB844BC"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "16E80F4D"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "16E80F4D"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "19F95E2E"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "36183ED6"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "BB844BC"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "1526FE27"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "33186E8"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "3DCFF74"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "41A84C9"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "81E3EDA"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 22001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20528,
											"end": 20535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20577,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20583,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20590,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20606,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 20569,
											"end": 20606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20569,
											"end": 20606,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 20624,
											"end": 20652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20624,
											"end": 20652,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20655,
											"end": 20665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 20624,
											"end": 20683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20617,
											"end": 20683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20617,
											"end": 20683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20617,
											"end": 20683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20450,
											"end": 20691,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2492,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5789,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5776,
											"end": 5789,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5803,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5768,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 19184,
											"end": 19203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19184,
											"end": 19203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19184,
											"end": 19203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 19176,
											"end": 19252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19280,
											"end": 19284,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19295,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19295,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19271,
											"end": 19295,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19271,
											"end": 19295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 19263,
											"end": 19348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 19381,
											"end": 19395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19381,
											"end": 19414,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 19381,
											"end": 19414,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19381,
											"end": 19455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19381,
											"end": 19455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19381,
											"end": 19455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 19381,
											"end": 19455,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19381,
											"end": 19455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3853,
											"name": "PUSH",
											"source": 2,
											"value": "1D1A94A2000"
										},
										{
											"begin": 19418,
											"end": 19432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19418,
											"end": 19455,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19418,
											"end": 19455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19381,
											"end": 19455,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 19381,
											"end": 19455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 19359,
											"end": 19525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19538,
											"end": 19558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 19538,
											"end": 19558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 19538,
											"end": 19558,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19538,
											"end": 19558,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 19538,
											"end": 19558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19561,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 19572,
											"end": 19576,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19561,
											"end": 19571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 19561,
											"end": 19577,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19561,
											"end": 19577,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 19561,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19588,
											"end": 19609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19620,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19626,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19612,
											"end": 19633,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19538,
											"end": 19577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19538,
											"end": 19577,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19671,
											"end": 19702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 19627,
											"end": 19632,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19621,
											"end": 19625,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19671,
											"end": 19689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 19671,
											"end": 19702,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19671,
											"end": 19702,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 19671,
											"end": 19702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19646,
											"end": 19702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19646,
											"end": 19702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19713,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 19731,
											"end": 19736,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19738,
											"end": 19742,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19744,
											"end": 19758,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19713,
											"end": 19730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 19713,
											"end": 19759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19713,
											"end": 19759,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 19713,
											"end": 19759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 19790,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 19847,
											"end": 19851,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 19806,
											"end": 19820,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19794,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 19790,
											"end": 19805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19790,
											"end": 19846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 19790,
											"end": 19868,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19790,
											"end": 19916,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 19790,
											"end": 19916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19772,
											"end": 19787,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 19772,
											"end": 19787,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19772,
											"end": 19787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19772,
											"end": 19916,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20051,
											"end": 20062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20051,
											"end": 20062,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 20114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 19952,
											"end": 20114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20051,
											"end": 20103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 20051,
											"end": 20103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20051,
											"end": 20082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 20051,
											"end": 20082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20067,
											"end": 20081,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 20051,
											"end": 20066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 20051,
											"end": 20082,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20051,
											"end": 20103,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 20051,
											"end": 20103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19979,
											"end": 19990,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19979,
											"end": 19990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 20032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 19952,
											"end": 20032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19979,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 19979,
											"end": 20031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19979,
											"end": 20010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 19979,
											"end": 20010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19995,
											"end": 20009,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 19979,
											"end": 19994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 19979,
											"end": 20010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19979,
											"end": 20031,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 19979,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 19974,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 19952,
											"end": 19974,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 19974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 19974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 19974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 19952,
											"end": 20032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19952,
											"end": 20032,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 19952,
											"end": 20032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 20036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19952,
											"end": 20036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 19952,
											"end": 20114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19952,
											"end": 20114,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 19952,
											"end": 20114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19927,
											"end": 19949,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 19927,
											"end": 19949,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19927,
											"end": 19949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19927,
											"end": 20114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20133,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19927,
											"end": 19931,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19927,
											"end": 19931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20134,
											"end": 20138,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 20134,
											"end": 20138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20146,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20165,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20178,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20211,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20211,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "PUSH",
											"source": 2,
											"value": "1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA"
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20264,
											"end": 20278,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20264,
											"end": 20278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20211,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 20157,
											"end": 20211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20295,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19007,
											"end": 20303,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6007,
											"end": 6022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5930,
											"end": 6030,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17487,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17487,
											"end": 17510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17487,
											"end": 17510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 17479,
											"end": 17561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17593,
											"end": 17602,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 17593,
											"end": 17602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17593,
											"end": 17602,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17580,
											"end": 17602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17580,
											"end": 17602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17580,
											"end": 17602,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17593,
											"end": 17602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17593,
											"end": 17602,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17580,
											"end": 17602,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17580,
											"end": 17602,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 17572,
											"end": 17672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17760,
											"end": 17797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17760,
											"end": 17797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17723,
											"end": 17744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17760,
											"end": 17797,
											"name": "PUSH",
											"source": 2,
											"value": "D146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE"
										},
										{
											"begin": 17760,
											"end": 17797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17683,
											"end": 17700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17683,
											"end": 17700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17760,
											"end": 17797,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17405,
											"end": 17805,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3568,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10901,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 10937,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10967,
											"end": 10981,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 10967,
											"end": 10981,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "1314FB3706298000"
										},
										{
											"begin": 10937,
											"end": 10966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10937,
											"end": 10966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10982,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10937,
											"end": 10982,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10937,
											"end": 11013,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10937,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10928,
											"end": 11013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10928,
											"end": 11013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10850,
											"end": 11021,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15679,
											"end": 15690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15675,
											"end": 15736,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15675,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15675,
											"end": 15736,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15707,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15707,
											"end": 15722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 15707,
											"end": 15724,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15707,
											"end": 15724,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15707,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15748,
											"end": 15766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15786,
											"end": 15801,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 15786,
											"end": 15801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15769,
											"end": 15781,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 15769,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 15769,
											"end": 15785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15769,
											"end": 15802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15748,
											"end": 15802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15748,
											"end": 15802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15813,
											"end": 15838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15841,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15856,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 15856,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 15856,
											"end": 15876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15856,
											"end": 15876,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 15856,
											"end": 15876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15841,
											"end": 15851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15841,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15841,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 15841,
											"end": 15877,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15841,
											"end": 15877,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15841,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15934,
											"end": 15943,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 15934,
											"end": 15943,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15813,
											"end": 15877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15813,
											"end": 15877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15920,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15920,
											"end": 15963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15934,
											"end": 15943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15934,
											"end": 15943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15813,
											"end": 15877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15920,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 15920,
											"end": 15963,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15920,
											"end": 15963,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15920,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15992,
											"end": 16004,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 15974,
											"end": 15989,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 15974,
											"end": 16004,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15611,
											"end": 16012,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3092,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13818,
											"end": 13838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 13818,
											"end": 13838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 13818,
											"end": 13838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13818,
											"end": 13838,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 13818,
											"end": 13838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13841,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 13852,
											"end": 13856,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13841,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 13841,
											"end": 13857,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13841,
											"end": 13857,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 13841,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13868,
											"end": 13889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13900,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13906,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13907,
											"end": 13917,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13939,
											"end": 13950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13939,
											"end": 13950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13818,
											"end": 13857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13818,
											"end": 13857,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13892,
											"end": 13918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13939,
											"end": 13961,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 13939,
											"end": 13961,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 13931,
											"end": 13988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14022,
											"end": 14058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 14041,
											"end": 14051,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14053,
											"end": 14057,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 14022,
											"end": 14058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14022,
											"end": 14058,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 14022,
											"end": 14058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 14089,
											"end": 14099,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14101,
											"end": 14105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14107,
											"end": 14117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 14071,
											"end": 14118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14071,
											"end": 14118,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 14071,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14135,
											"end": 14146,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14135,
											"end": 14146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14131,
											"end": 14275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 14131,
											"end": 14275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14177,
											"end": 14188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14177,
											"end": 14188,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14177,
											"end": 14201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 14177,
											"end": 14201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14193,
											"end": 14200,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14177,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 14177,
											"end": 14201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14177,
											"end": 14201,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 14177,
											"end": 14201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14163,
											"end": 14167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14163,
											"end": 14174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14163,
											"end": 14174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14163,
											"end": 14201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14163,
											"end": 14201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14163,
											"end": 14201,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14163,
											"end": 14201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 14243,
											"end": 14253,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14255,
											"end": 14262,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14223,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14224,
											"end": 14228,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14216,
											"end": 14242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 14216,
											"end": 14263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14216,
											"end": 14263,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 14216,
											"end": 14263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14305,
											"end": 14379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 14358,
											"end": 14362,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14358,
											"end": 14378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 14305,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 14321,
											"end": 14331,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14309,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14316,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 14305,
											"end": 14320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14305,
											"end": 14332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14305,
											"end": 14332,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14305,
											"end": 14427,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 14305,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14287,
											"end": 14302,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14287,
											"end": 14302,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14287,
											"end": 14302,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14287,
											"end": 14427,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14524,
											"end": 14568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 14524,
											"end": 14547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 14524,
											"end": 14531,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14536,
											"end": 14546,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14524,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 14524,
											"end": 14547,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14524,
											"end": 14568,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14524,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14481,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14482,
											"end": 14486,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14487,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14505,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 14473,
											"end": 14505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 14473,
											"end": 14509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14473,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14446,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14447,
											"end": 14451,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14470,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 14438,
											"end": 14470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14618,
											"end": 14622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14606,
											"end": 14616,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "PUSH",
											"source": 2,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 14624,
											"end": 14631,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14597,
											"end": 14632,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13736,
											"end": 14640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11302,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11303,
											"end": 11307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 11323,
											"end": 11358,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 12146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 11319,
											"end": 12146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11394,
											"end": 11416,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11394,
											"end": 11416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11394,
											"end": 11416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11394,
											"end": 11416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11458,
											"end": 11472,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11458,
											"end": 11472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11458,
											"end": 11472,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11458,
											"end": 11472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11375,
											"end": 11391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11500,
											"end": 11522,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 11500,
											"end": 11522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11497,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11475,
											"end": 11497,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 11458,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11431,
											"end": 11523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11431,
											"end": 11523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11555,
											"end": 11556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11544,
											"end": 11552,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11556,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 11544,
											"end": 11579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11578,
											"end": 11579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11560,
											"end": 11575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11560,
											"end": 11579,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11579,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 11544,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11600,
											"end": 11618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11638,
											"end": 11642,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11638,
											"end": 11658,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11638,
											"end": 11658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11638,
											"end": 11658,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11633,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 11621,
											"end": 11637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 11621,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11600,
											"end": 11659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11600,
											"end": 11659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 11791,
											"end": 11806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11699,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11748,
											"end": 11752,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11748,
											"end": 11763,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11748,
											"end": 11763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11699,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 11714,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 11727,
											"end": 11731,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11741,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11727,
											"end": 11741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11714,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 11714,
											"end": 11742,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11714,
											"end": 11742,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 11714,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11699,
											"end": 11709,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11699,
											"end": 11709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11699,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11699,
											"end": 11743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11699,
											"end": 11825,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 11699,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11867,
											"end": 11943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 11893,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 11932,
											"end": 11940,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11893,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11678,
											"end": 11825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11893,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11893,
											"end": 11927,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11893,
											"end": 11941,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 11893,
											"end": 11941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 11867,
											"end": 11943,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11867,
											"end": 11943,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 11867,
											"end": 11943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11996,
											"end": 12008,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 11993,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11973,
											"end": 11993,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 11993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12031,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 11977,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 11977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12036,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12032,
											"end": 12036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12023,
											"end": 12044,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12081,
											"end": 12101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12081,
											"end": 12101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12081,
											"end": 12101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12113,
											"end": 12133,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12113,
											"end": 12133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "PUSH",
											"source": 2,
											"value": "3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12081,
											"end": 12101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12081,
											"end": 12101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12111,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12134,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 12146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 12146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 12146,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 11319,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11204,
											"end": 12153,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 14783,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14857,
											"end": 14878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14881,
											"end": 14889,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14890,
											"end": 14894,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14938,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14944,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14945,
											"end": 14955,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14986,
											"end": 14997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14986,
											"end": 14997,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15008,
											"end": 15023,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15008,
											"end": 15023,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15008,
											"end": 15023,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 15034,
											"end": 15049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15034,
											"end": 15049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15034,
											"end": 15053,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15034,
											"end": 15053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15034,
											"end": 15053,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14930,
											"end": 14956,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14881,
											"end": 14895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15088,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 15088,
											"end": 15157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15088,
											"end": 15136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 15088,
											"end": 15136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15099,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 15099,
											"end": 15135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14939,
											"end": 14943,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 15099,
											"end": 15135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15099,
											"end": 15135,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 15099,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15088,
											"end": 15094,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15088,
											"end": 15094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15088,
											"end": 15098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 15088,
											"end": 15136,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15088,
											"end": 15157,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 15088,
											"end": 15157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15064,
											"end": 15157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15064,
											"end": 15157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15218,
											"end": 15231,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15197,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15215,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 15193,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15215,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15231,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 15193,
											"end": 15279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15278,
											"end": 15279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15193,
											"end": 15279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 15193,
											"end": 15279,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15279,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 15193,
											"end": 15279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15256,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 15234,
											"end": 15256,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15256,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 15234,
											"end": 15275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15261,
											"end": 15274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 15234,
											"end": 15275,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15234,
											"end": 15275,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 15234,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15168,
											"end": 15172,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15168,
											"end": 15190,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 15168,
											"end": 15190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15168,
											"end": 15279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15168,
											"end": 15279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15168,
											"end": 15279,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15168,
											"end": 15279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 15387,
											"end": 15397,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 15399,
											"end": 15405,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15367,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15368,
											"end": 15372,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15373,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15360,
											"end": 15373,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15373,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15406,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 15360,
											"end": 15406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15452,
											"end": 15456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15440,
											"end": 15450,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "PUSH",
											"source": 2,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 15458,
											"end": 15464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 15422,
											"end": 15465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10029,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10029,
											"end": 10044,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10012,
											"end": 10026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10077,
											"end": 10080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10077,
											"end": 10089,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10144,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10145,
											"end": 10148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10168,
											"end": 10188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10164,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 10164,
											"end": 10240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 10220,
											"end": 10223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10209,
											"end": 10224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10224,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 10209,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10164,
											"end": 10240,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 10164,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9967,
											"end": 10258,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 8255,
											"end": 8259,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8244,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8277,
											"end": 8288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 8273,
											"end": 8334,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8305,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 8305,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 8305,
											"end": 8322,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8305,
											"end": 8322,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 8305,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8359,
											"end": 8363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8374,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8374,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8350,
											"end": 8374,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8350,
											"end": 8374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 8474,
											"end": 8485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8443,
											"end": 8451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8452,
											"end": 8456,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8468,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8443,
											"end": 8468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8468,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8438,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8416,
											"end": 8438,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8416,
											"end": 8442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8469,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8416,
											"end": 8469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8416,
											"end": 8469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8416,
											"end": 8486,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 8416,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8413,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8391,
											"end": 8486,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8602,
											"end": 8613,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8571,
											"end": 8579,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8596,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8571,
											"end": 8596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8596,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8566,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 8544,
											"end": 8566,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8544,
											"end": 8570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8544,
											"end": 8597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8597,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8544,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8544,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8519,
											"end": 8541,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 8519,
											"end": 8614,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 8346,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8645,
											"end": 8649,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8661,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8636,
											"end": 8661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8675,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8636,
											"end": 8675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8699,
											"end": 8703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "PUSH",
											"source": 2,
											"value": "C0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8"
										},
										{
											"begin": 8705,
											"end": 8716,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8691,
											"end": 8717,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7995,
											"end": 8725,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4151,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3853,
											"name": "PUSH",
											"source": 2,
											"value": "1D1A94A2000"
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3853,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4377,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1890,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4386,
											"end": 4416,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16617,
											"end": 16618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16605,
											"end": 16614,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16618,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16642,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 16605,
											"end": 16642,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16641,
											"end": 16642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16622,
											"end": 16638,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16622,
											"end": 16642,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16642,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 16605,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 16605,
											"end": 16666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16665,
											"end": 16666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16646,
											"end": 16662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16646,
											"end": 16666,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 16605,
											"end": 16666,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 16605,
											"end": 16666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 16583,
											"end": 16740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 16773,
											"end": 16826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 16809,
											"end": 16825,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16773,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 16773,
											"end": 16782,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16787,
											"end": 16803,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16773,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 16773,
											"end": 16804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16773,
											"end": 16826,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 16773,
											"end": 16826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16773,
											"end": 16855,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 16751,
											"end": 16920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16935,
											"end": 16946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16931,
											"end": 16992,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16931,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 16931,
											"end": 16992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16963,
											"end": 16980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 16963,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 16963,
											"end": 16980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16963,
											"end": 16980,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 16963,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17051,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 17060,
											"end": 17065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17051,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 17051,
											"end": 17066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17051,
											"end": 17066,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 17051,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17079,
											"end": 17093,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 17079,
											"end": 17105,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17079,
											"end": 17105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17079,
											"end": 17105,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17167,
											"end": 17188,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 17167,
											"end": 17207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17167,
											"end": 17207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17167,
											"end": 17207,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "PUSH",
											"source": 2,
											"value": "49F805C5FED16B2296163D4FD1958B1961EFE39FEF41CBB4B981AAA3D80D22D2"
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 17105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17096,
											"end": 17105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17140,
											"end": 17156,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17140,
											"end": 17156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17191,
											"end": 17207,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17191,
											"end": 17207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17225,
											"end": 17291,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16397,
											"end": 17299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1179,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2963,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18516,
											"end": 18547,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18516,
											"end": 18547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18516,
											"end": 18547,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18516,
											"end": 18547,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18516,
											"end": 18547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18516,
											"end": 18547,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18516,
											"end": 18547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18516,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 18516,
											"end": 18585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18572,
											"end": 18585,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 18572,
											"end": 18585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18572,
											"end": 18585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18551,
											"end": 18585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18551,
											"end": 18585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18551,
											"end": 18585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18572,
											"end": 18585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18572,
											"end": 18585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18551,
											"end": 18585,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18551,
											"end": 18585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18516,
											"end": 18585,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 18516,
											"end": 18585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 18494,
											"end": 18667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18693,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18680,
											"end": 18713,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18729,
											"end": 18767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18729,
											"end": 18767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18729,
											"end": 18767,
											"name": "PUSH",
											"source": 2,
											"value": "4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303"
										},
										{
											"begin": 18729,
											"end": 18767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18729,
											"end": 18767,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18408,
											"end": 18775,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18076,
											"end": 18095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18076,
											"end": 18095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18076,
											"end": 18095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 18068,
											"end": 18150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18172,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "PUSH",
											"source": 2,
											"value": "C551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51"
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18206,
											"end": 18238,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17983,
											"end": 18246,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3245,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6773,
											"end": 6777,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6773,
											"end": 6777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6784,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6746,
											"end": 6784,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "tag",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 6738,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6979,
											"end": 6987,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 6971,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7056,
											"end": 7067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7052,
											"end": 7113,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7052,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 7052,
											"end": 7113,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 7084,
											"end": 7101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7084,
											"end": 7101,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 7084,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7129,
											"end": 7139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7181,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 7181,
											"end": 7220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7219,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7181,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 7181,
											"end": 7220,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7181,
											"end": 7220,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 7181,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7178,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7156,
											"end": 7220,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7278,
											"end": 7300,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 7278,
											"end": 7300,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7278,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 7278,
											"end": 7317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7316,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7278,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 7278,
											"end": 7317,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7278,
											"end": 7317,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 7278,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7275,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 7253,
											"end": 7317,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 7125,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "PUSH",
											"source": 2,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7382,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "PUSH",
											"source": 2,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "PUSH",
											"source": 2,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C"
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "PUSH",
											"source": 2,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19D"
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "PUSH",
											"source": 2,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19E"
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "PUSH",
											"source": 2,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19F"
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7600,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7638,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 7624,
											"end": 7645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7624,
											"end": 7645,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7624,
											"end": 7645,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 7624,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA"
										},
										{
											"begin": 7647,
											"end": 7658,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7670,
											"end": 7680,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "tag",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7681,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 7689,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8972,
											"end": 8979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8992,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 8992,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8992,
											"end": 9012,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8992,
											"end": 9012,
											"name": "tag",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 8992,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9023,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9024,
											"end": 9028,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9040,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 9040,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 9040,
											"end": 9060,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9040,
											"end": 9060,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 9040,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9071,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9077,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9040,
											"end": 9084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9141,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9141,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9171,
											"end": 9193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9171,
											"end": 9193,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9171,
											"end": 9193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9171,
											"end": 9193,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9225,
											"end": 9245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9225,
											"end": 9245,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9225,
											"end": 9245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9225,
											"end": 9245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9171,
											"end": 9193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9222,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9245,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 9210,
											"end": 9262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9249,
											"end": 9262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9249,
											"end": 9262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9249,
											"end": 9262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9262,
											"name": "tag",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 9210,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9206,
											"end": 9659,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9206,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 9206,
											"end": 9659,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 9317,
											"end": 9321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9317,
											"end": 9337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9317,
											"end": 9337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9312,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9300,
											"end": 9316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "tag",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 9300,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9279,
											"end": 9338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9376,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 9465,
											"end": 9469,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9479,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9465,
											"end": 9479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9507,
											"end": 9529,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 9507,
											"end": 9529,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "tag",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9482,
											"end": 9504,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 9482,
											"end": 9504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "tag",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 9465,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9376,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9425,
											"end": 9440,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9425,
											"end": 9440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9425,
											"end": 9440,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9376,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9391,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 9404,
											"end": 9408,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9391,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9391,
											"end": 9419,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9376,
											"end": 9545,
											"name": "tag",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 9376,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9578,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 9598,
											"end": 9646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 9637,
											"end": 9645,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9598,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9355,
											"end": 9545,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9598,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9598,
											"end": 9632,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9598,
											"end": 9646,
											"name": "tag",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 9598,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9578,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9578,
											"end": 9647,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9578,
											"end": 9647,
											"name": "tag",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 9578,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9560,
											"end": 9647,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9560,
											"end": 9647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9206,
											"end": 9659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9206,
											"end": 9659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9206,
											"end": 9659,
											"name": "tag",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 9206,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9671,
											"end": 9692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 9695,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9711,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 9730,
											"end": 9735,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9737,
											"end": 9741,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 9711,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 9711,
											"end": 9742,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9711,
											"end": 9742,
											"name": "tag",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 9711,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9706,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9706,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9695,
											"end": 9743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9695,
											"end": 9764,
											"name": "tag",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 9695,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9845,
											"end": 9860,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9860,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9845,
											"end": 9860,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9845,
											"end": 9860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9671,
											"end": 9764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9671,
											"end": 9764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9782,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 9782,
											"end": 9861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9782,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9671,
											"end": 9764,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9800,
											"end": 9815,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9782,
											"end": 9816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9782,
											"end": 9840,
											"name": "tag",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 9782,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9782,
											"end": 9861,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9782,
											"end": 9861,
											"name": "tag",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 9782,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9775,
											"end": 9861,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 9869,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12318,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "tag",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 2302,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12399,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 12399,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12399,
											"end": 12419,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12399,
											"end": 12419,
											"name": "tag",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 12399,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12422,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 12433,
											"end": 12437,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12422,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12422,
											"end": 12438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12422,
											"end": 12438,
											"name": "tag",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 12422,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12481,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12487,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12488,
											"end": 12498,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12438,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 12534,
											"end": 12573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12562,
											"end": 12572,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12561,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12552,
											"end": 12573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12573,
											"name": "tag",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 12534,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "476"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "478"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "tag",
											"source": 2,
											"value": "476"
										},
										{
											"begin": 12512,
											"end": 12667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12732,
											"end": 12736,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12701,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 12701,
											"end": 12737,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12701,
											"end": 12737,
											"name": "tag",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 12701,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12754,
											"end": 12765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12754,
											"end": 12765,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12754,
											"end": 12769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12750,
											"end": 12845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 12750,
											"end": 12845,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12786,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 12804,
											"end": 12814,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 12816,
											"end": 12820,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12822,
											"end": 12832,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12786,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 12786,
											"end": 12833,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12786,
											"end": 12833,
											"name": "tag",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 12786,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12872,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12872,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 13323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 12857,
											"end": 13323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12889,
											"end": 12903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12913,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12914,
											"end": 12918,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "tag",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12929,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 12906,
											"end": 12929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12938,
											"end": 12942,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 12938,
											"end": 12942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "tag",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "tag",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "tag",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "tag",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 12906,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12889,
											"end": 12944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12889,
											"end": 12944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 12990,
											"end": 13000,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 13010,
											"end": 13014,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 13017,
											"end": 13024,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12966,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12967,
											"end": 12971,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "491"
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "tag",
											"source": 2,
											"value": "491"
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12972,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 13025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 13025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12959,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 12959,
											"end": 13025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12959,
											"end": 13025,
											"name": "tag",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 12959,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "494"
										},
										{
											"begin": 13093,
											"end": 13099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13057,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13058,
											"end": 13062,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "tag",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13073,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 13050,
											"end": 13073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13082,
											"end": 13086,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 13082,
											"end": 13086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "tag",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "tag",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "tag",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 13050,
											"end": 13088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13050,
											"end": 13100,
											"name": "tag",
											"source": 2,
											"value": "494"
										},
										{
											"begin": 13050,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13129,
											"end": 13140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13129,
											"end": 13140,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13040,
											"end": 13100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13040,
											"end": 13100,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13129,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "502"
										},
										{
											"begin": 13129,
											"end": 13153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13040,
											"end": 13100,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13129,
											"end": 13144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 13129,
											"end": 13153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13129,
											"end": 13153,
											"name": "tag",
											"source": 2,
											"value": "502"
										},
										{
											"begin": 13129,
											"end": 13153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13115,
											"end": 13153,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13115,
											"end": 13153,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 13266,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 13266,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 13266,
											"end": 13273,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13278,
											"end": 13288,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13266,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 13266,
											"end": 13289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13266,
											"end": 13310,
											"name": "tag",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 13266,
											"end": 13310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13261,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13239,
											"end": 13261,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 13239,
											"end": 13311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13239,
											"end": 13311,
											"name": "tag",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 13239,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13214,
											"end": 13236,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13214,
											"end": 13236,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13214,
											"end": 13236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13214,
											"end": 13311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12857,
											"end": 13323,
											"name": "tag",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 12857,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 13353,
											"end": 13427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 13406,
											"end": 13410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13406,
											"end": 13426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13406,
											"end": 13426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13406,
											"end": 13426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 13369,
											"end": 13379,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13357,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13353,
											"end": 13364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13364,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 13353,
											"end": 13368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13353,
											"end": 13475,
											"name": "tag",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 13353,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13335,
											"end": 13339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13335,
											"end": 13350,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13335,
											"end": 13350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13335,
											"end": 13475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13335,
											"end": 13475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13335,
											"end": 13475,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13335,
											"end": 13475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13507,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13494,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13495,
											"end": 13499,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "510"
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "tag",
											"source": 2,
											"value": "510"
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13525,
											"end": 13559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13545,
											"end": 13549,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13545,
											"end": 13549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13533,
											"end": 13543,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 13533,
											"end": 13543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13525,
											"end": 13559,
											"name": "PUSH",
											"source": 2,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 13525,
											"end": 13559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13525,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 13525,
											"end": 13559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13551,
											"end": 13558,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13551,
											"end": 13558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13525,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 13525,
											"end": 13559,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 1304,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 2126,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2281,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2045,
											"end": 2289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10408,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10468,
											"end": 10482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10755,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "522"
										},
										{
											"begin": 10495,
											"end": 10755,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10535,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "523"
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 10535,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10565,
											"end": 10586,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 10565,
											"end": 10586,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "1314FB3706298000"
										},
										{
											"begin": 10535,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10535,
											"end": 10564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10535,
											"end": 10587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10535,
											"end": 10587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10535,
											"end": 10587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10535,
											"end": 10587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10535,
											"end": 10587,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10535,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "523"
										},
										{
											"begin": 10535,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 10495,
											"end": 10755,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10755,
											"name": "tag",
											"source": 2,
											"value": "522"
										},
										{
											"begin": 10495,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10660,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 10660,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "1314FB3706298000"
										},
										{
											"begin": 10660,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10660,
											"end": 10689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10660,
											"end": 10712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10660,
											"end": 10712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10660,
											"end": 10712,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10660,
											"end": 10712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10660,
											"end": 10712,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4266,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "1314FB3706298000"
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3512,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "529"
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "tag",
											"source": 2,
											"value": "529"
										},
										{
											"begin": 21088,
											"end": 21108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21119,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21132,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21088,
											"end": 21132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21169,
											"end": 21223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "530"
										},
										{
											"begin": 21169,
											"end": 21223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21169,
											"end": 21202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 21169,
											"end": 21202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21185,
											"end": 21201,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21169,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 21169,
											"end": 21202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21169,
											"end": 21223,
											"name": "tag",
											"source": 2,
											"value": "530"
										},
										{
											"begin": 21169,
											"end": 21223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21145,
											"end": 21223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21145,
											"end": 21223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21234,
											"end": 21249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21252,
											"end": 21325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "532"
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 21252,
											"end": 21301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 21270,
											"end": 21278,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21279,
											"end": 21283,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "tag",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21270,
											"end": 21300,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21252,
											"end": 21265,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21252,
											"end": 21265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21252,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 21252,
											"end": 21301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21252,
											"end": 21325,
											"name": "tag",
											"source": 2,
											"value": "532"
										},
										{
											"begin": 21252,
											"end": 21325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21234,
											"end": 21325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21234,
											"end": 21325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21336,
											"end": 21351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "536"
										},
										{
											"begin": 21366,
											"end": 21370,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21366,
											"end": 21381,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21366,
											"end": 21381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21366,
											"end": 21381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21354,
											"end": 21361,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21354,
											"end": 21365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 21354,
											"end": 21365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "tag",
											"source": 2,
											"value": "536"
										},
										{
											"begin": 21354,
											"end": 21382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21336,
											"end": 21382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21336,
											"end": 21382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21423,
											"end": 21452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "537"
										},
										{
											"begin": 21437,
											"end": 21442,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 21444,
											"end": 21451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21423,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 21423,
											"end": 21452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21423,
											"end": 21452,
											"name": "tag",
											"source": 2,
											"value": "537"
										},
										{
											"begin": 21423,
											"end": 21452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20952,
											"end": 21460,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2256,
											"end": 2727,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2256,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2589,
											"end": 2590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2660,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 2642,
											"end": 2698,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3203,
											"end": 3335,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3203,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 3292,
											"end": 3293,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3327,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3203,
											"end": 3335,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1366,
											"end": 1502,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1366,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1424,
											"end": 1431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1451,
											"end": 1494,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 1083,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 902,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 960,
											"end": 967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 992,
											"end": 997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 605,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21599,
											"end": 21998,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 21599,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21676,
											"end": 21687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21676,
											"end": 21687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21672,
											"end": 21991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 21672,
											"end": 21991,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21797,
											"end": 21812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21797,
											"end": 21812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21815,
											"end": 21819,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 21815,
											"end": 21829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21829,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 21815,
											"end": 21829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "557"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21838,
											"end": 21842,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 21838,
											"end": 21842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "tag",
											"source": 2,
											"value": "557"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "558"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "tag",
											"source": 2,
											"value": "558"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "560"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "tag",
											"source": 2,
											"value": "560"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "561"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "tag",
											"source": 2,
											"value": "561"
										},
										{
											"begin": 21815,
											"end": 21844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21797,
											"end": 21844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21797,
											"end": 21844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21873,
											"end": 21880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21863,
											"end": 21870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21863,
											"end": 21880,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 21859,
											"end": 21934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21859,
											"end": 21934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 21859,
											"end": 21934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 21911,
											"end": 21918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21901,
											"end": 21918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21901,
											"end": 21918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21859,
											"end": 21934,
											"name": "tag",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 21859,
											"end": 21934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21948,
											"end": 21979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "563"
										},
										{
											"begin": 21948,
											"end": 21965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21948,
											"end": 21952,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 21948,
											"end": 21965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21966,
											"end": 21969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21971,
											"end": 21978,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 21948,
											"end": 21965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 21948,
											"end": 21979,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21948,
											"end": 21979,
											"name": "tag",
											"source": 2,
											"value": "563"
										},
										{
											"begin": 21948,
											"end": 21979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21672,
											"end": 21991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21599,
											"end": 21998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21599,
											"end": 21998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21599,
											"end": 21998,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 719,
											"end": 967,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 719,
											"end": 967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 870,
											"end": 875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 913,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 913,
											"end": 936,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 938,
											"end": 940,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 836,
											"end": 959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 975,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 1153,
											"end": 1158,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1196,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1196,
											"end": 1223,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1229,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 1173,
											"end": 1241,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1119,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 1119,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3831,
											"end": 4109,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 3831,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 3993,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 4109,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3831,
											"end": 4109,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1805,
											"end": 1997,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1805,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1997,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3430,
											"end": 4262,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 3430,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3877,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3889,
											"end": 3916,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 3889,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 3889,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 3969,
											"end": 4255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 4135,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 4109,
											"end": 4243,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3661,
											"end": 3857,
											"name": "tag",
											"source": 6,
											"value": "583"
										},
										{
											"begin": 3661,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3796,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3833,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3848,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 3796,
											"end": 3849,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3849,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 3796,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3849,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3857,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3857,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5038,
											"end": 6017,
											"name": "tag",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 5038,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5180,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 5212,
											"end": 5218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "598"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "tag",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 5193,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5364,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5379,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5368,
											"end": 5379,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5396,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5403,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "600"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "tag",
											"source": 6,
											"value": "599"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "602"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "tag",
											"source": 6,
											"value": "603"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "tag",
											"source": 6,
											"value": "602"
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 6010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "604"
										},
										{
											"begin": 5415,
											"end": 6010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 6010,
											"name": "tag",
											"source": 6,
											"value": "604"
										},
										{
											"begin": 5415,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5585,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 5560,
											"end": 5999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5821,
											"end": 5838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 5903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5867,
											"end": 5886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5904,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5923,
											"name": "tag",
											"source": 6,
											"value": "606"
										},
										{
											"begin": 5775,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 5982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "576"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 1165,
											"name": "tag",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 743,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1130,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1157,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1157,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 1165,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "222"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "450"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 1094,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": 853,
											"end": 1094,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 853,
											"end": 1094,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 954,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 932,
											"end": 955,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 928,
											"end": 960,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 925,
											"end": 927,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 925,
											"end": 927,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "612"
										},
										{
											"begin": 925,
											"end": 927,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 963,
											"end": 975,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 925,
											"end": 927,
											"name": "tag",
											"source": -1,
											"value": "612"
										},
										{
											"begin": 925,
											"end": 927,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "198"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "614"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "tag",
											"source": -1,
											"value": "159"
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1205,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1222,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "616"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "tag",
											"source": -1,
											"value": "616"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "617"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "614"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "617"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1340,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "618"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "618"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1445,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1445,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1445,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1445,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1575,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1587,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1592,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "621"
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1607,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "tag",
											"source": -1,
											"value": "621"
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "622"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "614"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "622"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1710,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 1747,
											"end": 1749,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1808,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1808,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1808,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1808,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1834,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1958,
											"end": 1965,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 1977,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1950,
											"end": 1982,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "624"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "tag",
											"source": -1,
											"value": "624"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "625"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "614"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "625"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2100,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 2574,
											"name": "tag",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 2339,
											"end": 2574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2339,
											"end": 2574,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2419,
											"end": 2426,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2438,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "627"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "tag",
											"source": -1,
											"value": "627"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 219,
											"end": 225,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "198"
										},
										{
											"begin": 255,
											"end": 260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2581,
											"end": 2838,
											"name": "tag",
											"source": -1,
											"value": "586"
										},
										{
											"begin": 2581,
											"end": 2838,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2838,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2695,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2679,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2668,
											"end": 2691,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "630"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "tag",
											"source": -1,
											"value": "630"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 354,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 348,
											"end": 361,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "198"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2845,
											"end": 3086,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 2845,
											"end": 3086,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 3086,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2935,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2924,
											"end": 2947,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "633"
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2967,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "tag",
											"source": -1,
											"value": "633"
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 3086,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 3086,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3093,
											"end": 3356,
											"name": "tag",
											"source": -1,
											"value": "427"
										},
										{
											"begin": 3093,
											"end": 3356,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3356,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3210,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3183,
											"end": 3206,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3179,
											"end": 3211,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "635"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3214,
											"end": 3226,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "tag",
											"source": -1,
											"value": "635"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 790,
											"end": 803,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 790,
											"end": 803,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3170,
											"end": 3356,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3170,
											"end": 3356,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3363,
											"end": 3729,
											"name": "tag",
											"source": -1,
											"value": "147"
										},
										{
											"begin": 3363,
											"end": 3729,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3363,
											"end": 3729,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3729,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3486,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3463,
											"end": 3470,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3482,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3455,
											"end": 3487,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "637"
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "tag",
											"source": -1,
											"value": "637"
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3605,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3605,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3703,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "618"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "614"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 4371,
											"name": "tag",
											"source": -1,
											"value": "166"
										},
										{
											"begin": 3736,
											"end": 4371,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 4371,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 4371,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 4371,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 4371,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 3903,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3871,
											"end": 3904,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "640"
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "tag",
											"source": -1,
											"value": "640"
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 4022,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 4022,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4059,
											"end": 4061,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4126,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 490,
											"end": 510,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 515,
											"end": 563,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "641"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 515,
											"end": 563,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "614"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "tag",
											"source": -1,
											"value": "641"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4067,
											"end": 4145,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4184,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "642"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "642"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4190,
											"end": 4250,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "643"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "643"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4371,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4371,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4371,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4371,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4371,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4371,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 4371,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4378,
											"end": 4744,
											"name": "tag",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 4378,
											"end": 4744,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4378,
											"end": 4744,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4744,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 4501,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4478,
											"end": 4485,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4474,
											"end": 4497,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4470,
											"end": 4502,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "645"
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "tag",
											"source": -1,
											"value": "645"
										},
										{
											"begin": 4467,
											"end": 4469,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4657,
											"end": 4659,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4461,
											"end": 4744,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4751,
											"end": 5236,
											"name": "tag",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 4751,
											"end": 5236,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4751,
											"end": 5236,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 5236,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4751,
											"end": 5236,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4872,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 4861,
											"end": 4884,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4857,
											"end": 4889,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "647"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "tag",
											"source": -1,
											"value": "647"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 5007,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 5007,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5046,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5087,
											"end": 5096,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5083,
											"end": 5105,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5052,
											"end": 5115,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5052,
											"end": 5115,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5188,
											"end": 5210,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "648"
										},
										{
											"begin": 255,
											"end": 260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "648"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5220,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5220,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5220,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5220,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5236,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5236,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5236,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5236,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5236,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5236,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5243,
											"end": 5854,
											"name": "tag",
											"source": -1,
											"value": "136"
										},
										{
											"begin": 5243,
											"end": 5854,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5243,
											"end": 5854,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5854,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5243,
											"end": 5854,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5854,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5395,
											"end": 5398,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5374,
											"end": 5381,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5393,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "650"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5414,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "tag",
											"source": -1,
											"value": "650"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5554,
											"end": 5556,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5593,
											"end": 5615,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5562,
											"end": 5625,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5562,
											"end": 5625,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5705,
											"end": 5714,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5701,
											"end": 5723,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5670,
											"end": 5733,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5670,
											"end": 5733,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 5810,
											"end": 5819,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5806,
											"end": 5828,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "643"
										},
										{
											"begin": 255,
											"end": 260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 16322,
											"end": 16593,
											"name": "tag",
											"source": -1,
											"value": "600"
										},
										{
											"begin": 16322,
											"end": 16593,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16322,
											"end": 16593,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6358,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29384,
											"end": 29396,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 6464,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "653"
										},
										{
											"begin": 6509,
											"end": 6515,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6504,
											"end": 6507,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6497,
											"end": 6501,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6495,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6502,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6464,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "654"
										},
										{
											"begin": 6464,
											"end": 6516,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6464,
											"end": 6516,
											"name": "tag",
											"source": -1,
											"value": "653"
										},
										{
											"begin": 6464,
											"end": 6516,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6544,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6544,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6544,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6544,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6544,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 16456,
											"end": 16593,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16456,
											"end": 16593,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16600,
											"end": 16822,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 16600,
											"end": 16822,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30255,
											"end": 30297,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16727,
											"end": 16729,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16712,
											"end": 16730,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16712,
											"end": 16730,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16698,
											"end": 16822,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16829,
											"end": 17273,
											"name": "tag",
											"source": -1,
											"value": "572"
										},
										{
											"begin": 16829,
											"end": 17273,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30255,
											"end": 30297,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 17176,
											"end": 17178,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17161,
											"end": 17179,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17161,
											"end": 17179,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17259,
											"end": 17261,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17244,
											"end": 17262,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17244,
											"end": 17262,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17012,
											"end": 17014,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16983,
											"end": 17273,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17280,
											"end": 17613,
											"name": "tag",
											"source": -1,
											"value": "567"
										},
										{
											"begin": 17280,
											"end": 17613,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30255,
											"end": 30297,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5969,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17599,
											"end": 17601,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17584,
											"end": 17602,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17584,
											"end": 17602,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17435,
											"end": 17437,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 17420,
											"end": 17438,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17420,
											"end": 17438,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17406,
											"end": 17613,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17620,
											"end": 17830,
											"name": "tag",
											"source": -1,
											"value": "97"
										},
										{
											"begin": 17620,
											"end": 17830,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30043,
											"end": 30056,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30043,
											"end": 30056,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30036,
											"end": 30057,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6070,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6070,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17741,
											"end": 17743,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17726,
											"end": 17744,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17726,
											"end": 17744,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17712,
											"end": 17830,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18096,
											"end": 18406,
											"name": "tag",
											"source": -1,
											"value": "576"
										},
										{
											"begin": 18096,
											"end": 18406,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18096,
											"end": 18406,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18243,
											"end": 18245,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18264,
											"end": 18281,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18257,
											"end": 18304,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6864,
											"end": 6869,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29384,
											"end": 29396,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 29823,
											"end": 29829,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 18243,
											"end": 18245,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18232,
											"end": 18241,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 18228,
											"end": 18246,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6958,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "661"
										},
										{
											"begin": 7003,
											"end": 7009,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 18232,
											"end": 18241,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18243,
											"end": 18245,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 6989,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6958,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "654"
										},
										{
											"begin": 6958,
											"end": 7010,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6958,
											"end": 7010,
											"name": "tag",
											"source": -1,
											"value": "661"
										},
										{
											"begin": 6958,
											"end": 7010,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31042,
											"end": 31044,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 31022,
											"end": 31036,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31038,
											"end": 31045,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 31018,
											"end": 31046,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7061,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7061,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7061,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7061,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7061,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7061,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18214,
											"end": 18406,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18214,
											"end": 18406,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18413,
											"end": 18829,
											"name": "tag",
											"source": -1,
											"value": "220"
										},
										{
											"begin": 18413,
											"end": 18829,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18613,
											"end": 18615,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18627,
											"end": 18674,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 18627,
											"end": 18674,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18627,
											"end": 18674,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": -1,
											"value": "2A"
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7334,
											"end": 7368,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A20496E76616C6964206E657720626F6F737420"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7314,
											"end": 7369,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "PUSH",
											"source": -1,
											"value": "6D756C7469706C69657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7389,
											"end": 7401,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7416,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7435,
											"end": 7447,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 7435,
											"end": 7447,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7435,
											"end": 7447,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18584,
											"end": 18829,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18836,
											"end": 19252,
											"name": "tag",
											"source": -1,
											"value": "211"
										},
										{
											"begin": 18836,
											"end": 19252,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19036,
											"end": 19038,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19050,
											"end": 19097,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19050,
											"end": 19097,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19050,
											"end": 19097,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "PUSH",
											"source": -1,
											"value": "2C"
										},
										{
											"begin": 19021,
											"end": 19039,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19021,
											"end": 19039,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19021,
											"end": 19039,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A2054686520757365722061646472657373206D"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7702,
											"end": 7757,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7805,
											"name": "PUSH",
											"source": -1,
											"value": "7573742062652076616C69640000000000000000000000000000000000000000"
										},
										{
											"begin": 7777,
											"end": 7789,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 7777,
											"end": 7789,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7777,
											"end": 7789,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7770,
											"end": 7806,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19007,
											"end": 19252,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19259,
											"end": 19675,
											"name": "tag",
											"source": -1,
											"value": "589"
										},
										{
											"begin": 19259,
											"end": 19675,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19459,
											"end": 19461,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19473,
											"end": 19520,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19473,
											"end": 19520,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19473,
											"end": 19520,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8078,
											"name": "PUSH",
											"source": -1,
											"value": "2A"
										},
										{
											"begin": 19444,
											"end": 19462,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19444,
											"end": 19462,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19444,
											"end": 19462,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8112,
											"end": 8146,
											"name": "PUSH",
											"source": -1,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8092,
											"end": 8147,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8181,
											"end": 8193,
											"name": "PUSH",
											"source": -1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8160,
											"end": 8194,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 8225,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8213,
											"end": 8225,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 8225,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19430,
											"end": 19675,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19682,
											"end": 20098,
											"name": "tag",
											"source": -1,
											"value": "520"
										},
										{
											"begin": 19682,
											"end": 20098,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19882,
											"end": 19884,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19896,
											"end": 19943,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19896,
											"end": 19943,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19896,
											"end": 19943,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8466,
											"name": "PUSH",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19867,
											"end": 19885,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8500,
											"end": 8534,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8480,
											"end": 8535,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8569,
											"end": 8577,
											"name": "PUSH",
											"source": -1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8555,
											"end": 8567,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8555,
											"end": 8567,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8555,
											"end": 8567,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8548,
											"end": 8578,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8597,
											"end": 8609,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8597,
											"end": 8609,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8597,
											"end": 8609,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19853,
											"end": 20098,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20105,
											"end": 20521,
											"name": "tag",
											"source": -1,
											"value": "553"
										},
										{
											"begin": 20105,
											"end": 20521,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20305,
											"end": 20307,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20319,
											"end": 20366,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20319,
											"end": 20366,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20319,
											"end": 20366,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": 20290,
											"end": 20308,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20290,
											"end": 20308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20290,
											"end": 20308,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8884,
											"end": 8913,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8864,
											"end": 8914,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8933,
											"end": 8945,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8933,
											"end": 8945,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8933,
											"end": 8945,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20276,
											"end": 20521,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20528,
											"end": 20944,
											"name": "tag",
											"source": -1,
											"value": "254"
										},
										{
											"begin": 20528,
											"end": 20944,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20728,
											"end": 20730,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20742,
											"end": 20789,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20742,
											"end": 20789,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20742,
											"end": 20789,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9186,
											"name": "PUSH",
											"source": -1,
											"value": "2E"
										},
										{
											"begin": 20713,
											"end": 20731,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20713,
											"end": 20731,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20713,
											"end": 20731,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9220,
											"end": 9254,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A204275726E2061646D696E2061646472657373"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9200,
											"end": 9255,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9289,
											"end": 9305,
											"name": "PUSH",
											"source": -1,
											"value": "206D7573742062652076616C6964000000000000000000000000000000000000"
										},
										{
											"begin": 9275,
											"end": 9287,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9275,
											"end": 9287,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9275,
											"end": 9287,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9268,
											"end": 9306,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9325,
											"end": 9337,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20699,
											"end": 20944,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20951,
											"end": 21367,
											"name": "tag",
											"source": -1,
											"value": "478"
										},
										{
											"begin": 20951,
											"end": 21367,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21151,
											"end": 21153,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21165,
											"end": 21212,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21165,
											"end": 21212,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21165,
											"end": 21212,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9576,
											"end": 9578,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 21136,
											"end": 21154,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21136,
											"end": 21154,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21136,
											"end": 21154,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9612,
											"end": 9646,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A205468652061646472657373206973206E6F74"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9592,
											"end": 9647,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9681,
											"end": 9715,
											"name": "PUSH",
											"source": -1,
											"value": "20617661696C61626C6520746F206465706F73697420696E207468697320706F"
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9660,
											"end": 9716,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9750,
											"end": 9754,
											"name": "PUSH",
											"source": -1,
											"value": "6F6C000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9729,
											"end": 9755,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9774,
											"end": 9786,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 9774,
											"end": 9786,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9774,
											"end": 9786,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21122,
											"end": 21367,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21374,
											"end": 21790,
											"name": "tag",
											"source": -1,
											"value": "388"
										},
										{
											"begin": 21374,
											"end": 21790,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21574,
											"end": 21576,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21588,
											"end": 21635,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21588,
											"end": 21635,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21588,
											"end": 21635,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10025,
											"end": 10027,
											"name": "PUSH",
											"source": -1,
											"value": "2E"
										},
										{
											"begin": 21559,
											"end": 21577,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21559,
											"end": 21577,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21559,
											"end": 21577,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10095,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A20534844572072617465206D75737420626520"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10041,
											"end": 10096,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10130,
											"end": 10146,
											"name": "PUSH",
											"source": -1,
											"value": "67726561746572207468616E2030000000000000000000000000000000000000"
										},
										{
											"begin": 10116,
											"end": 10128,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10116,
											"end": 10128,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10116,
											"end": 10128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10109,
											"end": 10147,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10166,
											"end": 10178,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10166,
											"end": 10178,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10166,
											"end": 10178,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21545,
											"end": 21790,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21797,
											"end": 22213,
											"name": "tag",
											"source": -1,
											"value": "393"
										},
										{
											"begin": 21797,
											"end": 22213,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21997,
											"end": 21999,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22011,
											"end": 22058,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22011,
											"end": 22058,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22011,
											"end": 22058,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10419,
											"name": "PUSH",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 21982,
											"end": 22000,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21982,
											"end": 22000,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21982,
											"end": 22000,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10453,
											"end": 10487,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A20546F74616C2072617465206D757374206265"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10433,
											"end": 10488,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10522,
											"end": 10529,
											"name": "PUSH",
											"source": -1,
											"value": "2031653132000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10501,
											"end": 10530,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10549,
											"end": 10561,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10549,
											"end": 10561,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10549,
											"end": 10561,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21968,
											"end": 22213,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22220,
											"end": 22636,
											"name": "tag",
											"source": -1,
											"value": "415"
										},
										{
											"begin": 22220,
											"end": 22636,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22420,
											"end": 22422,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22434,
											"end": 22481,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22434,
											"end": 22481,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22434,
											"end": 22481,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10800,
											"end": 10802,
											"name": "PUSH",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 22405,
											"end": 22423,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22405,
											"end": 22423,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22405,
											"end": 22423,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10836,
											"end": 10870,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A20546865207768697465206C69737420616464"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10816,
											"end": 10871,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10905,
											"end": 10925,
											"name": "PUSH",
											"source": -1,
											"value": "72657373206D7573742062652076616C69640000000000000000000000000000"
										},
										{
											"begin": 10891,
											"end": 10903,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10891,
											"end": 10903,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10891,
											"end": 10903,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10884,
											"end": 10926,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10945,
											"end": 10957,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10945,
											"end": 10957,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10945,
											"end": 10957,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22391,
											"end": 22636,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22643,
											"end": 23059,
											"name": "tag",
											"source": -1,
											"value": "543"
										},
										{
											"begin": 22643,
											"end": 23059,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22843,
											"end": 22845,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22857,
											"end": 22904,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22857,
											"end": 22904,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22857,
											"end": 22904,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11196,
											"end": 11198,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 22828,
											"end": 22846,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22828,
											"end": 22846,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22828,
											"end": 22846,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11232,
											"end": 11266,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11212,
											"end": 11267,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11301,
											"end": 11304,
											"name": "PUSH",
											"source": -1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11287,
											"end": 11299,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11287,
											"end": 11299,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11299,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11280,
											"end": 11305,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22814,
											"end": 23059,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23066,
											"end": 23482,
											"name": "tag",
											"source": -1,
											"value": "283"
										},
										{
											"begin": 23066,
											"end": 23482,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23266,
											"end": 23268,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23280,
											"end": 23327,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23280,
											"end": 23327,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23280,
											"end": 23327,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11575,
											"end": 11577,
											"name": "PUSH",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 23251,
											"end": 23269,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23251,
											"end": 23269,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23251,
											"end": 23269,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11611,
											"end": 11635,
											"name": "PUSH",
											"source": -1,
											"value": "77697468647261773A20496E73756666696369656E7400000000000000000000"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11591,
											"end": 11636,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11667,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11655,
											"end": 11667,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11667,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23237,
											"end": 23482,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23489,
											"end": 23905,
											"name": "tag",
											"source": -1,
											"value": "430"
										},
										{
											"begin": 23489,
											"end": 23905,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23689,
											"end": 23691,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23703,
											"end": 23750,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23703,
											"end": 23750,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23703,
											"end": 23750,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11906,
											"end": 11908,
											"name": "PUSH",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 23674,
											"end": 23692,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23674,
											"end": 23692,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23674,
											"end": 23692,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F6E6520424550323020746F6B656E73000000000000000000000000000000"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11922,
											"end": 11962,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11981,
											"end": 11993,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11981,
											"end": 11993,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11981,
											"end": 11993,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23660,
											"end": 23905,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23912,
											"end": 24328,
											"name": "tag",
											"source": -1,
											"value": "250"
										},
										{
											"begin": 23912,
											"end": 24328,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24112,
											"end": 24114,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24126,
											"end": 24173,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24126,
											"end": 24173,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24126,
											"end": 24173,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24097,
											"end": 24115,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24097,
											"end": 24115,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24097,
											"end": 24115,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12268,
											"end": 12302,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12248,
											"end": 12303,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12322,
											"end": 12334,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12322,
											"end": 12334,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12322,
											"end": 12334,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24083,
											"end": 24328,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24335,
											"end": 24751,
											"name": "tag",
											"source": -1,
											"value": "203"
										},
										{
											"begin": 24335,
											"end": 24751,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24535,
											"end": 24537,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24549,
											"end": 24596,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24549,
											"end": 24596,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24549,
											"end": 24596,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12573,
											"end": 12575,
											"name": "PUSH",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 24520,
											"end": 24538,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24520,
											"end": 24538,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24520,
											"end": 24538,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12609,
											"end": 12643,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12589,
											"end": 12644,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12678,
											"end": 12689,
											"name": "PUSH",
											"source": -1,
											"value": "20636F6E74726163740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12664,
											"end": 12676,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12664,
											"end": 12676,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12664,
											"end": 12676,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12657,
											"end": 12690,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12709,
											"end": 12721,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 12709,
											"end": 12721,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12709,
											"end": 12721,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24506,
											"end": 24751,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24758,
											"end": 25174,
											"name": "tag",
											"source": -1,
											"value": "407"
										},
										{
											"begin": 24758,
											"end": 25174,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24958,
											"end": 24960,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24972,
											"end": 25019,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24972,
											"end": 25019,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24972,
											"end": 25019,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12960,
											"end": 12962,
											"name": "PUSH",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 24943,
											"end": 24961,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24943,
											"end": 24961,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24943,
											"end": 24961,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 13030,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A204E657720626F6F737420636F6E7472616374"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12976,
											"end": 13031,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13065,
											"end": 13089,
											"name": "PUSH",
											"source": -1,
											"value": "2061646472657373206D7573742062652076616C696400000000000000000000"
										},
										{
											"begin": 13051,
											"end": 13063,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13051,
											"end": 13063,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13051,
											"end": 13063,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13044,
											"end": 13090,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24929,
											"end": 25174,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25181,
											"end": 25597,
											"name": "tag",
											"source": -1,
											"value": "598"
										},
										{
											"begin": 25181,
											"end": 25597,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25381,
											"end": 25383,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25395,
											"end": 25442,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25395,
											"end": 25442,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25395,
											"end": 25442,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13360,
											"end": 13362,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": 25366,
											"end": 25384,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25366,
											"end": 25384,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25366,
											"end": 25384,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13396,
											"end": 13427,
											"name": "PUSH",
											"source": -1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13376,
											"end": 13428,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13447,
											"end": 13459,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13447,
											"end": 13459,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13447,
											"end": 13459,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25352,
											"end": 25597,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25604,
											"end": 26020,
											"name": "tag",
											"source": -1,
											"value": "257"
										},
										{
											"begin": 25604,
											"end": 26020,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25804,
											"end": 25806,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25818,
											"end": 25865,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25818,
											"end": 25865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25818,
											"end": 25865,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13698,
											"end": 13700,
											"name": "PUSH",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 25789,
											"end": 25807,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25789,
											"end": 25807,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25789,
											"end": 25807,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13734,
											"end": 13768,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A204275726E2061646D696E2061646472657373"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13714,
											"end": 13769,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13803,
											"end": 13837,
											"name": "PUSH",
											"source": -1,
											"value": "206973207468652073616D6520776974682063757272656E7420616464726573"
										},
										{
											"begin": 13789,
											"end": 13801,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13789,
											"end": 13801,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13789,
											"end": 13801,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13782,
											"end": 13838,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13872,
											"end": 13875,
											"name": "PUSH",
											"source": -1,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13858,
											"end": 13870,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 13858,
											"end": 13870,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13858,
											"end": 13870,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13851,
											"end": 13876,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13895,
											"end": 13907,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 13895,
											"end": 13907,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13895,
											"end": 13907,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25775,
											"end": 26020,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26027,
											"end": 26443,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 26027,
											"end": 26443,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26227,
											"end": 26229,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26241,
											"end": 26288,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26241,
											"end": 26288,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26241,
											"end": 26288,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14146,
											"end": 14148,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 26212,
											"end": 26230,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26212,
											"end": 26230,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26212,
											"end": 26230,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14182,
											"end": 14216,
											"name": "PUSH",
											"source": -1,
											"value": "536861646F774368656656323A204F6E6C7920726567756C6172206661726D20"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14162,
											"end": 14217,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "PUSH",
											"source": -1,
											"value": "636F756C6420626520626F6F7374656400000000000000000000000000000000"
										},
										{
											"begin": 14237,
											"end": 14249,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14237,
											"end": 14249,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14237,
											"end": 14249,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14230,
											"end": 14270,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14289,
											"end": 14301,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 14289,
											"end": 14301,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14289,
											"end": 14301,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26198,
											"end": 26443,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26450,
											"end": 26866,
											"name": "tag",
											"source": -1,
											"value": "433"
										},
										{
											"begin": 26450,
											"end": 26866,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26650,
											"end": 26652,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26664,
											"end": 26711,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26664,
											"end": 26711,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26664,
											"end": 26711,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14540,
											"end": 14542,
											"name": "PUSH",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 26635,
											"end": 26653,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26635,
											"end": 26653,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26635,
											"end": 26653,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14576,
											"end": 14610,
											"name": "PUSH",
											"source": -1,
											"value": "5348445720746F6B656E2063616E277420626520616464656420746F20666172"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14556,
											"end": 14611,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14645,
											"end": 14654,
											"name": "PUSH",
											"source": -1,
											"value": "6D20706F6F6C7300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14631,
											"end": 14643,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14631,
											"end": 14643,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14631,
											"end": 14643,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14624,
											"end": 14655,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14674,
											"end": 14686,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 14674,
											"end": 14686,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14674,
											"end": 14686,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26621,
											"end": 26866,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26873,
											"end": 27289,
											"name": "tag",
											"source": -1,
											"value": "207"
										},
										{
											"begin": 26873,
											"end": 27289,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27073,
											"end": 27075,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27087,
											"end": 27134,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 27087,
											"end": 27134,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27087,
											"end": 27134,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14925,
											"end": 14927,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 27058,
											"end": 27076,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27058,
											"end": 27076,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27058,
											"end": 27076,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29811,
											"end": 29830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14961,
											"end": 14994,
											"name": "PUSH",
											"source": -1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14941,
											"end": 14995,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15014,
											"end": 15026,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15014,
											"end": 15026,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15014,
											"end": 15026,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27044,
											"end": 27289,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27296,
											"end": 27619,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 27296,
											"end": 27619,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27296,
											"end": 27619,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27473,
											"end": 27476,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 27462,
											"end": 27471,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27458,
											"end": 27477,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27450,
											"end": 27477,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27450,
											"end": 27477,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15333,
											"end": 15349,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15327,
											"end": 15350,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16160,
											"end": 16163,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15509,
											"end": 15513,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15502,
											"end": 15507,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15498,
											"end": 15514,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15492,
											"end": 15515,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 15509,
											"end": 15513,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15573,
											"end": 15576,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15569,
											"end": 15583,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15669,
											"end": 15673,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 15662,
											"end": 15667,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15658,
											"end": 15674,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15652,
											"end": 15675,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 15669,
											"end": 15673,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 15733,
											"end": 15736,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15729,
											"end": 15743,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15836,
											"end": 15840,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15829,
											"end": 15834,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15825,
											"end": 15841,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15819,
											"end": 15842,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 15836,
											"end": 15840,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15900,
											"end": 15903,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15896,
											"end": 15910,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15995,
											"end": 15999,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 15988,
											"end": 15993,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15984,
											"end": 16000,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15978,
											"end": 16001,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 30043,
											"end": 30056,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30036,
											"end": 30057,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 15995,
											"end": 15999,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 16053,
											"end": 16056,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16049,
											"end": 16063,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6070,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27444,
											"end": 27619,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 27444,
											"end": 27619,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27444,
											"end": 27619,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27444,
											"end": 27619,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27444,
											"end": 27619,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27626,
											"end": 27848,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 27626,
											"end": 27848,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27753,
											"end": 27755,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27738,
											"end": 27756,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27738,
											"end": 27756,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27724,
											"end": 27848,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27855,
											"end": 28176,
											"name": "tag",
											"source": -1,
											"value": "444"
										},
										{
											"begin": 27855,
											"end": 28176,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30043,
											"end": 30056,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30036,
											"end": 30057,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 28162,
											"end": 28164,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28147,
											"end": 28165,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28147,
											"end": 28165,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6070,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28004,
											"end": 28006,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 27989,
											"end": 28007,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27989,
											"end": 28007,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27975,
											"end": 28176,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28183,
											"end": 28627,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": 28183,
											"end": 28627,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28530,
											"end": 28532,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28515,
											"end": 28533,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 28515,
											"end": 28533,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28613,
											"end": 28615,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 28598,
											"end": 28616,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28598,
											"end": 28616,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28366,
											"end": 28368,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 28351,
											"end": 28369,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28351,
											"end": 28369,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28337,
											"end": 28627,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28634,
											"end": 29290,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 28634,
											"end": 29290,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29032,
											"end": 29034,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29017,
											"end": 29035,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 29017,
											"end": 29035,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29115,
											"end": 29117,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29100,
											"end": 29118,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29100,
											"end": 29118,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29198,
											"end": 29200,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 29183,
											"end": 29201,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29183,
											"end": 29201,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30043,
											"end": 30056,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30036,
											"end": 30057,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 29275,
											"end": 29278,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 29260,
											"end": 29279,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29260,
											"end": 29279,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6070,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28867,
											"end": 28870,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 28852,
											"end": 28871,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28852,
											"end": 28871,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28838,
											"end": 29290,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 30678,
											"end": 30946,
											"name": "tag",
											"source": -1,
											"value": "654"
										},
										{
											"begin": 30678,
											"end": 30946,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30743,
											"end": 30744,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "tag",
											"source": -1,
											"value": "689"
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30764,
											"end": 30770,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30761,
											"end": 30762,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30758,
											"end": 30771,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "691"
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 30831,
											"end": 30842,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30831,
											"end": 30842,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30831,
											"end": 30842,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30825,
											"end": 30843,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 30812,
											"end": 30823,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30812,
											"end": 30823,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30812,
											"end": 30823,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30805,
											"end": 30844,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30786,
											"end": 30788,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30779,
											"end": 30789,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "689"
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "tag",
											"source": -1,
											"value": "691"
										},
										{
											"begin": 30750,
											"end": 30851,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30866,
											"end": 30872,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30863,
											"end": 30864,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30860,
											"end": 30873,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 30857,
											"end": 30859,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30857,
											"end": 30859,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "570"
										},
										{
											"begin": 30857,
											"end": 30859,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30743,
											"end": 30744,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30913,
											"end": 30929,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 30913,
											"end": 30929,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30906,
											"end": 30933,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30727,
											"end": 30946,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 31059,
											"end": 31176,
											"name": "tag",
											"source": -1,
											"value": "614"
										},
										{
											"begin": 31059,
											"end": 31176,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30255,
											"end": 30297,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31146,
											"end": 31151,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30244,
											"end": 30298,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 31121,
											"end": 31126,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 31118,
											"end": 31153,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 31108,
											"end": 31110,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "694"
										},
										{
											"begin": 31108,
											"end": 31110,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31167,
											"end": 31168,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31167,
											"end": 31168,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 31157,
											"end": 31169,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 31108,
											"end": 31110,
											"name": "tag",
											"source": -1,
											"value": "694"
										},
										{
											"begin": 31108,
											"end": 31110,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31102,
											"end": 31176,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31102,
											"end": 31176,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 31183,
											"end": 31294,
											"name": "tag",
											"source": -1,
											"value": "619"
										},
										{
											"begin": 31183,
											"end": 31294,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31264,
											"end": 31269,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 30043,
											"end": 30056,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30036,
											"end": 30057,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 31242,
											"end": 31247,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 31239,
											"end": 31271,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 31229,
											"end": 31231,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "694"
										},
										{
											"begin": 31229,
											"end": 31231,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31285,
											"end": 31286,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31285,
											"end": 31286,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 31275,
											"end": 31287,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ACC_SHDW_PRECISION()": "16e80f4d",
							"BOOST_PRECISION()": "cc6db2da",
							"MASTERCHEF_SHDW_PER_BLOCK()": "f5b91cd3",
							"MAX_BOOST_PRECISION()": "69b02128",
							"SHDW()": "03dcff74",
							"SHDW_RATE_TOTAL_PRECISION()": "d2ce6ae8",
							"add(uint256,address,bool,bool)": "c507aeaa",
							"boostContract()": "dfcedeee",
							"burnAdmin()": "81bdf98c",
							"burnShdw(bool)": "36183ed6",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getBoostMultiplier(address,uint256)": "033186e8",
							"lastBurnedBlock()": "78db4c34",
							"lpToken(uint256)": "78ed5d1f",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"pendingShdw(uint256,address)": "c799b59d",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"shdwPerBlock(bool)": "f474309e",
							"shdwPerBlockToBurn()": "19f95e2e",
							"shdwRateToBurn()": "6661100f",
							"shdwRateToRegularFarm()": "f5a26f40",
							"shdwRateToSpecialFarm()": "6fda08c3",
							"totalRegularAllocPoint()": "c40d337b",
							"totalSpecialAllocPoint()": "99d7e84a",
							"transferOwnership(address)": "f2fde38b",
							"updateBoostContract(address)": "9dd2fcc3",
							"updateBoostMultiplier(address,uint256,uint256)": "041a84c9",
							"updateBurnAdmin(address)": "0bb844bc",
							"updatePool(uint256)": "51eb05a6",
							"updateShdwRate(uint256,uint256,uint256,bool)": "815d087f",
							"updateWhiteList(address,bool)": "ac1d0609",
							"userInfo(uint256,address)": "93f1a40b",
							"whiteList(address)": "372c12b1",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_SHDW\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burnAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"regularFarmRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"specialFarmRate\",\"type\":\"uint256\"}],\"name\":\"EventUpdateShdwRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Init\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"}],\"name\":\"SetPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boostContract\",\"type\":\"address\"}],\"name\":\"UpdateBoostContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMultiplier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"UpdateBoostMultiplier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"UpdateBurnAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accShdwPerShare\",\"type\":\"uint256\"}],\"name\":\"UpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"UpdateWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_SHDW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOOST_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MASTERCHEF_SHDW_PER_BLOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BOOST_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHDW\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHDW_RATE_TOTAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isRegular\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"burnShdw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getBoostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBurnedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingShdw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"accShdwPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBoostedShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pools\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isRegular\",\"type\":\"bool\"}],\"name\":\"shdwPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwPerBlockToBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwRateToBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwRateToRegularFarm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwRateToSpecialFarm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRegularAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSpecialAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBoostContract\",\"type\":\"address\"}],\"name\":\"updateBoostContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateBoostMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"updateBurnAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"accShdwPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBoostedShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"internalType\":\"struct ShadowChefV2.PoolInfo\",\"name\":\"pool\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularFarmRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_specialFarmRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"updateShdwRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"updateWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boostMultiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(uint256,address,bool,bool)\":{\"params\":{\"_allocPoint\":\"Number of allocation points for the new pool.\",\"_isRegular\":\"Whether the pool is regular or special. LP farms are always \\\"regular\\\". \\\"Special\\\" pools are\",\"_lpToken\":\"Address of the LP BEP-20 token.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation. only for SHDW distributions within ShadowSwap products.\"}},\"burnShdw(bool)\":{\"params\":{\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"constructor\":{\"params\":{\"_SHDW\":\"The SHDW token contract address.\",\"_burnAdmin\":\"The address of burn admin.\"}},\"deposit(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of LP tokens to deposit.\",\"_pid\":\"The id of the pool. See `poolInfo`.\"}},\"emergencyWithdraw(uint256)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\"}},\"getBoostMultiplier(address,uint256)\":{\"params\":{\"_pid\":\"The pool id.\",\"_user\":\"The user address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingShdw(uint256,address)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\",\"_user\":\"Address of the user.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"set(uint256,uint256,bool)\":{\"params\":{\"_allocPoint\":\"New number of allocation points for the pool.\",\"_pid\":\"The id of the pool. See `poolInfo`.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"shdwPerBlock(bool)\":{\"params\":{\"_isRegular\":\"If the pool belongs to regular or special.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBoostContract(address)\":{\"params\":{\"_newBoostContract\":\"The new address for handling all the share boosts.\"}},\"updateBoostMultiplier(address,uint256,uint256)\":{\"params\":{\"_newMultiplier\":\"New boost multiplier.\",\"_pid\":\"The pool id for the boost factor updates.\",\"_user\":\"The user address for boost factor updates.\"}},\"updateBurnAdmin(address)\":{\"params\":{\"_newAdmin\":\"The new burn admin address.\"}},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\"},\"returns\":{\"pool\":\"Returns the pool that was updated.\"}},\"updateShdwRate(uint256,uint256,uint256,bool)\":{\"params\":{\"_burnRate\":\"The % of SHDW to burn each block.\",\"_regularFarmRate\":\"The % of SHDW to regular pools each block.\",\"_specialFarmRate\":\"The % of SHDW to special pools each block.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"updateWhiteList(address,bool)\":{\"params\":{\"_isValid\":\"The flag for valid or invalid.\",\"_user\":\"The address to be updated.\"}},\"withdraw(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of LP tokens to withdraw.\",\"_pid\":\"The id of the pool. See `poolInfo`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BOOST_PRECISION()\":{\"notice\":\"Basic boost factor, none boosted user's boost factor\"},\"MASTERCHEF_SHDW_PER_BLOCK()\":{\"notice\":\"40 SHDWs per block in MCV1\"},\"MAX_BOOST_PRECISION()\":{\"notice\":\"Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION\"},\"SHDW()\":{\"notice\":\"Address of SHDW contract.\"},\"SHDW_RATE_TOTAL_PRECISION()\":{\"notice\":\"total SHDW rate = toBurn + toRegular + toSpecial\"},\"add(uint256,address,bool,bool)\":{\"notice\":\"Add a new pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.\"},\"boostContract()\":{\"notice\":\"The contract handles the share boosts.\"},\"burnAdmin()\":{\"notice\":\"The only address can withdraw all the burn SHDW.\"},\"burnShdw(bool)\":{\"notice\":\"Send SHDW pending for burn to `burnAdmin`.\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposit LP tokens to pool.\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Withdraw without caring about the rewards. EMERGENCY ONLY.\"},\"getBoostMultiplier(address,uint256)\":{\"notice\":\"Get user boost multiplier for specific pool id.\"},\"lpToken(uint256)\":{\"notice\":\"Address of the LP token for each MCV2 pool.\"},\"massUpdatePools()\":{\"notice\":\"Update SHDW reward for all the active pools. Be careful of gas spending!\"},\"pendingShdw(uint256,address)\":{\"notice\":\"View function for checking pending SHDW rewards.\"},\"poolInfo(uint256)\":{\"notice\":\"Info of each MCV2 pool.\"},\"poolLength()\":{\"notice\":\"Returns the number of MCV2 pools.\"},\"set(uint256,uint256,bool)\":{\"notice\":\"Update the given pool's SHDW allocation point. Can only be called by the owner.\"},\"shdwPerBlock(bool)\":{\"notice\":\"Calculates and returns the `amount` of SHDW per block.\"},\"shdwPerBlockToBurn()\":{\"notice\":\"Calculates and returns the `amount` of SHDW per block to burn.\"},\"shdwRateToBurn()\":{\"notice\":\"The last block number of SHDW burn action being executed.SHDW distribute % for burn\"},\"shdwRateToRegularFarm()\":{\"notice\":\"SHDW distribute % for regular farm pool\"},\"shdwRateToSpecialFarm()\":{\"notice\":\"SHDW distribute % for special pools\"},\"totalRegularAllocPoint()\":{\"notice\":\"Total regular allocation points. Must be the sum of all regular pools' allocation points.\"},\"totalSpecialAllocPoint()\":{\"notice\":\"Total special allocation points. Must be the sum of all special pools' allocation points.\"},\"updateBoostContract(address)\":{\"notice\":\"Update boost contract address and max boost factor.\"},\"updateBoostMultiplier(address,uint256,uint256)\":{\"notice\":\"Update user boost factor.\"},\"updateBurnAdmin(address)\":{\"notice\":\"Update burn admin address.\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables for the given pool.\"},\"updateShdwRate(uint256,uint256,uint256,bool)\":{\"notice\":\"Update the % of SHDW distributions for burn, regular pools and special pools.\"},\"updateWhiteList(address,bool)\":{\"notice\":\"Update whitelisted addresses for special pools.\"},\"userInfo(uint256,address)\":{\"notice\":\"Info of each pool user.\"},\"whiteList(address)\":{\"notice\":\"The whitelist of addresses allowed to deposit in special pools.\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraw LP tokens from pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ShadowChef.sol\":\"ShadowChefV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/GSN/Context.sol\":{\"keccak256\":\"0xac3640fab06aaa5fc0af5b6548a8636bc14b78229779b692bae195c699221797\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48fcd027633a742c81fcfa81dfa2a0a22cee177971fb32e6f8cb5197fdf951d1\",\"dweb:/ipfs/QmeGieEzcGUKHppbDZ3PySE4yi8gTzcRQ7ayobMobbmwJ3\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ba8fde3a8428b9970384f82f685191d0fe20eba7888323aebf4160e723a9874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2d8ad03ea9da4af418de1da1a857a6ff030b70fbb302f510f14e1185f7a35b9\",\"dweb:/ipfs/Qmdo6P18HCGyneMzgSnykq6b5L5QRL9r4N1xYiEz6U2t9k\"]},\"contracts/ShadowChef.sol\":{\"keccak256\":\"0x8a7b91a4ce604f89e4ef24e2eb4291a4d878e1b2e3f1e4d14d01d566d5d126b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a03ab338434cc70da32f5c5304045c09ba994324c35a94a8010eb45385a7dc41\",\"dweb:/ipfs/QmbBesK38QgKHngfjND6AodGmzbaR7X7W8apRbCpHC2ovm\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0x64dde1f6b994f96be14d03844017bf898095a18299bb05a4afa233c645420d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c81213bd34cbef1f46b2c82734dec5474a0a0cc400b4ca6ef03022f7852695\",\"dweb:/ipfs/QmRVesYxR2JfhQfrseURtfG2QametnWtQZSv96gxiDP3ws\"]},\"contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0x0fc9133e1f7e76899bbfd283f50eab584517d7718627a4105e57b2573b4424ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a25ad611946438cc409d0164af42bfd325a9e0d4741cca6aebfc4655287940c\",\"dweb:/ipfs/QmWcjwcbWDcmBDuwzyFWaqg9B5NKy7T1YuPAG6JMGxoqyC\"]},\"contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa5b31f4257f2a2f1e71d4c5864ce467ca7342206857cb643b9f1acaa126c3cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45a26a4d6d7375e3004ac308ee67392153fe3ca0448dd8e87d000f1614d0eb33\",\"dweb:/ipfs/QmRXyDPpPZkLjaTmhNPuDFys4Md8sFU4d6JztjitUWTWKC\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x6fdd4f22c4b1bad566163a8372598724aa1f4e7ac2e91996f5195d896f866347\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05f30f1b8664b6ed2027ba8b89d3b4d18fcf31cc516b77f0862f3c10e209e080\",\"dweb:/ipfs/QmaWnyw6CVaiXohboJVrixXyCb4KiAP7LiMmcGRczX79zB\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xaa5974a17de3ff0a3b5132f2d65f957c60450c398b0e6bf252cd8c80c43a4724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f8f9836ee7504a2010136587fdfb373937cb5ae822f44f7c5110be984c552c8\",\"dweb:/ipfs/QmPsVWWUEiPZ9gmFRaR491L1pYWuGrGKRaBt86j8YcDdgQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1798,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2011,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 277,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "burnAdmin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 280,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "boostContract",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 284,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "poolInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(PoolInfo)271_storage)dyn_storage"
							},
							{
								"astId": 288,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "lpToken",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_contract(IBEP20)2000)dyn_storage"
							},
							{
								"astId": 295,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)260_storage))"
							},
							{
								"astId": 300,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 303,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "totalRegularAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 306,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "totalSpecialAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 335,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "shdwRateToBurn",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "shdwRateToRegularFarm",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 343,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "shdwRateToSpecialFarm",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 345,
								"contract": "contracts/ShadowChef.sol:ShadowChefV2",
								"label": "lastBurnedBlock",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IBEP20)2000)dyn_storage": {
								"base": "t_contract(IBEP20)2000",
								"encoding": "dynamic_array",
								"label": "contract IBEP20[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)271_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)271_storage",
								"encoding": "dynamic_array",
								"label": "struct ShadowChefV2.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)2000": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)260_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ShadowChefV2.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)260_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)260_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)260_storage)"
							},
							"t_struct(PoolInfo)271_storage": {
								"encoding": "inplace",
								"label": "struct ShadowChefV2.PoolInfo",
								"members": [
									{
										"astId": 262,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "accShdwPerShare",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 264,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 266,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "allocPoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 268,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "totalBoostedShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 270,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "isRegular",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)260_storage": {
								"encoding": "inplace",
								"label": "struct ShadowChefV2.UserInfo",
								"members": [
									{
										"astId": 255,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 257,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 259,
										"contract": "contracts/ShadowChef.sol:ShadowChefV2",
										"label": "boostMultiplier",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"BOOST_PRECISION()": {
								"notice": "Basic boost factor, none boosted user's boost factor"
							},
							"MASTERCHEF_SHDW_PER_BLOCK()": {
								"notice": "40 SHDWs per block in MCV1"
							},
							"MAX_BOOST_PRECISION()": {
								"notice": "Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION"
							},
							"SHDW()": {
								"notice": "Address of SHDW contract."
							},
							"SHDW_RATE_TOTAL_PRECISION()": {
								"notice": "total SHDW rate = toBurn + toRegular + toSpecial"
							},
							"add(uint256,address,bool,bool)": {
								"notice": "Add a new pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do."
							},
							"boostContract()": {
								"notice": "The contract handles the share boosts."
							},
							"burnAdmin()": {
								"notice": "The only address can withdraw all the burn SHDW."
							},
							"burnShdw(bool)": {
								"notice": "Send SHDW pending for burn to `burnAdmin`."
							},
							"deposit(uint256,uint256)": {
								"notice": "Deposit LP tokens to pool."
							},
							"emergencyWithdraw(uint256)": {
								"notice": "Withdraw without caring about the rewards. EMERGENCY ONLY."
							},
							"getBoostMultiplier(address,uint256)": {
								"notice": "Get user boost multiplier for specific pool id."
							},
							"lpToken(uint256)": {
								"notice": "Address of the LP token for each MCV2 pool."
							},
							"massUpdatePools()": {
								"notice": "Update SHDW reward for all the active pools. Be careful of gas spending!"
							},
							"pendingShdw(uint256,address)": {
								"notice": "View function for checking pending SHDW rewards."
							},
							"poolInfo(uint256)": {
								"notice": "Info of each MCV2 pool."
							},
							"poolLength()": {
								"notice": "Returns the number of MCV2 pools."
							},
							"set(uint256,uint256,bool)": {
								"notice": "Update the given pool's SHDW allocation point. Can only be called by the owner."
							},
							"shdwPerBlock(bool)": {
								"notice": "Calculates and returns the `amount` of SHDW per block."
							},
							"shdwPerBlockToBurn()": {
								"notice": "Calculates and returns the `amount` of SHDW per block to burn."
							},
							"shdwRateToBurn()": {
								"notice": "The last block number of SHDW burn action being executed.SHDW distribute % for burn"
							},
							"shdwRateToRegularFarm()": {
								"notice": "SHDW distribute % for regular farm pool"
							},
							"shdwRateToSpecialFarm()": {
								"notice": "SHDW distribute % for special pools"
							},
							"totalRegularAllocPoint()": {
								"notice": "Total regular allocation points. Must be the sum of all regular pools' allocation points."
							},
							"totalSpecialAllocPoint()": {
								"notice": "Total special allocation points. Must be the sum of all special pools' allocation points."
							},
							"updateBoostContract(address)": {
								"notice": "Update boost contract address and max boost factor."
							},
							"updateBoostMultiplier(address,uint256,uint256)": {
								"notice": "Update user boost factor."
							},
							"updateBurnAdmin(address)": {
								"notice": "Update burn admin address."
							},
							"updatePool(uint256)": {
								"notice": "Update reward variables for the given pool."
							},
							"updateShdwRate(uint256,uint256,uint256,bool)": {
								"notice": "Update the % of SHDW distributions for burn, regular pools and special pools."
							},
							"updateWhiteList(address,bool)": {
								"notice": "Update whitelisted addresses for special pools."
							},
							"userInfo(uint256,address)": {
								"notice": "Info of each pool user."
							},
							"whiteList(address)": {
								"notice": "The whitelist of addresses allowed to deposit in special pools."
							},
							"withdraw(uint256,uint256)": {
								"notice": "Withdraw LP tokens from pool."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/GSN/Context.sol\":{\"keccak256\":\"0xac3640fab06aaa5fc0af5b6548a8636bc14b78229779b692bae195c699221797\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48fcd027633a742c81fcfa81dfa2a0a22cee177971fb32e6f8cb5197fdf951d1\",\"dweb:/ipfs/QmeGieEzcGUKHppbDZ3PySE4yi8gTzcRQ7ayobMobbmwJ3\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0x64dde1f6b994f96be14d03844017bf898095a18299bb05a4afa233c645420d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c81213bd34cbef1f46b2c82734dec5474a0a0cc400b4ca6ef03022f7852695\",\"dweb:/ipfs/QmRVesYxR2JfhQfrseURtfG2QametnWtQZSv96gxiDP3ws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1798,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0x0fc9133e1f7e76899bbfd283f50eab584517d7718627a4105e57b2573b4424ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a25ad611946438cc409d0164af42bfd325a9e0d4741cca6aebfc4655287940c\",\"dweb:/ipfs/QmWcjwcbWDcmBDuwzyFWaqg9B5NKy7T1YuPAG6JMGxoqyC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa5b31f4257f2a2f1e71d4c5864ce467ca7342206857cb643b9f1acaa126c3cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45a26a4d6d7375e3004ac308ee67392153fe3ca0448dd8e87d000f1614d0eb33\",\"dweb:/ipfs/QmRXyDPpPZkLjaTmhNPuDFys4Md8sFU4d6JztjitUWTWKC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2011,
								"contract": "contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":133:6020  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":133:6020  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c945940279808d4f365324b9ff824dad2d1c63697ea869b271d8eff1b840b44f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c945940279808d4f365324b9ff824dad2d1c63697ea869b271d8eff1b840b44f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 GASLIMIT SWAP5 MUL PUSH26 0x808D4F365324B9FF824DAD2D1C63697EA869B271D8EFF1B840B4 0x4F PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "133:5887:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c945940279808d4f365324b9ff824dad2d1c63697ea869b271d8eff1b840b44f64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 GASLIMIT SWAP5 MUL PUSH26 0x808D4F365324B9FF824DAD2D1C63697EA869B271D8EFF1B840B4 0x4F PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "133:5887:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 133,
									"end": 6020,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c945940279808d4f365324b9ff824dad2d1c63697ea869b271d8eff1b840b44f64736f6c634300060c0033",
									".code": [
										{
											"begin": 133,
											"end": 6020,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 133,
											"end": 6020,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x6fdd4f22c4b1bad566163a8372598724aa1f4e7ac2e91996f5195d896f866347\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05f30f1b8664b6ed2027ba8b89d3b4d18fcf31cc516b77f0862f3c10e209e080\",\"dweb:/ipfs/QmaWnyw6CVaiXohboJVrixXyCb4KiAP7LiMmcGRczX79zB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/SafeMath.sol\":639:5358  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/SafeMath.sol\":639:5358  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1994d4064880611f5d9d14a3feea5cfebdb12d11aac55c68858100e85e3ab3664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1994d4064880611f5d9d14a3feea5cfebdb12d11aac55c68858100e85e3ab3664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 SWAP10 0x4D BLOCKHASH PUSH5 0x880611F5D9 0xD1 0x4A EXTCODEHASH 0xEE 0xA5 0xCF 0xEB 0xDB SLT 0xD1 BYTE 0xAC SSTORE 0xC6 DUP9 PC LT 0xE DUP6 0xE3 0xAB CALLDATASIZE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "639:4719:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1994d4064880611f5d9d14a3feea5cfebdb12d11aac55c68858100e85e3ab3664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 SWAP10 0x4D BLOCKHASH PUSH5 0x880611F5D9 0xD1 0x4A EXTCODEHASH 0xEE 0xA5 0xCF 0xEB 0xDB SLT 0xD1 BYTE 0xAC SSTORE 0xC6 DUP9 PC LT 0xE DUP6 0xE3 0xAB CALLDATASIZE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "639:4719:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 639,
									"end": 5358,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1994d4064880611f5d9d14a3feea5cfebdb12d11aac55c68858100e85e3ab3664736f6c634300060c0033",
									".code": [
										{
											"begin": 639,
											"end": 5358,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 639,
											"end": 5358,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xaa5974a17de3ff0a3b5132f2d65f957c60450c398b0e6bf252cd8c80c43a4724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f8f9836ee7504a2010136587fdfb373937cb5ae822f44f7c5110be984c552c8\",\"dweb:/ipfs/QmPsVWWUEiPZ9gmFRaR491L1pYWuGrGKRaBt86j8YcDdgQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "675:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "693:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "693:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "686:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "658:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "657:17:0"
									},
									"scope": 22,
									"src": "605:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "784:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "795:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "936:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "936:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "929:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "770:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:14:0"
									},
									"scope": 22,
									"src": "719:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "572:383:0"
						}
					],
					"src": "35:920:0"
				},
				"id": 0
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"SafeBEP20": [
							235
						]
					},
					"id": 236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/interfaces/IBEP20.sol",
							"file": "./interfaces/IBEP20.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 236,
							"sourceUnit": 2001,
							"src": "60:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "./utils/Address.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 236,
							"sourceUnit": 2236,
							"src": "95:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/SafeMath.sol",
							"file": "./utils/SafeMath.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 236,
							"sourceUnit": 2432,
							"src": "126:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 28,
								"nodeType": "StructuredDocumentation",
								"src": "160:465:1",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "SafeBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 31,
									"libraryName": {
										"contractScope": null,
										"id": 29,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2431,
										"src": "658:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2431",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "652:27:1",
									"typeName": {
										"id": 30,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 34,
									"libraryName": {
										"contractScope": null,
										"id": 32,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2235,
										"src": "691:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$2235",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:1",
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "825:142:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 44,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 47,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "913:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1949,
																		"src": "913:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "913:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 50,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "938:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 51,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "942:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 45,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "890:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "890:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "890:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 43,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "836:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:123:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "836:123:1"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 56,
												"src": "751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 35,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "751:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 56,
												"src": "774:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 56,
												"src": "795:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "740:75:1"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:1"
									},
									"scope": 235,
									"src": "719:248:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1108:152:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 68,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1153:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 71,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 58,
																			"src": "1196:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1981,
																		"src": "1196:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1196:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 74,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1225:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 75,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1231:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 76,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1235:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 69,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1173:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1173:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1173:68:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 67,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1119:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:133:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1119:133:1"
											}
										]
									},
									"documentation": null,
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "1011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 57,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "1011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "1034:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "1057:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "1078:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1000:98:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:0:1"
									},
									"scope": 235,
									"src": "975:285:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "1629:597:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 92,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 88,
																			"src": "1937:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1946:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1937:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1936:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 100,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1977:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$235",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$235",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 99,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1969:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 98,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1969:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 101,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1969:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 102,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 86,
																					"src": "1984:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 96,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 84,
																					"src": "1953:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$2000",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 97,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1959,
																				"src": "1953:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1953:39:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1996:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1953:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 106,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1952:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1936:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2013:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1914:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1914:166:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1914:166:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 112,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "2125:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 115,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 84,
																			"src": "2168:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1969,
																		"src": "2168:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2168:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 118,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "2192:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "2201:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 113,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2145:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2145:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 111,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2091:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:127:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "2091:127:1"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1268:245:1",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 124,
												"src": "1550:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 83,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "1550:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 124,
												"src": "1573:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 124,
												"src": "1599:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1539:80:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1629:0:1"
									},
									"scope": 235,
									"src": "1519:707:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2354:237:1",
										"statements": [
											{
												"assignments": [
													134
												],
												"declarations": [
													{
														"constant": false,
														"id": 134,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 159,
														"src": "2365:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "2432:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 139,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2412:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$235",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$235",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 137,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 141,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "2419:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 135,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "2388:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1959,
																"src": "2388:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2264,
														"src": "2388:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "2483:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 151,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "2526:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1969,
																		"src": "2526:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2526:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 154,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "2550:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 155,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "2559:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 149,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2503:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2503:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2503:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 147,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2449:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2449:134:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2449:134:1"
											}
										]
									},
									"documentation": null,
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "2275:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 125,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "2275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "2298:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "2324:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2264:80:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:0:1"
									},
									"scope": 235,
									"src": "2234:357:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2719:328:1",
										"statements": [
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 196,
														"src": "2730:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 180,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "2820:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2840:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 175,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2786:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$235",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$235",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2778:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 173,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2778:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2778:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 177,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "2793:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 171,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "2762:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1959,
																"src": "2762:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2762:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2309,
														"src": "2762:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2762:132:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2730:164:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 185,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2939:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 188,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "2982:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2000",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1969,
																		"src": "2982:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2982:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 191,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "3006:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 192,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "3015:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 186,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2959:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2959:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2959:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 184,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2905:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2905:134:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "2905:134:1"
											}
										]
									},
									"documentation": null,
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "2640:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 161,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "2640:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "2663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "2689:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2629:80:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:0:1"
									},
									"scope": 235,
									"src": "2599:448:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3500:762:1",
										"statements": [
											{
												"assignments": [
													206
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 233,
														"src": "3854:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 205,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3854:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 215,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 212,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "3917:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3923:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 209,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "3897:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$2000",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3889:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 207,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3889:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3889:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2131,
														"src": "3889:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3854:104:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 216,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3973:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3973:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3993:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3973:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 232,
												"nodeType": "IfStatement",
												"src": "3969:286:1",
												"trueBody": {
													"id": 231,
													"nodeType": "Block",
													"src": "3996:259:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 223,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 206,
																				"src": "4146:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 225,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4159:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 224,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4159:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 226,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4158:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 221,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "4135:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "4135:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4135:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4184:44:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 220,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "4109:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4109:134:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 230,
															"nodeType": "ExpressionStatement",
															"src": "4109:134:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3055:369:1",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "3459:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 199,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "3459:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "3473:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3473:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3458:33:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:1"
									},
									"scope": 235,
									"src": "3430:832:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 236,
							"src": "627:3638:1"
						}
					],
					"src": "33:4232:1"
				},
				"id": 1
			},
			"contracts/ShadowChef.sol": {
				"ast": {
					"absolutePath": "contracts/ShadowChef.sol",
					"exportedSymbols": {
						"ShadowChefV2": [
							1790
						]
					},
					"id": 1791,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 237,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"id": 238,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "60:33:2"
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 239,
							"nodeType": "ImportDirective",
							"scope": 1791,
							"sourceUnit": 1900,
							"src": "97:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/SafeMath.sol",
							"file": "./utils/SafeMath.sol",
							"id": 240,
							"nodeType": "ImportDirective",
							"scope": 1791,
							"sourceUnit": 2432,
							"src": "129:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/security/ReentrancyGuard.sol",
							"file": "./security/ReentrancyGuard.sol",
							"id": 241,
							"nodeType": "ImportDirective",
							"scope": 1791,
							"sourceUnit": 2041,
							"src": "161:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IBEP20.sol",
							"file": "./interfaces/IBEP20.sol",
							"id": 242,
							"nodeType": "ImportDirective",
							"scope": 1791,
							"sourceUnit": 2001,
							"src": "203:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 243,
							"nodeType": "ImportDirective",
							"scope": 1791,
							"sourceUnit": 236,
							"src": "238:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 244,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1899,
										"src": "296:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1899",
											"typeString": "contract Ownable"
										}
									},
									"id": 245,
									"nodeType": "InheritanceSpecifier",
									"src": "296:7:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 246,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2040,
										"src": "305:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$2040",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 247,
									"nodeType": "InheritanceSpecifier",
									"src": "305:15:2"
								}
							],
							"contractDependencies": [
								22,
								1899,
								2040
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1790,
							"linearizedBaseContracts": [
								1790,
								2040,
								1899,
								22
							],
							"name": "ShadowChefV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 250,
									"libraryName": {
										"contractScope": null,
										"id": 248,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2431,
										"src": "334:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2431",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "328:27:2",
									"typeName": {
										"id": 249,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "347:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 253,
									"libraryName": {
										"contractScope": null,
										"id": 251,
										"name": "SafeBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 235,
										"src": "367:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeBEP20_$235",
											"typeString": "library SafeBEP20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "361:27:2",
									"typeName": {
										"contractScope": null,
										"id": 252,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2000,
										"src": "381:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2000",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "ShadowChefV2.UserInfo",
									"id": 260,
									"members": [
										{
											"constant": false,
											"id": 255,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 260,
											"src": "1253:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 254,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1253:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 257,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 260,
											"src": "1278:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 256,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1278:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 259,
											"mutability": "mutable",
											"name": "boostMultiplier",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 260,
											"src": "1307:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 258,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1307:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1790,
									"src": "1226:112:2",
									"visibility": "public"
								},
								{
									"canonicalName": "ShadowChefV2.PoolInfo",
									"id": 271,
									"members": [
										{
											"constant": false,
											"id": 262,
											"mutability": "mutable",
											"name": "accShdwPerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 271,
											"src": "2253:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 261,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2253:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 264,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 271,
											"src": "2287:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 263,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 266,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 271,
											"src": "2321:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 265,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2321:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 268,
											"mutability": "mutable",
											"name": "totalBoostedShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 271,
											"src": "2350:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2350:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 270,
											"mutability": "mutable",
											"name": "isRegular",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 271,
											"src": "2386:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 269,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2386:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 1790,
									"src": "2226:182:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "2421:37:2",
										"text": "@notice Address of SHDW contract."
									},
									"functionSelector": "03dcff74",
									"id": 274,
									"mutability": "immutable",
									"name": "SHDW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "2464:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$2000",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 273,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2000,
										"src": "2464:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2000",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2501:60:2",
										"text": "@notice The only address can withdraw all the burn SHDW."
									},
									"functionSelector": "81bdf98c",
									"id": 277,
									"mutability": "mutable",
									"name": "burnAdmin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "2567:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 276,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2567:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2598:50:2",
										"text": "@notice The contract handles the share boosts."
									},
									"functionSelector": "dfcedeee",
									"id": 280,
									"mutability": "mutable",
									"name": "boostContract",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "2654:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 279,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2654:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2691:35:2",
										"text": "@notice Info of each MCV2 pool."
									},
									"functionSelector": "1526fe27",
									"id": 284,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "2732:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
										"typeString": "struct ShadowChefV2.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 282,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 271,
											"src": "2732:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
												"typeString": "struct ShadowChefV2.PoolInfo"
											}
										},
										"id": 283,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "2732:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage_ptr",
											"typeString": "struct ShadowChefV2.PoolInfo[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "2765:55:2",
										"text": "@notice Address of the LP token for each MCV2 pool."
									},
									"functionSelector": "78ed5d1f",
									"id": 288,
									"mutability": "mutable",
									"name": "lpToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "2826:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
										"typeString": "contract IBEP20[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 286,
											"name": "IBEP20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 2000,
											"src": "2826:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IBEP20_$2000",
												"typeString": "contract IBEP20"
											}
										},
										"id": 287,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "2826:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage_ptr",
											"typeString": "contract IBEP20[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "2858:35:2",
										"text": "@notice Info of each pool user."
									},
									"functionSelector": "93f1a40b",
									"id": 295,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "2899:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo))"
									},
									"typeName": {
										"id": 294,
										"keyType": {
											"id": 290,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2907:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2899:48:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo))"
										},
										"valueType": {
											"id": 293,
											"keyType": {
												"id": 291,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2926:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2918:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
												"typeString": "mapping(address => struct ShadowChefV2.UserInfo)"
											},
											"valueType": {
												"contractScope": null,
												"id": 292,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 260,
												"src": "2937:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
													"typeString": "struct ShadowChefV2.UserInfo"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2970:75:2",
										"text": "@notice The whitelist of addresses allowed to deposit in special pools."
									},
									"functionSelector": "372c12b1",
									"id": 300,
									"mutability": "mutable",
									"name": "whiteList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3051:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 299,
										"keyType": {
											"id": 297,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3051:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 298,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3070:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3101:101:2",
										"text": "@notice Total regular allocation points. Must be the sum of all regular pools' allocation points."
									},
									"functionSelector": "c40d337b",
									"id": 303,
									"mutability": "mutable",
									"name": "totalRegularAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3208:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 302,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3208:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3252:101:2",
										"text": "@notice Total special allocation points. Must be the sum of all special pools' allocation points."
									},
									"functionSelector": "99d7e84a",
									"id": 306,
									"mutability": "mutable",
									"name": "totalSpecialAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3359:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 305,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3359:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "3403:39:2",
										"text": "@notice 40 SHDWs per block in MCV1"
									},
									"functionSelector": "f5b91cd3",
									"id": 312,
									"mutability": "constant",
									"name": "MASTERCHEF_SHDW_PER_BLOCK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3448:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 308,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3448:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1375000000000000000_by_1",
											"typeString": "int_const 1375000000000000000"
										},
										"id": 311,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "312e333735",
											"id": 309,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3500:5:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_11_by_8",
												"typeString": "rational_const 11 / 8"
											},
											"value": "1.375"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653138",
											"id": 310,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3508:4:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "3500:12:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1375000000000000000_by_1",
											"typeString": "int_const 1375000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "16e80f4d",
									"id": 315,
									"mutability": "constant",
									"name": "ACC_SHDW_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3519:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 313,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3519:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31653138",
										"id": 314,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3564:4:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "3577:64:2",
										"text": "@notice Basic boost factor, none boosted user's boost factor"
									},
									"functionSelector": "cc6db2da",
									"id": 321,
									"mutability": "constant",
									"name": "BOOST_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3647:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 317,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3647:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"id": 320,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "313030",
											"id": 318,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3689:3:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653130",
											"id": 319,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3695:4:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "3689:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "3706:85:2",
										"text": "@notice Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION"
									},
									"functionSelector": "69b02128",
									"id": 327,
									"mutability": "constant",
									"name": "MAX_BOOST_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3797:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 323,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3797:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000_by_1",
											"typeString": "int_const 2000000000000"
										},
										"id": 326,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "323030",
											"id": 324,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3843:3:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653130",
											"id": 325,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3849:4:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "3843:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000_by_1",
											"typeString": "int_const 2000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3860:60:2",
										"text": "@notice total SHDW rate = toBurn + toRegular + toSpecial"
									},
									"functionSelector": "d2ce6ae8",
									"id": 331,
									"mutability": "constant",
									"name": "SHDW_RATE_TOTAL_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "3926:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3926:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31653132",
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3978:4:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"value": "1e12"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "3989:113:2",
										"text": "@notice The last block number of SHDW burn action being executed.\n @notice SHDW distribute % for burn"
									},
									"functionSelector": "6661100f",
									"id": 335,
									"mutability": "mutable",
									"name": "shdwRateToBurn",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "4108:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4108:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3530303030303030303030",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4140:11:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000_by_1",
											"typeString": "int_const 50000000000"
										},
										"value": "50000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "4158:51:2",
										"text": "@notice SHDW distribute % for regular farm pool"
									},
									"functionSelector": "f5a26f40",
									"id": 339,
									"mutability": "mutable",
									"name": "shdwRateToRegularFarm",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "4215:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4215:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323530303030303030303030",
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4254:12:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250000000000_by_1",
											"typeString": "int_const 250000000000"
										},
										"value": "250000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "4273:47:2",
										"text": "@notice SHDW distribute % for special pools"
									},
									"functionSelector": "6fda08c3",
									"id": 343,
									"mutability": "mutable",
									"name": "shdwRateToSpecialFarm",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "4326:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4326:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "373030303030303030303030",
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4365:12:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_700000000000_by_1",
											"typeString": "int_const 700000000000"
										},
										"value": "700000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78db4c34",
									"id": 345,
									"mutability": "mutable",
									"name": "lastBurnedBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1790,
									"src": "4386:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 344,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4386:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 347,
									"name": "Init",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4435:2:2"
									},
									"src": "4425:13:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 357,
									"name": "AddPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "4458:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "4479:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "4499:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 352,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "4499:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "4523:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4523:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4457:81:2"
									},
									"src": "4444:95:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 363,
									"name": "SetPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "4559:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "4580:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4558:41:2"
									},
									"src": "4545:55:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 373,
									"name": "UpdatePool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "4623:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "4644:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "4669:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": false,
												"mutability": "mutable",
												"name": "accShdwPerShare",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "4687:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4622:89:2"
									},
									"src": "4606:106:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 381,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4732:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4732:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4754:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4775:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4775:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4731:59:2"
									},
									"src": "4718:73:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 389,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "4812:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "4834:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "4855:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4811:59:2"
									},
									"src": "4797:74:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 397,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "4901:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "4923:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "4944:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4944:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4900:59:2"
									},
									"src": "4877:83:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 405,
									"name": "EventUpdateShdwRate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 405,
												"src": "4994:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": false,
												"mutability": "mutable",
												"name": "regularFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 405,
												"src": "5012:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"indexed": false,
												"mutability": "mutable",
												"name": "specialFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 405,
												"src": "5037:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4993:68:2"
									},
									"src": "4968:94:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 411,
									"name": "UpdateBurnAdmin",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "5090:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5090:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "5116:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5089:52:2"
									},
									"src": "5068:74:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 417,
									"name": "UpdateWhiteList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 417,
												"src": "5170:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"mutability": "mutable",
												"name": "isValid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 417,
												"src": "5192:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5192:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5169:36:2"
									},
									"src": "5148:58:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 421,
									"name": "UpdateBoostContract",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"indexed": true,
												"mutability": "mutable",
												"name": "boostContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "5238:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5237:31:2"
									},
									"src": "5212:57:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 431,
									"name": "UpdateBoostMultiplier",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5303:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"indexed": false,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5325:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5338:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5361:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5302:81:2"
									},
									"src": "5275:109:2"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "5581:64:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 439,
														"name": "SHDW",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "5592:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2000",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 440,
														"name": "_SHDW",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "5599:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2000",
															"typeString": "contract IBEP20"
														}
													},
													"src": "5592:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "5592:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 443,
														"name": "burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "5615:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 444,
														"name": "_burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "5627:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5615:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "5615:22:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "5393:104:2",
										"text": "@param _SHDW The SHDW token contract address.\n @param _burnAdmin The address of burn admin."
									},
									"id": 448,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "_SHDW",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 448,
												"src": "5525:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 433,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "5525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_burnAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 448,
												"src": "5548:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5514:59:2"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5581:0:2"
									},
									"scope": 1790,
									"src": "5503:142:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "5757:112:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 452,
																"name": "boostContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "5776:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 453,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5793:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5793:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5776:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f737420636f6e7472616374",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5805:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a155494b2ae1988f4d4766e30c7e243e43a8e464b9dace7f312568724be3e210",
																"typeString": "literal_string \"Ownable: caller is not the boost contract\""
															},
															"value": "Ownable: caller is not the boost contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a155494b2ae1988f4d4766e30c7e243e43a8e464b9dace7f312568724be3e210",
																"typeString": "literal_string \"Ownable: caller is not the boost contract\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5768:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5768:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "5768:81:2"
											},
											{
												"id": 459,
												"nodeType": "PlaceholderStatement",
												"src": "5860:1:2"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "5653:69:2",
										"text": " @dev Throws if caller is not the boost contract."
									},
									"id": 461,
									"name": "onlyBoostContract",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5754:2:2"
									},
									"src": "5728:141:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "5988:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 467,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5999:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 468,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "6007:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6007:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5999:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "5999:23:2"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "5879:45:2",
										"text": "@notice Returns the number of MCV2 pools."
									},
									"functionSelector": "081e3eda",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5949:2:2"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "pools",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "5973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5973:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5972:15:2"
									},
									"scope": 1790,
									"src": "5930:100:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "6727:962:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 492,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "6773:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			],
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6765:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 490,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6765:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6765:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 488,
																		"name": "_lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6746:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1939,
																	"src": "6746:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6746:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6783:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6746:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f6e6520424550323020746f6b656e73",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6786:19:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_976fcd99e378855f54fbdeea01e87b7504114be86395037187d407afbd9302ac",
																"typeString": "literal_string \"None BEP20 tokens\""
															},
															"value": "None BEP20 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_976fcd99e378855f54fbdeea01e87b7504114be86395037187d407afbd9302ac",
																"typeString": "literal_string \"None BEP20 tokens\""
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6738:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "6738:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 501,
																"name": "_lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "6979:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$2000",
																	"typeString": "contract IBEP20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 502,
																"name": "SHDW",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "6991:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$2000",
																	"typeString": "contract IBEP20"
																}
															},
															"src": "6979:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5348445720746f6b656e2063616e277420626520616464656420746f206661726d20706f6f6c73",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6997:41:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db63b7e09795e2ee2f68ed067d01469dbe4d6ea975d66a71f40f9e59703fe45a",
																"typeString": "literal_string \"SHDW token can't be added to farm pools\""
															},
															"value": "SHDW token can't be added to farm pools"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db63b7e09795e2ee2f68ed067d01469dbe4d6ea975d66a71f40f9e59703fe45a",
																"typeString": "literal_string \"SHDW token can't be added to farm pools\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6971:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "6971:68:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 507,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 482,
													"src": "7056:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 512,
												"nodeType": "IfStatement",
												"src": "7052:61:2",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "7069:44:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 508,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "7084:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7084:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "7084:17:2"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 513,
													"name": "_isRegular",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 480,
													"src": "7129:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7238:91:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 522,
																	"name": "totalSpecialAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7253:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 525,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "7305:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 523,
																			"name": "totalSpecialAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "7278:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2264,
																		"src": "7278:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7278:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7253:64:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7253:64:2"
														}
													]
												},
												"id": 530,
												"nodeType": "IfStatement",
												"src": "7125:204:2",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "7141:91:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 514,
																	"name": "totalRegularAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "7156:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 517,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "7208:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 515,
																			"name": "totalRegularAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 303,
																			"src": "7181:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2264,
																		"src": "7181:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7181:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7156:64:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "7156:64:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 534,
															"name": "_lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "7352:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 531,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7339:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
																"typeString": "contract IBEP20[] storage ref"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7339:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_IBEP20_$2000_$returns$__$",
															"typeString": "function (contract IBEP20)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7339:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "7339:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 541,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7434:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 542,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "7473:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7473:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7513:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"argumentTypes": null,
																	"id": 545,
																	"name": "_isRegular",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7536:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7576:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 540,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7402:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$271_storage_ptr_$",
																	"typeString": "type(struct ShadowChefV2.PoolInfo storage pointer)"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"allocPoint",
																"lastRewardBlock",
																"accShdwPerShare",
																"isRegular",
																"totalBoostedShare"
															],
															"nodeType": "FunctionCall",
															"src": "7402:187:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 537,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "7374:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7374:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$271_storage_$returns$__$",
															"typeString": "function (struct ShadowChefV2.PoolInfo storage ref)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7374:226:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "7374:226:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7643:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 551,
																		"name": "lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "7624:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
																			"typeString": "contract IBEP20[] storage ref"
																		}
																	},
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7624:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2281,
																"src": "7624:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7624:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 556,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "7647:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 557,
															"name": "_lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "7660:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"id": 558,
															"name": "_isRegular",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "7670:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 550,
														"name": "AddPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "7616:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IBEP20_$2000_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,contract IBEP20,bool)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7616:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "EmitStatement",
												"src": "7611:70:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "6038:535:2",
										"text": "@notice Add a new pool. Can only be called by the owner.\n DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n @param _allocPoint Number of allocation points for the new pool.\n @param _lpToken Address of the LP BEP-20 token.\n @param _isRegular Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are\n @param _withUpdate Whether call \"massUpdatePools\" operation.\n only for SHDW distributions within ShadowSwap products."
									},
									"functionSelector": "c507aeaa",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 485,
											"modifierName": {
												"argumentTypes": null,
												"id": 484,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "6717:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6717:9:2"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "6602:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "6632:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2000",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 477,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2000,
													"src": "6632:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2000",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "6658:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6658:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "6684:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6684:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6591:116:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6727:0:2"
									},
									"scope": 1790,
									"src": "6579:1110:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "8114:611:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 575,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8255:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "8244:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$271_memory_ptr_$",
															"typeString": "function (uint256) returns (struct ShadowChefV2.PoolInfo memory)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8244:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
														"typeString": "struct ShadowChefV2.PoolInfo memory"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "8244:16:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 578,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 569,
													"src": "8277:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 583,
												"nodeType": "IfStatement",
												"src": "8273:61:2",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "8290:44:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 579,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "8305:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8305:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "8305:17:2"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 584,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "8350:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 586,
														"indexExpression": {
															"argumentTypes": null,
															"id": 585,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8359:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8350:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
															"typeString": "struct ShadowChefV2.PoolInfo storage ref"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isRegular",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 270,
													"src": "8350:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "8504:122:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 602,
																	"name": "totalSpecialAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "8519:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 611,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 567,
																			"src": "8602:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 605,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 284,
																							"src": "8571:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																								"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 607,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 606,
																							"name": "_pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 565,
																							"src": "8580:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8571:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																							"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																						}
																					},
																					"id": 608,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 266,
																					"src": "8571:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 603,
																					"name": "totalSpecialAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 306,
																					"src": "8544:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2281,
																				"src": "8544:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8544:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2264,
																		"src": "8544:57:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8544:70:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8519:95:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 614,
															"nodeType": "ExpressionStatement",
															"src": "8519:95:2"
														}
													]
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "8346:280:2",
												"trueBody": {
													"id": 601,
													"nodeType": "Block",
													"src": "8376:122:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 588,
																	"name": "totalRegularAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "8391:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 597,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 567,
																			"src": "8474:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 591,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 284,
																							"src": "8443:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																								"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 593,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 592,
																							"name": "_pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 565,
																							"src": "8452:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8443:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																							"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																						}
																					},
																					"id": 594,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 266,
																					"src": "8443:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 589,
																					"name": "totalRegularAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 303,
																					"src": "8416:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2281,
																				"src": "8416:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8416:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2264,
																		"src": "8416:57:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8416:70:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8391:95:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "8391:95:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 617,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "8636:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																	"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 619,
															"indexExpression": {
																"argumentTypes": null,
																"id": 618,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "8645:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8636:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "8636:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 621,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "8664:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8636:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "8636:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 625,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8699:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "8705:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "SetPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8691:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8691:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "EmitStatement",
												"src": "8686:31:2"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "7697:292:2",
										"text": "@notice Update the given pool's SHDW allocation point. Can only be called by the owner.\n @param _pid The id of the pool. See `poolInfo`.\n @param _allocPoint New number of allocation points for the pool.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "64482f79",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 572,
											"modifierName": {
												"argumentTypes": null,
												"id": 571,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "8104:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8104:9:2"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "8018:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "8041:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "8071:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8007:87:2"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8114:0:2"
									},
									"scope": 1790,
									"src": "7995:730:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "8981:888:2",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 745,
														"src": "8992:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 640,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 271,
															"src": "8992:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 642,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "9015:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
															"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 644,
													"indexExpression": {
														"argumentTypes": null,
														"id": 643,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "9024:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9015:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
														"typeString": "struct ShadowChefV2.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8992:37:2"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 745,
														"src": "9040:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_memory_ptr",
															"typeString": "struct ShadowChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 646,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 260,
															"src": "9040:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 648,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "9063:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
															}
														},
														"id": 650,
														"indexExpression": {
															"argumentTypes": null,
															"id": 649,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9072:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9063:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
															"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
														}
													},
													"id": 652,
													"indexExpression": {
														"argumentTypes": null,
														"id": 651,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "9078:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9063:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$260_storage",
														"typeString": "struct ShadowChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9040:44:2"
											},
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "accShdwPerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 745,
														"src": "9095:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 654,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9095:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 656,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "9121:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo memory"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accShdwPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 262,
													"src": "9121:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9095:46:2"
											},
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "lpSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 745,
														"src": "9152:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9152:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 661,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "9171:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo memory"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalBoostedShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 268,
													"src": "9171:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9152:41:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 664,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "9210:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9210:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 666,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "9225:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																	"typeString": "struct ShadowChefV2.PoolInfo memory"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 264,
															"src": "9225:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9210:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 669,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "9249:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9261:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9249:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9210:52:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 718,
												"nodeType": "IfStatement",
												"src": "9206:453:2",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "9264:395:2",
													"statements": [
														{
															"assignments": [
																674
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 674,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 717,
																	"src": "9279:18:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 673,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9279:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 681,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 678,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "9317:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 264,
																		"src": "9317:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 675,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "9300:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "9300:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2281,
																	"src": "9300:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9300:38:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9279:59:2"
														},
														{
															"assignments": [
																683
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 683,
																	"mutability": "mutable",
																	"name": "shdwReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 717,
																	"src": "9355:18:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 682,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9355:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 703,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 696,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 641,
																						"src": "9465:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																							"typeString": "struct ShadowChefV2.PoolInfo memory"
																						}
																					},
																					"id": 697,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isRegular",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 270,
																					"src": "9465:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"id": 699,
																					"name": "totalSpecialAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 306,
																					"src": "9507:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "9465:64:2",
																				"trueExpression": {
																					"argumentTypes": null,
																					"id": 698,
																					"name": "totalRegularAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 303,
																					"src": "9482:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 701,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9464:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 692,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "9425:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																						"typeString": "struct ShadowChefV2.PoolInfo memory"
																					}
																				},
																				"id": 693,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 266,
																				"src": "9425:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 687,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 641,
																									"src": "9404:4:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																										"typeString": "struct ShadowChefV2.PoolInfo memory"
																									}
																								},
																								"id": 688,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "isRegular",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 270,
																								"src": "9404:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 686,
																							"name": "shdwPerBlock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 817,
																							"src": "9391:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
																								"typeString": "function (bool) view returns (uint256)"
																							}
																						},
																						"id": 689,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9391:28:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 684,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 674,
																						"src": "9376:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 685,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2344,
																					"src": "9376:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9376:44:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2344,
																			"src": "9376:48:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9376:65:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2361,
																	"src": "9376:69:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9376:169:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9355:190:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 704,
																	"name": "accShdwPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "9560:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 712,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 660,
																					"src": "9637:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 709,
																							"name": "ACC_SHDW_PRECISION",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 315,
																							"src": "9613:18:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 707,
																							"name": "shdwReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 683,
																							"src": "9598:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 708,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2344,
																						"src": "9598:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9598:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2361,
																				"src": "9598:38:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9598:48:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 705,
																			"name": "accShdwPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "9578:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2264,
																		"src": "9578:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9578:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9560:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 716,
															"nodeType": "ExpressionStatement",
															"src": "9560:87:2"
														}
													]
												}
											},
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 745,
														"src": "9671:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 719,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9671:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 730,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9748:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 725,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "9730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 726,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "9737:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 724,
																		"name": "getBoostMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "9711:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9711:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 721,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "9695:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$260_memory_ptr",
																			"typeString": "struct ShadowChefV2.UserInfo memory"
																		}
																	},
																	"id": 722,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "9695:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2344,
																"src": "9695:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9695:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2361,
														"src": "9695:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9695:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9671:93:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 741,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "9845:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$260_memory_ptr",
																	"typeString": "struct ShadowChefV2.UserInfo memory"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "9845:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 738,
																	"name": "ACC_SHDW_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "9821:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 735,
																			"name": "accShdwPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "9800:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 733,
																			"name": "boostedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "9782:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2344,
																		"src": "9782:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9782:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2361,
																"src": "9782:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9782:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2281,
														"src": "9782:62:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9782:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 639,
												"id": 744,
												"nodeType": "Return",
												"src": "9775:86:2"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "8733:160:2",
										"text": "@notice View function for checking pending SHDW rewards.\n @param _pid The id of the pool. See `poolInfo`.\n @param _user Address of the user."
									},
									"functionSelector": "c799b59d",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingShdw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 746,
												"src": "8920:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 746,
												"src": "8934:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8934:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8919:29:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 746,
												"src": "8972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8971:9:2"
									},
									"scope": 1790,
									"src": "8899:970:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "10001:257:2",
										"statements": [
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 783,
														"src": "10012:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 752,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "10029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
															"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "10029:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10012:32:2"
											},
											{
												"body": {
													"id": 781,
													"nodeType": "Block",
													"src": "10098:153:2",
													"statements": [
														{
															"assignments": [
																766
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 781,
																	"src": "10113:20:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																		"typeString": "struct ShadowChefV2.PoolInfo"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 765,
																		"name": "PoolInfo",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 271,
																		"src": "10113:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																			"typeString": "struct ShadowChefV2.PoolInfo"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 770,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 767,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "10136:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																		"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 769,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 768,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "10145:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10136:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																	"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10113:36:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 771,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "10168:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																			"typeString": "struct ShadowChefV2.PoolInfo memory"
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 266,
																	"src": "10168:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10187:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10168:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 780,
															"nodeType": "IfStatement",
															"src": "10164:76:2",
															"trueBody": {
																"id": 779,
																"nodeType": "Block",
																"src": "10190:50:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 776,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 756,
																					"src": "10220:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 775,
																				"name": "updatePool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "10209:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$271_memory_ptr_$",
																					"typeString": "function (uint256) returns (struct ShadowChefV2.PoolInfo memory)"
																				}
																			},
																			"id": 777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10209:15:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 778,
																		"nodeType": "ExpressionStatement",
																		"src": "10209:15:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 759,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "10077:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 760,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "10083:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10077:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"initializationExpression": {
													"assignments": [
														756
													],
													"declarations": [
														{
															"constant": false,
															"id": 756,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 782,
															"src": "10060:11:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 755,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10060:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 758,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10074:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10060:15:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "10091:5:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 762,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "10093:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 764,
													"nodeType": "ExpressionStatement",
													"src": "10091:5:2"
												},
												"nodeType": "ForStatement",
												"src": "10055:196:2"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "9877:84:2",
										"text": "@notice Update SHDW reward for all the active pools. Be careful of gas spending!"
									},
									"functionSelector": "630b5ba1",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9991:2:2"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10001:0:2"
									},
									"scope": 1790,
									"src": "9967:291:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "10484:278:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 792,
													"name": "_isRegular",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 787,
													"src": "10499:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "10636:119:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "10651:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 810,
																			"name": "SHDW_RATE_TOTAL_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "10717:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 807,
																					"name": "shdwRateToSpecialFarm",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 343,
																					"src": "10690:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 805,
																					"name": "MASTERCHEF_SHDW_PER_BLOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 312,
																					"src": "10660:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2344,
																				"src": "10660:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10660:52:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2361,
																		"src": "10660:56:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10660:83:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10651:92:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"nodeType": "ExpressionStatement",
															"src": "10651:92:2"
														}
													]
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "10495:260:2",
												"trueBody": {
													"id": 803,
													"nodeType": "Block",
													"src": "10511:119:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 793,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "10526:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 799,
																			"name": "SHDW_RATE_TOTAL_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "10592:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 796,
																					"name": "shdwRateToRegularFarm",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 339,
																					"src": "10565:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 794,
																					"name": "MASTERCHEF_SHDW_PER_BLOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 312,
																					"src": "10535:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2344,
																				"src": "10535:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10535:52:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2361,
																		"src": "10535:56:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10535:83:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10526:92:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 802,
															"nodeType": "ExpressionStatement",
															"src": "10526:92:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "10266:136:2",
										"text": "@notice Calculates and returns the `amount` of SHDW per block.\n @param _isRegular If the pool belongs to regular or special."
									},
									"functionSelector": "f474309e",
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shdwPerBlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "_isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 817,
												"src": "10430:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10430:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10429:17:2"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 817,
												"src": "10468:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10468:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10467:16:2"
									},
									"scope": 1790,
									"src": "10408:354:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "10917:104:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 823,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "10928:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 829,
																"name": "SHDW_RATE_TOTAL_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "10987:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 826,
																		"name": "shdwRateToBurn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "10967:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 824,
																		"name": "MASTERCHEF_SHDW_PER_BLOCK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "10937:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2344,
																	"src": "10937:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10937:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2361,
															"src": "10937:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10937:76:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10928:85:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "10928:85:2"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "10770:74:2",
										"text": "@notice Calculates and returns the `amount` of SHDW per block to burn."
									},
									"functionSelector": "19f95e2e",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shdwPerBlockToBurn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10877:2:2"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "10901:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10900:16:2"
									},
									"scope": 1790,
									"src": "10850:171:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "11276:877:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 842,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "11287:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 843,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "11294:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 845,
														"indexExpression": {
															"argumentTypes": null,
															"id": 844,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "11303:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11294:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
															"typeString": "struct ShadowChefV2.PoolInfo storage ref"
														}
													},
													"src": "11287:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
														"typeString": "struct ShadowChefV2.PoolInfo memory"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "11287:21:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 848,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "11323:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11323:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 850,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "11338:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo memory"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 264,
														"src": "11338:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11323:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 942,
												"nodeType": "IfStatement",
												"src": "11319:827:2",
												"trueBody": {
													"id": 941,
													"nodeType": "Block",
													"src": "11360:786:2",
													"statements": [
														{
															"assignments": [
																854
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 854,
																	"mutability": "mutable",
																	"name": "lpSupply",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 941,
																	"src": "11375:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 853,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11375:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 857,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 855,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "11394:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																		"typeString": "struct ShadowChefV2.PoolInfo memory"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "11394:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11375:41:2"
														},
														{
															"assignments": [
																859
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 859,
																	"mutability": "mutable",
																	"name": "totalAllocPoint",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 941,
																	"src": "11431:23:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11431:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 866,
															"initialValue": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"condition": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 860,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "11458:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																					"typeString": "struct ShadowChefV2.PoolInfo memory"
																				}
																			},
																			"id": 861,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "isRegular",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 270,
																			"src": "11458:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"argumentTypes": null,
																			"id": 863,
																			"name": "totalSpecialAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "11500:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11458:64:2",
																		"trueExpression": {
																			"argumentTypes": null,
																			"id": 862,
																			"name": "totalRegularAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 303,
																			"src": "11475:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11457:66:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11431:92:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 867,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "11544:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11555:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11544:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 870,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "11560:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11578:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11560:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11544:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 918,
															"nodeType": "IfStatement",
															"src": "11540:419:2",
															"trueBody": {
																"id": 917,
																"nodeType": "Block",
																"src": "11581:378:2",
																"statements": [
																	{
																		"assignments": [
																			875
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 875,
																				"mutability": "mutable",
																				"name": "multiplier",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 917,
																				"src": "11600:18:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 874,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11600:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 882,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 879,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 840,
																						"src": "11638:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																							"typeString": "struct ShadowChefV2.PoolInfo memory"
																						}
																					},
																					"id": 880,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lastRewardBlock",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 264,
																					"src": "11638:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 876,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -4,
																						"src": "11621:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 877,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "11621:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2281,
																				"src": "11621:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11621:38:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11600:59:2"
																	},
																	{
																		"assignments": [
																			884
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 884,
																				"mutability": "mutable",
																				"name": "shdwReward",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 917,
																				"src": "11678:18:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 883,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11678:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 899,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 897,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 859,
																					"src": "11791:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 893,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 840,
																								"src": "11748:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																									"typeString": "struct ShadowChefV2.PoolInfo memory"
																								}
																							},
																							"id": 894,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "allocPoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 266,
																							"src": "11748:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"expression": {
																												"argumentTypes": null,
																												"id": 888,
																												"name": "pool",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 840,
																												"src": "11727:4:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																													"typeString": "struct ShadowChefV2.PoolInfo memory"
																												}
																											},
																											"id": 889,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "isRegular",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 270,
																											"src": "11727:14:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										],
																										"id": 887,
																										"name": "shdwPerBlock",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 817,
																										"src": "11714:12:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
																											"typeString": "function (bool) view returns (uint256)"
																										}
																									},
																									"id": 890,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "11714:28:2",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 885,
																									"name": "multiplier",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 875,
																									"src": "11699:10:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 886,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2344,
																								"src": "11699:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 891,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11699:44:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 892,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2344,
																						"src": "11699:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11699:65:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2361,
																				"src": "11699:69:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11699:126:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11678:147:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 900,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 840,
																					"src": "11844:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																						"typeString": "struct ShadowChefV2.PoolInfo memory"
																					}
																				},
																				"id": 902,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "accShdwPerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 262,
																				"src": "11844:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 911,
																										"name": "lpSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 854,
																										"src": "11932:8:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 908,
																												"name": "ACC_SHDW_PRECISION",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 315,
																												"src": "11908:18:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 906,
																												"name": "shdwReward",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 884,
																												"src": "11893:10:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 907,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2344,
																											"src": "11893:14:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 909,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "11893:34:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 910,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "div",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2361,
																									"src": "11893:38:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 912,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "11893:48:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 913,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "11892:50:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 903,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 840,
																							"src": "11867:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																								"typeString": "struct ShadowChefV2.PoolInfo memory"
																							}
																						},
																						"id": 904,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accShdwPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 262,
																						"src": "11867:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 905,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2264,
																					"src": "11867:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11867:76:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11844:99:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 916,
																		"nodeType": "ExpressionStatement",
																		"src": "11844:99:2"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 919,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "11973:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																			"typeString": "struct ShadowChefV2.PoolInfo memory"
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 264,
																	"src": "11973:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 922,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "11996:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11996:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11973:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 925,
															"nodeType": "ExpressionStatement",
															"src": "11973:35:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 926,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "12023:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																			"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 928,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 927,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "12032:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12023:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																		"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 929,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "12040:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																		"typeString": "struct ShadowChefV2.PoolInfo memory"
																	}
																},
																"src": "12023:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																	"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																}
															},
															"id": 931,
															"nodeType": "ExpressionStatement",
															"src": "12023:21:2"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 933,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "12075:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 934,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "12081:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 264,
																		"src": "12081:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 936,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "12103:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 937,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "12113:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 262,
																		"src": "12113:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 932,
																	"name": "UpdatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "12064:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12064:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 940,
															"nodeType": "EmitStatement",
															"src": "12059:75:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "11029:169:2",
										"text": "@notice Update reward variables for the given pool.\n @param _pid The id of the pool. See `poolInfo`.\n @return pool Returns the pool that was updated."
									},
									"functionSelector": "51eb05a6",
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "11224:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11223:14:2"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "11254:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
													"typeString": "struct ShadowChefV2.PoolInfo"
												},
												"typeName": {
													"contractScope": null,
													"id": 839,
													"name": "PoolInfo",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 271,
													"src": "11254:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
														"typeString": "struct ShadowChefV2.PoolInfo"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11253:22:2"
									},
									"scope": 1790,
									"src": "11204:949:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "12388:1179:2",
										"statements": [
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1105,
														"src": "12399:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 954,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 271,
															"src": "12399:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 957,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "12433:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 956,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "12422:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$271_memory_ptr_$",
															"typeString": "function (uint256) returns (struct ShadowChefV2.PoolInfo memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12422:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
														"typeString": "struct ShadowChefV2.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12399:39:2"
											},
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1105,
														"src": "12449:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
															"typeString": "struct ShadowChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 960,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 260,
															"src": "12449:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 968,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 962,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "12473:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
															}
														},
														"id": 964,
														"indexExpression": {
															"argumentTypes": null,
															"id": 963,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "12482:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12473:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
															"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
														}
													},
													"id": 967,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 965,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "12488:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12488:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12473:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$260_storage",
														"typeString": "struct ShadowChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12449:50:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 970,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "12534:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																		"typeString": "struct ShadowChefV2.PoolInfo memory"
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isRegular",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 270,
																"src": "12534:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 972,
																	"name": "whiteList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "12552:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 975,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 973,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "12562:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12562:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12552:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12534:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a205468652061646472657373206973206e6f7420617661696c61626c6520746f206465706f73697420696e207468697320706f6f6c",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12588:68:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c2ae62a0deb1be3097541579918c294bb90f47c3d9f5838db4dc2340352545a",
																"typeString": "literal_string \"ShadowChefV2: The address is not available to deposit in this pool\""
															},
															"value": "ShadowChefV2: The address is not available to deposit in this pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c2ae62a0deb1be3097541579918c294bb90f47c3d9f5838db4dc2340352545a",
																"typeString": "literal_string \"ShadowChefV2: The address is not available to deposit in this pool\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12512:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12512:155:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "12512:155:2"
											},
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1105,
														"src": "12680:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12680:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 987,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 983,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "12720:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12720:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 985,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "12732:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "12701:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12701:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12680:57:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 988,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "12754:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo storage pointer"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "12754:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12768:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12754:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "12750:95:2",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "12771:74:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 993,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "12804:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12804:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 995,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "12816:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 996,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12822:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 992,
																	"name": "settlependingShdw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "12786:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12786:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 998,
															"nodeType": "ExpressionStatement",
															"src": "12786:47:2"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1001,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "12861:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12871:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12861:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "12857:466:2",
												"trueBody": {
													"id": 1070,
													"nodeType": "Block",
													"src": "12874:449:2",
													"statements": [
														{
															"assignments": [
																1005
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1005,
																	"mutability": "mutable",
																	"name": "before",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1070,
																	"src": "12889:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1004,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12889:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1015,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1012,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "12938:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			],
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12930:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1010,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12930:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12930:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1006,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "12906:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1008,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1007,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "12914:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12906:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1939,
																	"src": "12906:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12906:38:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12889:55:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1020,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "12990:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12990:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1024,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "13010:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13002:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13002:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13002:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1026,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "13017:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1016,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "12959:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1018,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1017,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "12967:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12959:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 81,
																	"src": "12959:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
																		"typeString": "function (contract IBEP20,address,address,uint256)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12959:66:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "ExpressionStatement",
															"src": "12959:66:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1029,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "13040:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1040,
																			"name": "before",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "13093:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1036,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "13082:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																								"typeString": "contract ShadowChefV2"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																								"typeString": "contract ShadowChefV2"
																							}
																						],
																						"id": 1035,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13074:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1034,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "13074:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13074:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1030,
																						"name": "lpToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 288,
																						"src": "13050:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
																							"typeString": "contract IBEP20[] storage ref"
																						}
																					},
																					"id": 1032,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1031,
																						"name": "_pid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 947,
																						"src": "13058:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13050:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$2000",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1939,
																				"src": "13050:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13050:38:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2281,
																		"src": "13050:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13050:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13040:60:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1043,
															"nodeType": "ExpressionStatement",
															"src": "13040:60:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1044,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "13115:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																			"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "13115:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1050,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "13145:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1047,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "13129:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																					"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																				}
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 255,
																			"src": "13129:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2264,
																		"src": "13129:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13129:24:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13115:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1053,
															"nodeType": "ExpressionStatement",
															"src": "13115:38:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1054,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "13214:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																			"typeString": "struct ShadowChefV2.PoolInfo memory"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "13214:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1065,
																					"name": "BOOST_PRECISION",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 321,
																					"src": "13294:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1062,
																							"name": "multiplier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 981,
																							"src": "13278:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1060,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 949,
																							"src": "13266:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1061,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2344,
																						"src": "13266:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13266:23:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2361,
																				"src": "13266:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13266:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1057,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "13239:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																					"typeString": "struct ShadowChefV2.PoolInfo memory"
																				}
																			},
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "totalBoostedShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 268,
																			"src": "13239:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2264,
																		"src": "13239:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13239:72:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13214:97:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1069,
															"nodeType": "ExpressionStatement",
															"src": "13214:97:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1072,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "13335:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo storage pointer"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "13335:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1088,
																"name": "ACC_SHDW_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "13446:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1084,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "13406:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 262,
																		"src": "13406:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1081,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "13385:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1078,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 981,
																						"src": "13369:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1075,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 961,
																							"src": "13353:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																								"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1076,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 255,
																						"src": "13353:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1077,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2344,
																					"src": "13353:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13353:27:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2361,
																			"src": "13353:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13353:48:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2344,
																	"src": "13353:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13353:74:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2361,
															"src": "13353:78:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13353:122:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13335:140:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "13335:140:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1092,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "13486:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1094,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1093,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "13495:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
															"typeString": "struct ShadowChefV2.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1095,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "13503:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo memory"
														}
													},
													"src": "13486:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
														"typeString": "struct ShadowChefV2.PoolInfo storage ref"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "13486:21:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1099,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13533:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13533:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1101,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "13545:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1102,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "13551:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "13525:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13525:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "EmitStatement",
												"src": "13520:39:2"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "12161:151:2",
										"text": "@notice Deposit LP tokens to pool.\n @param _pid The id of the pool. See `poolInfo`.\n @param _amount Amount of LP tokens to deposit."
									},
									"functionSelector": "e2bbb158",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 952,
											"modifierName": {
												"argumentTypes": null,
												"id": 951,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2039,
												"src": "12375:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12375:12:2"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "12335:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12335:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "12349:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12334:31:2"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12388:0:2"
									},
									"scope": 1790,
									"src": "12318:1249:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "13807:833:2",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1224,
														"src": "13818:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1116,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 271,
															"src": "13818:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1119,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "13852:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "13841:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$271_memory_ptr_$",
															"typeString": "function (uint256) returns (struct ShadowChefV2.PoolInfo memory)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13841:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
														"typeString": "struct ShadowChefV2.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13818:39:2"
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1224,
														"src": "13868:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
															"typeString": "struct ShadowChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1122,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 260,
															"src": "13868:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1124,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "13892:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
															}
														},
														"id": 1126,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1125,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "13901:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13892:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
															"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
														}
													},
													"id": 1129,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1127,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "13907:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13907:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13892:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$260_storage",
														"typeString": "struct ShadowChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13868:50:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1132,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "13939:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																		"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 255,
																"src": "13939:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1134,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "13954:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13939:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a20496e73756666696369656e74",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13963:24:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91153f1e08c08b3649039f676200b5fdbb93ae05537216b5b196d3348e98ee68",
																"typeString": "literal_string \"withdraw: Insufficient\""
															},
															"value": "withdraw: Insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91153f1e08c08b3649039f676200b5fdbb93ae05537216b5b196d3348e98ee68",
																"typeString": "literal_string \"withdraw: Insufficient\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13931:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13931:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "13931:57:2"
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1224,
														"src": "14001:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14001:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14041:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14041:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1144,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "14053:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "14022:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14022:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14001:57:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1148,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14089:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14089:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1150,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "14101:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "14107:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "settlependingShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "14071:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14071:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "14071:47:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1154,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "14135:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14145:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14135:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "14131:144:2",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "14148:127:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1157,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "14163:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																			"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																		}
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "14163:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1163,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1111,
																			"src": "14193:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1160,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "14177:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																					"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																				}
																			},
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 255,
																			"src": "14177:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2281,
																		"src": "14177:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14177:24:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14163:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1166,
															"nodeType": "ExpressionStatement",
															"src": "14163:38:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1171,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "14243:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "14243:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1173,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "14255:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1167,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "14216:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1169,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1168,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "14224:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14216:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 56,
																	"src": "14216:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14216:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1175,
															"nodeType": "ExpressionStatement",
															"src": "14216:47:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1178,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "14287:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo storage pointer"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "14287:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1194,
																"name": "ACC_SHDW_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "14398:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1190,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "14358:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 262,
																		"src": "14358:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1187,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "14337:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1184,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "14321:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1181,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1123,
																							"src": "14305:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																								"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1182,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 255,
																						"src": "14305:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1183,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2344,
																					"src": "14305:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14305:27:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2361,
																			"src": "14305:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14305:48:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2344,
																	"src": "14305:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14305:74:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2361,
															"src": "14305:78:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14305:122:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14287:140:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "14287:140:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1198,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "14438:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																	"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1200,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1199,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "14447:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14438:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "14438:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1212,
																		"name": "BOOST_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "14552:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1209,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1140,
																				"src": "14536:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1207,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1111,
																				"src": "14524:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2344,
																			"src": "14524:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14524:23:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2361,
																	"src": "14524:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14524:44:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1202,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "14473:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																			"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1204,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1203,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "14482:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14473:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																		"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "14473:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2281,
															"src": "14473:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14473:106:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14438:141:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "14438:141:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1218,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14606:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14606:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1220,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "14618:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1221,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "14624:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "14597:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14597:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "EmitStatement",
												"src": "14592:40:2"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "13575:155:2",
										"text": "@notice Withdraw LP tokens from pool.\n @param _pid The id of the pool. See `poolInfo`.\n @param _amount Amount of LP tokens to withdraw."
									},
									"functionSelector": "441a3e70",
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1114,
											"modifierName": {
												"argumentTypes": null,
												"id": 1113,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2039,
												"src": "13794:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13794:12:2"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "13754:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "13768:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13753:31:2"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13807:0:2"
									},
									"scope": 1790,
									"src": "13736:904:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "14846:627:2",
										"statements": [
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1311,
														"src": "14857:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1233,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 271,
															"src": "14857:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1235,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "14881:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
															"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1237,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1236,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "14890:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14881:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
														"typeString": "struct ShadowChefV2.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14857:38:2"
											},
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1311,
														"src": "14906:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
															"typeString": "struct ShadowChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1239,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 260,
															"src": "14906:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1241,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "14930:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
															}
														},
														"id": 1243,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1242,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "14939:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14930:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
															"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
														}
													},
													"id": 1246,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1244,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "14945:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14945:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14930:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$260_storage",
														"typeString": "struct ShadowChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14906:50:2"
											},
											{
												"assignments": [
													1249
												],
												"declarations": [
													{
														"constant": false,
														"id": 1249,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1311,
														"src": "14969:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1248,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1250,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "14986:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
															"typeString": "struct ShadowChefV2.UserInfo storage pointer"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 255,
													"src": "14986:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14969:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1253,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "15008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo storage pointer"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "15008:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15022:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15008:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "15008:15:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1259,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "15034:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo storage pointer"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "15034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15052:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15034:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "15034:19:2"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1311,
														"src": "15064:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15064:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1278,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1276,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "15141:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1270,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "15118:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "15118:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1272,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "15130:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1269,
																		"name": "getBoostMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "15099:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15099:36:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1267,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "15088:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2344,
																"src": "15088:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15088:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2361,
														"src": "15088:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15088:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15064:93:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1279,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "15168:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo storage pointer"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "15168:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1282,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "15193:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																		"typeString": "struct ShadowChefV2.PoolInfo storage pointer"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "15193:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1284,
																"name": "boostedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "15218:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15193:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15278:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "15193:86:2",
														"trueExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1289,
																	"name": "boostedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "15261:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1286,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "15234:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																			"typeString": "struct ShadowChefV2.PoolInfo storage pointer"
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "15234:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2281,
																"src": "15234:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15234:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15168:111:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "15168:111:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15387:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15387:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "15399:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1295,
																"name": "lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "15360:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IBEP20_$2000_$dyn_storage",
																	"typeString": "contract IBEP20[] storage ref"
																}
															},
															"id": 1297,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1296,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "15368:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15360:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2000",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 56,
														"src": "15360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15360:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "15360:46:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15440:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15440:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1307,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "15452:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "15458:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1304,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "15422:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15422:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "EmitStatement",
												"src": "15417:48:2"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "14650:127:2",
										"text": "@notice Withdraw without caring about the rewards. EMERGENCY ONLY.\n @param _pid The id of the pool. See `poolInfo`."
									},
									"functionSelector": "5312ea8e",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1231,
											"modifierName": {
												"argumentTypes": null,
												"id": 1230,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2039,
												"src": "14833:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14833:12:2"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1312,
												"src": "14810:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14810:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14809:14:2"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14846:0:2"
									},
									"scope": 1790,
									"src": "14783:690:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "15664:348:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1320,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1315,
													"src": "15679:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "15675:61:2",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "15692:44:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1321,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "15707:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15707:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1323,
															"nodeType": "ExpressionStatement",
															"src": "15707:17:2"
														}
													]
												}
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1352,
														"src": "15748:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15748:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1331,
															"name": "lastBurnedBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "15786:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1328,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "15769:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15769:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2281,
														"src": "15769:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15769:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15748:54:2"
											},
											{
												"assignments": [
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "pendingShdwToBurn",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1352,
														"src": "15813:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15813:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1338,
																"name": "shdwPerBlockToBurn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "15856:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15856:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1336,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "15841:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2344,
														"src": "15841:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15841:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15813:64:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1343,
															"name": "burnAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "15934:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1344,
															"name": "pendingShdwToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "15945:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1342,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "15920:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15920:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "15920:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1347,
														"name": "lastBurnedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "15974:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1348,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "15992:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15992:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15974:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "15974:30:2"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "15481:124:2",
										"text": "@notice Send SHDW pending for burn to `burnAdmin`.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "36183ed6",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1318,
											"modifierName": {
												"argumentTypes": null,
												"id": 1317,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "15654:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15654:9:2"
										}
									],
									"name": "burnShdw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1353,
												"src": "15629:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15629:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15628:18:2"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15664:0:2"
									},
									"scope": 1790,
									"src": "15611:401:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "16572:727:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1368,
																		"name": "_burnRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "16605:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16617:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "16605:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1371,
																		"name": "_regularFarmRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "16622:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16641:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "16622:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16605:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1375,
																	"name": "_specialFarmRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "16646:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16665:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16646:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16605:61:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a20534844572072617465206d7573742062652067726561746572207468616e2030",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16681:48:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56c21354eb8724036b74d439d2f589755a18c081ca2e70c54b5f83f0cecbe45a",
																"typeString": "literal_string \"ShadowChefV2: SHDW rate must be greater than 0\""
															},
															"value": "ShadowChefV2: SHDW rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56c21354eb8724036b74d439d2f589755a18c081ca2e70c54b5f83f0cecbe45a",
																"typeString": "literal_string \"ShadowChefV2: SHDW rate must be greater than 0\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16583:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16583:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "16583:157:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1388,
																		"name": "_specialFarmRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "16809:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1385,
																				"name": "_regularFarmRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1358,
																				"src": "16787:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1383,
																				"name": "_burnRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1356,
																				"src": "16773:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2264,
																			"src": "16773:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16773:31:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2264,
																	"src": "16773:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16773:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1390,
																"name": "SHDW_RATE_TOTAL_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "16830:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16773:82:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a20546f74616c2072617465206d7573742062652031653132",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16870:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_698f9bd62360cccb639b3c47691298049380e53c7a968c0a8eee53110de5b616",
																"typeString": "literal_string \"ShadowChefV2: Total rate must be 1e12\""
															},
															"value": "ShadowChefV2: Total rate must be 1e12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_698f9bd62360cccb639b3c47691298049380e53c7a968c0a8eee53110de5b616",
																"typeString": "literal_string \"ShadowChefV2: Total rate must be 1e12\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16751:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16751:169:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "16751:169:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1395,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1362,
													"src": "16935:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "16931:61:2",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "16948:44:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1396,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "16963:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16963:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "16963:17:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17060:5:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1401,
														"name": "burnShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "17051:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17051:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "17051:15:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1405,
														"name": "shdwRateToBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "17079:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1406,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "17096:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17079:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "17079:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1409,
														"name": "shdwRateToRegularFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "17116:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1410,
														"name": "_regularFarmRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "17140:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17116:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "17116:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1413,
														"name": "shdwRateToSpecialFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "17167:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1414,
														"name": "_specialFarmRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "17191:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17167:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "17167:40:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1418,
															"name": "_burnRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "17245:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1419,
															"name": "_regularFarmRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "17256:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1420,
															"name": "_specialFarmRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "17274:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "EventUpdateShdwRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "17225:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17225:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "EmitStatement",
												"src": "17220:71:2"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "16020:371:2",
										"text": "@notice Update the % of SHDW distributions for burn, regular pools and special pools.\n @param _burnRate The % of SHDW to burn each block.\n @param _regularFarmRate The % of SHDW to regular pools each block.\n @param _specialFarmRate The % of SHDW to special pools each block.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "815d087f",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1365,
											"modifierName": {
												"argumentTypes": null,
												"id": 1364,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "16562:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16562:9:2"
										}
									],
									"name": "updateShdwRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "_burnRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1424,
												"src": "16431:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_regularFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1424,
												"src": "16459:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16459:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "_specialFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1424,
												"src": "16494:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1424,
												"src": "16529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16529:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16420:132:2"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16572:0:2"
									},
									"scope": 1790,
									"src": "16397:902:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "17468:337:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1433,
																"name": "_newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "17487:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17508:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17500:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1434,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17500:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17500:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17487:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a204275726e2061646d696e2061646472657373206d7573742062652076616c6964",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17512:48:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36128d2965882d4040369668b8324c2e6b2ce6dac9fa76576013af5813c77626",
																"typeString": "literal_string \"ShadowChefV2: Burn admin address must be valid\""
															},
															"value": "ShadowChefV2: Burn admin address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36128d2965882d4040369668b8324c2e6b2ce6dac9fa76576013af5813c77626",
																"typeString": "literal_string \"ShadowChefV2: Burn admin address must be valid\""
															}
														],
														"id": 1432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17479:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "17479:82:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1443,
																"name": "_newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "17580:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1444,
																"name": "burnAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "17593:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17580:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a204275726e2061646d696e2061646472657373206973207468652073616d6520776974682063757272656e742061646472657373",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17604:67:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccf0186b228092e032d0c44b95f8060c059793fb471049f22696ff351892e138",
																"typeString": "literal_string \"ShadowChefV2: Burn admin address is the same with current address\""
															},
															"value": "ShadowChefV2: Burn admin address is the same with current address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccf0186b228092e032d0c44b95f8060c059793fb471049f22696ff351892e138",
																"typeString": "literal_string \"ShadowChefV2: Burn admin address is the same with current address\""
															}
														],
														"id": 1442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17572:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17572:100:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "17572:100:2"
											},
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "_oldAdmin",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1462,
														"src": "17683:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1449,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17683:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1452,
												"initialValue": {
													"argumentTypes": null,
													"id": 1451,
													"name": "burnAdmin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 277,
													"src": "17703:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17683:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1453,
														"name": "burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "17723:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1454,
														"name": "_newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "17735:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17723:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "17723:21:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1458,
															"name": "_oldAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "17776:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1459,
															"name": "_newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "17787:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1457,
														"name": "UpdateBurnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "17760:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17760:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "EmitStatement",
												"src": "17755:42:2"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "17307:92:2",
										"text": "@notice Update burn admin address.\n @param _newAdmin The new burn admin address."
									},
									"functionSelector": "0bb844bc",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1430,
											"modifierName": {
												"argumentTypes": null,
												"id": 1429,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "17458:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17458:9:2"
										}
									],
									"name": "updateBurnAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "_newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1463,
												"src": "17430:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17430:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17429:19:2"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17468:0:2"
									},
									"scope": 1790,
									"src": "17405:400:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "18057:189:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1474,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "18076:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18093:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18085:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1475,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18085:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18085:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18076:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a20546865207768697465206c6973742061646472657373206d7573742062652076616c6964",
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18097:52:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d77ded50ea4e6b118f54fd7e7b0814b87d8adeb6a06c5cdfee4b1b83010e475",
																"typeString": "literal_string \"ShadowChefV2: The white list address must be valid\""
															},
															"value": "ShadowChefV2: The white list address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d77ded50ea4e6b118f54fd7e7b0814b87d8adeb6a06c5cdfee4b1b83010e475",
																"typeString": "literal_string \"ShadowChefV2: The white list address must be valid\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18068:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18068:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "18068:82:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1483,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "18163:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1485,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1484,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "18173:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18163:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1486,
														"name": "_isValid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "18182:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18163:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "18163:27:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1490,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "18222:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1491,
															"name": "_isValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "18229:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1489,
														"name": "UpdateWhiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "18206:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18206:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "EmitStatement",
												"src": "18201:37:2"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "17813:164:2",
										"text": "@notice Update whitelisted addresses for special pools.\n @param _user The address to be updated.\n @param _isValid The flag for valid or invalid."
									},
									"functionSelector": "ac1d0609",
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1471,
											"modifierName": {
												"argumentTypes": null,
												"id": 1470,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "18047:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18047:9:2"
										}
									],
									"name": "updateWhiteList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1495,
												"src": "18008:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_isValid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1495,
												"src": "18023:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18023:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18007:30:2"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18057:0:2"
									},
									"scope": 1790,
									"src": "17983:263:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "18483:292:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1504,
																	"name": "_newBoostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "18516:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18545:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1505,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18537:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18537:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "18516:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1510,
																	"name": "_newBoostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "18551:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1511,
																	"name": "boostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "18572:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "18551:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "18516:69:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a204e657720626f6f737420636f6e74726163742061646472657373206d7573742062652076616c6964",
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18600:56:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be24f909f817a3724db1b65b3d69dd20e26208afeeebeff379d68d671510a13e",
																"typeString": "literal_string \"ShadowChefV2: New boost contract address must be valid\""
															},
															"value": "ShadowChefV2: New boost contract address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be24f909f817a3724db1b65b3d69dd20e26208afeeebeff379d68d671510a13e",
																"typeString": "literal_string \"ShadowChefV2: New boost contract address must be valid\""
															}
														],
														"id": 1503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18494:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18494:173:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "18494:173:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1517,
														"name": "boostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "18680:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1518,
														"name": "_newBoostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "18696:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18680:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "18680:33:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1522,
															"name": "_newBoostContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "18749:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1521,
														"name": "UpdateBoostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "18729:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18729:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "EmitStatement",
												"src": "18724:43:2"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "18254:148:2",
										"text": "@notice Update boost contract address and max boost factor.\n @param _newBoostContract The new address for handling all the share boosts."
									},
									"functionSelector": "9dd2fcc3",
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1501,
											"modifierName": {
												"argumentTypes": null,
												"id": 1500,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "18473:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18473:9:2"
										}
									],
									"name": "updateBoostContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_newBoostContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1526,
												"src": "18437:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18437:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18436:27:2"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18483:0:2"
									},
									"scope": 1790,
									"src": "18408:367:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "19165:1138:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1541,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "19184:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19201:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19193:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1542,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19193:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19184:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a2054686520757365722061646472657373206d7573742062652076616c6964",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19205:46:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1710a59b87c85b584756f5a28876fc716d684caafc639a2b88d774789a65c73d",
																"typeString": "literal_string \"ShadowChefV2: The user address must be valid\""
															},
															"value": "ShadowChefV2: The user address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1710a59b87c85b584756f5a28876fc716d684caafc639a2b88d774789a65c73d",
																"typeString": "literal_string \"ShadowChefV2: The user address must be valid\""
															}
														],
														"id": 1540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19176:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19176:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "19176:76:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1551,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "19271:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																		"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1553,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1552,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "19280:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19271:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																	"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isRegular",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "19271:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a204f6e6c7920726567756c6172206661726d20636f756c6420626520626f6f73746564",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19297:50:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf5cf25f062253cfa4ab2b49660f51ebfa1f26193ec197b46c2aafed39e0db37",
																"typeString": "literal_string \"ShadowChefV2: Only regular farm could be boosted\""
															},
															"value": "ShadowChefV2: Only regular farm could be boosted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf5cf25f062253cfa4ab2b49660f51ebfa1f26193ec197b46c2aafed39e0db37",
																"typeString": "literal_string \"ShadowChefV2: Only regular farm could be boosted\""
															}
														],
														"id": 1550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19263:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19263:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "19263:85:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1559,
																	"name": "_newMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "19381:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1560,
																	"name": "BOOST_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "19399:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19381:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1562,
																	"name": "_newMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "19418:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1563,
																	"name": "MAX_BOOST_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "19436:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19418:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19381:74:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536861646f774368656656323a20496e76616c6964206e657720626f6f7374206d756c7469706c696572",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19470:44:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07c476b076a06a2363c77e9b011696a52faa5633f7e74b2d89239f5329a99070",
																"typeString": "literal_string \"ShadowChefV2: Invalid new boost multiplier\""
															},
															"value": "ShadowChefV2: Invalid new boost multiplier"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07c476b076a06a2363c77e9b011696a52faa5633f7e74b2d89239f5329a99070",
																"typeString": "literal_string \"ShadowChefV2: Invalid new boost multiplier\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19359:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19359:166:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "19359:166:2"
											},
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1665,
														"src": "19538:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1569,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 271,
															"src": "19538:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_storage_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1574,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1572,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "19572:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1571,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "19561:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$271_memory_ptr_$",
															"typeString": "function (uint256) returns (struct ShadowChefV2.PoolInfo memory)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19561:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
														"typeString": "struct ShadowChefV2.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19538:39:2"
											},
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1665,
														"src": "19588:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
															"typeString": "struct ShadowChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1575,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 260,
															"src": "19588:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1582,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1577,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "19612:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
															}
														},
														"id": 1579,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1578,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "19621:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19612:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
															"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
														}
													},
													"id": 1581,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1580,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "19627:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19612:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$260_storage",
														"typeString": "struct ShadowChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19588:45:2"
											},
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "prevMultiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1665,
														"src": "19646:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19646:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1586,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "19690:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1587,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "19697:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1585,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "19671:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19671:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19646:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1591,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "19731:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1592,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "19738:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1593,
															"name": "prevMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "19744:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1590,
														"name": "settlependingShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "19713:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19713:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "19713:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1596,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "19772:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo storage pointer"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "19772:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1612,
																"name": "ACC_SHDW_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "19887:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1608,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "19847:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 262,
																		"src": "19847:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1605,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "19826:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1602,
																						"name": "_newMultiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1533,
																						"src": "19806:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1599,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1576,
																							"src": "19790:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																								"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1600,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 255,
																						"src": "19790:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2344,
																					"src": "19790:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19790:31:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2361,
																			"src": "19790:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19790:52:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2344,
																	"src": "19790:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19790:78:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2361,
															"src": "19790:82:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19790:126:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19772:144:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1615,
												"nodeType": "ExpressionStatement",
												"src": "19772:144:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1616,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "19927:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																"typeString": "struct ShadowChefV2.PoolInfo memory"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "19927:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1638,
																		"name": "BOOST_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "20087:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1635,
																				"name": "_newMultiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1533,
																				"src": "20067:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1632,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1576,
																					"src": "20051:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																						"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																					}
																				},
																				"id": 1633,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 255,
																				"src": "20051:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2344,
																			"src": "20051:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20051:31:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2361,
																	"src": "20051:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20051:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1628,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "20015:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1625,
																						"name": "prevMultiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1584,
																						"src": "19995:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1622,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1576,
																							"src": "19979:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																								"typeString": "struct ShadowChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1623,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 255,
																						"src": "19979:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2344,
																					"src": "19979:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19979:31:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2361,
																			"src": "19979:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19979:52:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1619,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "19952:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
																				"typeString": "struct ShadowChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalBoostedShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 268,
																		"src": "19952:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2281,
																	"src": "19952:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19952:80:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2264,
															"src": "19952:84:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19952:162:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19927:187:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "19927:187:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1643,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "20125:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1645,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1644,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "20134:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20125:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
															"typeString": "struct ShadowChefV2.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1646,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "20142:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$271_memory_ptr",
															"typeString": "struct ShadowChefV2.PoolInfo memory"
														}
													},
													"src": "20125:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
														"typeString": "struct ShadowChefV2.PoolInfo storage ref"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "20125:21:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1649,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "20157:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
																	}
																},
																"id": 1652,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1650,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "20166:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20157:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
																	"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
																}
															},
															"id": 1653,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1651,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "20172:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20157:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage",
																"typeString": "struct ShadowChefV2.UserInfo storage ref"
															}
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "boostMultiplier",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "20157:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1655,
														"name": "_newMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "20197:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20157:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "20157:54:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1659,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "20251:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1660,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "20258:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1661,
															"name": "prevMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "20264:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1662,
															"name": "_newMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "20280:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1658,
														"name": "UpdateBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "20229:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20229:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "EmitStatement",
												"src": "20224:71:2"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "18783:218:2",
										"text": "@notice Update user boost factor.\n @param _user The user address for boost factor updates.\n @param _pid The pool id for the boost factor updates.\n @param _newMultiplier New boost multiplier."
									},
									"functionSelector": "041a84c9",
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1536,
											"modifierName": {
												"argumentTypes": null,
												"id": 1535,
												"name": "onlyBoostContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 461,
												"src": "19134:17:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19134:17:2"
										},
										{
											"arguments": null,
											"id": 1538,
											"modifierName": {
												"argumentTypes": null,
												"id": 1537,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2039,
												"src": "19152:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19152:12:2"
										}
									],
									"name": "updateBoostMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "19048:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19048:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "19072:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19072:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_newMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "19095:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19095:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19037:87:2"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19165:0:2"
									},
									"scope": 1790,
									"src": "19007:1296:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "20537:154:2",
										"statements": [
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1692,
														"src": "20548:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1684,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1678,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "20569:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
																}
															},
															"id": 1680,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1679,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "20578:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20569:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
																"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
															}
														},
														"id": 1682,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1681,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "20584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20569:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_storage",
															"typeString": "struct ShadowChefV2.UserInfo storage ref"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "boostMultiplier",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 259,
													"src": "20569:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20548:58:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1685,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "20624:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1686,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "20637:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20624:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1689,
														"name": "BOOST_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "20668:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "20624:59:2",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1688,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "20655:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1691,
												"nodeType": "Return",
												"src": "20617:66:2"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "20311:133:2",
										"text": "@notice Get user boost multiplier for specific pool id.\n @param _user The user address.\n @param _pid The pool id."
									},
									"functionSelector": "033186e8",
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBoostMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "20478:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "20493:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20477:29:2"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "20528:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20527:9:2"
									},
									"scope": 1790,
									"src": "20450:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "21077:383:2",
										"statements": [
											{
												"assignments": [
													1704
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1748,
														"src": "21088:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$260_memory_ptr",
															"typeString": "struct ShadowChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1703,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 260,
															"src": "21088:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$260_storage_ptr",
																"typeString": "struct ShadowChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1710,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1705,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "21111:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct ShadowChefV2.UserInfo storage ref))"
															}
														},
														"id": 1707,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1706,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "21120:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21111:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$260_storage_$",
															"typeString": "mapping(address => struct ShadowChefV2.UserInfo storage ref)"
														}
													},
													"id": 1709,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1708,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "21126:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21111:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$260_storage",
														"typeString": "struct ShadowChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21088:44:2"
											},
											{
												"assignments": [
													1712
												],
												"declarations": [
													{
														"constant": false,
														"id": 1712,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1748,
														"src": "21145:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21145:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1721,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1719,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "21207:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1716,
																	"name": "_boostMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1700,
																	"src": "21185:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1713,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "21169:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$260_memory_ptr",
																			"typeString": "struct ShadowChefV2.UserInfo memory"
																		}
																	},
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "21169:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2344,
																"src": "21169:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21169:33:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2361,
														"src": "21169:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21169:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21145:78:2"
											},
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "accShdw",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1748,
														"src": "21234:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21234:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1732,
															"name": "ACC_SHDW_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "21306:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1726,
																			"name": "poolInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "21270:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_PoolInfo_$271_storage_$dyn_storage",
																				"typeString": "struct ShadowChefV2.PoolInfo storage ref[] storage ref"
																			}
																		},
																		"id": 1728,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1727,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "21279:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21270:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$271_storage",
																			"typeString": "struct ShadowChefV2.PoolInfo storage ref"
																		}
																	},
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "accShdwPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 262,
																	"src": "21270:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1724,
																	"name": "boostedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "21252:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2344,
																"src": "21252:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21252:49:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2361,
														"src": "21252:53:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21252:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21234:91:2"
											},
											{
												"assignments": [
													1736
												],
												"declarations": [
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1748,
														"src": "21336:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1735,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21336:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1739,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "21366:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$260_memory_ptr",
																	"typeString": "struct ShadowChefV2.UserInfo memory"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "21366:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1737,
															"name": "accShdw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "21354:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2281,
														"src": "21354:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21354:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21336:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1744,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "21437:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1745,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "21444:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1743,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "21423:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21423:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "21423:29:2"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "20699:247:2",
										"text": "@notice Settles, distribute the pending SHDW rewards for given user.\n @param _user The user address for settling rewards.\n @param _pid The pool id.\n @param _boostMultiplier The user boost multiplier in specific pool id."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "settlependingShdw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1749,
												"src": "20989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1749,
												"src": "21013:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "_boostMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1749,
												"src": "21036:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20978:89:2"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21077:0:2"
									},
									"scope": 1790,
									"src": "20952:508:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "21661:337:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1757,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "21676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21686:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21676:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1787,
												"nodeType": "IfStatement",
												"src": "21672:319:2",
												"trueBody": {
													"id": 1786,
													"nodeType": "Block",
													"src": "21689:302:2",
													"statements": [
														{
															"assignments": [
																1761
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1761,
																	"mutability": "mutable",
																	"name": "balance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1786,
																	"src": "21797:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1760,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21797:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1769,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1766,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "21838:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ShadowChefV2_$1790",
																					"typeString": "contract ShadowChefV2"
																				}
																			],
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21830:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1764,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21830:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21830:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1762,
																		"name": "SHDW",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "21815:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1939,
																	"src": "21815:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21815:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21797:47:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1770,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "21863:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1771,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "21873:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21863:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1778,
															"nodeType": "IfStatement",
															"src": "21859:75:2",
															"trueBody": {
																"id": 1777,
																"nodeType": "Block",
																"src": "21882:52:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1773,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1754,
																				"src": "21901:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 1774,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1761,
																				"src": "21911:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21901:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1776,
																		"nodeType": "ExpressionStatement",
																		"src": "21901:17:2"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1782,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "21966:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1783,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "21971:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1779,
																		"name": "SHDW",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "21948:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2000",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 56,
																	"src": "21948:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2000_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2000_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21948:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1785,
															"nodeType": "ExpressionStatement",
															"src": "21948:31:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "21468:125:2",
										"text": "@notice Safe Transfer SHDW.\n @param _to The SHDW receiver address.\n @param _amount transfer SHDW amounts."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1789,
												"src": "21622:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1789,
												"src": "21635:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21635:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21621:30:2"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21661:0:2"
									},
									"scope": 1790,
									"src": "21599:399:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1791,
							"src": "271:21730:2"
						}
					],
					"src": "35:21966:2"
				},
				"id": 2
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1899
						]
					},
					"id": 1900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1792,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 1793,
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 23,
							"src": "62:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1795,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "619:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 1796,
									"nodeType": "InheritanceSpecifier",
									"src": "619:7:3"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1794,
								"nodeType": "StructuredDocumentation",
								"src": "92:505:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1899,
							"linearizedBaseContracts": [
								1899,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1798,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1899,
									"src": "634:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1797,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "634:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1804,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1804,
												"src": "692:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1804,
												"src": "723:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:57:3"
									},
									"src": "665:84:3"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "880:139:3",
										"statements": [
											{
												"assignments": [
													1809
												],
												"declarations": [
													{
														"constant": false,
														"id": 1809,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1825,
														"src": "891:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1808,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "891:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1812,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1810,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "911:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "891:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1813,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "934:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1814,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "943:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "934:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "934:18:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "997:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "989:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1818,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "989:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "989:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1822,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "1001:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1817,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "968:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "EmitStatement",
												"src": "963:48:3"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "757:93:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1826,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:2:3"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:0:3"
									},
									"scope": 1899,
									"src": "856:163:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "1147:32:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1832,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1798,
													"src": "1165:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1833,
												"nodeType": "Return",
												"src": "1158:13:3"
											}
										]
									},
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "1027:67:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1114:2:3"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1835,
												"src": "1138:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1137:9:3"
									},
									"scope": 1899,
									"src": "1100:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "1293:98:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1839,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "1312:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1840,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1322:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1312:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1336:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1304:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1304:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "1304:67:3"
											},
											{
												"id": 1846,
												"nodeType": "PlaceholderStatement",
												"src": "1382:1:3"
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1187:79:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1848,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:2:3"
									},
									"src": "1272:119:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "1796:94:3",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1855,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "1833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1849:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1841:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1841:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1841:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1854,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "1812:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "EmitStatement",
												"src": "1807:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1862,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "1863:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1880:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1872:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1872:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1872:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1863:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "1863:19:3"
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1399:337:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1852,
											"modifierName": {
												"argumentTypes": null,
												"id": 1851,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "1786:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1786:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:2:3"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:3"
									},
									"scope": 1899,
									"src": "1742:148:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "2115:174:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1879,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "2134:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2154:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2146:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1880,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2146:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2146:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2134:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2158:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2126:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "2126:73:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1889,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "2236:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1890,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "2244:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1888,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "2215:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2215:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1892,
												"nodeType": "EmitStatement",
												"src": "2210:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1893,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "2264:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1894,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "2273:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2264:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "2264:17:3"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "1898:141:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1876,
											"modifierName": {
												"argumentTypes": null,
												"id": 1875,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1848,
												"src": "2105:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2105:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1898,
												"src": "2072:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2071:18:3"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:0:3"
									},
									"scope": 1899,
									"src": "2045:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1900,
							"src": "599:1693:3"
						}
					],
					"src": "35:2257:3"
				},
				"id": 3
			},
			"contracts/interfaces/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							2000
						]
					},
					"id": 2001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1901,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2000,
							"linearizedBaseContracts": [
								2000
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "87:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:4"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1907,
												"src": "205:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "204:9:4"
									},
									"scope": 2000,
									"src": "159:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "222:51:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 1913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:4"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1913,
												"src": "322:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1910,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "322:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "321:7:4"
									},
									"scope": 2000,
									"src": "279:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "337:49:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:4"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "433:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "433:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:15:4"
									},
									"scope": 2000,
									"src": "392:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "456:47:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:2:4"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1925,
												"src": "548:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "548:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "547:15:4"
									},
									"scope": 2000,
									"src": "509:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "571:52:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 1931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:4"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1931,
												"src": "672:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "671:9:4"
									},
									"scope": 2000,
									"src": "629:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "689:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1939,
												"src": "786:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:17:4"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1939,
												"src": "826:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "825:9:4"
									},
									"scope": 2000,
									"src": "767:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "843:205:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1949,
												"src": "1072:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1949,
												"src": "1091:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1071:35:4"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1949,
												"src": "1125:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1125:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:6:4"
									},
									"scope": 2000,
									"src": "1054:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "1139:260:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1959,
												"src": "1424:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1959,
												"src": "1440:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:33:4"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1959,
												"src": "1495:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1494:9:4"
									},
									"scope": 2000,
									"src": "1405:99:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "1512:631:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "2166:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "2183:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2165:33:4"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1969,
												"src": "2217:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:4"
									},
									"scope": 2000,
									"src": "2149:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "2231:290:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "2559:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "2584:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "2612:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2548:85:4"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "2652:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2651:6:4"
									},
									"scope": 2000,
									"src": "2527:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "2666:155:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1990,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2842:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2864:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2884:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2841:57:4"
									},
									"src": "2827:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "2907:147:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1999,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "3075:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "3098:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "3123:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3123:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3074:63:4"
									},
									"src": "3060:78:4"
								}
							],
							"scope": 2001,
							"src": "63:3078:4"
						}
					],
					"src": "35:3106:4"
				},
				"id": 4
			},
			"contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							2040
						]
					},
					"id": 2041,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2002,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2003,
								"nodeType": "StructuredDocumentation",
								"src": "62:765:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 2040,
							"linearizedBaseContracts": [
								2040
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2006,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2040,
									"src": "1620:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2004,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1620:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 2005,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1660:1:5",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2009,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2040,
									"src": "1668:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2007,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1668:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 2008,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1704:1:5",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2011,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2040,
									"src": "1714:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2010,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "1770:41:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2014,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "1781:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2015,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "1791:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "1781:22:5"
											}
										]
									},
									"documentation": null,
									"id": 2019,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1758:2:5"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1770:0:5"
									},
									"scope": 2040,
									"src": "1746:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "2219:433:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2023,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "2310:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2024,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "2321:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2310:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2331:33:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2302:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "2302:63:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2029,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "2443:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2030,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "2453:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2443:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "2443:18:5"
											},
											{
												"id": 2033,
												"nodeType": "PlaceholderStatement",
												"src": "2474:1:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2034,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "2622:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2035,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "2632:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2622:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "2622:22:5"
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "1819:370:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 2039,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2216:2:5"
									},
									"src": "2195:457:5",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2041,
							"src": "829:1826:5"
						}
					],
					"src": "35:2620:5"
				},
				"id": 5
			},
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2235
						]
					},
					"id": 2236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2042,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2043,
								"nodeType": "StructuredDocumentation",
								"src": "62:69:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2235,
							"linearizedBaseContracts": [
								2235
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "809:356:6",
										"statements": [
											{
												"assignments": [
													2052
												],
												"declarations": [
													{
														"constant": false,
														"id": 2052,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2059,
														"src": "1011:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2051,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1011:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2053,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1011:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1100:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1102:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1122:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1110:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1102:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2046,
														"isOffset": false,
														"isSlot": false,
														"src": "1122:7:6",
														"valueSize": 1
													},
													{
														"declaration": 2052,
														"isOffset": false,
														"isSlot": false,
														"src": "1102:4:6",
														"valueSize": 1
													}
												],
												"id": 2054,
												"nodeType": "InlineAssembly",
												"src": "1091:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2055,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "1149:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1149:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2050,
												"id": 2058,
												"nodeType": "Return",
												"src": "1142:15:6"
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "156:581:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2060,
												"src": "763:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "762:17:6"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2060,
												"src": "803:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "803:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "802:6:6"
									},
									"scope": 2235,
									"src": "743:422:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "2171:326:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2071,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2198:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2235",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2235",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2190:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2069,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2190:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2190:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2190:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2074,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "2215:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2190:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2223:31:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2182:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2182:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "2182:73:6"
											},
											{
												"assignments": [
													2080,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2080,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2093,
														"src": "2347:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2079,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2347:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 2087,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2081,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "2365:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2365:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2083,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "2388:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2365:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2346:54:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2089,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "2419:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2428:60:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2411:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2092,
												"nodeType": "ExpressionStatement",
												"src": "2411:78:6"
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "1173:921:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2094,
												"src": "2119:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2119:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2094,
												"src": "2146:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2118:43:6"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:0:6"
									},
									"scope": 2235,
									"src": "2100:397:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "3347:84:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2105,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "3376:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "3384:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3390:32:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2104,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2111,
															2131
														],
														"referencedDeclaration": 2131,
														"src": "3363:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3363:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2109,
												"nodeType": "Return",
												"src": "3356:67:6"
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "2505:747:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3280:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3296:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3296:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3279:35:6"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3333:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3333:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3332:14:6"
									},
									"scope": 2235,
									"src": "3258:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "3778:79:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "3819:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "3827:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3833:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 2127,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "3836:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2123,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "3796:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3796:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2122,
												"id": 2129,
												"nodeType": "Return",
												"src": "3789:60:6"
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "3439:216:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "3683:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "3699:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3699:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "3718:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3718:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3682:63:6"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2131,
												"src": "3764:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3764:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3763:14:6"
									},
									"scope": 2235,
									"src": "3661:196:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "4345:113:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2144,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "4385:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2145,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "4393:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2146,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "4399:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4406:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2143,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2151,
															2184
														],
														"referencedDeclaration": 2184,
														"src": "4363:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4363:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2149,
												"nodeType": "Return",
												"src": "4356:94:6"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "3865:361:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2151,
												"src": "4263:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2151,
												"src": "4279:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4279:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2151,
												"src": "4298:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4262:50:6"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2151,
												"src": "4331:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2140,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4331:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4330:14:6"
									},
									"scope": 2235,
									"src": "4232:226:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "4855:175:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2168,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4882:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2235",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2235",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4874:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2166,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4874:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4874:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4874:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2171,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "4899:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4874:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4906:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4866:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4866:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "4866:81:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2177,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "4988:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2178,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "4996:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2179,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "5002:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2180,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "5009:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2176,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "4965:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4965:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2164,
												"id": 2182,
												"nodeType": "Return",
												"src": "4958:64:6"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "4466:242:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2184,
												"src": "4745:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2184,
												"src": "4761:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4761:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2184,
												"src": "4780:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2184,
												"src": "4795:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4744:78:6"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2184,
												"src": "4841:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4841:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4840:14:6"
									},
									"scope": 2235,
									"src": "4714:316:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "5182:835:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2199,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "5212:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2198,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "5201:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5201:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5221:31:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5193:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5193:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "5193:60:6"
											},
											{
												"assignments": [
													2205,
													2207
												],
												"declarations": [
													{
														"constant": false,
														"id": 2205,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2233,
														"src": "5327:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2204,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5327:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2207,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2233,
														"src": "5341:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2206,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5341:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2214,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2212,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "5399:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2208,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2186,
																"src": "5368:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5368:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2210,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "5388:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5368:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5326:78:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 2215,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2205,
													"src": "5419:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2231,
													"nodeType": "Block",
													"src": "5478:532:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2219,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "5564:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5564:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5584:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5564:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2229,
																"nodeType": "Block",
																"src": "5944:55:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2226,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2192,
																					"src": "5970:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2225,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "5963:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5963:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2228,
																		"nodeType": "ExpressionStatement",
																		"src": "5963:20:6"
																	}
																]
															},
															"id": 2230,
															"nodeType": "IfStatement",
															"src": "5560:439:6",
															"trueBody": {
																"id": 2224,
																"nodeType": "Block",
																"src": "5587:351:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5775:148:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5798:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5827:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5821:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5821:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5802:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5871:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5875:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5867:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5867:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5888:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5860:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5860:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5860:44:6"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 2207,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5827:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2207,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5875:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 2223,
																		"nodeType": "InlineAssembly",
																		"src": "5766:157:6"
																	}
																]
															}
														}
													]
												},
												"id": 2232,
												"nodeType": "IfStatement",
												"src": "5415:595:6",
												"trueBody": {
													"id": 2218,
													"nodeType": "Block",
													"src": "5428:44:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2216,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "5450:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2196,
															"id": 2217,
															"nodeType": "Return",
															"src": "5443:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2234,
												"src": "5070:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5070:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2234,
												"src": "5086:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5086:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2234,
												"src": "5105:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2234,
												"src": "5123:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5123:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5069:81:6"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2234,
												"src": "5168:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5168:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5167:14:6"
									},
									"scope": 2235,
									"src": "5038:979:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2236,
							"src": "133:5887:6"
						}
					],
					"src": "35:5985:6"
				},
				"id": 6
			},
			"contracts/utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2431
						]
					},
					"id": 2432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2237,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2238,
								"nodeType": "StructuredDocumentation",
								"src": "62:575:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2431,
							"linearizedBaseContracts": [
								2431
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "969:114:7",
										"statements": [
											{
												"assignments": [
													2249
												],
												"declarations": [
													{
														"constant": false,
														"id": 2249,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2263,
														"src": "980:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2248,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "980:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2253,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2250,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "992:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2251,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "996:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "992:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "980:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2255,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "1016:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2256,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "1021:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1016:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1024:29:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1008:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1008:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "1008:46:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2261,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2249,
													"src": "1074:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2247,
												"id": 2262,
												"nodeType": "Return",
												"src": "1067:8:7"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "663:233:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2264,
												"src": "915:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2264,
												"src": "926:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "914:22:7"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2264,
												"src": "960:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "959:9:7"
									},
									"scope": 2431,
									"src": "902:181:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "1433:69:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2275,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "1455:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2276,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "1458:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1461:32:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2274,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2281,
															2309
														],
														"referencedDeclaration": 2309,
														"src": "1451:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1451:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2279,
												"nodeType": "Return",
												"src": "1444:50:7"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "1091:269:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2281,
												"src": "1379:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2281,
												"src": "1390:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1378:22:7"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2281,
												"src": "1424:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:9:7"
									},
									"scope": 2431,
									"src": "1366:136:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "1900:97:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "1919:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "1924:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1919:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2288,
															"src": "1927:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1911:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2299,
												"nodeType": "ExpressionStatement",
												"src": "1911:29:7"
											},
											{
												"assignments": [
													2301
												],
												"declarations": [
													{
														"constant": false,
														"id": 2301,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2308,
														"src": "1951:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1951:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2305,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2302,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "1963:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2303,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "1967:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1963:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1951:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2306,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2301,
													"src": "1988:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2292,
												"id": 2307,
												"nodeType": "Return",
												"src": "1981:8:7"
											}
										]
									},
									"documentation": {
										"id": 2282,
										"nodeType": "StructuredDocumentation",
										"src": "1510:289:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "1818:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "1829:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "1840:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1840:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:50:7"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2309,
												"src": "1891:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1890:9:7"
									},
									"scope": 2431,
									"src": "1805:192:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2343,
										"nodeType": "Block",
										"src": "2323:404:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2319,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "2559:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2564:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2559:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2325,
												"nodeType": "IfStatement",
												"src": "2555:47:7",
												"trueBody": {
													"id": 2324,
													"nodeType": "Block",
													"src": "2567:35:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2589:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2318,
															"id": 2323,
															"nodeType": "Return",
															"src": "2582:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													2327
												],
												"declarations": [
													{
														"constant": false,
														"id": 2327,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2343,
														"src": "2614:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2614:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2331,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2328,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "2626:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2329,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "2630:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2626:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2614:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2333,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2327,
																	"src": "2650:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2334,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "2654:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2650:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2336,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "2659:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2650:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2662:35:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2642:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2642:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2340,
												"nodeType": "ExpressionStatement",
												"src": "2642:56:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2341,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2327,
													"src": "2718:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2318,
												"id": 2342,
												"nodeType": "Return",
												"src": "2711:8:7"
											}
										]
									},
									"documentation": {
										"id": 2310,
										"nodeType": "StructuredDocumentation",
										"src": "2005:245:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "2269:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "2280:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2280:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2268:22:7"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2344,
												"src": "2314:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2313:9:7"
									},
									"scope": 2431,
									"src": "2256:471:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "3270:65:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2355,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "3292:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2356,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "3295:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3298:28:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2354,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2361,
															2389
														],
														"referencedDeclaration": 2389,
														"src": "3288:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3288:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2353,
												"id": 2359,
												"nodeType": "Return",
												"src": "3281:46:7"
											}
										]
									},
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "2735:462:7",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2361,
												"src": "3216:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3216:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2361,
												"src": "3227:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3215:22:7"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2361,
												"src": "3261:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3261:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3260:9:7"
									},
									"scope": 2431,
									"src": "3203:132:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "3926:183:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2366,
																"src": "3945:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3949:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3945:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2377,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "3952:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3937:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3937:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "3937:28:7"
											},
											{
												"assignments": [
													2381
												],
												"declarations": [
													{
														"constant": false,
														"id": 2381,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2388,
														"src": "3976:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3976:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2385,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2382,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2364,
														"src": "3988:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2383,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2366,
														"src": "3992:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3988:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3976:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2386,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2381,
													"src": "4100:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2372,
												"id": 2387,
												"nodeType": "Return",
												"src": "4093:8:7"
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "3343:482:7",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2389,
												"src": "3844:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2389,
												"src": "3855:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3855:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2389,
												"src": "3866:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3866:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3843:50:7"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2389,
												"src": "3917:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3917:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3916:9:7"
									},
									"scope": 2431,
									"src": "3831:278:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "4641:63:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2400,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "4663:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2401,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "4666:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4669:26:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2399,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2406,
															2430
														],
														"referencedDeclaration": 2430,
														"src": "4659:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4659:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2398,
												"id": 2404,
												"nodeType": "Return",
												"src": "4652:44:7"
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "4117:451:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2406,
												"src": "4587:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4587:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2406,
												"src": "4598:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4586:22:7"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2406,
												"src": "4632:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4631:9:7"
									},
									"scope": 2431,
									"src": "4574:130:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "5284:71:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2419,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2411,
																"src": "5303:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5308:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5303:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2422,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "5311:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5295:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5295:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2424,
												"nodeType": "ExpressionStatement",
												"src": "5295:29:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2425,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2409,
														"src": "5342:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2426,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "5346:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5342:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2417,
												"id": 2428,
												"nodeType": "Return",
												"src": "5335:12:7"
											}
										]
									},
									"documentation": {
										"id": 2407,
										"nodeType": "StructuredDocumentation",
										"src": "4712:471:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2430,
												"src": "5202:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5202:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2430,
												"src": "5213:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2430,
												"src": "5224:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2412,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5224:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5201:50:7"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2430,
												"src": "5275:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5274:9:7"
									},
									"scope": 2431,
									"src": "5189:166:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2432,
							"src": "639:4719:7"
						}
					],
					"src": "35:5323:7"
				},
				"id": 7
			}
		}
	}
}