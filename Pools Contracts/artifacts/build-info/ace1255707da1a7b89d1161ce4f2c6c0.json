{
	"id": "ace1255707da1a7b89d1161ce4f2c6c0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ShadowPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"./interfaces/IShadowChefV2.sol\";\r\nimport \"./interfaces/IBoostContract.sol\";\r\nimport \"./interfaces/IVShdw.sol\";\r\n\r\ncontract ShadowPool is Ownable, Pausable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct UserInfo {\r\n        uint256 shares; // number of shares for a user.\r\n        uint256 lastDepositedTime; // keep track of deposited time for potential penalty.\r\n        uint256 shdwAtLastUserAction; // keep track of Shdw deposited at the last user action.\r\n        uint256 lastUserActionTime; // keep track of the last user action time.\r\n        uint256 lockStartTime; // lock start time.\r\n        uint256 lockEndTime; // lock end time.\r\n        uint256 userBoostedShare; // boost share, in order to give the user higher reward. The user only enjoys the reward, so the principal needs to be recorded as a debt.\r\n        bool locked; //lock status.\r\n        uint256 lockedAmount; // amount deposited during lock period.\r\n    }\r\n\r\n    IERC20 public immutable token; // Shdw token.\r\n\r\n    IShadowChefV2 public immutable shadowchefV2;\r\n\r\n    address public boostContract; // boost contract used in Masterchef.\r\n    address public VShdw;\r\n\r\n    mapping(address => UserInfo) public userInfo;\r\n    mapping(address => bool) public freePerformanceFeeUsers; // free performance fee users.\r\n    mapping(address => bool) public freeWithdrawFeeUsers; // free withdraw fee users.\r\n    mapping(address => bool) public freeOverdueFeeUsers; // free overdue fee users.\r\n\r\n    uint256 public totalShares;\r\n    address public admin;\r\n    address public treasury;\r\n    address public operator;\r\n    uint256 public shdwPoolPID;\r\n    uint256 public totalBoostDebt; // total boost debt.\r\n    uint256 public totalLockedAmount; // total lock amount.\r\n\r\n    uint256 public constant MAX_PERFORMANCE_FEE = 2000; // 20%\r\n    uint256 public constant MAX_WITHDRAW_FEE = 500; // 5%\r\n    uint256 public constant MAX_OVERDUE_FEE = 100 * 1e10; // 100%\r\n    uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 1 weeks; // 1 week\r\n    uint256 public constant MIN_LOCK_DURATION = 1 weeks; // 1 week\r\n    uint256 public constant MAX_LOCK_DURATION_LIMIT = 1000 days; // 1000 days\r\n    uint256 public constant BOOST_WEIGHT_LIMIT = 5000 * 1e10; // 5000%\r\n    uint256 public constant PRECISION_FACTOR = 1e12; // precision factor.\r\n    uint256 public constant PRECISION_FACTOR_SHARE = 1e28; // precision factor for share.\r\n    uint256 public constant MIN_DEPOSIT_AMOUNT = 0.00001 ether;\r\n    uint256 public constant MIN_WITHDRAW_AMOUNT = 0.00001 ether;\r\n    uint256 public UNLOCK_FREE_DURATION = 1 weeks; // 1 week\r\n    uint256 public MAX_LOCK_DURATION = 365 days; // 365 days\r\n    uint256 public DURATION_FACTOR = 365 days; // 365 days, in order to calculate user additional boost.\r\n    uint256 public DURATION_FACTOR_OVERDUE = 180 days; // 180 days, in order to calculate overdue fee.\r\n    uint256 public BOOST_WEIGHT = 100 * 1e10; // 100%\r\n\r\n    uint256 public performanceFee = 200; // 2%\r\n    uint256 public performanceFeeContract = 200; // 2%\r\n    uint256 public withdrawFee = 10; // 0.1%\r\n    uint256 public withdrawFeeContract = 10; // 0.1%\r\n    uint256 public overdueFee = 100 * 1e10; // 100%\r\n    uint256 public withdrawFeePeriod = 72 hours; // 3 days\r\n\r\n    event Deposit(address indexed sender, uint256 amount, uint256 shares, uint256 duration, uint256 lastDepositedTime);\r\n    event Withdraw(address indexed sender, uint256 amount, uint256 shares);\r\n    event Harvest(address indexed sender, uint256 amount);\r\n    event Pause();\r\n    event Unpause();\r\n    event Init();\r\n    event Lock(\r\n        address indexed sender,\r\n        uint256 lockedAmount,\r\n        uint256 shares,\r\n        uint256 lockedDuration,\r\n        uint256 blockTimestamp\r\n    );\r\n    event Unlock(address indexed sender, uint256 amount, uint256 blockTimestamp);\r\n    event NewAdmin(address admin);\r\n    event NewTreasury(address treasury);\r\n    event NewOperator(address operator);\r\n    event NewBoostContract(address boostContract);\r\n    event NewVShdwContract(address VShdw);\r\n    event FreeFeeUser(address indexed user, bool indexed free);\r\n    event NewPerformanceFee(uint256 performanceFee);\r\n    event NewPerformanceFeeContract(uint256 performanceFeeContract);\r\n    event NewWithdrawFee(uint256 withdrawFee);\r\n    event NewOverdueFee(uint256 overdueFee);\r\n    event NewWithdrawFeeContract(uint256 withdrawFeeContract);\r\n    event NewWithdrawFeePeriod(uint256 withdrawFeePeriod);\r\n    event NewMaxLockDuration(uint256 maxLockDuration);\r\n    event NewDurationFactor(uint256 durationFactor);\r\n    event NewDurationFactorOverdue(uint256 durationFactorOverdue);\r\n    event NewUnlockFreeDuration(uint256 unlockFreeDuration);\r\n    event NewBoostWeight(uint256 boostWeight);\r\n\r\n    /**\r\n     * @notice Constructor\r\n     * @param _token: Shdw token contract\r\n     * @param _shadowchefV2: ShadowChefV2 contract\r\n     * @param _admin: address of the admin\r\n     * @param _treasury: address of the treasury (collects fees)\r\n     * @param _operator: address of operator\r\n     * @param _pid: Shdw pool ID in ShadowChefV2\r\n     */\r\n    constructor(\r\n        IERC20 _token,\r\n        IShadowChefV2 _shadowchefV2,\r\n        address _admin,\r\n        address _treasury,\r\n        address _operator,\r\n        uint256 _pid\r\n    ) {\r\n        token = _token;\r\n        shadowchefV2 = _shadowchefV2;\r\n        admin = _admin;\r\n        treasury = _treasury;\r\n        operator = _operator;\r\n        shdwPoolPID = _pid;\r\n    }\r\n\r\n    /**\r\n     * @notice Deposits a dummy token to `MASTER_CHEF` MCV2.\r\n     * It will transfer all the `dummyToken` in the tx sender address.\r\n     * @param dummyToken The address of the token to be deposited into MCV2.\r\n     */\r\n    function init(IERC20 dummyToken) external onlyOwner {\r\n        uint256 balance = dummyToken.balanceOf(msg.sender);\r\n        require(balance != 0, \"Balance must exceed 0\");\r\n        dummyToken.safeTransferFrom(msg.sender, address(this), balance);\r\n        dummyToken.approve(address(shadowchefV2), balance);\r\n        shadowchefV2.deposit(shdwPoolPID, balance);\r\n        emit Init();\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if the msg.sender is the admin address.\r\n     */\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"admin: wut?\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if the msg.sender is either the Shdw owner address or the operator address.\r\n     */\r\n    modifier onlyOperatorOrShdwOwner(address _user) {\r\n        require(msg.sender == _user || msg.sender == operator, \"Not operator or Shdw owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @notice Update user info in Boost Contract.\r\n     * @param _user: User address\r\n     */\r\n    function updateBoostContractInfo(address _user) internal {\r\n        if (boostContract != address(0)) {\r\n            UserInfo storage user = userInfo[_user];\r\n            uint256 lockDuration = user.lockEndTime - user.lockStartTime;\r\n            IBoostContract(boostContract).onShdwPoolUpdate(\r\n                _user,\r\n                user.lockedAmount,\r\n                lockDuration,\r\n                totalLockedAmount,\r\n                DURATION_FACTOR\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Update user share When need to unlock or charges a fee.\r\n     * @param _user: User address\r\n     */\r\n    function updateUserShare(address _user) internal {\r\n        UserInfo storage user = userInfo[_user];\r\n        if (user.shares > 0) {\r\n            if (user.locked) {\r\n                // Calculate the user's current token amount and update related parameters.\r\n                uint256 currentAmount = (balanceOf() * (user.shares)) / totalShares - user.userBoostedShare;\r\n                totalBoostDebt -= user.userBoostedShare;\r\n                user.userBoostedShare = 0;\r\n                totalShares -= user.shares;\r\n                //Charge a overdue fee after the free duration has expired.\r\n                if (!freeOverdueFeeUsers[_user] && ((user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp)) {\r\n                    uint256 earnAmount = currentAmount - user.lockedAmount;\r\n                    uint256 overdueDuration = block.timestamp - user.lockEndTime - UNLOCK_FREE_DURATION;\r\n                    if (overdueDuration > DURATION_FACTOR_OVERDUE) {\r\n                        overdueDuration = DURATION_FACTOR_OVERDUE;\r\n                    }\r\n                    // Rates are calculated based on the user's overdue duration.\r\n                    uint256 overdueWeight = (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE;\r\n                    uint256 currentOverdueFee = (earnAmount * overdueWeight) / PRECISION_FACTOR;\r\n                    token.safeTransfer(treasury, currentOverdueFee);\r\n                    currentAmount -= currentOverdueFee;\r\n                }\r\n                // Recalculate the user's share.\r\n                uint256 pool = balanceOf();\r\n                uint256 currentShares;\r\n                if (totalShares != 0) {\r\n                    currentShares = (currentAmount * totalShares) / (pool - currentAmount);\r\n                } else {\r\n                    currentShares = currentAmount;\r\n                }\r\n                user.shares = currentShares;\r\n                totalShares += currentShares;\r\n                // After the lock duration, update related parameters.\r\n                if (user.lockEndTime < block.timestamp) {\r\n                    user.locked = false;\r\n                    user.lockStartTime = 0;\r\n                    user.lockEndTime = 0;\r\n                    totalLockedAmount -= user.lockedAmount;\r\n                    user.lockedAmount = 0;\r\n                    emit Unlock(_user, currentAmount, block.timestamp);\r\n                }\r\n            } else if (!freePerformanceFeeUsers[_user]) {\r\n                // Calculate Performance fee.\r\n                uint256 totalAmount = (user.shares * balanceOf()) / totalShares;\r\n                totalShares -= user.shares;\r\n                user.shares = 0;\r\n                uint256 earnAmount = totalAmount - user.shdwAtLastUserAction;\r\n                uint256 feeRate = performanceFee;\r\n                if (_isContract(_user)) {\r\n                    feeRate = performanceFeeContract;\r\n                }\r\n                uint256 currentPerformanceFee = (earnAmount * feeRate) / 10000;\r\n                if (currentPerformanceFee > 0) {\r\n                    token.safeTransfer(treasury, currentPerformanceFee);\r\n                    totalAmount -= currentPerformanceFee;\r\n                }\r\n                // Recalculate the user's share.\r\n                uint256 pool = balanceOf();\r\n                uint256 newShares;\r\n                if (totalShares != 0) {\r\n                    newShares = (totalAmount * totalShares) / (pool - totalAmount);\r\n                } else {\r\n                    newShares = totalAmount;\r\n                }\r\n                user.shares = newShares;\r\n                totalShares += newShares;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Unlock user Shdw funds.\r\n     * @dev Only possible when contract not paused.\r\n     * @param _user: User address\r\n     */\r\n    function unlock(address _user) external onlyOperatorOrShdwOwner(_user) whenNotPaused {\r\n        UserInfo storage user = userInfo[_user];\r\n        require(user.locked && user.lockEndTime < block.timestamp, \"Cannot unlock yet\");\r\n        depositOperation(0, 0, _user);\r\n    }\r\n\r\n    /**\r\n     * @notice Deposit funds into the Shdw Pool.\r\n     * @dev Only possible when contract not paused.\r\n     * @param _amount: number of tokens to deposit (in Shdw)\r\n     * @param _lockDuration: Token lock duration\r\n     */\r\n    function deposit(uint256 _amount, uint256 _lockDuration) external whenNotPaused {\r\n        require(_amount > 0 || _lockDuration > 0, \"Nothing to deposit\");\r\n        depositOperation(_amount, _lockDuration, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @notice The operation of deposite.\r\n     * @param _amount: number of tokens to deposit (in Shdw)\r\n     * @param _lockDuration: Token lock duration\r\n     * @param _user: User address\r\n     */\r\n    function depositOperation(\r\n        uint256 _amount,\r\n        uint256 _lockDuration,\r\n        address _user\r\n    ) internal {\r\n        UserInfo storage user = userInfo[_user];\r\n        if (user.shares == 0 || _amount > 0) {\r\n            require(_amount > MIN_DEPOSIT_AMOUNT, \"Deposit amount must be greater than MIN_DEPOSIT_AMOUNT\");\r\n        }\r\n        // Calculate the total lock duration and check whether the lock duration meets the conditions.\r\n        uint256 totalLockDuration = _lockDuration;\r\n        if (user.lockEndTime >= block.timestamp) {\r\n            // Adding funds during the lock duration is equivalent to re-locking the position, needs to update some variables.\r\n            if (_amount > 0) {\r\n                user.lockStartTime = block.timestamp;\r\n                totalLockedAmount -= user.lockedAmount;\r\n                user.lockedAmount = 0;\r\n            }\r\n            totalLockDuration += user.lockEndTime - user.lockStartTime;\r\n        }\r\n        require(_lockDuration == 0 || totalLockDuration >= MIN_LOCK_DURATION, \"Minimum lock period is one week\");\r\n        require(totalLockDuration <= MAX_LOCK_DURATION, \"Maximum lock period exceeded\");\r\n\r\n        if (VShdw != address(0)) {\r\n            IVShdw(VShdw).deposit(_user, _amount, _lockDuration);\r\n        }\r\n\r\n        // Harvest tokens from Masterchef.\r\n        harvest();\r\n\r\n        // Handle stock funds.\r\n        if (totalShares == 0) {\r\n            uint256 stockAmount = available();\r\n            token.safeTransfer(treasury, stockAmount);\r\n        }\r\n        // Update user share.\r\n        updateUserShare(_user);\r\n\r\n        // Update lock duration.\r\n        if (_lockDuration > 0) {\r\n            if (user.lockEndTime < block.timestamp) {\r\n                user.lockStartTime = block.timestamp;\r\n                user.lockEndTime = block.timestamp + _lockDuration;\r\n            } else {\r\n                user.lockEndTime += _lockDuration;\r\n            }\r\n            user.locked = true;\r\n        }\r\n\r\n        uint256 currentShares;\r\n        uint256 currentAmount;\r\n        uint256 userCurrentLockedBalance;\r\n        uint256 pool = balanceOf();\r\n        if (_amount > 0) {\r\n            token.safeTransferFrom(_user, address(this), _amount);\r\n            currentAmount = _amount;\r\n        }\r\n\r\n        // Calculate lock funds\r\n        if (user.shares > 0 && user.locked) {\r\n            userCurrentLockedBalance = (pool * user.shares) / totalShares;\r\n            currentAmount += userCurrentLockedBalance;\r\n            totalShares -= user.shares;\r\n            user.shares = 0;\r\n\r\n            // Update lock amount\r\n            if (user.lockStartTime == block.timestamp) {\r\n                user.lockedAmount = userCurrentLockedBalance;\r\n                totalLockedAmount += user.lockedAmount;\r\n            }\r\n        }\r\n        if (totalShares != 0) {\r\n            currentShares = (currentAmount * totalShares) / (pool - userCurrentLockedBalance);\r\n        } else {\r\n            currentShares = currentAmount;\r\n        }\r\n\r\n        // Calculate the boost weight share.\r\n        if (user.lockEndTime > user.lockStartTime) {\r\n            // Calculate boost share.\r\n            uint256 boostWeight = ((user.lockEndTime - user.lockStartTime) * BOOST_WEIGHT) / DURATION_FACTOR;\r\n            uint256 boostShares = (boostWeight * currentShares) / PRECISION_FACTOR;\r\n            currentShares += boostShares;\r\n            user.shares += currentShares;\r\n\r\n            // Calculate boost share , the user only enjoys the reward, so the principal needs to be recorded as a debt.\r\n            uint256 userBoostedShare = (boostWeight * currentAmount) / PRECISION_FACTOR;\r\n            user.userBoostedShare += userBoostedShare;\r\n            totalBoostDebt += userBoostedShare;\r\n\r\n            // Update lock amount.\r\n            user.lockedAmount += _amount;\r\n            totalLockedAmount += _amount;\r\n\r\n            emit Lock(_user, user.lockedAmount, user.shares, (user.lockEndTime - user.lockStartTime), block.timestamp);\r\n        } else {\r\n            user.shares += currentShares;\r\n        }\r\n\r\n        if (_amount > 0 || _lockDuration > 0) {\r\n            user.lastDepositedTime = block.timestamp;\r\n        }\r\n        totalShares += currentShares;\r\n\r\n        user.shdwAtLastUserAction = (user.shares * balanceOf()) / totalShares - user.userBoostedShare;\r\n        user.lastUserActionTime = block.timestamp;\r\n\r\n        // Update user info in Boost Contract.\r\n        updateBoostContractInfo(_user);\r\n\r\n        emit Deposit(_user, _amount, currentShares, _lockDuration, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw funds from the Shdw Pool.\r\n     * @param _amount: Number of amount to withdraw\r\n     */\r\n    function withdrawByAmount(uint256 _amount) public whenNotPaused {\r\n        require(_amount > MIN_WITHDRAW_AMOUNT, \"Withdraw amount must be greater than MIN_WITHDRAW_AMOUNT\");\r\n        withdrawOperation(0, _amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw funds from the Shdw Pool.\r\n     * @param _shares: Number of shares to withdraw\r\n     */\r\n    function withdraw(uint256 _shares) public whenNotPaused {\r\n        require(_shares > 0, \"Nothing to withdraw\");\r\n        withdrawOperation(_shares, 0);\r\n    }\r\n\r\n    /**\r\n     * @notice The operation of withdraw.\r\n     * @param _shares: Number of shares to withdraw\r\n     * @param _amount: Number of amount to withdraw\r\n     */\r\n    function withdrawOperation(uint256 _shares, uint256 _amount) internal {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(_shares <= user.shares, \"Withdraw amount exceeds balance\");\r\n        require(user.lockEndTime < block.timestamp, \"Still in lock\");\r\n\r\n        if (VShdw != address(0)) {\r\n            IVShdw(VShdw).withdraw(msg.sender);\r\n        }\r\n\r\n        // Calculate the percent of withdraw shares, when unlocking or calculating the Performance fee, the shares will be updated.\r\n        uint256 currentShare = _shares;\r\n        uint256 sharesPercent = (_shares * PRECISION_FACTOR_SHARE) / user.shares;\r\n\r\n        // Harvest token from ShadowchefV2.\r\n        harvest();\r\n\r\n        // Update user share.\r\n        updateUserShare(msg.sender);\r\n\r\n        if (_shares == 0 && _amount > 0) {\r\n            uint256 pool = balanceOf();\r\n            currentShare = (_amount * totalShares) / pool; // Calculate equivalent shares\r\n            if (currentShare > user.shares) {\r\n                currentShare = user.shares;\r\n            }\r\n        } else {\r\n            currentShare = (sharesPercent * user.shares) / PRECISION_FACTOR_SHARE;\r\n        }\r\n        uint256 currentAmount = (balanceOf() * currentShare) / totalShares;\r\n        user.shares -= currentShare;\r\n        totalShares -= currentShare;\r\n\r\n        // Calculate withdraw fee\r\n        if (!freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod)) {\r\n            uint256 feeRate = withdrawFee;\r\n            if (_isContract(msg.sender)) {\r\n                feeRate = withdrawFeeContract;\r\n            }\r\n            uint256 currentWithdrawFee = (currentAmount * feeRate) / 10000;\r\n            token.safeTransfer(treasury, currentWithdrawFee);\r\n            currentAmount -= currentWithdrawFee;\r\n        }\r\n\r\n        token.safeTransfer(msg.sender, currentAmount);\r\n\r\n        if (user.shares > 0) {\r\n            user.shdwAtLastUserAction = (user.shares * balanceOf()) / totalShares;\r\n        } else {\r\n            user.shdwAtLastUserAction = 0;\r\n        }\r\n\r\n        user.lastUserActionTime = block.timestamp;\r\n\r\n        // Update user info in Boost Contract.\r\n        updateBoostContractInfo(msg.sender);\r\n\r\n        emit Withdraw(msg.sender, currentAmount, currentShare);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw all funds for a user\r\n     */\r\n    function withdrawAll() external {\r\n        withdraw(userInfo[msg.sender].shares);\r\n    }\r\n\r\n    /**\r\n     * @notice Harvest pending Shdw tokens from MasterChef\r\n     */\r\n    function harvest() internal {\r\n        uint256 pendingShdw = shadowchefV2.pendingShdw(shdwPoolPID, address(this));\r\n        if (pendingShdw > 0) {\r\n            uint256 balBefore = available();\r\n            shadowchefV2.withdraw(shdwPoolPID, 0);\r\n            uint256 balAfter = available();\r\n            emit Harvest(msg.sender, (balAfter - balBefore));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Set admin address\r\n     * @dev Only callable by the contract owner.\r\n     */\r\n    function setAdmin(address _admin) external onlyOwner {\r\n        require(_admin != address(0), \"Cannot be zero address\");\r\n        admin = _admin;\r\n        emit NewAdmin(admin);\r\n    }\r\n\r\n    /**\r\n     * @notice Set treasury address\r\n     * @dev Only callable by the contract owner.\r\n     */\r\n    function setTreasury(address _treasury) external onlyOwner {\r\n        require(_treasury != address(0), \"Cannot be zero address\");\r\n        treasury = _treasury;\r\n        emit NewTreasury(treasury);\r\n    }\r\n\r\n    /**\r\n     * @notice Set operator address\r\n     * @dev Callable by the contract owner.\r\n     */\r\n    function setOperator(address _operator) external onlyOwner {\r\n        require(_operator != address(0), \"Cannot be zero address\");\r\n        operator = _operator;\r\n        emit NewOperator(operator);\r\n    }\r\n\r\n    /**\r\n     * @notice Set Boost Contract address\r\n     * @dev Callable by the contract admin.\r\n     */\r\n    function setBoostContract(address _boostContract) external onlyAdmin {\r\n        require(_boostContract != address(0), \"Cannot be zero address\");\r\n        boostContract = _boostContract;\r\n        emit NewBoostContract(boostContract);\r\n    }\r\n\r\n    /**\r\n     * @notice Set VShdw Contract address\r\n     * @dev Callable by the contract admin.\r\n     */\r\n    function setVShdwContract(address _VShdw) external onlyAdmin {\r\n        require(_VShdw != address(0), \"Cannot be zero address\");\r\n        VShdw = _VShdw;\r\n        emit NewVShdwContract(VShdw);\r\n    }\r\n\r\n    /**\r\n     * @notice Set free performance fee address\r\n     * @dev Only callable by the contract admin.\r\n     * @param _user: User address\r\n     * @param _free: true:free false:not free\r\n     */\r\n    function setFreePerformanceFeeUser(address _user, bool _free) external onlyAdmin {\r\n        require(_user != address(0), \"Cannot be zero address\");\r\n        freePerformanceFeeUsers[_user] = _free;\r\n        emit FreeFeeUser(_user, _free);\r\n    }\r\n\r\n    /**\r\n     * @notice Set free overdue fee address\r\n     * @dev Only callable by the contract admin.\r\n     * @param _user: User address\r\n     * @param _free: true:free false:not free\r\n     */\r\n    function setOverdueFeeUser(address _user, bool _free) external onlyAdmin {\r\n        require(_user != address(0), \"Cannot be zero address\");\r\n        freeOverdueFeeUsers[_user] = _free;\r\n        emit FreeFeeUser(_user, _free);\r\n    }\r\n\r\n    /**\r\n     * @notice Set free withdraw fee address\r\n     * @dev Only callable by the contract admin.\r\n     * @param _user: User address\r\n     * @param _free: true:free false:not free\r\n     */\r\n    function setWithdrawFeeUser(address _user, bool _free) external onlyAdmin {\r\n        require(_user != address(0), \"Cannot be zero address\");\r\n        freeWithdrawFeeUsers[_user] = _free;\r\n        emit FreeFeeUser(_user, _free);\r\n    }\r\n\r\n    /**\r\n     * @notice Set performance fee\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r\n        require(_performanceFee <= MAX_PERFORMANCE_FEE, \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\");\r\n        performanceFee = _performanceFee;\r\n        emit NewPerformanceFee(performanceFee);\r\n    }\r\n\r\n    /**\r\n     * @notice Set performance fee for contract\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setPerformanceFeeContract(uint256 _performanceFeeContract) external onlyAdmin {\r\n        require(\r\n            _performanceFeeContract <= MAX_PERFORMANCE_FEE,\r\n            \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\"\r\n        );\r\n        performanceFeeContract = _performanceFeeContract;\r\n        emit NewPerformanceFeeContract(performanceFeeContract);\r\n    }\r\n\r\n    /**\r\n     * @notice Set withdraw fee\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r\n        require(_withdrawFee <= MAX_WITHDRAW_FEE, \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\");\r\n        withdrawFee = _withdrawFee;\r\n        emit NewWithdrawFee(withdrawFee);\r\n    }\r\n\r\n    /**\r\n     * @notice Set overdue fee\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setOverdueFee(uint256 _overdueFee) external onlyAdmin {\r\n        require(_overdueFee <= MAX_OVERDUE_FEE, \"overdueFee cannot be more than MAX_OVERDUE_FEE\");\r\n        overdueFee = _overdueFee;\r\n        emit NewOverdueFee(_overdueFee);\r\n    }\r\n\r\n    /**\r\n     * @notice Set withdraw fee for contract\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setWithdrawFeeContract(uint256 _withdrawFeeContract) external onlyAdmin {\r\n        require(_withdrawFeeContract <= MAX_WITHDRAW_FEE, \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\");\r\n        withdrawFeeContract = _withdrawFeeContract;\r\n        emit NewWithdrawFeeContract(withdrawFeeContract);\r\n    }\r\n\r\n    /**\r\n     * @notice Set withdraw fee period\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r\n        require(\r\n            _withdrawFeePeriod <= MAX_WITHDRAW_FEE_PERIOD,\r\n            \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\"\r\n        );\r\n        withdrawFeePeriod = _withdrawFeePeriod;\r\n        emit NewWithdrawFeePeriod(withdrawFeePeriod);\r\n    }\r\n\r\n    /**\r\n     * @notice Set MAX_LOCK_DURATION\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setMaxLockDuration(uint256 _maxLockDuration) external onlyAdmin {\r\n        require(\r\n            _maxLockDuration <= MAX_LOCK_DURATION_LIMIT,\r\n            \"MAX_LOCK_DURATION cannot be more than MAX_LOCK_DURATION_LIMIT\"\r\n        );\r\n        MAX_LOCK_DURATION = _maxLockDuration;\r\n        emit NewMaxLockDuration(_maxLockDuration);\r\n    }\r\n\r\n    /**\r\n     * @notice Set DURATION_FACTOR\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setDurationFactor(uint256 _durationFactor) external onlyAdmin {\r\n        require(_durationFactor > 0, \"DURATION_FACTOR cannot be zero\");\r\n        DURATION_FACTOR = _durationFactor;\r\n        emit NewDurationFactor(_durationFactor);\r\n    }\r\n\r\n    /**\r\n     * @notice Set DURATION_FACTOR_OVERDUE\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setDurationFactorOverdue(uint256 _durationFactorOverdue) external onlyAdmin {\r\n        require(_durationFactorOverdue > 0, \"DURATION_FACTOR_OVERDUE cannot be zero\");\r\n        DURATION_FACTOR_OVERDUE = _durationFactorOverdue;\r\n        emit NewDurationFactorOverdue(_durationFactorOverdue);\r\n    }\r\n\r\n    /**\r\n     * @notice Set UNLOCK_FREE_DURATION\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setUnlockFreeDuration(uint256 _unlockFreeDuration) external onlyAdmin {\r\n        require(_unlockFreeDuration > 0, \"UNLOCK_FREE_DURATION cannot be zero\");\r\n        UNLOCK_FREE_DURATION = _unlockFreeDuration;\r\n        emit NewUnlockFreeDuration(_unlockFreeDuration);\r\n    }\r\n\r\n    /**\r\n     * @notice Set BOOST_WEIGHT\r\n     * @dev Only callable by the contract admin.\r\n     */\r\n    function setBoostWeight(uint256 _boostWeight) external onlyAdmin {\r\n        require(_boostWeight <= BOOST_WEIGHT_LIMIT, \"BOOST_WEIGHT cannot be more than BOOST_WEIGHT_LIMIT\");\r\n        BOOST_WEIGHT = _boostWeight;\r\n        emit NewBoostWeight(_boostWeight);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw unexpected tokens sent to the Shdw Pool\r\n     */\r\n    function inCaseTokensGetStuck(address _token) external onlyAdmin {\r\n        require(_token != address(token), \"Token cannot be same as deposit token\");\r\n\r\n        uint256 amount = IERC20(_token).balanceOf(address(this));\r\n        IERC20(_token).safeTransfer(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Trigger stopped state\r\n     * @dev Only possible when contract not paused.\r\n     */\r\n    function pause() external onlyAdmin whenNotPaused {\r\n        _pause();\r\n        emit Pause();\r\n    }\r\n\r\n    /**\r\n     * @notice Return to normal state\r\n     * @dev Only possible when contract is paused.\r\n     */\r\n    function unpause() external onlyAdmin whenPaused {\r\n        _unpause();\r\n        emit Unpause();\r\n    }\r\n\r\n    /**\r\n     * @notice Calculate Performance fee.\r\n     * @param _user: User address\r\n     * @return Returns Performance fee.\r\n     */\r\n    function calculatePerformanceFee(address _user) public view returns (uint256) {\r\n        UserInfo storage user = userInfo[_user];\r\n        if (user.shares > 0 && !user.locked && !freePerformanceFeeUsers[_user]) {\r\n            uint256 pool = balanceOf() + calculateTotalpendingShdwRewards();\r\n            uint256 totalAmount = (user.shares * pool) / totalShares;\r\n            uint256 earnAmount = totalAmount - user.shdwAtLastUserAction;\r\n            uint256 feeRate = performanceFee;\r\n            if (_isContract(_user)) {\r\n                feeRate = performanceFeeContract;\r\n            }\r\n            uint256 currentPerformanceFee = (earnAmount * feeRate) / 10000;\r\n            return currentPerformanceFee;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculate overdue fee.\r\n     * @param _user: User address\r\n     * @return Returns Overdue fee.\r\n     */\r\n    function calculateOverdueFee(address _user) public view returns (uint256) {\r\n        UserInfo storage user = userInfo[_user];\r\n        if (\r\n            user.shares > 0 &&\r\n            user.locked &&\r\n            !freeOverdueFeeUsers[_user] &&\r\n            ((user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp)\r\n        ) {\r\n            uint256 pool = balanceOf() + calculateTotalpendingShdwRewards();\r\n            uint256 currentAmount = (pool * (user.shares)) / totalShares - user.userBoostedShare;\r\n            uint256 earnAmount = currentAmount - user.lockedAmount;\r\n            uint256 overdueDuration = block.timestamp - user.lockEndTime - UNLOCK_FREE_DURATION;\r\n            if (overdueDuration > DURATION_FACTOR_OVERDUE) {\r\n                overdueDuration = DURATION_FACTOR_OVERDUE;\r\n            }\r\n            // Rates are calculated based on the user's overdue duration.\r\n            uint256 overdueWeight = (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE;\r\n            uint256 currentOverdueFee = (earnAmount * overdueWeight) / PRECISION_FACTOR;\r\n            return currentOverdueFee;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculate Performance Fee Or Overdue Fee\r\n     * @param _user: User address\r\n     * @return Returns  Performance Fee Or Overdue Fee.\r\n     */\r\n    function calculatePerformanceFeeOrOverdueFee(address _user) internal view returns (uint256) {\r\n        return calculatePerformanceFee(_user) + calculateOverdueFee(_user);\r\n    }\r\n\r\n    /**\r\n     * @notice Calculate withdraw fee.\r\n     * @param _user: User address\r\n     * @param _shares: Number of shares to withdraw\r\n     * @return Returns Withdraw fee.\r\n     */\r\n    function calculateWithdrawFee(address _user, uint256 _shares) public view returns (uint256) {\r\n        UserInfo storage user = userInfo[_user];\r\n        if (user.shares < _shares) {\r\n            _shares = user.shares;\r\n        }\r\n        if (!freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod)) {\r\n            uint256 pool = balanceOf() + calculateTotalpendingShdwRewards();\r\n            uint256 sharesPercent = (_shares * PRECISION_FACTOR) / user.shares;\r\n            uint256 currentTotalAmount = (pool * (user.shares)) /\r\n                totalShares -\r\n                user.userBoostedShare -\r\n                calculatePerformanceFeeOrOverdueFee(_user);\r\n            uint256 currentAmount = (currentTotalAmount * sharesPercent) / PRECISION_FACTOR;\r\n            uint256 feeRate = withdrawFee;\r\n            if (_isContract(msg.sender)) {\r\n                feeRate = withdrawFeeContract;\r\n            }\r\n            uint256 currentWithdrawFee = (currentAmount * feeRate) / 10000;\r\n            return currentWithdrawFee;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates the total pending rewards that can be harvested\r\n     * @return Returns total pending Shdw rewards\r\n     */\r\n    function calculateTotalpendingShdwRewards() public view returns (uint256) {\r\n        uint256 amount = shadowchefV2.pendingShdw(shdwPoolPID, address(this));\r\n        return amount;\r\n    }\r\n\r\n    function getPricePerFullShare() external view returns (uint256) {\r\n        return totalShares == 0 ? 1e18 : (((balanceOf() + calculateTotalpendingShdwRewards()) * (1e18)) / totalShares);\r\n    }\r\n\r\n    /**\r\n     * @notice Current pool available balance\r\n     * @dev The contract puts 100% of the tokens to work.\r\n     */\r\n    function available() public view returns (uint256) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates the total underlying tokens\r\n     * @dev It includes tokens held by the contract and the boost debt amount.\r\n     */\r\n    function balanceOf() public view returns (uint256) {\r\n        return token.balanceOf(address(this)) + totalBoostDebt;\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if address is a contract\r\n     */\r\n    function _isContract(address addr) internal view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(addr)\r\n        }\r\n        return size > 0;\r\n    }\r\n}"
			},
			"contracts/interfaces/IVShdw.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IVShdw {\r\n    function deposit(\r\n        address _user,\r\n        uint256 _amount,\r\n        uint256 _lockDuration\r\n    ) external;\r\n\r\n    function withdraw(address _user) external;\r\n}"
			},
			"contracts/interfaces/IBoostContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBoostContract {\r\n    function onShdwPoolUpdate(\r\n        address _user,\r\n        uint256 _lockedAmount,\r\n        uint256 _lockedDuration,\r\n        uint256 _totalLockedAmount,\r\n        uint256 _maxLockDuration\r\n    ) external;\r\n}"
			},
			"contracts/interfaces/IShadowChefV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IShadowChefV2 {\r\n    function deposit(uint256 _pid, uint256 _amount) external;\r\n\r\n    function withdraw(uint256 _pid, uint256 _amount) external;\r\n\r\n    function pendingShdw(uint256 _pid, address _user) external view returns (uint256);\r\n\r\n    function userInfo(uint256 _pid, address _user) external view returns (uint256, uint256);\r\n\r\n    function emergencyWithdraw(uint256 _pid) external;\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208b5d69e023caa3fbf5729744a3b5c313ce51d3fb349e6d3acb359e8ee91cd3f964736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b5d69e023caa3fbf5729744a3b5c313ce51d3fb349e6d3acb359e8ee91cd3f964736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0x5D PUSH10 0xE023CAA3FBF5729744A3 0xB5 0xC3 SGT 0xCE MLOAD 0xD3 0xFB CALLVALUE SWAP15 PUSH14 0x3ACB359E8EE91CD3F964736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b5d69e023caa3fbf5729744a3b5c313ce51d3fb349e6d3acb359e8ee91cd3f964736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0x5D PUSH10 0xE023CAA3FBF5729744A3 0xB5 0xC3 SGT 0xCE MLOAD 0xD3 0xFB CALLVALUE SWAP15 PUSH14 0x3ACB359E8EE91CD3F964736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b5d69e023caa3fbf5729744a3b5c313ce51d3fb349e6d3acb359e8ee91cd3f964736f6c63430008010033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9bf6e162c7c22fda3889c7402363901e031a7647fcbc5fd2cf5a9f6f399acd764736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9bf6e162c7c22fda3889c7402363901e031a7647fcbc5fd2cf5a9f6f399acd764736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xBF PUSH15 0x162C7C22FDA3889C7402363901E031 0xA7 PUSH5 0x7FCBC5FD2C CREATE2 0xA9 0xF6 RETURN SWAP10 0xAC 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "194:8111:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9bf6e162c7c22fda3889c7402363901e031a7647fcbc5fd2cf5a9f6f399acd764736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xBF PUSH15 0x162C7C22FDA3889C7402363901E031 0xA7 PUSH5 0x7FCBC5FD2C CREATE2 0xA9 0xF6 RETURN SWAP10 0xAC 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "194:8111:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9bf6e162c7c22fda3889c7402363901e031a7647fcbc5fd2cf5a9f6f399acd764736f6c63430008010033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ShadowPool.sol": {
				"ShadowPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "contract IShadowChefV2",
									"name": "_shadowchefV2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "free",
									"type": "bool"
								}
							],
							"name": "FreeFeeUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Init",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedDuration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "Lock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "NewAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "boostContract",
									"type": "address"
								}
							],
							"name": "NewBoostContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "boostWeight",
									"type": "uint256"
								}
							],
							"name": "NewBoostWeight",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "durationFactor",
									"type": "uint256"
								}
							],
							"name": "NewDurationFactor",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "durationFactorOverdue",
									"type": "uint256"
								}
							],
							"name": "NewDurationFactorOverdue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxLockDuration",
									"type": "uint256"
								}
							],
							"name": "NewMaxLockDuration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "NewOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "overdueFee",
									"type": "uint256"
								}
							],
							"name": "NewOverdueFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "performanceFee",
									"type": "uint256"
								}
							],
							"name": "NewPerformanceFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "performanceFeeContract",
									"type": "uint256"
								}
							],
							"name": "NewPerformanceFeeContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								}
							],
							"name": "NewTreasury",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockFreeDuration",
									"type": "uint256"
								}
							],
							"name": "NewUnlockFreeDuration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "VShdw",
									"type": "address"
								}
							],
							"name": "NewVShdwContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawFee",
									"type": "uint256"
								}
							],
							"name": "NewWithdrawFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawFeeContract",
									"type": "uint256"
								}
							],
							"name": "NewWithdrawFeeContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawFeePeriod",
									"type": "uint256"
								}
							],
							"name": "NewWithdrawFeePeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"name": "Unlock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BOOST_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BOOST_WEIGHT_LIMIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DURATION_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DURATION_FACTOR_OVERDUE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_LOCK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_LOCK_DURATION_LIMIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_OVERDUE_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_PERFORMANCE_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WITHDRAW_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WITHDRAW_FEE_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_DEPOSIT_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_LOCK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_WITHDRAW_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION_FACTOR_SHARE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNLOCK_FREE_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VShdw",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "available",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "boostContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculateOverdueFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculatePerformanceFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateTotalpendingShdwRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "calculateWithdrawFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockDuration",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "freeOverdueFeeUsers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "freePerformanceFeeUsers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "freeWithdrawFeeUsers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPricePerFullShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "inCaseTokensGetStuck",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "dummyToken",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "overdueFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "performanceFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "performanceFeeContract",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_boostContract",
									"type": "address"
								}
							],
							"name": "setBoostContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_boostWeight",
									"type": "uint256"
								}
							],
							"name": "setBoostWeight",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_durationFactor",
									"type": "uint256"
								}
							],
							"name": "setDurationFactor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_durationFactorOverdue",
									"type": "uint256"
								}
							],
							"name": "setDurationFactorOverdue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_free",
									"type": "bool"
								}
							],
							"name": "setFreePerformanceFeeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxLockDuration",
									"type": "uint256"
								}
							],
							"name": "setMaxLockDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_overdueFee",
									"type": "uint256"
								}
							],
							"name": "setOverdueFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_free",
									"type": "bool"
								}
							],
							"name": "setOverdueFeeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_performanceFee",
									"type": "uint256"
								}
							],
							"name": "setPerformanceFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_performanceFeeContract",
									"type": "uint256"
								}
							],
							"name": "setPerformanceFeeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_unlockFreeDuration",
									"type": "uint256"
								}
							],
							"name": "setUnlockFreeDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_VShdw",
									"type": "address"
								}
							],
							"name": "setVShdwContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawFee",
									"type": "uint256"
								}
							],
							"name": "setWithdrawFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawFeeContract",
									"type": "uint256"
								}
							],
							"name": "setWithdrawFeeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawFeePeriod",
									"type": "uint256"
								}
							],
							"name": "setWithdrawFeePeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_free",
									"type": "bool"
								}
							],
							"name": "setWithdrawFeeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shadowchefV2",
							"outputs": [
								{
									"internalType": "contract IShadowChefV2",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwPoolPID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBoostDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLockedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "unlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "shdwAtLastUserAction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUserActionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockStartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userBoostedShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "locked",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "lockedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawByAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFeeContract",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFeePeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"available()": {
								"details": "The contract puts 100% of the tokens to work."
							},
							"balanceOf()": {
								"details": "It includes tokens held by the contract and the boost debt amount."
							},
							"calculateOverdueFee(address)": {
								"params": {
									"_user": ": User address"
								},
								"returns": {
									"_0": "Returns Overdue fee."
								}
							},
							"calculatePerformanceFee(address)": {
								"params": {
									"_user": ": User address"
								},
								"returns": {
									"_0": "Returns Performance fee."
								}
							},
							"calculateTotalpendingShdwRewards()": {
								"returns": {
									"_0": "Returns total pending Shdw rewards"
								}
							},
							"calculateWithdrawFee(address,uint256)": {
								"params": {
									"_shares": ": Number of shares to withdraw",
									"_user": ": User address"
								},
								"returns": {
									"_0": "Returns Withdraw fee."
								}
							},
							"constructor": {
								"params": {
									"_admin": ": address of the admin",
									"_operator": ": address of operator",
									"_pid": ": Shdw pool ID in ShadowChefV2",
									"_shadowchefV2": ": ShadowChefV2 contract",
									"_token": ": Shdw token contract",
									"_treasury": ": address of the treasury (collects fees)"
								}
							},
							"deposit(uint256,uint256)": {
								"details": "Only possible when contract not paused.",
								"params": {
									"_amount": ": number of tokens to deposit (in Shdw)",
									"_lockDuration": ": Token lock duration"
								}
							},
							"init(address)": {
								"params": {
									"dummyToken": "The address of the token to be deposited into MCV2."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Only possible when contract not paused."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setAdmin(address)": {
								"details": "Only callable by the contract owner."
							},
							"setBoostContract(address)": {
								"details": "Callable by the contract admin."
							},
							"setBoostWeight(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setDurationFactor(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setDurationFactorOverdue(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setFreePerformanceFeeUser(address,bool)": {
								"details": "Only callable by the contract admin.",
								"params": {
									"_free": ": true:free false:not free",
									"_user": ": User address"
								}
							},
							"setMaxLockDuration(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setOperator(address)": {
								"details": "Callable by the contract owner."
							},
							"setOverdueFee(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setOverdueFeeUser(address,bool)": {
								"details": "Only callable by the contract admin.",
								"params": {
									"_free": ": true:free false:not free",
									"_user": ": User address"
								}
							},
							"setPerformanceFee(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setPerformanceFeeContract(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setTreasury(address)": {
								"details": "Only callable by the contract owner."
							},
							"setUnlockFreeDuration(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setVShdwContract(address)": {
								"details": "Callable by the contract admin."
							},
							"setWithdrawFee(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setWithdrawFeeContract(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setWithdrawFeePeriod(uint256)": {
								"details": "Only callable by the contract admin."
							},
							"setWithdrawFeeUser(address,bool)": {
								"details": "Only callable by the contract admin.",
								"params": {
									"_free": ": true:free false:not free",
									"_user": ": User address"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unlock(address)": {
								"details": "Only possible when contract not paused.",
								"params": {
									"_user": ": User address"
								}
							},
							"unpause()": {
								"details": "Only possible when contract is paused."
							},
							"withdraw(uint256)": {
								"params": {
									"_shares": ": Number of shares to withdraw"
								}
							},
							"withdrawByAmount(uint256)": {
								"params": {
									"_amount": ": Number of amount to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ShadowPool.sol\":360:33992  contract ShadowPool is Ownable, Pausable {\r... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ShadowPool.sol\":2798:2805  1 weeks */\n  0x093a80\n    /* \"contracts/ShadowPool.sol\":2760:2805  uint256 public UNLOCK_FREE_DURATION = 1 weeks */\n  0x0e\n  sstore\n    /* \"contracts/ShadowPool.sol\":2857:2865  365 days */\n  0x01e13380\n    /* \"contracts/ShadowPool.sol\":2822:2865  uint256 public MAX_LOCK_DURATION = 365 days */\n  0x0f\n  sstore\n    /* \"contracts/ShadowPool.sol\":2917:2925  365 days */\n  0x01e13380\n    /* \"contracts/ShadowPool.sol\":2884:2925  uint256 public DURATION_FACTOR = 365 days */\n  0x10\n  sstore\n    /* \"contracts/ShadowPool.sol\":3031:3039  180 days */\n  0xed4e00\n    /* \"contracts/ShadowPool.sol\":2990:3039  uint256 public DURATION_FACTOR_OVERDUE = 180 days */\n  0x11\n  sstore\n    /* \"contracts/ShadowPool.sol\":3124:3134  100 * 1e10 */\n  0xe8d4a51000\n    /* \"contracts/ShadowPool.sol\":3094:3134  uint256 public BOOST_WEIGHT = 100 * 1e10 */\n  0x12\n  sstore\n    /* \"contracts/ShadowPool.sol\":3183:3186  200 */\n  0xc8\n    /* \"contracts/ShadowPool.sol\":3151:3186  uint256 public performanceFee = 200 */\n  0x13\n  sstore\n    /* \"contracts/ShadowPool.sol\":3239:3242  200 */\n  0xc8\n    /* \"contracts/ShadowPool.sol\":3199:3242  uint256 public performanceFeeContract = 200 */\n  0x14\n  sstore\n    /* \"contracts/ShadowPool.sol\":3284:3286  10 */\n  0x0a\n    /* \"contracts/ShadowPool.sol\":3255:3286  uint256 public withdrawFee = 10 */\n  0x15\n  sstore\n    /* \"contracts/ShadowPool.sol\":3338:3340  10 */\n  0x0a\n    /* \"contracts/ShadowPool.sol\":3301:3340  uint256 public withdrawFeeContract = 10 */\n  0x16\n  sstore\n    /* \"contracts/ShadowPool.sol\":3383:3393  100 * 1e10 */\n  0xe8d4a51000\n    /* \"contracts/ShadowPool.sol\":3355:3393  uint256 public overdueFee = 100 * 1e10 */\n  0x17\n  sstore\n    /* \"contracts/ShadowPool.sol\":3443:3451  72 hours */\n  0x03f480\n    /* \"contracts/ShadowPool.sol\":3408:3451  uint256 public withdrawFeePeriod = 72 hours */\n  0x18\n  sstore\n    /* \"contracts/ShadowPool.sol\":5311:5684  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/ShadowPool.sol\":5507:5521  token = _token */\n  0x60\n  swap7\n  dup8\n  shl\n  dup2\n  and\n  0x80\n  mstore\n    /* \"contracts/ShadowPool.sol\":5532:5560  shadowchefV2 = _shadowchefV2 */\n  swap5\n  swap1\n  swap6\n  shl\n  swap1\n  swap4\n  and\n  0xa0\n  mstore\n    /* \"contracts/ShadowPool.sol\":5571:5576  admin */\n  0x08\n    /* \"contracts/ShadowPool.sol\":5571:5585  admin = _admin */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/ShadowPool.sol\":5596:5604  treasury */\n  0x09\n    /* \"contracts/ShadowPool.sol\":5596:5616  treasury = _treasury */\n  dup1\n  sload\n  swap3\n  dup5\n  and\n  swap3\n  dup3\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/ShadowPool.sol\":5627:5635  operator */\n  0x0a\n    /* \"contracts/ShadowPool.sol\":5627:5647  operator = _operator */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/ShadowPool.sol\":5658:5669  shdwPoolPID */\n  0x0b\n    /* \"contracts/ShadowPool.sol\":5658:5676  shdwPoolPID = _pid */\n  sstore\n    /* \"contracts/ShadowPool.sol\":360:33992  contract ShadowPool is Ownable, Pausable {\r... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:921   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n  0x00\n  dup1\n    /* \"#utility.yul\":258:261   */\n  0xc0\n    /* \"#utility.yul\":246:255   */\n  dup8\n    /* \"#utility.yul\":237:244   */\n  dup10\n    /* \"#utility.yul\":233:256   */\n  sub\n    /* \"#utility.yul\":229:262   */\n  slt\n    /* \"#utility.yul\":226:228   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":280:286   */\n  dup2\n    /* \"#utility.yul\":272:278   */\n  dup3\n    /* \"#utility.yul\":265:287   */\n  revert\n    /* \"#utility.yul\":226:228   */\ntag_19:\n    /* \"#utility.yul\":317:326   */\n  dup7\n    /* \"#utility.yul\":311:327   */\n  mload\n    /* \"#utility.yul\":336:369   */\n  tag_20\n    /* \"#utility.yul\":363:368   */\n  dup2\n    /* \"#utility.yul\":336:369   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":438:440   */\n  0x20\n    /* \"#utility.yul\":423:441   */\n  dup9\n  add\n    /* \"#utility.yul\":417:442   */\n  mload\n    /* \"#utility.yul\":388:393   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":451:486   */\n  tag_22\n    /* \"#utility.yul\":417:442   */\n  dup2\n    /* \"#utility.yul\":451:486   */\n  tag_21\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":557:559   */\n  0x40\n    /* \"#utility.yul\":542:560   */\n  dup9\n  add\n    /* \"#utility.yul\":536:561   */\n  mload\n    /* \"#utility.yul\":505:512   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":570:605   */\n  tag_23\n    /* \"#utility.yul\":536:561   */\n  dup2\n    /* \"#utility.yul\":570:605   */\n  tag_21\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":676:678   */\n  0x60\n    /* \"#utility.yul\":661:679   */\n  dup9\n  add\n    /* \"#utility.yul\":655:680   */\n  mload\n    /* \"#utility.yul\":624:631   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":689:724   */\n  tag_24\n    /* \"#utility.yul\":655:680   */\n  dup2\n    /* \"#utility.yul\":689:724   */\n  tag_21\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":795:798   */\n  0x80\n    /* \"#utility.yul\":780:799   */\n  dup9\n  add\n    /* \"#utility.yul\":774:800   */\n  mload\n    /* \"#utility.yul\":743:750   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":809:844   */\n  tag_25\n    /* \"#utility.yul\":774:800   */\n  dup2\n    /* \"#utility.yul\":809:844   */\n  tag_21\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":863:870   */\n  dup1\n    /* \"#utility.yul\":853:870   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":910:913   */\n  0xa0\n    /* \"#utility.yul\":899:908   */\n  dup8\n    /* \"#utility.yul\":895:914   */\n  add\n    /* \"#utility.yul\":889:915   */\n  mload\n    /* \"#utility.yul\":879:915   */\n  swap1\n  pop\n    /* \"#utility.yul\":216:921   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":926:1059   */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1003:1034   */\n  dup2\n  and\n    /* \"#utility.yul\":993:1035   */\n  dup2\n  eq\n    /* \"#utility.yul\":983:985   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1049:1050   */\n  0x00\n    /* \"#utility.yul\":1046:1047   */\n  dup1\n    /* \"#utility.yul\":1039:1051   */\n  revert\n    /* \"#utility.yul\":983:985   */\ntag_27:\n    /* \"#utility.yul\":973:1059   */\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/ShadowPool.sol\":360:33992  contract ShadowPool is Ownable, Pausable {\r... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n  0x00\n  assignImmutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ShadowPool.sol\":360:33992  contract ShadowPool is Ownable, Pausable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x87788782\n      gt\n      tag_79\n      jumpi\n      dup1\n      0xc6ed51be\n      gt\n      tag_80\n      jumpi\n      dup1\n      0xe464c623\n      gt\n      tag_81\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_82\n      jumpi\n      dup1\n      0xf851a440\n      gt\n      tag_83\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_76\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xfd253b64\n      eq\n      tag_78\n      jumpi\n      jump(tag_2)\n    tag_83:\n      dup1\n      0xf2fde38b\n      eq\n      tag_74\n      jumpi\n      dup1\n      0xf786b958\n      eq\n      tag_75\n      jumpi\n      jump(tag_2)\n    tag_82:\n      dup1\n      0xe73008bc\n      gt\n      tag_84\n      jumpi\n      dup1\n      0xe73008bc\n      eq\n      tag_71\n      jumpi\n      dup1\n      0xe941fa78\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_73\n      jumpi\n      jump(tag_2)\n    tag_84:\n      dup1\n      0xe464c623\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xe4b37ef5\n      eq\n      tag_70\n      jumpi\n      jump(tag_2)\n    tag_81:\n      dup1\n      0xdef68a9c\n      gt\n      tag_85\n      jumpi\n      dup1\n      0xdf10b4e6\n      gt\n      tag_86\n      jumpi\n      dup1\n      0xdf10b4e6\n      eq\n      tag_66\n      jumpi\n      dup1\n      0xdfcedeee\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_68\n      jumpi\n      jump(tag_2)\n    tag_86:\n      dup1\n      0xdef68a9c\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xdef7869d\n      eq\n      tag_65\n      jumpi\n      jump(tag_2)\n    tag_85:\n      dup1\n      0xc6ed51be\n      eq\n      tag_60\n      jumpi\n      dup1\n      0xcc9cfba1\n      eq\n      tag_61\n      jumpi\n      dup1\n      0xccd34cd5\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xd4b0de2f\n      eq\n      tag_63\n      jumpi\n      jump(tag_2)\n    tag_80:\n      dup1\n      0xacaf88cd\n      gt\n      tag_87\n      jumpi\n      dup1\n      0xbc3d652a\n      gt\n      tag_88\n      jumpi\n      dup1\n      0xbdca9165\n      gt\n      tag_89\n      jumpi\n      dup1\n      0xbdca9165\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xbeba0fa0\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xc54d349c\n      eq\n      tag_59\n      jumpi\n      jump(tag_2)\n    tag_89:\n      dup1\n      0xbc3d652a\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xbc75f4b8\n      eq\n      tag_56\n      jumpi\n      jump(tag_2)\n    tag_88:\n      dup1\n      0xb6857844\n      gt\n      tag_90\n      jumpi\n      dup1\n      0xb6857844\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb6ac642a\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xbb9f408d\n      eq\n      tag_54\n      jumpi\n      jump(tag_2)\n    tag_90:\n      dup1\n      0xacaf88cd\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_51\n      jumpi\n      jump(tag_2)\n    tag_87:\n      dup1\n      0x948a03f2\n      gt\n      tag_91\n      jumpi\n      dup1\n      0xa3639b39\n      gt\n      tag_92\n      jumpi\n      dup1\n      0xa3639b39\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xa5834e06\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xaaada5da\n      eq\n      tag_49\n      jumpi\n      jump(tag_2)\n    tag_92:\n      dup1\n      0x948a03f2\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x95dc14e1\n      eq\n      tag_46\n      jumpi\n      jump(tag_2)\n    tag_91:\n      dup1\n      0x87788782\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x87d4bda9\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x93c99e6a\n      eq\n      tag_44\n      jumpi\n      jump(tag_2)\n    tag_79:\n      dup1\n      0x4e4de1e9\n      gt\n      tag_93\n      jumpi\n      dup1\n      0x668679ba\n      gt\n      tag_94\n      jumpi\n      dup1\n      0x731ff24a\n      gt\n      tag_95\n      jumpi\n      dup1\n      0x78b4330f\n      gt\n      tag_96\n      jumpi\n      dup1\n      0x78b4330f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x853828b6\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_96:\n      dup1\n      0x731ff24a\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x77c7b8fc\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_95:\n      dup1\n      0x70897b23\n      gt\n      tag_97\n      jumpi\n      dup1\n      0x70897b23\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x722713f7\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_97:\n      dup1\n      0x668679ba\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x704b6c02\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_94:\n      dup1\n      0x570ca735\n      gt\n      tag_98\n      jumpi\n      dup1\n      0x61d027b3\n      gt\n      tag_99\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x61fa6368\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x62122f5a\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_99:\n      dup1\n      0x570ca735\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_98:\n      dup1\n      0x4e4de1e9\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x4f1bfc9e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x51fb26df\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x5521e9bf\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_93:\n      dup1\n      0x2cfc5f01\n      gt\n      tag_100\n      jumpi\n      dup1\n      0x3eb78874\n      gt\n      tag_101\n      jumpi\n      dup1\n      0x3fec4e32\n      gt\n      tag_102\n      jumpi\n      dup1\n      0x3fec4e32\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x423b93ed\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x48a0d754\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_102:\n      dup1\n      0x3eb78874\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_101:\n      dup1\n      0x2f6c493c\n      gt\n      tag_103\n      jumpi\n      dup1\n      0x2f6c493c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x35981921\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3a98ef39\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_103:\n      dup1\n      0x2cfc5f01\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_100:\n      dup1\n      0x1959a002\n      gt\n      tag_104\n      jumpi\n      dup1\n      0x1ea30fef\n      gt\n      tag_105\n      jumpi\n      dup1\n      0x1ea30fef\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x1efac1b8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x29a5cfd6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_105:\n      dup1\n      0x1959a002\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x19ab453c\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_104:\n      dup1\n      0x01e81326\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05a9f274\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0c59696b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x14ff3039\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ShadowPool.sol\":2312:2371  uint256 public constant MAX_LOCK_DURATION_LIMIT = 1000 days */\n    tag_3:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ShadowPool.sol\":1917:1949  uint256 public totalLockedAmount */\n    tag_4:\n      tag_106\n      tag_111\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":24861:25109  function setOverdueFee(uint256 _overdueFee) external onlyAdmin {\r... */\n    tag_5:\n      tag_113\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/ShadowPool.sol\":25231:25544  function setWithdrawFeeContract(uint256 _withdrawFeeContract) external onlyAdmin {\r... */\n    tag_6:\n      tag_113\n      tag_118\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1389:1433  mapping(address => UserInfo) public userInfo */\n    tag_7:\n      tag_120\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_108\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":5922:6310  function init(IERC20 dummyToken) external onlyOwner {\r... */\n    tag_8:\n      tag_113\n      tag_127\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2629:2687  uint256 public constant MIN_DEPOSIT_AMOUNT = 0.00001 ether */\n    tag_9:\n      tag_106\n      tag_131\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":25660:26016  function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r... */\n    tag_10:\n      tag_113\n      tag_134\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":31559:32661  function calculateWithdrawFee(address _user, uint256 _shares) public view returns (uint256) {\r... */\n    tag_11:\n      tag_106\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2170:2227  uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 1 weeks */\n    tag_12:\n      tag_106\n      tag_142\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":17324:17482  function withdraw(uint256 _shares) public whenNotPaused {\r... */\n    tag_13:\n      tag_113\n      tag_145\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":11330:11603  function unlock(address _user) external onlyOperatorOrShdwOwner(_user) whenNotPaused {\r... */\n    tag_14:\n      tag_113\n      tag_148\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":26953:27257  function setDurationFactorOverdue(uint256 _durationFactorOverdue) external onlyAdmin {\r... */\n    tag_15:\n      tag_113\n      tag_151\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1707:1733  uint256 public totalShares */\n    tag_16:\n      tag_106\n      tag_154\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3199:3242  uint256 public performanceFeeContract = 200 */\n    tag_17:\n      tag_106\n      tag_157\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":28737:28840  function unpause() external onlyAdmin whenPaused {\r... */\n    tag_18:\n      tag_113\n      tag_160\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1440:1495  mapping(address => bool) public freePerformanceFeeUsers */\n    tag_19:\n      tag_161\n      tag_162\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":22366:22610  function setFreePerformanceFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n    tag_20:\n      tag_113\n      tag_167\n      calldatasize\n      0x04\n      tag_168\n      jump\t// in\n    tag_167:\n      tag_169\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":33332:33439  function available() public view returns (uint256) {\r... */\n    tag_21:\n      tag_106\n      tag_171\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":22813:23045  function setOverdueFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n    tag_22:\n      tag_113\n      tag_174\n      calldatasize\n      0x04\n      tag_168\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2822:2865  uint256 public MAX_LOCK_DURATION = 365 days */\n    tag_23:\n      tag_106\n      tag_177\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1827:1853  uint256 public shdwPoolPID */\n    tag_24:\n      tag_106\n      tag_180\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":16973:17194  function withdrawByAmount(uint256 _amount) public whenNotPaused {\r... */\n    tag_25:\n      tag_113\n      tag_183\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_183:\n      tag_184\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1797:1820  address public operator */\n    tag_26:\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_27:\n      tag_161\n      tag_190\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1767:1790  address public treasury */\n    tag_28:\n      tag_185\n      tag_193\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1360:1380  address public VShdw */\n    tag_29:\n      tag_185\n      tag_196\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":21960:22159  function setVShdwContract(address _VShdw) external onlyAdmin {\r... */\n    tag_30:\n      tag_113\n      tag_199\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_199:\n      tag_200\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1620:1671  mapping(address => bool) public freeOverdueFeeUsers */\n    tag_31:\n      tag_161\n      tag_202\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_202:\n      tag_203\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":20681:20864  function setAdmin(address _admin) external onlyOwner {\r... */\n    tag_32:\n      tag_113\n      tag_206\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_206:\n      tag_207\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":23595:23882  function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r... */\n    tag_33:\n      tag_113\n      tag_209\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_209:\n      tag_210\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n      tag_113\n      tag_212\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":33600:33724  function balanceOf() public view returns (uint256) {\r... */\n    tag_35:\n      tag_106\n      tag_214\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2538:2591  uint256 public constant PRECISION_FACTOR_SHARE = 1e28 */\n    tag_36:\n      tag_106\n      tag_217\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":33007:33200  function getPricePerFullShare() external view returns (uint256) {\r... */\n    tag_37:\n      tag_106\n      tag_220\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":28520:28620  function pause() external onlyAdmin whenNotPaused {\r... */\n    tag_39:\n      tag_113\n      tag_226\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":20027:20115  function withdrawAll() external {\r... */\n    tag_40:\n      tag_113\n      tag_228\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3151:3186  uint256 public performanceFee = 200 */\n    tag_41:\n      tag_106\n      tag_230\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1533:1585  mapping(address => bool) public freeWithdrawFeeUsers */\n    tag_42:\n      tag_161\n      tag_233\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_233:\n      tag_234\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_43:\n      tag_185\n      tag_237\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":27763:28027  function setBoostWeight(uint256 _boostWeight) external onlyAdmin {\r... */\n    tag_44:\n      tag_113\n      tag_240\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_240:\n      tag_241\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2103:2155  uint256 public constant MAX_OVERDUE_FEE = 100 * 1e10 */\n    tag_45:\n      tag_106\n      tag_243\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":29867:31015  function calculateOverdueFee(address _user) public view returns (uint256) {\r... */\n    tag_46:\n      tag_106\n      tag_246\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_246:\n      tag_247\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":26587:26833  function setDurationFactor(uint256 _durationFactor) external onlyAdmin {\r... */\n    tag_47:\n      tag_113\n      tag_250\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_250:\n      tag_251\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3355:3393  uint256 public overdueFee = 100 * 1e10 */\n    tag_48:\n      tag_106\n      tag_253\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2760:2805  uint256 public UNLOCK_FREE_DURATION = 1 weeks */\n    tag_49:\n      tag_106\n      tag_256\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2990:3039  uint256 public DURATION_FACTOR_OVERDUE = 180 days */\n    tag_50:\n      tag_106\n      tag_259\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":21289:21493  function setOperator(address _operator) external onlyOwner {\r... */\n    tag_51:\n      tag_113\n      tag_262\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_262:\n      tag_263\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":24496:24753  function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r... */\n    tag_53:\n      tag_113\n      tag_268\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_268:\n      tag_269\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":24007:24387  function setPerformanceFeeContract(uint256 _performanceFeeContract) external onlyAdmin {\r... */\n    tag_54:\n      tag_113\n      tag_271\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_271:\n      tag_272\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1235:1278  IShadowChefV2 public immutable shadowchefV2 */\n    tag_55:\n      tag_185\n      tag_274\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3094:3134  uint256 public BOOST_WEIGHT = 100 * 1e10 */\n    tag_56:\n      tag_106\n      tag_278\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1980:2030  uint256 public constant MAX_PERFORMANCE_FEE = 2000 */\n    tag_57:\n      tag_106\n      tag_281\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":23249:23483  function setWithdrawFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n    tag_58:\n      tag_113\n      tag_284\n      calldatasize\n      0x04\n      tag_168\n      jump\t// in\n    tag_284:\n      tag_285\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":27374:27654  function setUnlockFreeDuration(uint256 _unlockFreeDuration) external onlyAdmin {\r... */\n    tag_59:\n      tag_113\n      tag_287\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_287:\n      tag_288\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":28985:29730  function calculatePerformanceFee(address _user) public view returns (uint256) {\r... */\n    tag_60:\n      tag_106\n      tag_290\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_290:\n      tag_291\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":32813:32999  function calculateTotalpendingShdwRewards() public view returns (uint256) {\r... */\n    tag_61:\n      tag_106\n      tag_294\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2044:2090  uint256 public constant MAX_WITHDRAW_FEE = 500 */\n    tag_63:\n      tag_106\n      tag_300\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":28118:28403  function inCaseTokensGetStuck(address _token) external onlyAdmin {\r... */\n    tag_64:\n      tag_113\n      tag_303\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_303:\n      tag_304\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":21607:21846  function setBoostContract(address _boostContract) external onlyAdmin {\r... */\n    tag_65:\n      tag_113\n      tag_306\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_306:\n      tag_307\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3408:3451  uint256 public withdrawFeePeriod = 72 hours */\n    tag_66:\n      tag_106\n      tag_309\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1287:1315  address public boostContract */\n    tag_67:\n      tag_185\n      tag_312\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":11844:12069  function deposit(uint256 _amount, uint256 _lockDuration) external whenNotPaused {\r... */\n    tag_68:\n      tag_113\n      tag_315\n      calldatasize\n      0x04\n      tag_316\n      jump\t// in\n    tag_315:\n      tag_317\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2884:2925  uint256 public DURATION_FACTOR = 365 days */\n    tag_69:\n      tag_106\n      tag_319\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3301:3340  uint256 public withdrawFeeContract = 10 */\n    tag_70:\n      tag_106\n      tag_322\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1860:1889  uint256 public totalBoostDebt */\n    tag_71:\n      tag_106\n      tag_325\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3255:3286  uint256 public withdrawFee = 10 */\n    tag_72:\n      tag_106\n      tag_328\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":20977:21181  function setTreasury(address _treasury) external onlyOwner {\r... */\n    tag_73:\n      tag_113\n      tag_331\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_331:\n      tag_332\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_74:\n      tag_113\n      tag_334\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_334:\n      tag_335\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":26130:26475  function setMaxLockDuration(uint256 _maxLockDuration) external onlyAdmin {\r... */\n    tag_75:\n      tag_113\n      tag_337\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_337:\n      tag_338\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1740:1760  address public admin */\n    tag_76:\n      tag_185\n      tag_340\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1182:1211  IERC20 public immutable token */\n    tag_77:\n      tag_185\n      tag_343\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2391:2447  uint256 public constant BOOST_WEIGHT_LIMIT = 5000 * 1e10 */\n    tag_78:\n      tag_106\n      tag_347\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2312:2371  uint256 public constant MAX_LOCK_DURATION_LIMIT = 1000 days */\n    tag_107:\n        /* \"contracts/ShadowPool.sol\":2362:2371  1000 days */\n      0x05265c00\n        /* \"contracts/ShadowPool.sol\":2312:2371  uint256 public constant MAX_LOCK_DURATION_LIMIT = 1000 days */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1917:1949  uint256 public totalLockedAmount */\n    tag_111:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":24861:25109  function setOverdueFee(uint256 _overdueFee) external onlyAdmin {\r... */\n    tag_116:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"contracts/ShadowPool.sol\":2145:2155  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":24943:24954  _overdueFee */\n      dup2\n        /* \"contracts/ShadowPool.sol\":24943:24973  _overdueFee <= MAX_OVERDUE_FEE */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":24935:25024  require(_overdueFee <= MAX_OVERDUE_FEE, \"overdueFee cannot be more than MAX_OVERDUE_FEE\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_356\n      jump\t// in\n    tag_354:\n        /* \"contracts/ShadowPool.sol\":25035:25045  overdueFee */\n      0x17\n        /* \"contracts/ShadowPool.sol\":25035:25059  overdueFee = _overdueFee */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":25075:25101  NewOverdueFee(_overdueFee) */\n      mload(0x40)\n      0xf4bd1c5978320077e792afbb3911e8cab1325ce28a6b3e67f9067a1d80692961\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":25048:25059  _overdueFee */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":25075:25101  NewOverdueFee(_overdueFee) */\n      tag_109\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ShadowPool.sol\":24861:25109  function setOverdueFee(uint256 _overdueFee) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":25231:25544  function setWithdrawFeeContract(uint256 _withdrawFeeContract) external onlyAdmin {\r... */\n    tag_119:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_359:\n        /* \"contracts/ShadowPool.sol\":2087:2090  500 */\n      0x01f4\n        /* \"contracts/ShadowPool.sol\":25331:25351  _withdrawFeeContract */\n      dup2\n        /* \"contracts/ShadowPool.sol\":25331:25371  _withdrawFeeContract <= MAX_WITHDRAW_FEE */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":25323:25424  require(_withdrawFeeContract <= MAX_WITHDRAW_FEE, \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_364\n      jump\t// in\n    tag_362:\n        /* \"contracts/ShadowPool.sol\":25435:25454  withdrawFeeContract */\n      0x16\n        /* \"contracts/ShadowPool.sol\":25435:25477  withdrawFeeContract = _withdrawFeeContract */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":25493:25536  NewWithdrawFeeContract(withdrawFeeContract) */\n      mload(0x40)\n      0xcab352e118188b8a2f20a2e8c4ce1241ce2c1740aac4f17c5b0831e65824d8ef\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":25457:25477  _withdrawFeeContract */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":25493:25536  NewWithdrawFeeContract(withdrawFeeContract) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1389:1433  mapping(address => UserInfo) public userInfo */\n    tag_123:\n      0x03\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      swap4\n      dup4\n      add\n      sload\n      0x04\n      dup5\n      add\n      sload\n      0x05\n      dup6\n      add\n      sload\n      0x06\n      dup7\n      add\n      sload\n      0x07\n      dup8\n      add\n      sload\n      0x08\n      swap1\n      swap8\n      add\n      sload\n      swap6\n      swap8\n      swap5\n      swap7\n      swap5\n      swap6\n      swap4\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup10\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":5922:6310  function init(IERC20 dummyToken) external onlyOwner {\r... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_367\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_367:\n        /* \"contracts/ShadowPool.sol\":6003:6035  dummyToken.balanceOf(msg.sender) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":5985:6000  uint256 balance */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":6003:6023  dummyToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/ShadowPool.sol\":6003:6035  dummyToken.balanceOf(msg.sender) */\n      tag_370\n      swap1\n        /* \"contracts/ShadowPool.sol\":6024:6034  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ShadowPool.sol\":6003:6035  dummyToken.balanceOf(msg.sender) */\n      0x04\n      add\n      tag_188\n      jump\t// in\n    tag_370:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_371\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_371:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_373\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_373:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_374\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"contracts/ShadowPool.sol\":5985:6035  uint256 balance = dummyToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":6054:6066  balance != 0 */\n      dup1\n        /* \"contracts/ShadowPool.sol\":6046:6092  require(balance != 0, \"Balance must exceed 0\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_378\n      jump\t// in\n    tag_376:\n        /* \"contracts/ShadowPool.sol\":6103:6166  dummyToken.safeTransferFrom(msg.sender, address(this), balance) */\n      tag_379\n        /* \"contracts/ShadowPool.sol\":6103:6130  dummyToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"contracts/ShadowPool.sol\":6131:6141  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6151:6155  this */\n      address\n        /* \"contracts/ShadowPool.sol\":6158:6165  balance */\n      dup5\n        /* \"contracts/ShadowPool.sol\":6103:6130  dummyToken.safeTransferFrom */\n      tag_380\n        /* \"contracts/ShadowPool.sol\":6103:6166  dummyToken.safeTransferFrom(msg.sender, address(this), balance) */\n      jump\t// in\n    tag_379:\n        /* \"contracts/ShadowPool.sol\":6177:6227  dummyToken.approve(address(shadowchefV2), balance) */\n      mload(0x40)\n      0x095ea7b300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":6177:6195  dummyToken.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"contracts/ShadowPool.sol\":6177:6227  dummyToken.approve(address(shadowchefV2), balance) */\n      tag_381\n      swap1\n        /* \"contracts/ShadowPool.sol\":6204:6216  shadowchefV2 */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n      swap1\n        /* \"contracts/ShadowPool.sol\":6219:6226  balance */\n      dup6\n      swap1\n        /* \"contracts/ShadowPool.sol\":6177:6227  dummyToken.approve(address(shadowchefV2), balance) */\n      0x04\n      add\n      tag_382\n      jump\t// in\n    tag_381:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_383\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_383:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_385\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_385:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_386\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_386:\n      pop\n        /* \"contracts/ShadowPool.sol\":6259:6270  shdwPoolPID */\n      sload(0x0b)\n        /* \"contracts/ShadowPool.sol\":6238:6280  shadowchefV2.deposit(shdwPoolPID, balance) */\n      mload(0x40)\n      0xe2bbb15800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":6238:6258  shadowchefV2.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":6238:6250  shadowchefV2 */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"contracts/ShadowPool.sol\":6238:6258  shadowchefV2.deposit */\n      and\n      swap2\n      0xe2bbb158\n      swap2\n        /* \"contracts/ShadowPool.sol\":6238:6280  shadowchefV2.deposit(shdwPoolPID, balance) */\n      tag_388\n      swap2\n        /* \"contracts/ShadowPool.sol\":6259:6270  shdwPoolPID */\n      swap1\n        /* \"contracts/ShadowPool.sol\":6272:6279  balance */\n      dup6\n      swap1\n        /* \"contracts/ShadowPool.sol\":6238:6280  shadowchefV2.deposit(shdwPoolPID, balance) */\n      0x04\n      add\n      tag_875\n      jump\t// in\n    tag_388:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_390\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_390:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_392\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_392:\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":6296:6302  Init() */\n      mload(0x40)\n      0x57a86f7d14ccde89e22870afe839e3011216827daa9b24e18629f0a1e9d6cc14\n      swap3\n      pop\n      0x00\n      swap2\n      pop\n      log1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1117:1118  _ */\n      pop\n        /* \"contracts/ShadowPool.sol\":5922:6310  function init(IERC20 dummyToken) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":2629:2687  uint256 public constant MIN_DEPOSIT_AMOUNT = 0.00001 ether */\n    tag_131:\n        /* \"contracts/ShadowPool.sol\":2674:2687  0.00001 ether */\n      0x09184e72a000\n        /* \"contracts/ShadowPool.sol\":2629:2687  uint256 public constant MIN_DEPOSIT_AMOUNT = 0.00001 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":25660:26016  function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyAdmin {\r... */\n    tag_135:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_394:\n        /* \"contracts/ShadowPool.sol\":2220:2227  1 weeks */\n      0x093a80\n        /* \"contracts/ShadowPool.sol\":25770:25788  _withdrawFeePeriod */\n      dup2\n        /* \"contracts/ShadowPool.sol\":25770:25815  _withdrawFeePeriod <= MAX_WITHDRAW_FEE_PERIOD */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":25748:25904  require(\r... */\n      tag_397\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_399\n      jump\t// in\n    tag_397:\n        /* \"contracts/ShadowPool.sol\":25915:25932  withdrawFeePeriod */\n      0x18\n        /* \"contracts/ShadowPool.sol\":25915:25953  withdrawFeePeriod = _withdrawFeePeriod */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":25969:26008  NewWithdrawFeePeriod(withdrawFeePeriod) */\n      mload(0x40)\n      0xb89ddaddb7435be26824cb48d2d0186c9525a2e1ec057abcb502704cdc0686cc\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":25935:25953  _withdrawFeePeriod */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":25969:26008  NewWithdrawFeePeriod(withdrawFeePeriod) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":31559:32661  function calculateWithdrawFee(address _user, uint256 _shares) public view returns (uint256) {\r... */\n    tag_139:\n        /* \"contracts/ShadowPool.sol\":31686:31701  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/ShadowPool.sol\":31642:31649  uint256 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":31686:31701  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":31686:31694  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":31686:31701  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ShadowPool.sol\":31716:31727  user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":31716:31737  user.shares < _shares */\n      dup4\n      gt\n        /* \"contracts/ShadowPool.sol\":31712:31787  if (user.shares < _shares) {\r... */\n      iszero\n      tag_402\n      jumpi\n        /* \"contracts/ShadowPool.sol\":31764:31775  user.shares */\n      dup1\n      sload\n      swap3\n      pop\n        /* \"contracts/ShadowPool.sol\":31712:31787  if (user.shares < _shares) {\r... */\n    tag_402:\n        /* \"contracts/ShadowPool.sol\":31823:31833  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":31802:31834  freeWithdrawFeeUsers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":31802:31822  freeWithdrawFeeUsers */\n      0x05\n        /* \"contracts/ShadowPool.sol\":31802:31834  freeWithdrawFeeUsers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":31801:31834  !freeWithdrawFeeUsers[msg.sender] */\n      iszero\n        /* \"contracts/ShadowPool.sol\":31801:31900  !freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod) */\n      dup1\n      iszero\n      tag_403\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":31882:31899  withdrawFeePeriod */\n      sload(0x18)\n        /* \"contracts/ShadowPool.sol\":31857:31861  user */\n      dup2\n        /* \"contracts/ShadowPool.sol\":31857:31879  user.lastDepositedTime */\n      0x01\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":31857:31899  user.lastDepositedTime + withdrawFeePeriod */\n      tag_404\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_404:\n        /* \"contracts/ShadowPool.sol\":31839:31854  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":31839:31899  block.timestamp < user.lastDepositedTime + withdrawFeePeriod */\n      lt\n        /* \"contracts/ShadowPool.sol\":31801:31900  !freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod) */\n    tag_403:\n        /* \"contracts/ShadowPool.sol\":31797:32635  if (!freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod)) {\r... */\n      iszero\n      tag_406\n      jumpi\n        /* \"contracts/ShadowPool.sol\":31917:31929  uint256 pool */\n      0x00\n        /* \"contracts/ShadowPool.sol\":31946:31980  calculateTotalpendingShdwRewards() */\n      tag_407\n        /* \"contracts/ShadowPool.sol\":31946:31978  calculateTotalpendingShdwRewards */\n      tag_294\n        /* \"contracts/ShadowPool.sol\":31946:31980  calculateTotalpendingShdwRewards() */\n      jump\t// in\n    tag_407:\n        /* \"contracts/ShadowPool.sol\":31932:31943  balanceOf() */\n      tag_408\n        /* \"contracts/ShadowPool.sol\":31932:31941  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":31932:31943  balanceOf() */\n      jump\t// in\n    tag_408:\n        /* \"contracts/ShadowPool.sol\":31932:31980  balanceOf() + calculateTotalpendingShdwRewards() */\n      tag_409\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_409:\n        /* \"contracts/ShadowPool.sol\":32050:32061  user.shares */\n      dup3\n      sload\n        /* \"contracts/ShadowPool.sol\":31917:31980  uint256 pool = balanceOf() + calculateTotalpendingShdwRewards() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":31995:32016  uint256 sharesPercent */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":32020:32046  _shares * PRECISION_FACTOR */\n      tag_410\n        /* \"contracts/ShadowPool.sol\":2506:2510  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":32020:32027  _shares */\n      dup8\n        /* \"contracts/ShadowPool.sol\":32020:32046  _shares * PRECISION_FACTOR */\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"contracts/ShadowPool.sol\":32019:32061  (_shares * PRECISION_FACTOR) / user.shares */\n      tag_412\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"contracts/ShadowPool.sol\":31995:32061  uint256 sharesPercent = (_shares * PRECISION_FACTOR) / user.shares */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":32076:32102  uint256 currentTotalAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":32219:32261  calculatePerformanceFeeOrOverdueFee(_user) */\n      tag_414\n        /* \"contracts/ShadowPool.sol\":32255:32260  _user */\n      dup8\n        /* \"contracts/ShadowPool.sol\":32219:32254  calculatePerformanceFeeOrOverdueFee */\n      tag_415\n        /* \"contracts/ShadowPool.sol\":32219:32261  calculatePerformanceFeeOrOverdueFee(_user) */\n      jump\t// in\n    tag_414:\n        /* \"contracts/ShadowPool.sol\":32178:32199  user.userBoostedShare */\n      0x06\n      dup6\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":32147:32158  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":32114:32125  user.shares */\n      dup7\n      sload\n        /* \"contracts/ShadowPool.sol\":32106:32126  pool * (user.shares) */\n      tag_416\n      swap1\n        /* \"contracts/ShadowPool.sol\":32106:32110  pool */\n      dup8\n        /* \"contracts/ShadowPool.sol\":32106:32126  pool * (user.shares) */\n      tag_411\n      jump\t// in\n    tag_416:\n        /* \"contracts/ShadowPool.sol\":32105:32158  (pool * (user.shares)) /\r... */\n      tag_417\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_417:\n        /* \"contracts/ShadowPool.sol\":32105:32199  (pool * (user.shares)) /\r... */\n      tag_418\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"contracts/ShadowPool.sol\":32105:32261  (pool * (user.shares)) /\r... */\n      tag_420\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_420:\n        /* \"contracts/ShadowPool.sol\":32076:32261  uint256 currentTotalAmount = (pool * (user.shares)) /\r... */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":32276:32297  uint256 currentAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":2506:2510  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":32301:32335  currentTotalAmount * sharesPercent */\n      tag_421\n        /* \"contracts/ShadowPool.sol\":32322:32335  sharesPercent */\n      dup5\n        /* \"contracts/ShadowPool.sol\":32076:32261  uint256 currentTotalAmount = (pool * (user.shares)) /\r... */\n      dup5\n        /* \"contracts/ShadowPool.sol\":32301:32335  currentTotalAmount * sharesPercent */\n      tag_411\n      jump\t// in\n    tag_421:\n        /* \"contracts/ShadowPool.sol\":32300:32355  (currentTotalAmount * sharesPercent) / PRECISION_FACTOR */\n      tag_422\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_422:\n        /* \"contracts/ShadowPool.sol\":32388:32399  withdrawFee */\n      sload(0x15)\n        /* \"contracts/ShadowPool.sol\":32276:32355  uint256 currentAmount = (currentTotalAmount * sharesPercent) / PRECISION_FACTOR */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":32418:32441  _isContract(msg.sender) */\n      tag_423\n        /* \"contracts/ShadowPool.sol\":32430:32440  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":32418:32429  _isContract */\n      tag_424\n        /* \"contracts/ShadowPool.sol\":32418:32441  _isContract(msg.sender) */\n      jump\t// in\n    tag_423:\n        /* \"contracts/ShadowPool.sol\":32414:32507  if (_isContract(msg.sender)) {\r... */\n      iszero\n      tag_425\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":32472:32491  withdrawFeeContract */\n      sload(0x16)\n        /* \"contracts/ShadowPool.sol\":32414:32507  if (_isContract(msg.sender)) {\r... */\n    tag_425:\n        /* \"contracts/ShadowPool.sol\":32521:32547  uint256 currentWithdrawFee */\n      0x00\n        /* \"contracts/ShadowPool.sol\":32578:32583  10000 */\n      0x2710\n        /* \"contracts/ShadowPool.sol\":32551:32574  currentAmount * feeRate */\n      tag_426\n        /* \"contracts/ShadowPool.sol\":32567:32574  feeRate */\n      dup4\n        /* \"contracts/ShadowPool.sol\":32551:32564  currentAmount */\n      dup6\n        /* \"contracts/ShadowPool.sol\":32551:32574  currentAmount * feeRate */\n      tag_411\n      jump\t// in\n    tag_426:\n        /* \"contracts/ShadowPool.sol\":32550:32583  (currentAmount * feeRate) / 10000 */\n      tag_427\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_427:\n        /* \"contracts/ShadowPool.sol\":32521:32583  uint256 currentWithdrawFee = (currentAmount * feeRate) / 10000 */\n      swap8\n      pop\n        /* \"contracts/ShadowPool.sol\":32598:32623  return currentWithdrawFee */\n      tag_401\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/ShadowPool.sol\":31797:32635  if (!freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod)) {\r... */\n    tag_406:\n        /* \"contracts/ShadowPool.sol\":32652:32653  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":32645:32653  return 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":31559:32661  function calculateWithdrawFee(address _user, uint256 _shares) public view returns (uint256) {\r... */\n    tag_401:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":2170:2227  uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 1 weeks */\n    tag_142:\n        /* \"contracts/ShadowPool.sol\":2220:2227  1 weeks */\n      0x093a80\n        /* \"contracts/ShadowPool.sol\":2170:2227  uint256 public constant MAX_WITHDRAW_FEE_PERIOD = 1 weeks */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":17324:17482  function withdraw(uint256 _shares) public whenNotPaused {\r... */\n    tag_146:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_429\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_430\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_429:\n        /* \"contracts/ShadowPool.sol\":17409:17410  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":17399:17406  _shares */\n      dup2\n        /* \"contracts/ShadowPool.sol\":17399:17410  _shares > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":17391:17434  require(_shares > 0, \"Nothing to withdraw\") */\n      tag_432\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_434\n      jump\t// in\n    tag_432:\n        /* \"contracts/ShadowPool.sol\":17445:17474  withdrawOperation(_shares, 0) */\n      tag_435\n        /* \"contracts/ShadowPool.sol\":17463:17470  _shares */\n      dup2\n        /* \"contracts/ShadowPool.sol\":17472:17473  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":17445:17462  withdrawOperation */\n      tag_436\n        /* \"contracts/ShadowPool.sol\":17445:17474  withdrawOperation(_shares, 0) */\n      jump\t// in\n    tag_435:\n        /* \"contracts/ShadowPool.sol\":17324:17482  function withdraw(uint256 _shares) public whenNotPaused {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":11330:11603  function unlock(address _user) external onlyOperatorOrShdwOwner(_user) whenNotPaused {\r... */\n    tag_149:\n        /* \"contracts/ShadowPool.sol\":11394:11399  _user */\n      dup1\n        /* \"contracts/ShadowPool.sol\":6686:6696  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6686:6705  msg.sender == _user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n      dup1\n        /* \"contracts/ShadowPool.sol\":6686:6731  msg.sender == _user || msg.sender == operator */\n      tag_438\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":6723:6731  operator */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x0a))\n        /* \"contracts/ShadowPool.sol\":6709:6719  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6709:6731  msg.sender == operator */\n      eq\n        /* \"contracts/ShadowPool.sol\":6686:6731  msg.sender == _user || msg.sender == operator */\n    tag_438:\n        /* \"contracts/ShadowPool.sol\":6678:6762  require(msg.sender == _user || msg.sender == operator, \"Not operator or Shdw owner\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_441\n      jump\t// in\n    tag_439:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_443\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_430\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_443:\n        /* \"contracts/ShadowPool.sol\":11450:11465  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/ShadowPool.sol\":11426:11447  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowPool.sol\":11450:11465  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":11450:11458  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":11450:11465  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ShadowPool.sol\":11484:11495  user.locked */\n      0x07\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":11484:11533  user.locked && user.lockEndTime < block.timestamp */\n      dup1\n      iszero\n      tag_445\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":11518:11533  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":11499:11503  user */\n      dup2\n        /* \"contracts/ShadowPool.sol\":11499:11515  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":11499:11533  user.lockEndTime < block.timestamp */\n      lt\n        /* \"contracts/ShadowPool.sol\":11484:11533  user.locked && user.lockEndTime < block.timestamp */\n    tag_445:\n        /* \"contracts/ShadowPool.sol\":11476:11555  require(user.locked && user.lockEndTime < block.timestamp, \"Cannot unlock yet\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_448\n      jump\t// in\n    tag_446:\n        /* \"contracts/ShadowPool.sol\":11566:11595  depositOperation(0, 0, _user) */\n      tag_449\n        /* \"contracts/ShadowPool.sol\":11583:11584  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":11586:11587  0 */\n      dup1\n        /* \"contracts/ShadowPool.sol\":11589:11594  _user */\n      dup6\n        /* \"contracts/ShadowPool.sol\":11566:11582  depositOperation */\n      tag_450\n        /* \"contracts/ShadowPool.sol\":11566:11595  depositOperation(0, 0, _user) */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"contracts/ShadowPool.sol\":11330:11603  function unlock(address _user) external onlyOperatorOrShdwOwner(_user) whenNotPaused {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":26953:27257  function setDurationFactorOverdue(uint256 _durationFactorOverdue) external onlyAdmin {\r... */\n    tag_152:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_452\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_452:\n        /* \"contracts/ShadowPool.sol\":27082:27083  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":27057:27079  _durationFactorOverdue */\n      dup2\n        /* \"contracts/ShadowPool.sol\":27057:27083  _durationFactorOverdue > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":27049:27126  require(_durationFactorOverdue > 0, \"DURATION_FACTOR_OVERDUE cannot be zero\") */\n      tag_455\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_457\n      jump\t// in\n    tag_455:\n        /* \"contracts/ShadowPool.sol\":27137:27160  DURATION_FACTOR_OVERDUE */\n      0x11\n        /* \"contracts/ShadowPool.sol\":27137:27185  DURATION_FACTOR_OVERDUE = _durationFactorOverdue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":27201:27249  NewDurationFactorOverdue(_durationFactorOverdue) */\n      mload(0x40)\n      0x18b6d179114082d7eda9837e15a39eb30032d5f3df00487a67541398f48fabfe\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":27163:27185  _durationFactorOverdue */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":27201:27249  NewDurationFactorOverdue(_durationFactorOverdue) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1707:1733  uint256 public totalShares */\n    tag_154:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":3199:3242  uint256 public performanceFeeContract = 200 */\n    tag_157:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":28737:28840  function unpause() external onlyAdmin whenPaused {\r... */\n    tag_160:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_460\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_460:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_463\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_464\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_463:\n        /* \"contracts/ShadowPool.sol\":28797:28807  _unpause() */\n      tag_466\n        /* \"contracts/ShadowPool.sol\":28797:28805  _unpause */\n      tag_467\n        /* \"contracts/ShadowPool.sol\":28797:28807  _unpause() */\n      jump\t// in\n    tag_466:\n        /* \"contracts/ShadowPool.sol\":28823:28832  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/ShadowPool.sol\":28737:28840  function unpause() external onlyAdmin whenPaused {\r... */\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1440:1495  mapping(address => bool) public freePerformanceFeeUsers */\n    tag_163:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":22366:22610  function setFreePerformanceFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n    tag_169:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_469\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_469:\n        /* \"contracts/ShadowPool.sol\":22466:22485  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/ShadowPool.sol\":22458:22512  require(_user != address(0), \"Cannot be zero address\") */\n      tag_472\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_472:\n        /* \"contracts/ShadowPool.sol\":22523:22553  freePerformanceFeeUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":22523:22546  freePerformanceFeeUsers */\n      0x04\n        /* \"contracts/ShadowPool.sol\":22523:22553  freePerformanceFeeUsers[_user] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ShadowPool.sol\":22523:22561  freePerformanceFeeUsers[_user] = _free */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ShadowPool.sol\":22577:22602  FreeFeeUser(_user, _free) */\n      swap1\n      mload\n        /* \"contracts/ShadowPool.sol\":22523:22561  freePerformanceFeeUsers[_user] = _free */\n      swap1\n      swap3\n        /* \"contracts/ShadowPool.sol\":22523:22553  freePerformanceFeeUsers[_user] */\n      swap2\n        /* \"contracts/ShadowPool.sol\":22577:22602  FreeFeeUser(_user, _free) */\n      0x3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d44\n      swap2\n      log3\n        /* \"contracts/ShadowPool.sol\":22366:22610  function setFreePerformanceFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":33332:33439  function available() public view returns (uint256) {\r... */\n    tag_171:\n        /* \"contracts/ShadowPool.sol\":33401:33431  token.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":33374:33381  uint256 */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":33401:33416  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":33401:33406  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":33401:33416  token.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/ShadowPool.sol\":33401:33431  token.balanceOf(address(this)) */\n      tag_476\n      swap1\n        /* \"contracts/ShadowPool.sol\":33425:33429  this */\n      address\n      swap1\n        /* \"contracts/ShadowPool.sol\":33401:33431  token.balanceOf(address(this)) */\n      0x04\n      add\n      tag_188\n      jump\t// in\n    tag_476:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_477\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_477:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_479\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_479:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_480\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_480:\n        /* \"contracts/ShadowPool.sol\":33394:33431  return token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":33332:33439  function available() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":22813:23045  function setOverdueFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n    tag_175:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_482\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_482:\n        /* \"contracts/ShadowPool.sol\":22905:22924  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/ShadowPool.sol\":22897:22951  require(_user != address(0), \"Cannot be zero address\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_485:\n        /* \"contracts/ShadowPool.sol\":22962:22988  freeOverdueFeeUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":22962:22981  freeOverdueFeeUsers */\n      0x06\n        /* \"contracts/ShadowPool.sol\":22962:22988  freeOverdueFeeUsers[_user] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ShadowPool.sol\":22962:22996  freeOverdueFeeUsers[_user] = _free */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ShadowPool.sol\":23012:23037  FreeFeeUser(_user, _free) */\n      swap1\n      mload\n        /* \"contracts/ShadowPool.sol\":22962:22996  freeOverdueFeeUsers[_user] = _free */\n      swap1\n      swap3\n        /* \"contracts/ShadowPool.sol\":22962:22988  freeOverdueFeeUsers[_user] */\n      swap2\n        /* \"contracts/ShadowPool.sol\":23012:23037  FreeFeeUser(_user, _free) */\n      0x3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d44\n      swap2\n      log3\n        /* \"contracts/ShadowPool.sol\":22813:23045  function setOverdueFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":2822:2865  uint256 public MAX_LOCK_DURATION = 365 days */\n    tag_177:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1827:1853  uint256 public shdwPoolPID */\n    tag_180:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":16973:17194  function withdrawByAmount(uint256 _amount) public whenNotPaused {\r... */\n    tag_184:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_488\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_430\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_488:\n        /* \"contracts/ShadowPool.sol\":2740:2753  0.00001 ether */\n      0x09184e72a000\n        /* \"contracts/ShadowPool.sol\":17056:17063  _amount */\n      dup2\n        /* \"contracts/ShadowPool.sol\":17056:17085  _amount > MIN_WITHDRAW_AMOUNT */\n      gt\n        /* \"contracts/ShadowPool.sol\":17048:17146  require(_amount > MIN_WITHDRAW_AMOUNT, \"Withdraw amount must be greater than MIN_WITHDRAW_AMOUNT\") */\n      tag_490\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_492\n      jump\t// in\n    tag_490:\n        /* \"contracts/ShadowPool.sol\":17157:17186  withdrawOperation(0, _amount) */\n      tag_435\n        /* \"contracts/ShadowPool.sol\":17175:17176  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":17178:17185  _amount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":17157:17174  withdrawOperation */\n      tag_436\n        /* \"contracts/ShadowPool.sol\":17157:17186  withdrawOperation(0, _amount) */\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1797:1820  address public operator */\n    tag_186:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x0a))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0x010000000000000000000000000000000000000000\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1767:1790  address public treasury */\n    tag_193:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x09))\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1360:1380  address public VShdw */\n    tag_196:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":21960:22159  function setVShdwContract(address _VShdw) external onlyAdmin {\r... */\n    tag_200:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_496\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_496:\n        /* \"contracts/ShadowPool.sol\":22040:22060  _VShdw != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":22032:22087  require(_VShdw != address(0), \"Cannot be zero address\") */\n      tag_499\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_499:\n        /* \"contracts/ShadowPool.sol\":22098:22103  VShdw */\n      0x02\n        /* \"contracts/ShadowPool.sol\":22098:22112  VShdw = _VShdw */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":22128:22151  NewVShdwContract(VShdw) */\n      mload(0x40)\n      0xaf38f30be8d095bc1461196db21930b7d89226e57b0167f9d6abe951c53f3332\n      swap3\n      tag_357\n      swap3\n        /* \"contracts/ShadowPool.sol\":22145:22150  VShdw */\n      and\n      swap1\n        /* \"contracts/ShadowPool.sol\":22128:22151  NewVShdwContract(VShdw) */\n      tag_188\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1620:1671  mapping(address => bool) public freeOverdueFeeUsers */\n    tag_203:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":20681:20864  function setAdmin(address _admin) external onlyOwner {\r... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_503\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_503:\n        /* \"contracts/ShadowPool.sol\":20753:20773  _admin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":20745:20800  require(_admin != address(0), \"Cannot be zero address\") */\n      tag_505\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_505:\n        /* \"contracts/ShadowPool.sol\":20811:20816  admin */\n      0x08\n        /* \"contracts/ShadowPool.sol\":20811:20825  admin = _admin */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":20841:20856  NewAdmin(admin) */\n      mload(0x40)\n      0x71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c\n      swap3\n      tag_357\n      swap3\n        /* \"contracts/ShadowPool.sol\":20850:20855  admin */\n      and\n      swap1\n        /* \"contracts/ShadowPool.sol\":20841:20856  NewAdmin(admin) */\n      tag_188\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":23595:23882  function setPerformanceFee(uint256 _performanceFee) external onlyAdmin {\r... */\n    tag_210:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_509\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_509:\n        /* \"contracts/ShadowPool.sol\":2026:2030  2000 */\n      0x07d0\n        /* \"contracts/ShadowPool.sol\":23685:23700  _performanceFee */\n      dup2\n        /* \"contracts/ShadowPool.sol\":23685:23723  _performanceFee <= MAX_PERFORMANCE_FEE */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":23677:23782  require(_performanceFee <= MAX_PERFORMANCE_FEE, \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\") */\n      tag_512\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_514\n      jump\t// in\n    tag_512:\n        /* \"contracts/ShadowPool.sol\":23793:23807  performanceFee */\n      0x13\n        /* \"contracts/ShadowPool.sol\":23793:23825  performanceFee = _performanceFee */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":23841:23874  NewPerformanceFee(performanceFee) */\n      mload(0x40)\n      0xefeafcf03e479a9566d7ef321b4816de0ba19cfa3cd0fae2f8c5f4a0afb342c4\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":23810:23825  _performanceFee */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":23841:23874  NewPerformanceFee(performanceFee) */\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_517\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_517:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_519\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_520\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_519:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":33600:33724  function balanceOf() public view returns (uint256) {\r... */\n    tag_214:\n        /* \"contracts/ShadowPool.sol\":33642:33649  uint256 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":33702:33716  totalBoostDebt */\n      sload(0x0c)\n        /* \"contracts/ShadowPool.sol\":33669:33674  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":33669:33684  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/ShadowPool.sol\":33693:33697  this */\n      address\n        /* \"contracts/ShadowPool.sol\":33669:33699  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_522\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_522:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_523\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_523:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_525\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_525:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_526\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_526:\n        /* \"contracts/ShadowPool.sol\":33669:33716  token.balanceOf(address(this)) + totalBoostDebt */\n      tag_480\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2538:2591  uint256 public constant PRECISION_FACTOR_SHARE = 1e28 */\n    tag_217:\n        /* \"contracts/ShadowPool.sol\":2587:2591  1e28 */\n      0x204fce5e3e25026110000000\n        /* \"contracts/ShadowPool.sol\":2538:2591  uint256 public constant PRECISION_FACTOR_SHARE = 1e28 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":33007:33200  function getPricePerFullShare() external view returns (uint256) {\r... */\n    tag_220:\n        /* \"contracts/ShadowPool.sol\":33062:33069  uint256 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":33089:33100  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":33104:33105  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":33089:33105  totalShares == 0 */\n      eq\n        /* \"contracts/ShadowPool.sol\":33089:33192  totalShares == 0 ? 1e18 : (((balanceOf() + calculateTotalpendingShdwRewards()) * (1e18)) / totalShares) */\n      tag_529\n      jumpi\n        /* \"contracts/ShadowPool.sol\":33180:33191  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":33132:33166  calculateTotalpendingShdwRewards() */\n      tag_530\n        /* \"contracts/ShadowPool.sol\":33132:33164  calculateTotalpendingShdwRewards */\n      tag_294\n        /* \"contracts/ShadowPool.sol\":33132:33166  calculateTotalpendingShdwRewards() */\n      jump\t// in\n    tag_530:\n        /* \"contracts/ShadowPool.sol\":33118:33129  balanceOf() */\n      tag_531\n        /* \"contracts/ShadowPool.sol\":33118:33127  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":33118:33129  balanceOf() */\n      jump\t// in\n    tag_531:\n        /* \"contracts/ShadowPool.sol\":33118:33166  balanceOf() + calculateTotalpendingShdwRewards() */\n      tag_532\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_532:\n        /* \"contracts/ShadowPool.sol\":33117:33176  (balanceOf() + calculateTotalpendingShdwRewards()) * (1e18) */\n      tag_533\n      swap1\n        /* \"contracts/ShadowPool.sol\":33171:33175  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ShadowPool.sol\":33117:33176  (balanceOf() + calculateTotalpendingShdwRewards()) * (1e18) */\n      tag_411\n      jump\t// in\n    tag_533:\n        /* \"contracts/ShadowPool.sol\":33116:33191  ((balanceOf() + calculateTotalpendingShdwRewards()) * (1e18)) / totalShares */\n      tag_534\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_534:\n        /* \"contracts/ShadowPool.sol\":33089:33192  totalShares == 0 ? 1e18 : (((balanceOf() + calculateTotalpendingShdwRewards()) * (1e18)) / totalShares) */\n      jump(tag_480)\n    tag_529:\n      pop\n        /* \"contracts/ShadowPool.sol\":33108:33112  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"contracts/ShadowPool.sol\":33007:33200  function getPricePerFullShare() external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":28520:28620  function pause() external onlyAdmin whenNotPaused {\r... */\n    tag_226:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_537\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_537:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_540\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_430\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_540:\n        /* \"contracts/ShadowPool.sol\":28581:28589  _pause() */\n      tag_542\n        /* \"contracts/ShadowPool.sol\":28581:28587  _pause */\n      tag_543\n        /* \"contracts/ShadowPool.sol\":28581:28589  _pause() */\n      jump\t// in\n    tag_542:\n        /* \"contracts/ShadowPool.sol\":28605:28612  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/ShadowPool.sol\":28520:28620  function pause() external onlyAdmin whenNotPaused {\r... */\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":20027:20115  function withdrawAll() external {\r... */\n    tag_228:\n        /* \"contracts/ShadowPool.sol\":20088:20098  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":20079:20099  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":20079:20087  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":20079:20099  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ShadowPool.sol\":20079:20106  userInfo[msg.sender].shares */\n      sload\n        /* \"contracts/ShadowPool.sol\":20070:20107  withdraw(userInfo[msg.sender].shares) */\n      tag_519\n      swap1\n        /* \"contracts/ShadowPool.sol\":20070:20078  withdraw */\n      tag_146\n        /* \"contracts/ShadowPool.sol\":20070:20107  withdraw(userInfo[msg.sender].shares) */\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3151:3186  uint256 public performanceFee = 200 */\n    tag_230:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1533:1585  mapping(address => bool) public freeWithdrawFeeUsers */\n    tag_234:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":27763:28027  function setBoostWeight(uint256 _boostWeight) external onlyAdmin {\r... */\n    tag_241:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_548\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_548:\n        /* \"contracts/ShadowPool.sol\":2436:2447  5000 * 1e10 */\n      0x2d79883d2000\n        /* \"contracts/ShadowPool.sol\":27847:27859  _boostWeight */\n      dup2\n        /* \"contracts/ShadowPool.sol\":27847:27881  _boostWeight <= BOOST_WEIGHT_LIMIT */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":27839:27937  require(_boostWeight <= BOOST_WEIGHT_LIMIT, \"BOOST_WEIGHT cannot be more than BOOST_WEIGHT_LIMIT\") */\n      tag_551\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_553\n      jump\t// in\n    tag_551:\n        /* \"contracts/ShadowPool.sol\":27948:27960  BOOST_WEIGHT */\n      0x12\n        /* \"contracts/ShadowPool.sol\":27948:27975  BOOST_WEIGHT = _boostWeight */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":27991:28019  NewBoostWeight(_boostWeight) */\n      mload(0x40)\n      0x7666dfff8c3377938e522b4eed3aff079973a976f95969db60a406d49f40da4e\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":27963:27975  _boostWeight */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":27991:28019  NewBoostWeight(_boostWeight) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2103:2155  uint256 public constant MAX_OVERDUE_FEE = 100 * 1e10 */\n    tag_243:\n        /* \"contracts/ShadowPool.sol\":2145:2155  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":2103:2155  uint256 public constant MAX_OVERDUE_FEE = 100 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":29867:31015  function calculateOverdueFee(address _user) public view returns (uint256) {\r... */\n    tag_247:\n        /* \"contracts/ShadowPool.sol\":29976:29991  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":29932:29939  uint256 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":29976:29991  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":29976:29984  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":29976:29991  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ShadowPool.sol\":30020:30031  user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":30020:30035  user.shares > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ShadowPool.sol\":30020:30063  user.shares > 0 &&\r... */\n      tag_556\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":30052:30063  user.locked */\n      0x07\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":30020:30063  user.shares > 0 &&\r... */\n    tag_556:\n        /* \"contracts/ShadowPool.sol\":30020:30107  user.shares > 0 &&\r... */\n      dup1\n      iszero\n      tag_557\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":30081:30107  freeOverdueFeeUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":30081:30100  freeOverdueFeeUsers */\n      0x06\n        /* \"contracts/ShadowPool.sol\":30081:30107  freeOverdueFeeUsers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":30080:30107  !freeOverdueFeeUsers[_user] */\n      iszero\n        /* \"contracts/ShadowPool.sol\":30020:30107  user.shares > 0 &&\r... */\n    tag_557:\n        /* \"contracts/ShadowPool.sol\":30020:30185  user.shares > 0 &&\r... */\n      dup1\n      iszero\n      tag_558\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":30169:30184  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":30145:30165  UNLOCK_FREE_DURATION */\n      sload(0x0e)\n        /* \"contracts/ShadowPool.sol\":30126:30130  user */\n      dup3\n        /* \"contracts/ShadowPool.sol\":30126:30142  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":30126:30165  user.lockEndTime + UNLOCK_FREE_DURATION */\n      tag_559\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_559:\n        /* \"contracts/ShadowPool.sol\":30125:30184  (user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp */\n      lt\n        /* \"contracts/ShadowPool.sol\":30020:30185  user.shares > 0 &&\r... */\n    tag_558:\n        /* \"contracts/ShadowPool.sol\":30002:30989  if (\r... */\n      iszero\n      tag_560\n      jumpi\n        /* \"contracts/ShadowPool.sol\":30212:30224  uint256 pool */\n      0x00\n        /* \"contracts/ShadowPool.sol\":30241:30275  calculateTotalpendingShdwRewards() */\n      tag_561\n        /* \"contracts/ShadowPool.sol\":30241:30273  calculateTotalpendingShdwRewards */\n      tag_294\n        /* \"contracts/ShadowPool.sol\":30241:30275  calculateTotalpendingShdwRewards() */\n      jump\t// in\n    tag_561:\n        /* \"contracts/ShadowPool.sol\":30227:30238  balanceOf() */\n      tag_562\n        /* \"contracts/ShadowPool.sol\":30227:30236  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":30227:30238  balanceOf() */\n      jump\t// in\n    tag_562:\n        /* \"contracts/ShadowPool.sol\":30227:30275  balanceOf() + calculateTotalpendingShdwRewards() */\n      tag_563\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_563:\n        /* \"contracts/ShadowPool.sol\":30353:30374  user.userBoostedShare */\n      0x06\n      dup4\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":30339:30350  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":30323:30334  user.shares */\n      dup5\n      sload\n        /* \"contracts/ShadowPool.sol\":30212:30275  uint256 pool = balanceOf() + calculateTotalpendingShdwRewards() */\n      swap3\n      swap4\n      pop\n        /* \"contracts/ShadowPool.sol\":30290:30311  uint256 currentAmount */\n      0x00\n      swap3\n        /* \"contracts/ShadowPool.sol\":30315:30335  pool * (user.shares) */\n      tag_564\n      swap1\n        /* \"contracts/ShadowPool.sol\":30212:30275  uint256 pool = balanceOf() + calculateTotalpendingShdwRewards() */\n      dup6\n        /* \"contracts/ShadowPool.sol\":30315:30335  pool * (user.shares) */\n      tag_411\n      jump\t// in\n    tag_564:\n        /* \"contracts/ShadowPool.sol\":30314:30350  (pool * (user.shares)) / totalShares */\n      tag_565\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_565:\n        /* \"contracts/ShadowPool.sol\":30314:30374  (pool * (user.shares)) / totalShares - user.userBoostedShare */\n      tag_566\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_566:\n        /* \"contracts/ShadowPool.sol\":30290:30374  uint256 currentAmount = (pool * (user.shares)) / totalShares - user.userBoostedShare */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":30389:30407  uint256 earnAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":30426:30430  user */\n      dup4\n        /* \"contracts/ShadowPool.sol\":30426:30443  user.lockedAmount */\n      0x08\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":30410:30423  currentAmount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":30410:30443  currentAmount - user.lockedAmount */\n      tag_567\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_567:\n        /* \"contracts/ShadowPool.sol\":30389:30443  uint256 earnAmount = currentAmount - user.lockedAmount */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":30458:30481  uint256 overdueDuration */\n      0x00\n        /* \"contracts/ShadowPool.sol\":30521:30541  UNLOCK_FREE_DURATION */\n      sload(0x0e)\n        /* \"contracts/ShadowPool.sol\":30502:30506  user */\n      dup6\n        /* \"contracts/ShadowPool.sol\":30502:30518  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":30484:30499  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":30484:30518  block.timestamp - user.lockEndTime */\n      tag_568\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_568:\n        /* \"contracts/ShadowPool.sol\":30484:30541  block.timestamp - user.lockEndTime - UNLOCK_FREE_DURATION */\n      tag_569\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_569:\n        /* \"contracts/ShadowPool.sol\":30458:30541  uint256 overdueDuration = block.timestamp - user.lockEndTime - UNLOCK_FREE_DURATION */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":30578:30601  DURATION_FACTOR_OVERDUE */\n      sload(0x11)\n        /* \"contracts/ShadowPool.sol\":30560:30575  overdueDuration */\n      dup2\n        /* \"contracts/ShadowPool.sol\":30560:30601  overdueDuration > DURATION_FACTOR_OVERDUE */\n      gt\n        /* \"contracts/ShadowPool.sol\":30556:30679  if (overdueDuration > DURATION_FACTOR_OVERDUE) {\r... */\n      iszero\n      tag_570\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":30640:30663  DURATION_FACTOR_OVERDUE */\n      sload(0x11)\n        /* \"contracts/ShadowPool.sol\":30556:30679  if (overdueDuration > DURATION_FACTOR_OVERDUE) {\r... */\n    tag_570:\n        /* \"contracts/ShadowPool.sol\":30768:30789  uint256 overdueWeight */\n      0x00\n        /* \"contracts/ShadowPool.sol\":30825:30848  DURATION_FACTOR_OVERDUE */\n      sload(0x11)\n        /* \"contracts/ShadowPool.sol\":30811:30821  overdueFee */\n      sload(0x17)\n        /* \"contracts/ShadowPool.sol\":30793:30808  overdueDuration */\n      dup4\n        /* \"contracts/ShadowPool.sol\":30793:30821  overdueDuration * overdueFee */\n      tag_571\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_571:\n        /* \"contracts/ShadowPool.sol\":30792:30848  (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE */\n      tag_572\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_572:\n        /* \"contracts/ShadowPool.sol\":30768:30848  uint256 overdueWeight = (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":30863:30888  uint256 currentOverdueFee */\n      0x00\n        /* \"contracts/ShadowPool.sol\":2506:2510  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":30892:30918  earnAmount * overdueWeight */\n      tag_573\n        /* \"contracts/ShadowPool.sol\":30768:30848  uint256 overdueWeight = (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE */\n      dup4\n        /* \"contracts/ShadowPool.sol\":30892:30902  earnAmount */\n      dup7\n        /* \"contracts/ShadowPool.sol\":30892:30918  earnAmount * overdueWeight */\n      tag_411\n      jump\t// in\n    tag_573:\n        /* \"contracts/ShadowPool.sol\":30891:30938  (earnAmount * overdueWeight) / PRECISION_FACTOR */\n      tag_574\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_574:\n        /* \"contracts/ShadowPool.sol\":30863:30938  uint256 currentOverdueFee = (earnAmount * overdueWeight) / PRECISION_FACTOR */\n      swap8\n      pop\n        /* \"contracts/ShadowPool.sol\":30953:30977  return currentOverdueFee */\n      tag_555\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/ShadowPool.sol\":30002:30989  if (\r... */\n    tag_560:\n        /* \"contracts/ShadowPool.sol\":31006:31007  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":30999:31007  return 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":29867:31015  function calculateOverdueFee(address _user) public view returns (uint256) {\r... */\n    tag_555:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":26587:26833  function setDurationFactor(uint256 _durationFactor) external onlyAdmin {\r... */\n    tag_251:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_576\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_576:\n        /* \"contracts/ShadowPool.sol\":26695:26696  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":26677:26692  _durationFactor */\n      dup2\n        /* \"contracts/ShadowPool.sol\":26677:26696  _durationFactor > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":26669:26731  require(_durationFactor > 0, \"DURATION_FACTOR cannot be zero\") */\n      tag_579\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_581\n      jump\t// in\n    tag_579:\n        /* \"contracts/ShadowPool.sol\":26742:26757  DURATION_FACTOR */\n      0x10\n        /* \"contracts/ShadowPool.sol\":26742:26775  DURATION_FACTOR = _durationFactor */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":26791:26825  NewDurationFactor(_durationFactor) */\n      mload(0x40)\n      0x9478eb023aac0a7d58a4e935377056bf27cf5b72a2300725f831817a8f62fbde\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":26760:26775  _durationFactor */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":26791:26825  NewDurationFactor(_durationFactor) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3355:3393  uint256 public overdueFee = 100 * 1e10 */\n    tag_253:\n      sload(0x17)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":2760:2805  uint256 public UNLOCK_FREE_DURATION = 1 weeks */\n    tag_256:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":2990:3039  uint256 public DURATION_FACTOR_OVERDUE = 180 days */\n    tag_259:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":21289:21493  function setOperator(address _operator) external onlyOwner {\r... */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_584\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_584:\n        /* \"contracts/ShadowPool.sol\":21367:21390  _operator != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":21359:21417  require(_operator != address(0), \"Cannot be zero address\") */\n      tag_586\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_586:\n        /* \"contracts/ShadowPool.sol\":21428:21436  operator */\n      0x0a\n        /* \"contracts/ShadowPool.sol\":21428:21448  operator = _operator */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":21464:21485  NewOperator(operator) */\n      mload(0x40)\n      0xda12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a\n      swap3\n      tag_357\n      swap3\n        /* \"contracts/ShadowPool.sol\":21476:21484  operator */\n      and\n      swap1\n        /* \"contracts/ShadowPool.sol\":21464:21485  NewOperator(operator) */\n      tag_188\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":24496:24753  function setWithdrawFee(uint256 _withdrawFee) external onlyAdmin {\r... */\n    tag_269:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_590\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_590:\n        /* \"contracts/ShadowPool.sol\":2087:2090  500 */\n      0x01f4\n        /* \"contracts/ShadowPool.sol\":24580:24592  _withdrawFee */\n      dup2\n        /* \"contracts/ShadowPool.sol\":24580:24612  _withdrawFee <= MAX_WITHDRAW_FEE */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":24572:24665  require(_withdrawFee <= MAX_WITHDRAW_FEE, \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\") */\n      tag_593\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_364\n      jump\t// in\n    tag_593:\n        /* \"contracts/ShadowPool.sol\":24676:24687  withdrawFee */\n      0x15\n        /* \"contracts/ShadowPool.sol\":24676:24702  withdrawFee = _withdrawFee */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":24718:24745  NewWithdrawFee(withdrawFee) */\n      mload(0x40)\n      0xd5fe46099fa396290a7f57e36c3c3c8774e2562c18ed5d1dcc0fa75071e03f1d\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":24690:24702  _withdrawFee */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":24718:24745  NewWithdrawFee(withdrawFee) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":24007:24387  function setPerformanceFeeContract(uint256 _performanceFeeContract) external onlyAdmin {\r... */\n    tag_272:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_597\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_597:\n        /* \"contracts/ShadowPool.sol\":2026:2030  2000 */\n      0x07d0\n        /* \"contracts/ShadowPool.sol\":24127:24150  _performanceFeeContract */\n      dup2\n        /* \"contracts/ShadowPool.sol\":24127:24173  _performanceFeeContract <= MAX_PERFORMANCE_FEE */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":24105:24255  require(\r... */\n      tag_600\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_514\n      jump\t// in\n    tag_600:\n        /* \"contracts/ShadowPool.sol\":24266:24288  performanceFeeContract */\n      0x14\n        /* \"contracts/ShadowPool.sol\":24266:24314  performanceFeeContract = _performanceFeeContract */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":24330:24379  NewPerformanceFeeContract(performanceFeeContract) */\n      mload(0x40)\n      0xc5d25457b67b87678c987375af13f6e50beb3ad7bfd009da26766ae986eaa20d\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":24291:24314  _performanceFeeContract */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":24330:24379  NewPerformanceFeeContract(performanceFeeContract) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1235:1278  IShadowChefV2 public immutable shadowchefV2 */\n    tag_274:\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":3094:3134  uint256 public BOOST_WEIGHT = 100 * 1e10 */\n    tag_278:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1980:2030  uint256 public constant MAX_PERFORMANCE_FEE = 2000 */\n    tag_281:\n        /* \"contracts/ShadowPool.sol\":2026:2030  2000 */\n      0x07d0\n        /* \"contracts/ShadowPool.sol\":1980:2030  uint256 public constant MAX_PERFORMANCE_FEE = 2000 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":23249:23483  function setWithdrawFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n    tag_285:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_604\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_604:\n        /* \"contracts/ShadowPool.sol\":23342:23361  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/ShadowPool.sol\":23334:23388  require(_user != address(0), \"Cannot be zero address\") */\n      tag_607\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_607:\n        /* \"contracts/ShadowPool.sol\":23399:23426  freeWithdrawFeeUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":23399:23419  freeWithdrawFeeUsers */\n      0x05\n        /* \"contracts/ShadowPool.sol\":23399:23426  freeWithdrawFeeUsers[_user] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ShadowPool.sol\":23399:23434  freeWithdrawFeeUsers[_user] = _free */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ShadowPool.sol\":23450:23475  FreeFeeUser(_user, _free) */\n      swap1\n      mload\n        /* \"contracts/ShadowPool.sol\":23399:23434  freeWithdrawFeeUsers[_user] = _free */\n      swap1\n      swap3\n        /* \"contracts/ShadowPool.sol\":23399:23426  freeWithdrawFeeUsers[_user] */\n      swap2\n        /* \"contracts/ShadowPool.sol\":23450:23475  FreeFeeUser(_user, _free) */\n      0x3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d44\n      swap2\n      log3\n        /* \"contracts/ShadowPool.sol\":23249:23483  function setWithdrawFeeUser(address _user, bool _free) external onlyAdmin {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":27374:27654  function setUnlockFreeDuration(uint256 _unlockFreeDuration) external onlyAdmin {\r... */\n    tag_288:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_610\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_610:\n        /* \"contracts/ShadowPool.sol\":27494:27495  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":27472:27491  _unlockFreeDuration */\n      dup2\n        /* \"contracts/ShadowPool.sol\":27472:27495  _unlockFreeDuration > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":27464:27535  require(_unlockFreeDuration > 0, \"UNLOCK_FREE_DURATION cannot be zero\") */\n      tag_613\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_615\n      jump\t// in\n    tag_613:\n        /* \"contracts/ShadowPool.sol\":27546:27566  UNLOCK_FREE_DURATION */\n      0x0e\n        /* \"contracts/ShadowPool.sol\":27546:27588  UNLOCK_FREE_DURATION = _unlockFreeDuration */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":27604:27646  NewUnlockFreeDuration(_unlockFreeDuration) */\n      mload(0x40)\n      0xf84bf2b901cfc02956d4e69556d7448cef4ea13587e7714dba7c6d697091e7ad\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":27569:27588  _unlockFreeDuration */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":27604:27646  NewUnlockFreeDuration(_unlockFreeDuration) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":28985:29730  function calculatePerformanceFee(address _user) public view returns (uint256) {\r... */\n    tag_291:\n        /* \"contracts/ShadowPool.sol\":29098:29113  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":29054:29061  uint256 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":29098:29113  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":29098:29106  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":29098:29113  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ShadowPool.sol\":29128:29139  user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":29128:29143  user.shares > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ShadowPool.sol\":29128:29159  user.shares > 0 && !user.locked */\n      tag_618\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":29148:29159  user.locked */\n      0x07\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":29147:29159  !user.locked */\n      iszero\n        /* \"contracts/ShadowPool.sol\":29128:29159  user.shares > 0 && !user.locked */\n    tag_618:\n        /* \"contracts/ShadowPool.sol\":29128:29194  user.shares > 0 && !user.locked && !freePerformanceFeeUsers[_user] */\n      dup1\n      iszero\n      tag_619\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":29164:29194  freePerformanceFeeUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":29164:29187  freePerformanceFeeUsers */\n      0x04\n        /* \"contracts/ShadowPool.sol\":29164:29194  freePerformanceFeeUsers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":29163:29194  !freePerformanceFeeUsers[_user] */\n      iszero\n        /* \"contracts/ShadowPool.sol\":29128:29194  user.shares > 0 && !user.locked && !freePerformanceFeeUsers[_user] */\n    tag_619:\n        /* \"contracts/ShadowPool.sol\":29124:29704  if (user.shares > 0 && !user.locked && !freePerformanceFeeUsers[_user]) {\r... */\n      iszero\n      tag_560\n      jumpi\n        /* \"contracts/ShadowPool.sol\":29211:29223  uint256 pool */\n      0x00\n        /* \"contracts/ShadowPool.sol\":29240:29274  calculateTotalpendingShdwRewards() */\n      tag_621\n        /* \"contracts/ShadowPool.sol\":29240:29272  calculateTotalpendingShdwRewards */\n      tag_294\n        /* \"contracts/ShadowPool.sol\":29240:29274  calculateTotalpendingShdwRewards() */\n      jump\t// in\n    tag_621:\n        /* \"contracts/ShadowPool.sol\":29226:29237  balanceOf() */\n      tag_622\n        /* \"contracts/ShadowPool.sol\":29226:29235  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":29226:29237  balanceOf() */\n      jump\t// in\n    tag_622:\n        /* \"contracts/ShadowPool.sol\":29226:29274  balanceOf() + calculateTotalpendingShdwRewards() */\n      tag_623\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_623:\n        /* \"contracts/ShadowPool.sol\":29211:29274  uint256 pool = balanceOf() + calculateTotalpendingShdwRewards() */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":29289:29308  uint256 totalAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":29334:29345  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":29326:29330  pool */\n      dup3\n        /* \"contracts/ShadowPool.sol\":29312:29316  user */\n      dup5\n        /* \"contracts/ShadowPool.sol\":29312:29323  user.shares */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":29312:29330  user.shares * pool */\n      tag_624\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_624:\n        /* \"contracts/ShadowPool.sol\":29311:29345  (user.shares * pool) / totalShares */\n      tag_625\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_625:\n        /* \"contracts/ShadowPool.sol\":29289:29345  uint256 totalAmount = (user.shares * pool) / totalShares */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":29360:29378  uint256 earnAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":29395:29399  user */\n      dup4\n        /* \"contracts/ShadowPool.sol\":29395:29420  user.shdwAtLastUserAction */\n      0x02\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":29381:29392  totalAmount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":29381:29420  totalAmount - user.shdwAtLastUserAction */\n      tag_626\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_626:\n        /* \"contracts/ShadowPool.sol\":29453:29467  performanceFee */\n      sload(0x13)\n        /* \"contracts/ShadowPool.sol\":29360:29420  uint256 earnAmount = totalAmount - user.shdwAtLastUserAction */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":29486:29504  _isContract(_user) */\n      tag_627\n        /* \"contracts/ShadowPool.sol\":29498:29503  _user */\n      dup8\n        /* \"contracts/ShadowPool.sol\":29486:29497  _isContract */\n      tag_424\n        /* \"contracts/ShadowPool.sol\":29486:29504  _isContract(_user) */\n      jump\t// in\n    tag_627:\n        /* \"contracts/ShadowPool.sol\":29482:29573  if (_isContract(_user)) {\r... */\n      iszero\n      tag_628\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":29535:29557  performanceFeeContract */\n      sload(0x14)\n        /* \"contracts/ShadowPool.sol\":29482:29573  if (_isContract(_user)) {\r... */\n    tag_628:\n        /* \"contracts/ShadowPool.sol\":29587:29616  uint256 currentPerformanceFee */\n      0x00\n        /* \"contracts/ShadowPool.sol\":29644:29649  10000 */\n      0x2710\n        /* \"contracts/ShadowPool.sol\":29620:29640  earnAmount * feeRate */\n      tag_629\n        /* \"contracts/ShadowPool.sol\":29633:29640  feeRate */\n      dup4\n        /* \"contracts/ShadowPool.sol\":29620:29630  earnAmount */\n      dup6\n        /* \"contracts/ShadowPool.sol\":29620:29640  earnAmount * feeRate */\n      tag_411\n      jump\t// in\n    tag_629:\n        /* \"contracts/ShadowPool.sol\":29619:29649  (earnAmount * feeRate) / 10000 */\n      tag_630\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_630:\n        /* \"contracts/ShadowPool.sol\":29587:29649  uint256 currentPerformanceFee = (earnAmount * feeRate) / 10000 */\n      swap7\n      pop\n        /* \"contracts/ShadowPool.sol\":29664:29692  return currentPerformanceFee */\n      tag_555\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/ShadowPool.sol\":32813:32999  function calculateTotalpendingShdwRewards() public view returns (uint256) {\r... */\n    tag_294:\n        /* \"contracts/ShadowPool.sol\":32878:32885  uint256 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":32898:32912  uint256 amount */\n      dup1\n        /* \"contracts/ShadowPool.sol\":32915:32927  shadowchefV2 */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"contracts/ShadowPool.sol\":32915:32939  shadowchefV2.pendingShdw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc799b59d\n        /* \"contracts/ShadowPool.sol\":32940:32951  shdwPoolPID */\n      sload(0x0b)\n        /* \"contracts/ShadowPool.sol\":32961:32965  this */\n      address\n        /* \"contracts/ShadowPool.sol\":32915:32967  shadowchefV2.pendingShdw(shdwPoolPID, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_632\n      swap3\n      swap2\n      swap1\n      tag_633\n      jump\t// in\n    tag_632:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_634\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_634:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_636\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_636:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_637\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_637:\n        /* \"contracts/ShadowPool.sol\":32898:32967  uint256 amount = shadowchefV2.pendingShdw(shdwPoolPID, address(this)) */\n      swap2\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":32813:32999  function calculateTotalpendingShdwRewards() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":2044:2090  uint256 public constant MAX_WITHDRAW_FEE = 500 */\n    tag_300:\n        /* \"contracts/ShadowPool.sol\":2087:2090  500 */\n      0x01f4\n        /* \"contracts/ShadowPool.sol\":2044:2090  uint256 public constant MAX_WITHDRAW_FEE = 500 */\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":28118:28403  function inCaseTokensGetStuck(address _token) external onlyAdmin {\r... */\n    tag_304:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_639\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_639:\n        /* \"contracts/ShadowPool.sol\":28220:28225  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":28202:28226  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ShadowPool.sol\":28202:28208  _token */\n      dup2\n        /* \"contracts/ShadowPool.sol\":28202:28226  _token != address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ShadowPool.sol\":28194:28268  require(_token != address(token), \"Token cannot be same as deposit token\") */\n      tag_642\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_644\n      jump\t// in\n    tag_642:\n        /* \"contracts/ShadowPool.sol\":28298:28337  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":28281:28295  uint256 amount */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":28298:28322  IERC20(_token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/ShadowPool.sol\":28298:28337  IERC20(_token).balanceOf(address(this)) */\n      tag_645\n      swap1\n        /* \"contracts/ShadowPool.sol\":28331:28335  this */\n      address\n      swap1\n        /* \"contracts/ShadowPool.sol\":28298:28337  IERC20(_token).balanceOf(address(this)) */\n      0x04\n      add\n      tag_188\n      jump\t// in\n    tag_645:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_646\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_646:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_648\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_648:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_649\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_649:\n        /* \"contracts/ShadowPool.sol\":28281:28337  uint256 amount = IERC20(_token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":28348:28395  IERC20(_token).safeTransfer(msg.sender, amount) */\n      tag_650\n        /* \"contracts/ShadowPool.sol\":28348:28375  IERC20(_token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"contracts/ShadowPool.sol\":28376:28386  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":28281:28337  uint256 amount = IERC20(_token).balanceOf(address(this)) */\n      dup4\n        /* \"contracts/ShadowPool.sol\":28348:28375  IERC20(_token).safeTransfer */\n      tag_651\n        /* \"contracts/ShadowPool.sol\":28348:28395  IERC20(_token).safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_650:\n        /* \"contracts/ShadowPool.sol\":6485:6486  _ */\n      pop\n        /* \"contracts/ShadowPool.sol\":28118:28403  function inCaseTokensGetStuck(address _token) external onlyAdmin {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":21607:21846  function setBoostContract(address _boostContract) external onlyAdmin {\r... */\n    tag_307:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_653\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_653:\n        /* \"contracts/ShadowPool.sol\":21695:21723  _boostContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":21687:21750  require(_boostContract != address(0), \"Cannot be zero address\") */\n      tag_656\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_656:\n        /* \"contracts/ShadowPool.sol\":21761:21774  boostContract */\n      0x01\n        /* \"contracts/ShadowPool.sol\":21761:21791  boostContract = _boostContract */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":21807:21838  NewBoostContract(boostContract) */\n      mload(0x40)\n      0x8f49a182922022d9119a1a6aeeca151b4a5665e86bd61c1ff32e152d459558b2\n      swap3\n      tag_357\n      swap3\n        /* \"contracts/ShadowPool.sol\":21824:21837  boostContract */\n      and\n      swap1\n        /* \"contracts/ShadowPool.sol\":21807:21838  NewBoostContract(boostContract) */\n      tag_188\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":3408:3451  uint256 public withdrawFeePeriod = 72 hours */\n    tag_309:\n      sload(0x18)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1287:1315  address public boostContract */\n    tag_312:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":11844:12069  function deposit(uint256 _amount, uint256 _lockDuration) external whenNotPaused {\r... */\n    tag_317:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_660\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_430\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_660:\n        /* \"contracts/ShadowPool.sol\":11953:11954  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":11943:11950  _amount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":11943:11954  _amount > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":11943:11975  _amount > 0 || _lockDuration > 0 */\n      dup1\n      tag_662\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":11974:11975  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":11958:11971  _lockDuration */\n      dup2\n        /* \"contracts/ShadowPool.sol\":11958:11975  _lockDuration > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":11943:11975  _amount > 0 || _lockDuration > 0 */\n    tag_662:\n        /* \"contracts/ShadowPool.sol\":11935:11998  require(_amount > 0 || _lockDuration > 0, \"Nothing to deposit\") */\n      tag_663\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_665\n      jump\t// in\n    tag_663:\n        /* \"contracts/ShadowPool.sol\":12009:12061  depositOperation(_amount, _lockDuration, msg.sender) */\n      tag_650\n        /* \"contracts/ShadowPool.sol\":12026:12033  _amount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":12035:12048  _lockDuration */\n      dup3\n        /* \"contracts/ShadowPool.sol\":12050:12060  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":12009:12025  depositOperation */\n      tag_450\n        /* \"contracts/ShadowPool.sol\":12009:12061  depositOperation(_amount, _lockDuration, msg.sender) */\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":2884:2925  uint256 public DURATION_FACTOR = 365 days */\n    tag_319:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":3301:3340  uint256 public withdrawFeeContract = 10 */\n    tag_322:\n      sload(0x16)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1860:1889  uint256 public totalBoostDebt */\n    tag_325:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":3255:3286  uint256 public withdrawFee = 10 */\n    tag_328:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":20977:21181  function setTreasury(address _treasury) external onlyOwner {\r... */\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_668\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_668:\n        /* \"contracts/ShadowPool.sol\":21055:21078  _treasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":21047:21105  require(_treasury != address(0), \"Cannot be zero address\") */\n      tag_670\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_474\n      jump\t// in\n    tag_670:\n        /* \"contracts/ShadowPool.sol\":21116:21124  treasury */\n      0x09\n        /* \"contracts/ShadowPool.sol\":21116:21136  treasury = _treasury */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":21152:21173  NewTreasury(treasury) */\n      mload(0x40)\n      0xafa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea086\n      swap3\n      tag_357\n      swap3\n        /* \"contracts/ShadowPool.sol\":21164:21172  treasury */\n      and\n      swap1\n        /* \"contracts/ShadowPool.sol\":21152:21173  NewTreasury(treasury) */\n      tag_188\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_674\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_674:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_676\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_678\n      jump\t// in\n    tag_676:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_435\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_520\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":26130:26475  function setMaxLockDuration(uint256 _maxLockDuration) external onlyAdmin {\r... */\n    tag_338:\n        /* \"contracts/ShadowPool.sol\":6453:6458  admin */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n        /* \"contracts/ShadowPool.sol\":6439:6449  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":6439:6458  msg.sender == admin */\n      eq\n        /* \"contracts/ShadowPool.sol\":6431:6474  require(msg.sender == admin, \"admin: wut?\") */\n      tag_681\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_681:\n        /* \"contracts/ShadowPool.sol\":2362:2371  1000 days */\n      0x05265c00\n        /* \"contracts/ShadowPool.sol\":26236:26252  _maxLockDuration */\n      dup2\n        /* \"contracts/ShadowPool.sol\":26236:26279  _maxLockDuration <= MAX_LOCK_DURATION_LIMIT */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":26214:26368  require(\r... */\n      tag_684\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_686\n      jump\t// in\n    tag_684:\n        /* \"contracts/ShadowPool.sol\":26379:26396  MAX_LOCK_DURATION */\n      0x0f\n        /* \"contracts/ShadowPool.sol\":26379:26415  MAX_LOCK_DURATION = _maxLockDuration */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":26431:26467  NewMaxLockDuration(_maxLockDuration) */\n      mload(0x40)\n      0xcab2f3455b51b6ca5377e84fccd0f890b6f6ca36c02e18b6d36cb34f469fe4fe\n      swap1\n      tag_357\n      swap1\n        /* \"contracts/ShadowPool.sol\":26399:26415  _maxLockDuration */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":26431:26467  NewMaxLockDuration(_maxLockDuration) */\n      tag_109\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":1740:1760  address public admin */\n    tag_340:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x08))\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":1182:1211  IERC20 public immutable token */\n    tag_343:\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n      dup2\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":2391:2447  uint256 public constant BOOST_WEIGHT_LIMIT = 5000 * 1e10 */\n    tag_347:\n        /* \"contracts/ShadowPool.sol\":2436:2447  5000 * 1e10 */\n      0x2d79883d2000\n        /* \"contracts/ShadowPool.sol\":2391:2447  uint256 public constant BOOST_WEIGHT_LIMIT = 5000 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_689\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_690\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_689:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_691\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_691:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_519\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_694\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_696\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_697\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_698\n      jump\t// in\n    tag_697:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_699\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_696:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":31190:31367  function calculatePerformanceFeeOrOverdueFee(address _user) internal view returns (uint256) {\r... */\n    tag_415:\n        /* \"contracts/ShadowPool.sol\":31273:31280  uint256 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":31333:31359  calculateOverdueFee(_user) */\n      tag_701\n        /* \"contracts/ShadowPool.sol\":31353:31358  _user */\n      dup3\n        /* \"contracts/ShadowPool.sol\":31333:31352  calculateOverdueFee */\n      tag_247\n        /* \"contracts/ShadowPool.sol\":31333:31359  calculateOverdueFee(_user) */\n      jump\t// in\n    tag_701:\n        /* \"contracts/ShadowPool.sol\":31300:31330  calculatePerformanceFee(_user) */\n      tag_702\n        /* \"contracts/ShadowPool.sol\":31324:31329  _user */\n      dup4\n        /* \"contracts/ShadowPool.sol\":31300:31323  calculatePerformanceFee */\n      tag_291\n        /* \"contracts/ShadowPool.sol\":31300:31330  calculatePerformanceFee(_user) */\n      jump\t// in\n    tag_702:\n        /* \"contracts/ShadowPool.sol\":31300:31359  calculatePerformanceFee(_user) + calculateOverdueFee(_user) */\n      tag_401\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":33798:33989  function _isContract(address addr) internal view returns (bool) {\r... */\n    tag_424:\n        /* \"contracts/ShadowPool.sol\":33928:33945  extcodesize(addr) */\n      extcodesize\n        /* \"contracts/ShadowPool.sol\":33973:33981  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/ShadowPool.sol\":33798:33989  function _isContract(address addr) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_430:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_706\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_190\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_706:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_519\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_709\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":17657:19955  function withdrawOperation(uint256 _shares, uint256 _amount) internal {\r... */\n    tag_436:\n        /* \"contracts/ShadowPool.sol\":17771:17781  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":17738:17759  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowPool.sol\":17762:17782  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":17762:17770  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":17762:17782  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ShadowPool.sol\":17812:17823  user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":17801:17823  _shares <= user.shares */\n      dup4\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":17793:17859  require(_shares <= user.shares, \"Withdraw amount exceeds balance\") */\n      tag_711\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_713\n      jump\t// in\n    tag_711:\n        /* \"contracts/ShadowPool.sol\":17897:17912  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":17878:17882  user */\n      dup2\n        /* \"contracts/ShadowPool.sol\":17878:17894  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":17878:17912  user.lockEndTime < block.timestamp */\n      lt\n        /* \"contracts/ShadowPool.sol\":17870:17930  require(user.lockEndTime < block.timestamp, \"Still in lock\") */\n      tag_714\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_716\n      jump\t// in\n    tag_714:\n        /* \"contracts/ShadowPool.sol\":17947:17952  VShdw */\n      sload(0x02)\n        /* \"contracts/ShadowPool.sol\":17947:17966  VShdw != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":17947:17952  VShdw */\n      and\n        /* \"contracts/ShadowPool.sol\":17947:17966  VShdw != address(0) */\n      iszero\n        /* \"contracts/ShadowPool.sol\":17943:18029  if (VShdw != address(0)) {\r... */\n      tag_717\n      jumpi\n        /* \"contracts/ShadowPool.sol\":17990:17995  VShdw */\n      sload(0x02)\n        /* \"contracts/ShadowPool.sol\":17983:18017  IVShdw(VShdw).withdraw(msg.sender) */\n      mload(0x40)\n      0x51cff8d900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":17990:17995  VShdw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ShadowPool.sol\":17983:18005  IVShdw(VShdw).withdraw */\n      0x51cff8d9\n      swap1\n        /* \"contracts/ShadowPool.sol\":17983:18017  IVShdw(VShdw).withdraw(msg.sender) */\n      tag_718\n      swap1\n        /* \"contracts/ShadowPool.sol\":18006:18016  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ShadowPool.sol\":17983:18017  IVShdw(VShdw).withdraw(msg.sender) */\n      0x04\n      add\n      tag_188\n      jump\t// in\n    tag_718:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_719\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_719:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_721\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_721:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":17943:18029  if (VShdw != address(0)) {\r... */\n    tag_717:\n        /* \"contracts/ShadowPool.sol\":18276:18287  user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":18197:18204  _shares */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":18174:18194  uint256 currentShare */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":18240:18272  _shares * PRECISION_FACTOR_SHARE */\n      tag_722\n        /* \"contracts/ShadowPool.sol\":2587:2591  1e28 */\n      0x204fce5e3e25026110000000\n        /* \"contracts/ShadowPool.sol\":18197:18204  _shares */\n      dup5\n        /* \"contracts/ShadowPool.sol\":18240:18272  _shares * PRECISION_FACTOR_SHARE */\n      tag_411\n      jump\t// in\n    tag_722:\n        /* \"contracts/ShadowPool.sol\":18239:18287  (_shares * PRECISION_FACTOR_SHARE) / user.shares */\n      tag_723\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_723:\n        /* \"contracts/ShadowPool.sol\":18215:18287  uint256 sharesPercent = (_shares * PRECISION_FACTOR_SHARE) / user.shares */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":18345:18354  harvest() */\n      tag_724\n        /* \"contracts/ShadowPool.sol\":18345:18352  harvest */\n      tag_725\n        /* \"contracts/ShadowPool.sol\":18345:18354  harvest() */\n      jump\t// in\n    tag_724:\n        /* \"contracts/ShadowPool.sol\":18398:18425  updateUserShare(msg.sender) */\n      tag_726\n        /* \"contracts/ShadowPool.sol\":18414:18424  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":18398:18413  updateUserShare */\n      tag_727\n        /* \"contracts/ShadowPool.sol\":18398:18425  updateUserShare(msg.sender) */\n      jump\t// in\n    tag_726:\n        /* \"contracts/ShadowPool.sol\":18442:18454  _shares == 0 */\n      dup5\n      iszero\n        /* \"contracts/ShadowPool.sol\":18442:18469  _shares == 0 && _amount > 0 */\n      dup1\n      iszero\n      tag_728\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":18468:18469  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":18458:18465  _amount */\n      dup5\n        /* \"contracts/ShadowPool.sol\":18458:18469  _amount > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":18442:18469  _shares == 0 && _amount > 0 */\n    tag_728:\n        /* \"contracts/ShadowPool.sol\":18438:18824  if (_shares == 0 && _amount > 0) {\r... */\n      iszero\n      tag_729\n      jumpi\n        /* \"contracts/ShadowPool.sol\":18486:18498  uint256 pool */\n      0x00\n        /* \"contracts/ShadowPool.sol\":18501:18512  balanceOf() */\n      tag_730\n        /* \"contracts/ShadowPool.sol\":18501:18510  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":18501:18512  balanceOf() */\n      jump\t// in\n    tag_730:\n        /* \"contracts/ShadowPool.sol\":18486:18512  uint256 pool = balanceOf() */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":18568:18572  pool */\n      dup1\n        /* \"contracts/ShadowPool.sol\":18553:18564  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":18543:18550  _amount */\n      dup7\n        /* \"contracts/ShadowPool.sol\":18543:18564  _amount * totalShares */\n      tag_731\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_731:\n        /* \"contracts/ShadowPool.sol\":18542:18572  (_amount * totalShares) / pool */\n      tag_732\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_732:\n        /* \"contracts/ShadowPool.sol\":18637:18648  user.shares */\n      dup5\n      sload\n        /* \"contracts/ShadowPool.sol\":18527:18572  currentShare = (_amount * totalShares) / pool */\n      swap1\n      swap4\n      pop\n        /* \"contracts/ShadowPool.sol\":18622:18648  currentShare > user.shares */\n      dup4\n      gt\n        /* \"contracts/ShadowPool.sol\":18618:18711  if (currentShare > user.shares) {\r... */\n      iszero\n      tag_733\n      jumpi\n        /* \"contracts/ShadowPool.sol\":18684:18695  user.shares */\n      dup4\n      sload\n      swap3\n      pop\n        /* \"contracts/ShadowPool.sol\":18618:18711  if (currentShare > user.shares) {\r... */\n    tag_733:\n        /* \"contracts/ShadowPool.sol\":18438:18824  if (_shares == 0 && _amount > 0) {\r... */\n      pop\n      jump(tag_734)\n    tag_729:\n        /* \"contracts/ShadowPool.sol\":18775:18786  user.shares */\n      dup3\n      sload\n        /* \"contracts/ShadowPool.sol\":2587:2591  1e28 */\n      0x204fce5e3e25026110000000\n      swap1\n        /* \"contracts/ShadowPool.sol\":18759:18786  sharesPercent * user.shares */\n      tag_735\n      swap1\n        /* \"contracts/ShadowPool.sol\":18759:18772  sharesPercent */\n      dup4\n        /* \"contracts/ShadowPool.sol\":18759:18786  sharesPercent * user.shares */\n      tag_411\n      jump\t// in\n    tag_735:\n        /* \"contracts/ShadowPool.sol\":18758:18812  (sharesPercent * user.shares) / PRECISION_FACTOR_SHARE */\n      tag_736\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_736:\n        /* \"contracts/ShadowPool.sol\":18743:18812  currentShare = (sharesPercent * user.shares) / PRECISION_FACTOR_SHARE */\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":18438:18824  if (_shares == 0 && _amount > 0) {\r... */\n    tag_734:\n        /* \"contracts/ShadowPool.sol\":18834:18855  uint256 currentAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":18889:18900  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":18873:18885  currentShare */\n      dup4\n        /* \"contracts/ShadowPool.sol\":18859:18870  balanceOf() */\n      tag_737\n        /* \"contracts/ShadowPool.sol\":18859:18868  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":18859:18870  balanceOf() */\n      jump\t// in\n    tag_737:\n        /* \"contracts/ShadowPool.sol\":18859:18885  balanceOf() * currentShare */\n      tag_738\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_738:\n        /* \"contracts/ShadowPool.sol\":18858:18900  (balanceOf() * currentShare) / totalShares */\n      tag_739\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_739:\n        /* \"contracts/ShadowPool.sol\":18834:18900  uint256 currentAmount = (balanceOf() * currentShare) / totalShares */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":18926:18938  currentShare */\n      dup3\n        /* \"contracts/ShadowPool.sol\":18911:18915  user */\n      dup5\n        /* \"contracts/ShadowPool.sol\":18911:18922  user.shares */\n      0x00\n      add\n      0x00\n        /* \"contracts/ShadowPool.sol\":18911:18938  user.shares -= currentShare */\n      dup3\n      dup3\n      sload\n      tag_740\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_740:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowPool.sol\":18964:18976  currentShare */\n      dup3\n        /* \"contracts/ShadowPool.sol\":18949:18960  totalShares */\n      0x07\n      0x00\n        /* \"contracts/ShadowPool.sol\":18949:18976  totalShares -= currentShare */\n      dup3\n      dup3\n      sload\n      tag_741\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_741:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":19050:19060  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":19029:19061  freeWithdrawFeeUsers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":19029:19049  freeWithdrawFeeUsers */\n      0x05\n        /* \"contracts/ShadowPool.sol\":19029:19061  freeWithdrawFeeUsers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":19028:19061  !freeWithdrawFeeUsers[msg.sender] */\n      iszero\n        /* \"contracts/ShadowPool.sol\":19028:19127  !freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod) */\n      dup1\n      iszero\n      tag_742\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":19109:19126  withdrawFeePeriod */\n      sload(0x18)\n        /* \"contracts/ShadowPool.sol\":19084:19088  user */\n      dup5\n        /* \"contracts/ShadowPool.sol\":19084:19106  user.lastDepositedTime */\n      0x01\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":19084:19126  user.lastDepositedTime + withdrawFeePeriod */\n      tag_743\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_743:\n        /* \"contracts/ShadowPool.sol\":19066:19081  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":19066:19126  block.timestamp < user.lastDepositedTime + withdrawFeePeriod */\n      lt\n        /* \"contracts/ShadowPool.sol\":19028:19127  !freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod) */\n    tag_742:\n        /* \"contracts/ShadowPool.sol\":19024:19482  if (!freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod)) {\r... */\n      iszero\n      tag_744\n      jumpi\n        /* \"contracts/ShadowPool.sol\":19162:19173  withdrawFee */\n      sload(0x15)\n        /* \"contracts/ShadowPool.sol\":19192:19215  _isContract(msg.sender) */\n      tag_745\n        /* \"contracts/ShadowPool.sol\":19204:19214  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":19192:19203  _isContract */\n      tag_424\n        /* \"contracts/ShadowPool.sol\":19192:19215  _isContract(msg.sender) */\n      jump\t// in\n    tag_745:\n        /* \"contracts/ShadowPool.sol\":19188:19281  if (_isContract(msg.sender)) {\r... */\n      iszero\n      tag_746\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":19246:19265  withdrawFeeContract */\n      sload(0x16)\n        /* \"contracts/ShadowPool.sol\":19188:19281  if (_isContract(msg.sender)) {\r... */\n    tag_746:\n        /* \"contracts/ShadowPool.sol\":19295:19321  uint256 currentWithdrawFee */\n      0x00\n        /* \"contracts/ShadowPool.sol\":19352:19357  10000 */\n      0x2710\n        /* \"contracts/ShadowPool.sol\":19325:19348  currentAmount * feeRate */\n      tag_747\n        /* \"contracts/ShadowPool.sol\":19341:19348  feeRate */\n      dup4\n        /* \"contracts/ShadowPool.sol\":19325:19338  currentAmount */\n      dup6\n        /* \"contracts/ShadowPool.sol\":19325:19348  currentAmount * feeRate */\n      tag_411\n      jump\t// in\n    tag_747:\n        /* \"contracts/ShadowPool.sol\":19324:19357  (currentAmount * feeRate) / 10000 */\n      tag_748\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_748:\n        /* \"contracts/ShadowPool.sol\":19391:19399  treasury */\n      sload(0x09)\n        /* \"contracts/ShadowPool.sol\":19295:19357  uint256 currentWithdrawFee = (currentAmount * feeRate) / 10000 */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":19372:19420  token.safeTransfer(treasury, currentWithdrawFee) */\n      tag_749\n      swap1\n        /* \"contracts/ShadowPool.sol\":19391:19399  treasury */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":19372:19377  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":19372:19390  token.safeTransfer */\n      dup2\n      and\n      swap2\n        /* \"contracts/ShadowPool.sol\":19391:19399  treasury */\n      and\n        /* \"contracts/ShadowPool.sol\":19295:19357  uint256 currentWithdrawFee = (currentAmount * feeRate) / 10000 */\n      dup4\n        /* \"contracts/ShadowPool.sol\":19372:19390  token.safeTransfer */\n      tag_651\n        /* \"contracts/ShadowPool.sol\":19372:19420  token.safeTransfer(treasury, currentWithdrawFee) */\n      jump\t// in\n    tag_749:\n        /* \"contracts/ShadowPool.sol\":19435:19470  currentAmount -= currentWithdrawFee */\n      tag_750\n        /* \"contracts/ShadowPool.sol\":19452:19470  currentWithdrawFee */\n      dup2\n        /* \"contracts/ShadowPool.sol\":19435:19470  currentAmount -= currentWithdrawFee */\n      dup5\n      tag_419\n      jump\t// in\n    tag_750:\n      swap3\n      pop\n        /* \"contracts/ShadowPool.sol\":19024:19482  if (!freeWithdrawFeeUsers[msg.sender] && (block.timestamp < user.lastDepositedTime + withdrawFeePeriod)) {\r... */\n      pop\n      pop\n    tag_744:\n        /* \"contracts/ShadowPool.sol\":19494:19539  token.safeTransfer(msg.sender, currentAmount) */\n      tag_751\n        /* \"contracts/ShadowPool.sol\":19494:19512  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":19494:19499  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":19494:19512  token.safeTransfer */\n      and\n        /* \"contracts/ShadowPool.sol\":19513:19523  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":19525:19538  currentAmount */\n      dup4\n        /* \"contracts/ShadowPool.sol\":19494:19512  token.safeTransfer */\n      tag_651\n        /* \"contracts/ShadowPool.sol\":19494:19539  token.safeTransfer(msg.sender, currentAmount) */\n      jump\t// in\n    tag_751:\n        /* \"contracts/ShadowPool.sol\":19556:19567  user.shares */\n      dup4\n      sload\n        /* \"contracts/ShadowPool.sol\":19556:19571  user.shares > 0 */\n      iszero\n        /* \"contracts/ShadowPool.sol\":19552:19731  if (user.shares > 0) {\r... */\n      tag_752\n      jumpi\n        /* \"contracts/ShadowPool.sol\":19646:19657  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":19631:19642  balanceOf() */\n      tag_753\n        /* \"contracts/ShadowPool.sol\":19631:19640  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":19631:19642  balanceOf() */\n      jump\t// in\n    tag_753:\n        /* \"contracts/ShadowPool.sol\":19617:19628  user.shares */\n      dup6\n      sload\n        /* \"contracts/ShadowPool.sol\":19617:19642  user.shares * balanceOf() */\n      tag_754\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_754:\n        /* \"contracts/ShadowPool.sol\":19616:19657  (user.shares * balanceOf()) / totalShares */\n      tag_755\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_755:\n        /* \"contracts/ShadowPool.sol\":19588:19613  user.shdwAtLastUserAction */\n      0x02\n      dup6\n      add\n        /* \"contracts/ShadowPool.sol\":19588:19657  user.shdwAtLastUserAction = (user.shares * balanceOf()) / totalShares */\n      sstore\n        /* \"contracts/ShadowPool.sol\":19552:19731  if (user.shares > 0) {\r... */\n      jump(tag_756)\n    tag_752:\n        /* \"contracts/ShadowPool.sol\":19718:19719  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":19690:19715  user.shdwAtLastUserAction */\n      0x02\n      dup6\n      add\n        /* \"contracts/ShadowPool.sol\":19690:19719  user.shdwAtLastUserAction = 0 */\n      sstore\n        /* \"contracts/ShadowPool.sol\":19552:19731  if (user.shares > 0) {\r... */\n    tag_756:\n        /* \"contracts/ShadowPool.sol\":19769:19784  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":19743:19766  user.lastUserActionTime */\n      0x03\n      dup6\n      add\n        /* \"contracts/ShadowPool.sol\":19743:19784  user.lastUserActionTime = block.timestamp */\n      sstore\n        /* \"contracts/ShadowPool.sol\":19845:19880  updateBoostContractInfo(msg.sender) */\n      tag_757\n        /* \"contracts/ShadowPool.sol\":19869:19879  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":19845:19868  updateBoostContractInfo */\n      tag_758\n        /* \"contracts/ShadowPool.sol\":19845:19880  updateBoostContractInfo(msg.sender) */\n      jump\t// in\n    tag_757:\n        /* \"contracts/ShadowPool.sol\":19907:19917  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":19898:19947  Withdraw(msg.sender, currentAmount, currentShare) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/ShadowPool.sol\":19919:19932  currentAmount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":19934:19946  currentShare */\n      dup6\n        /* \"contracts/ShadowPool.sol\":19898:19947  Withdraw(msg.sender, currentAmount, currentShare) */\n      mload(0x40)\n      tag_759\n      swap3\n      swap2\n      swap1\n      tag_875\n      jump\t// in\n    tag_759:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowPool.sol\":17657:19955  function withdrawOperation(uint256 _shares, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":12285:16843  function depositOperation(\r... */\n    tag_450:\n        /* \"contracts/ShadowPool.sol\":12444:12459  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":12420:12441  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowPool.sol\":12444:12459  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":12444:12452  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":12444:12459  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ShadowPool.sol\":12474:12485  user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":12474:12490  user.shares == 0 */\n      iszero\n      dup1\n        /* \"contracts/ShadowPool.sol\":12474:12505  user.shares == 0 || _amount > 0 */\n      tag_761\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":12504:12505  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":12494:12501  _amount */\n      dup5\n        /* \"contracts/ShadowPool.sol\":12494:12505  _amount > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":12474:12505  user.shares == 0 || _amount > 0 */\n    tag_761:\n        /* \"contracts/ShadowPool.sol\":12470:12629  if (user.shares == 0 || _amount > 0) {\r... */\n      iszero\n      tag_763\n      jumpi\n        /* \"contracts/ShadowPool.sol\":2674:2687  0.00001 ether */\n      0x09184e72a000\n        /* \"contracts/ShadowPool.sol\":12530:12537  _amount */\n      dup5\n        /* \"contracts/ShadowPool.sol\":12530:12558  _amount > MIN_DEPOSIT_AMOUNT */\n      gt\n        /* \"contracts/ShadowPool.sol\":12522:12617  require(_amount > MIN_DEPOSIT_AMOUNT, \"Deposit amount must be greater than MIN_DEPOSIT_AMOUNT\") */\n      tag_763\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_765\n      jump\t// in\n    tag_763:\n        /* \"contracts/ShadowPool.sol\":12799:12815  user.lockEndTime */\n      0x05\n      dup2\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":12771:12784  _lockDuration */\n      dup4\n      swap1\n        /* \"contracts/ShadowPool.sol\":12819:12834  block.timestamp */\n      timestamp\n      gt\n        /* \"contracts/ShadowPool.sol\":12795:13248  if (user.lockEndTime >= block.timestamp) {\r... */\n      tag_766\n      jumpi\n        /* \"contracts/ShadowPool.sol\":12983:12994  _amount > 0 */\n      dup5\n      iszero\n        /* \"contracts/ShadowPool.sol\":12979:13164  if (_amount > 0) {\r... */\n      tag_767\n      jumpi\n        /* \"contracts/ShadowPool.sol\":13036:13051  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":13015:13033  user.lockStartTime */\n      0x04\n      dup4\n      add\n        /* \"contracts/ShadowPool.sol\":13015:13051  user.lockStartTime = block.timestamp */\n      sstore\n        /* \"contracts/ShadowPool.sol\":13091:13108  user.lockedAmount */\n      0x08\n      dup3\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":13070:13087  totalLockedAmount */\n      0x0d\n        /* \"contracts/ShadowPool.sol\":13070:13108  totalLockedAmount -= user.lockedAmount */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":13070:13087  totalLockedAmount */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":13070:13108  totalLockedAmount -= user.lockedAmount */\n      tag_768\n      swap1\n        /* \"contracts/ShadowPool.sol\":13091:13108  user.lockedAmount */\n      dup5\n      swap1\n        /* \"contracts/ShadowPool.sol\":13070:13108  totalLockedAmount -= user.lockedAmount */\n      tag_419\n      jump\t// in\n    tag_768:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":13147:13148  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":13127:13144  user.lockedAmount */\n      0x08\n      dup4\n      add\n        /* \"contracts/ShadowPool.sol\":13127:13148  user.lockedAmount = 0 */\n      sstore\n        /* \"contracts/ShadowPool.sol\":12979:13164  if (_amount > 0) {\r... */\n    tag_767:\n        /* \"contracts/ShadowPool.sol\":13218:13222  user */\n      dup2\n        /* \"contracts/ShadowPool.sol\":13218:13236  user.lockStartTime */\n      0x04\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":13199:13203  user */\n      dup3\n        /* \"contracts/ShadowPool.sol\":13199:13215  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":13199:13236  user.lockEndTime - user.lockStartTime */\n      tag_769\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_769:\n        /* \"contracts/ShadowPool.sol\":13178:13236  totalLockDuration += user.lockEndTime - user.lockStartTime */\n      tag_770\n      swap1\n      dup3\n      tag_405\n      jump\t// in\n    tag_770:\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":12795:13248  if (user.lockEndTime >= block.timestamp) {\r... */\n    tag_766:\n        /* \"contracts/ShadowPool.sol\":13266:13284  _lockDuration == 0 */\n      dup4\n      iszero\n      dup1\n        /* \"contracts/ShadowPool.sol\":13266:13326  _lockDuration == 0 || totalLockDuration >= MIN_LOCK_DURATION */\n      tag_771\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":2288:2295  1 weeks */\n      0x093a80\n        /* \"contracts/ShadowPool.sol\":13288:13305  totalLockDuration */\n      dup2\n        /* \"contracts/ShadowPool.sol\":13288:13326  totalLockDuration >= MIN_LOCK_DURATION */\n      lt\n      iszero\n        /* \"contracts/ShadowPool.sol\":13266:13326  _lockDuration == 0 || totalLockDuration >= MIN_LOCK_DURATION */\n    tag_771:\n        /* \"contracts/ShadowPool.sol\":13258:13362  require(_lockDuration == 0 || totalLockDuration >= MIN_LOCK_DURATION, \"Minimum lock period is one week\") */\n      tag_772\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_774\n      jump\t// in\n    tag_772:\n        /* \"contracts/ShadowPool.sol\":13402:13419  MAX_LOCK_DURATION */\n      sload(0x0f)\n        /* \"contracts/ShadowPool.sol\":13381:13398  totalLockDuration */\n      dup2\n        /* \"contracts/ShadowPool.sol\":13381:13419  totalLockDuration <= MAX_LOCK_DURATION */\n      gt\n      iszero\n        /* \"contracts/ShadowPool.sol\":13373:13452  require(totalLockDuration <= MAX_LOCK_DURATION, \"Maximum lock period exceeded\") */\n      tag_775\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_777\n      jump\t// in\n    tag_775:\n        /* \"contracts/ShadowPool.sol\":13469:13474  VShdw */\n      sload(0x02)\n        /* \"contracts/ShadowPool.sol\":13469:13488  VShdw != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":13469:13474  VShdw */\n      and\n        /* \"contracts/ShadowPool.sol\":13469:13488  VShdw != address(0) */\n      iszero\n        /* \"contracts/ShadowPool.sol\":13465:13569  if (VShdw != address(0)) {\r... */\n      tag_778\n      jumpi\n        /* \"contracts/ShadowPool.sol\":13512:13517  VShdw */\n      sload(0x02)\n        /* \"contracts/ShadowPool.sol\":13505:13557  IVShdw(VShdw).deposit(_user, _amount, _lockDuration) */\n      mload(0x40)\n      0x0efe6a8b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":13512:13517  VShdw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ShadowPool.sol\":13505:13526  IVShdw(VShdw).deposit */\n      0x0efe6a8b\n      swap1\n        /* \"contracts/ShadowPool.sol\":13505:13557  IVShdw(VShdw).deposit(_user, _amount, _lockDuration) */\n      tag_779\n      swap1\n        /* \"contracts/ShadowPool.sol\":13527:13532  _user */\n      dup7\n      swap1\n        /* \"contracts/ShadowPool.sol\":13534:13541  _amount */\n      dup10\n      swap1\n        /* \"contracts/ShadowPool.sol\":13543:13556  _lockDuration */\n      dup10\n      swap1\n        /* \"contracts/ShadowPool.sol\":13505:13557  IVShdw(VShdw).deposit(_user, _amount, _lockDuration) */\n      0x04\n      add\n      tag_780\n      jump\t// in\n    tag_779:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_781\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_781:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_783\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_783:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":13465:13569  if (VShdw != address(0)) {\r... */\n    tag_778:\n        /* \"contracts/ShadowPool.sol\":13625:13634  harvest() */\n      tag_784\n        /* \"contracts/ShadowPool.sol\":13625:13632  harvest */\n      tag_725\n        /* \"contracts/ShadowPool.sol\":13625:13634  harvest() */\n      jump\t// in\n    tag_784:\n        /* \"contracts/ShadowPool.sol\":13683:13694  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":13679:13817  if (totalShares == 0) {\r... */\n      tag_785\n      jumpi\n        /* \"contracts/ShadowPool.sol\":13716:13735  uint256 stockAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":13738:13749  available() */\n      tag_786\n        /* \"contracts/ShadowPool.sol\":13738:13747  available */\n      tag_171\n        /* \"contracts/ShadowPool.sol\":13738:13749  available() */\n      jump\t// in\n    tag_786:\n        /* \"contracts/ShadowPool.sol\":13783:13791  treasury */\n      sload(0x09)\n        /* \"contracts/ShadowPool.sol\":13716:13749  uint256 stockAmount = available() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":13764:13805  token.safeTransfer(treasury, stockAmount) */\n      tag_787\n      swap1\n        /* \"contracts/ShadowPool.sol\":13783:13791  treasury */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":13764:13769  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":13764:13782  token.safeTransfer */\n      dup2\n      and\n      swap2\n        /* \"contracts/ShadowPool.sol\":13783:13791  treasury */\n      and\n        /* \"contracts/ShadowPool.sol\":13716:13749  uint256 stockAmount = available() */\n      dup4\n        /* \"contracts/ShadowPool.sol\":13764:13782  token.safeTransfer */\n      tag_651\n        /* \"contracts/ShadowPool.sol\":13764:13805  token.safeTransfer(treasury, stockAmount) */\n      jump\t// in\n    tag_787:\n        /* \"contracts/ShadowPool.sol\":13679:13817  if (totalShares == 0) {\r... */\n      pop\n    tag_785:\n        /* \"contracts/ShadowPool.sol\":13858:13880  updateUserShare(_user) */\n      tag_788\n        /* \"contracts/ShadowPool.sol\":13874:13879  _user */\n      dup4\n        /* \"contracts/ShadowPool.sol\":13858:13873  updateUserShare */\n      tag_727\n        /* \"contracts/ShadowPool.sol\":13858:13880  updateUserShare(_user) */\n      jump\t// in\n    tag_788:\n        /* \"contracts/ShadowPool.sol\":13931:13948  _lockDuration > 0 */\n      dup4\n      iszero\n        /* \"contracts/ShadowPool.sol\":13927:14263  if (_lockDuration > 0) {\r... */\n      tag_789\n      jumpi\n        /* \"contracts/ShadowPool.sol\":13988:14003  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":13969:13973  user */\n      dup3\n        /* \"contracts/ShadowPool.sol\":13969:13985  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":13969:14003  user.lockEndTime < block.timestamp */\n      lt\n        /* \"contracts/ShadowPool.sol\":13965:14219  if (user.lockEndTime < block.timestamp) {\r... */\n      iszero\n      tag_790\n      jumpi\n        /* \"contracts/ShadowPool.sol\":14045:14060  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":14024:14042  user.lockStartTime */\n      0x04\n      dup4\n      add\n        /* \"contracts/ShadowPool.sol\":14024:14060  user.lockStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":14098:14129  block.timestamp + _lockDuration */\n      tag_791\n      swap1\n        /* \"contracts/ShadowPool.sol\":14116:14129  _lockDuration */\n      dup6\n      swap1\n        /* \"contracts/ShadowPool.sol\":14098:14129  block.timestamp + _lockDuration */\n      tag_405\n      jump\t// in\n    tag_791:\n        /* \"contracts/ShadowPool.sol\":14079:14095  user.lockEndTime */\n      0x05\n      dup4\n      add\n        /* \"contracts/ShadowPool.sol\":14079:14129  user.lockEndTime = block.timestamp + _lockDuration */\n      sstore\n        /* \"contracts/ShadowPool.sol\":13965:14219  if (user.lockEndTime < block.timestamp) {\r... */\n      jump(tag_792)\n    tag_790:\n        /* \"contracts/ShadowPool.sol\":14190:14203  _lockDuration */\n      dup4\n        /* \"contracts/ShadowPool.sol\":14170:14174  user */\n      dup3\n        /* \"contracts/ShadowPool.sol\":14170:14186  user.lockEndTime */\n      0x05\n      add\n      0x00\n        /* \"contracts/ShadowPool.sol\":14170:14203  user.lockEndTime += _lockDuration */\n      dup3\n      dup3\n      sload\n      tag_793\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_793:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":13965:14219  if (user.lockEndTime < block.timestamp) {\r... */\n    tag_792:\n        /* \"contracts/ShadowPool.sol\":14233:14244  user.locked */\n      0x07\n      dup3\n      add\n        /* \"contracts/ShadowPool.sol\":14233:14251  user.locked = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n        /* \"contracts/ShadowPool.sol\":14247:14251  true */\n      0x01\n        /* \"contracts/ShadowPool.sol\":14233:14251  user.locked = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":13927:14263  if (_lockDuration > 0) {\r... */\n    tag_789:\n        /* \"contracts/ShadowPool.sol\":14275:14296  uint256 currentShares */\n      0x00\n        /* \"contracts/ShadowPool.sol\":14307:14328  uint256 currentAmount */\n      dup1\n        /* \"contracts/ShadowPool.sol\":14339:14371  uint256 userCurrentLockedBalance */\n      0x00\n        /* \"contracts/ShadowPool.sol\":14382:14394  uint256 pool */\n      dup1\n        /* \"contracts/ShadowPool.sol\":14397:14408  balanceOf() */\n      tag_794\n        /* \"contracts/ShadowPool.sol\":14397:14406  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":14397:14408  balanceOf() */\n      jump\t// in\n    tag_794:\n        /* \"contracts/ShadowPool.sol\":14382:14408  uint256 pool = balanceOf() */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":14423:14434  _amount > 0 */\n      dup9\n      iszero\n        /* \"contracts/ShadowPool.sol\":14419:14554  if (_amount > 0) {\r... */\n      tag_795\n      jumpi\n        /* \"contracts/ShadowPool.sol\":14451:14504  token.safeTransferFrom(_user, address(this), _amount) */\n      tag_796\n        /* \"contracts/ShadowPool.sol\":14451:14473  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":14451:14456  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":14451:14473  token.safeTransferFrom */\n      and\n        /* \"contracts/ShadowPool.sol\":14474:14479  _user */\n      dup9\n        /* \"contracts/ShadowPool.sol\":14489:14493  this */\n      address\n        /* \"contracts/ShadowPool.sol\":14496:14503  _amount */\n      dup13\n        /* \"contracts/ShadowPool.sol\":14451:14473  token.safeTransferFrom */\n      tag_380\n        /* \"contracts/ShadowPool.sol\":14451:14504  token.safeTransferFrom(_user, address(this), _amount) */\n      jump\t// in\n    tag_796:\n        /* \"contracts/ShadowPool.sol\":14535:14542  _amount */\n      dup9\n        /* \"contracts/ShadowPool.sol\":14519:14542  currentAmount = _amount */\n      swap3\n      pop\n        /* \"contracts/ShadowPool.sol\":14419:14554  if (_amount > 0) {\r... */\n    tag_795:\n        /* \"contracts/ShadowPool.sol\":14603:14614  user.shares */\n      dup6\n      sload\n        /* \"contracts/ShadowPool.sol\":14603:14618  user.shares > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ShadowPool.sol\":14603:14633  user.shares > 0 && user.locked */\n      tag_797\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":14622:14633  user.locked */\n      0x07\n      dup7\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":14603:14633  user.shares > 0 && user.locked */\n    tag_797:\n        /* \"contracts/ShadowPool.sol\":14599:15080  if (user.shares > 0 && user.locked) {\r... */\n      iszero\n      tag_803\n      jumpi\n        /* \"contracts/ShadowPool.sol\":14700:14711  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":14685:14696  user.shares */\n      dup7\n      sload\n        /* \"contracts/ShadowPool.sol\":14678:14696  pool * user.shares */\n      tag_799\n      swap1\n        /* \"contracts/ShadowPool.sol\":14678:14682  pool */\n      dup4\n        /* \"contracts/ShadowPool.sol\":14678:14696  pool * user.shares */\n      tag_411\n      jump\t// in\n    tag_799:\n        /* \"contracts/ShadowPool.sol\":14677:14711  (pool * user.shares) / totalShares */\n      tag_800\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_800:\n        /* \"contracts/ShadowPool.sol\":14650:14711  userCurrentLockedBalance = (pool * user.shares) / totalShares */\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":14726:14767  currentAmount += userCurrentLockedBalance */\n      tag_801\n        /* \"contracts/ShadowPool.sol\":14650:14711  userCurrentLockedBalance = (pool * user.shares) / totalShares */\n      dup3\n        /* \"contracts/ShadowPool.sol\":14726:14767  currentAmount += userCurrentLockedBalance */\n      dup5\n      tag_405\n      jump\t// in\n    tag_801:\n      swap3\n      pop\n        /* \"contracts/ShadowPool.sol\":14797:14801  user */\n      dup6\n        /* \"contracts/ShadowPool.sol\":14797:14808  user.shares */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":14782:14793  totalShares */\n      0x07\n      0x00\n        /* \"contracts/ShadowPool.sol\":14782:14808  totalShares -= user.shares */\n      dup3\n      dup3\n      sload\n      tag_802\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_802:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":14837:14838  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":14823:14838  user.shares = 0 */\n      dup7\n      sstore\n        /* \"contracts/ShadowPool.sol\":14894:14912  user.lockStartTime */\n      0x04\n      dup7\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":14916:14931  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":14894:14931  user.lockStartTime == block.timestamp */\n      eq\n        /* \"contracts/ShadowPool.sol\":14890:15069  if (user.lockStartTime == block.timestamp) {\r... */\n      iszero\n      tag_803\n      jumpi\n        /* \"contracts/ShadowPool.sol\":14952:14969  user.lockedAmount */\n      0x08\n      dup7\n      add\n        /* \"contracts/ShadowPool.sol\":14952:14996  user.lockedAmount = userCurrentLockedBalance */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":15015:15032  totalLockedAmount */\n      0x0d\n        /* \"contracts/ShadowPool.sol\":15015:15053  totalLockedAmount += user.lockedAmount */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":14972:14996  userCurrentLockedBalance */\n      dup4\n      swap2\n        /* \"contracts/ShadowPool.sol\":15015:15032  totalLockedAmount */\n      swap1\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":15015:15053  totalLockedAmount += user.lockedAmount */\n      tag_804\n      swap1\n        /* \"contracts/ShadowPool.sol\":14972:14996  userCurrentLockedBalance */\n      dup5\n      swap1\n        /* \"contracts/ShadowPool.sol\":15015:15053  totalLockedAmount += user.lockedAmount */\n      tag_405\n      jump\t// in\n    tag_804:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":14890:15069  if (user.lockStartTime == block.timestamp) {\r... */\n    tag_803:\n        /* \"contracts/ShadowPool.sol\":15094:15105  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":15094:15110  totalShares != 0 */\n      iszero\n        /* \"contracts/ShadowPool.sol\":15090:15282  if (totalShares != 0) {\r... */\n      tag_805\n      jumpi\n        /* \"contracts/ShadowPool.sol\":15176:15207  pool - userCurrentLockedBalance */\n      tag_806\n        /* \"contracts/ShadowPool.sol\":15183:15207  userCurrentLockedBalance */\n      dup3\n        /* \"contracts/ShadowPool.sol\":15176:15180  pool */\n      dup3\n        /* \"contracts/ShadowPool.sol\":15176:15207  pool - userCurrentLockedBalance */\n      tag_419\n      jump\t// in\n    tag_806:\n        /* \"contracts/ShadowPool.sol\":15160:15171  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":15144:15171  currentAmount * totalShares */\n      tag_807\n      swap1\n        /* \"contracts/ShadowPool.sol\":15144:15157  currentAmount */\n      dup6\n        /* \"contracts/ShadowPool.sol\":15144:15171  currentAmount * totalShares */\n      tag_411\n      jump\t// in\n    tag_807:\n        /* \"contracts/ShadowPool.sol\":15143:15208  (currentAmount * totalShares) / (pool - userCurrentLockedBalance) */\n      tag_808\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_808:\n        /* \"contracts/ShadowPool.sol\":15127:15208  currentShares = (currentAmount * totalShares) / (pool - userCurrentLockedBalance) */\n      swap4\n      pop\n        /* \"contracts/ShadowPool.sol\":15090:15282  if (totalShares != 0) {\r... */\n      jump(tag_809)\n    tag_805:\n        /* \"contracts/ShadowPool.sol\":15257:15270  currentAmount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":15241:15270  currentShares = currentAmount */\n      swap4\n      pop\n        /* \"contracts/ShadowPool.sol\":15090:15282  if (totalShares != 0) {\r... */\n    tag_809:\n        /* \"contracts/ShadowPool.sol\":15363:15367  user */\n      dup6\n        /* \"contracts/ShadowPool.sol\":15363:15381  user.lockStartTime */\n      0x04\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":15344:15348  user */\n      dup7\n        /* \"contracts/ShadowPool.sol\":15344:15360  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":15344:15381  user.lockEndTime > user.lockStartTime */\n      gt\n        /* \"contracts/ShadowPool.sol\":15340:16343  if (user.lockEndTime > user.lockStartTime) {\r... */\n      iszero\n      tag_810\n      jumpi\n        /* \"contracts/ShadowPool.sol\":15437:15456  uint256 boostWeight */\n      0x00\n        /* \"contracts/ShadowPool.sol\":15518:15533  DURATION_FACTOR */\n      sload(0x10)\n        /* \"contracts/ShadowPool.sol\":15502:15514  BOOST_WEIGHT */\n      sload(0x12)\n        /* \"contracts/ShadowPool.sol\":15480:15484  user */\n      dup9\n        /* \"contracts/ShadowPool.sol\":15480:15498  user.lockStartTime */\n      0x04\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":15461:15465  user */\n      dup10\n        /* \"contracts/ShadowPool.sol\":15461:15477  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":15461:15498  user.lockEndTime - user.lockStartTime */\n      tag_811\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_811:\n        /* \"contracts/ShadowPool.sol\":15460:15514  (user.lockEndTime - user.lockStartTime) * BOOST_WEIGHT */\n      tag_812\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_812:\n        /* \"contracts/ShadowPool.sol\":15459:15533  ((user.lockEndTime - user.lockStartTime) * BOOST_WEIGHT) / DURATION_FACTOR */\n      tag_813\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_813:\n        /* \"contracts/ShadowPool.sol\":15437:15533  uint256 boostWeight = ((user.lockEndTime - user.lockStartTime) * BOOST_WEIGHT) / DURATION_FACTOR */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":15548:15567  uint256 boostShares */\n      0x00\n        /* \"contracts/ShadowPool.sol\":2506:2510  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":15571:15598  boostWeight * currentShares */\n      tag_814\n        /* \"contracts/ShadowPool.sol\":15585:15598  currentShares */\n      dup8\n        /* \"contracts/ShadowPool.sol\":15437:15533  uint256 boostWeight = ((user.lockEndTime - user.lockStartTime) * BOOST_WEIGHT) / DURATION_FACTOR */\n      dup5\n        /* \"contracts/ShadowPool.sol\":15571:15598  boostWeight * currentShares */\n      tag_411\n      jump\t// in\n    tag_814:\n        /* \"contracts/ShadowPool.sol\":15570:15618  (boostWeight * currentShares) / PRECISION_FACTOR */\n      tag_815\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_815:\n        /* \"contracts/ShadowPool.sol\":15548:15618  uint256 boostShares = (boostWeight * currentShares) / PRECISION_FACTOR */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":15633:15661  currentShares += boostShares */\n      tag_816\n        /* \"contracts/ShadowPool.sol\":15548:15618  uint256 boostShares = (boostWeight * currentShares) / PRECISION_FACTOR */\n      dup2\n        /* \"contracts/ShadowPool.sol\":15633:15661  currentShares += boostShares */\n      dup8\n      tag_405\n      jump\t// in\n    tag_816:\n      swap6\n      pop\n        /* \"contracts/ShadowPool.sol\":15691:15704  currentShares */\n      dup6\n        /* \"contracts/ShadowPool.sol\":15676:15680  user */\n      dup9\n        /* \"contracts/ShadowPool.sol\":15676:15687  user.shares */\n      0x00\n      add\n      0x00\n        /* \"contracts/ShadowPool.sol\":15676:15704  user.shares += currentShares */\n      dup3\n      dup3\n      sload\n      tag_817\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_817:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ShadowPool.sol\":15843:15867  uint256 userBoostedShare */\n      0x00\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":2506:2510  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":15871:15898  boostWeight * currentAmount */\n      tag_818\n        /* \"contracts/ShadowPool.sol\":15885:15898  currentAmount */\n      dup8\n        /* \"contracts/ShadowPool.sol\":15871:15882  boostWeight */\n      dup6\n        /* \"contracts/ShadowPool.sol\":15871:15898  boostWeight * currentAmount */\n      tag_411\n      jump\t// in\n    tag_818:\n        /* \"contracts/ShadowPool.sol\":15870:15918  (boostWeight * currentAmount) / PRECISION_FACTOR */\n      tag_819\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_819:\n        /* \"contracts/ShadowPool.sol\":15843:15918  uint256 userBoostedShare = (boostWeight * currentAmount) / PRECISION_FACTOR */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":15958:15974  userBoostedShare */\n      dup1\n        /* \"contracts/ShadowPool.sol\":15933:15937  user */\n      dup10\n        /* \"contracts/ShadowPool.sol\":15933:15954  user.userBoostedShare */\n      0x06\n      add\n      0x00\n        /* \"contracts/ShadowPool.sol\":15933:15974  user.userBoostedShare += userBoostedShare */\n      dup3\n      dup3\n      sload\n      tag_820\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_820:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowPool.sol\":16007:16023  userBoostedShare */\n      dup1\n        /* \"contracts/ShadowPool.sol\":15989:16003  totalBoostDebt */\n      0x0c\n      0x00\n        /* \"contracts/ShadowPool.sol\":15989:16023  totalBoostDebt += userBoostedShare */\n      dup3\n      dup3\n      sload\n      tag_821\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_821:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowPool.sol\":16097:16104  _amount */\n      dup12\n        /* \"contracts/ShadowPool.sol\":16076:16080  user */\n      dup10\n        /* \"contracts/ShadowPool.sol\":16076:16093  user.lockedAmount */\n      0x08\n      add\n      0x00\n        /* \"contracts/ShadowPool.sol\":16076:16104  user.lockedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_822\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_822:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowPool.sol\":16140:16147  _amount */\n      dup12\n        /* \"contracts/ShadowPool.sol\":16119:16136  totalLockedAmount */\n      0x0d\n      0x00\n        /* \"contracts/ShadowPool.sol\":16119:16147  totalLockedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_823\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_823:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ShadowPool.sol\":16174:16179  _user */\n      dup10\n        /* \"contracts/ShadowPool.sol\":16169:16270  Lock(_user, user.lockedAmount, user.shares, (user.lockEndTime - user.lockStartTime), block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2b943276e5d747f6f7dd46d3b880d8874cb8d6b9b88ca1903990a2738e7dc7a1\n        /* \"contracts/ShadowPool.sol\":16181:16185  user */\n      dup11\n        /* \"contracts/ShadowPool.sol\":16181:16198  user.lockedAmount */\n      0x08\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":16200:16204  user */\n      dup12\n        /* \"contracts/ShadowPool.sol\":16200:16211  user.shares */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":16233:16237  user */\n      dup13\n        /* \"contracts/ShadowPool.sol\":16233:16251  user.lockStartTime */\n      0x04\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":16214:16218  user */\n      dup14\n        /* \"contracts/ShadowPool.sol\":16214:16230  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":16214:16251  user.lockEndTime - user.lockStartTime */\n      tag_824\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_824:\n        /* \"contracts/ShadowPool.sol\":16254:16269  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":16169:16270  Lock(_user, user.lockedAmount, user.shares, (user.lockEndTime - user.lockStartTime), block.timestamp) */\n      mload(0x40)\n      tag_825\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_826\n      jump\t// in\n    tag_825:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowPool.sol\":15340:16343  if (user.lockEndTime > user.lockStartTime) {\r... */\n      pop\n      pop\n      pop\n      jump(tag_827)\n    tag_810:\n        /* \"contracts/ShadowPool.sol\":16318:16331  currentShares */\n      dup4\n        /* \"contracts/ShadowPool.sol\":16303:16307  user */\n      dup7\n        /* \"contracts/ShadowPool.sol\":16303:16314  user.shares */\n      0x00\n      add\n      0x00\n        /* \"contracts/ShadowPool.sol\":16303:16331  user.shares += currentShares */\n      dup3\n      dup3\n      sload\n      tag_828\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_828:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":15340:16343  if (user.lockEndTime > user.lockStartTime) {\r... */\n    tag_827:\n        /* \"contracts/ShadowPool.sol\":16369:16370  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":16359:16366  _amount */\n      dup10\n        /* \"contracts/ShadowPool.sol\":16359:16370  _amount > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":16359:16391  _amount > 0 || _lockDuration > 0 */\n      dup1\n      tag_829\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":16390:16391  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":16374:16387  _lockDuration */\n      dup9\n        /* \"contracts/ShadowPool.sol\":16374:16391  _lockDuration > 0 */\n      gt\n        /* \"contracts/ShadowPool.sol\":16359:16391  _amount > 0 || _lockDuration > 0 */\n    tag_829:\n        /* \"contracts/ShadowPool.sol\":16355:16460  if (_amount > 0 || _lockDuration > 0) {\r... */\n      iszero\n      tag_830\n      jumpi\n        /* \"contracts/ShadowPool.sol\":16433:16448  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":16408:16430  user.lastDepositedTime */\n      0x01\n      dup8\n      add\n        /* \"contracts/ShadowPool.sol\":16408:16448  user.lastDepositedTime = block.timestamp */\n      sstore\n        /* \"contracts/ShadowPool.sol\":16355:16460  if (_amount > 0 || _lockDuration > 0) {\r... */\n    tag_830:\n        /* \"contracts/ShadowPool.sol\":16485:16498  currentShares */\n      dup4\n        /* \"contracts/ShadowPool.sol\":16470:16481  totalShares */\n      0x07\n      0x00\n        /* \"contracts/ShadowPool.sol\":16470:16498  totalShares += currentShares */\n      dup3\n      dup3\n      sload\n      tag_831\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_831:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":16583:16604  user.userBoostedShare */\n      0x06\n      dup7\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":16569:16580  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":16554:16565  balanceOf() */\n      tag_832\n        /* \"contracts/ShadowPool.sol\":16554:16563  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":16554:16565  balanceOf() */\n      jump\t// in\n    tag_832:\n        /* \"contracts/ShadowPool.sol\":16540:16551  user.shares */\n      dup9\n      sload\n        /* \"contracts/ShadowPool.sol\":16540:16565  user.shares * balanceOf() */\n      tag_833\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_833:\n        /* \"contracts/ShadowPool.sol\":16539:16580  (user.shares * balanceOf()) / totalShares */\n      tag_834\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_834:\n        /* \"contracts/ShadowPool.sol\":16539:16604  (user.shares * balanceOf()) / totalShares - user.userBoostedShare */\n      tag_835\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_835:\n        /* \"contracts/ShadowPool.sol\":16511:16536  user.shdwAtLastUserAction */\n      0x02\n      dup8\n      add\n        /* \"contracts/ShadowPool.sol\":16511:16604  user.shdwAtLastUserAction = (user.shares * balanceOf()) / totalShares - user.userBoostedShare */\n      sstore\n        /* \"contracts/ShadowPool.sol\":16641:16656  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":16615:16638  user.lastUserActionTime */\n      0x03\n      dup8\n      add\n        /* \"contracts/ShadowPool.sol\":16615:16656  user.lastUserActionTime = block.timestamp */\n      sstore\n        /* \"contracts/ShadowPool.sol\":16717:16747  updateBoostContractInfo(_user) */\n      tag_836\n        /* \"contracts/ShadowPool.sol\":16741:16746  _user */\n      dup8\n        /* \"contracts/ShadowPool.sol\":16717:16740  updateBoostContractInfo */\n      tag_758\n        /* \"contracts/ShadowPool.sol\":16717:16747  updateBoostContractInfo(_user) */\n      jump\t// in\n    tag_836:\n        /* \"contracts/ShadowPool.sol\":16773:16778  _user */\n      dup7\n        /* \"contracts/ShadowPool.sol\":16765:16835  Deposit(_user, _amount, currentShares, _lockDuration, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7162984403f6c73c8639375d45a9187dfd04602231bd8e587c415718b5f7e5f9\n        /* \"contracts/ShadowPool.sol\":16780:16787  _amount */\n      dup11\n        /* \"contracts/ShadowPool.sol\":16789:16802  currentShares */\n      dup7\n        /* \"contracts/ShadowPool.sol\":16804:16817  _lockDuration */\n      dup12\n        /* \"contracts/ShadowPool.sol\":16819:16834  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":16765:16835  Deposit(_user, _amount, currentShares, _lockDuration, block.timestamp) */\n      mload(0x40)\n      tag_837\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_826\n      jump\t// in\n    tag_837:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowPool.sol\":12285:16843  function depositOperation(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_464:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_839\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_190\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_839:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_519\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_842\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_467:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_844\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_464\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_844:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_846\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_690\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_846:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_847\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_847:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_520:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_543:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_850\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_430\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_850:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      0x010000000000000000000000000000000000000000\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_846\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_690\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_651:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_449\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":950:952  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":954:959  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_697\n      swap3\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_690:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_699:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_859\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_860\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_859:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_449\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_862\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_862:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_865\n      jump\t// in\n        /* \"contracts/ShadowPool.sol\":20201:20571  function harvest() internal {\r... */\n    tag_725:\n        /* \"contracts/ShadowPool.sol\":20287:20298  shdwPoolPID */\n      sload(0x0b)\n        /* \"contracts/ShadowPool.sol\":20262:20314  shadowchefV2.pendingShdw(shdwPoolPID, address(this)) */\n      mload(0x40)\n      0xc799b59d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":20240:20259  uint256 pendingShdw */\n      0x00\n      swap2\n        /* \"contracts/ShadowPool.sol\":20262:20286  shadowchefV2.pendingShdw */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":20262:20274  shadowchefV2 */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"contracts/ShadowPool.sol\":20262:20286  shadowchefV2.pendingShdw */\n      and\n      swap2\n      0xc799b59d\n      swap2\n        /* \"contracts/ShadowPool.sol\":20262:20314  shadowchefV2.pendingShdw(shdwPoolPID, address(this)) */\n      tag_867\n      swap2\n        /* \"contracts/ShadowPool.sol\":20308:20312  this */\n      address\n      swap1\n        /* \"contracts/ShadowPool.sol\":20262:20314  shadowchefV2.pendingShdw(shdwPoolPID, address(this)) */\n      0x04\n      add\n      tag_633\n      jump\t// in\n    tag_867:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_868\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_868:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_870\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_870:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_871\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_871:\n        /* \"contracts/ShadowPool.sol\":20240:20314  uint256 pendingShdw = shadowchefV2.pendingShdw(shdwPoolPID, address(this)) */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":20329:20344  pendingShdw > 0 */\n      dup1\n      iszero\n        /* \"contracts/ShadowPool.sol\":20325:20564  if (pendingShdw > 0) {\r... */\n      tag_435\n      jumpi\n        /* \"contracts/ShadowPool.sol\":20361:20378  uint256 balBefore */\n      0x00\n        /* \"contracts/ShadowPool.sol\":20381:20392  available() */\n      tag_873\n        /* \"contracts/ShadowPool.sol\":20381:20390  available */\n      tag_171\n        /* \"contracts/ShadowPool.sol\":20381:20392  available() */\n      jump\t// in\n    tag_873:\n        /* \"contracts/ShadowPool.sol\":20429:20440  shdwPoolPID */\n      sload(0x0b)\n        /* \"contracts/ShadowPool.sol\":20407:20444  shadowchefV2.withdraw(shdwPoolPID, 0) */\n      mload(0x40)\n      0x441a3e7000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":20361:20392  uint256 balBefore = available() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/ShadowPool.sol\":20407:20428  shadowchefV2.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":20407:20419  shadowchefV2 */\n      immutable(\"0x3f2cb8b8a6f6ba8772056c1e4910fb442737deea593ec84e00cbccee66f6d0e1\")\n        /* \"contracts/ShadowPool.sol\":20407:20428  shadowchefV2.withdraw */\n      and\n      swap2\n      0x441a3e70\n      swap2\n        /* \"contracts/ShadowPool.sol\":20407:20444  shadowchefV2.withdraw(shdwPoolPID, 0) */\n      tag_874\n      swap2\n        /* \"contracts/ShadowPool.sol\":20442:20443  0 */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":20407:20444  shadowchefV2.withdraw(shdwPoolPID, 0) */\n      0x04\n      add\n      tag_875\n      jump\t// in\n    tag_874:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_876\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_876:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_878\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_878:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":20459:20475  uint256 balAfter */\n      0x00\n        /* \"contracts/ShadowPool.sol\":20478:20489  available() */\n      tag_879\n        /* \"contracts/ShadowPool.sol\":20478:20487  available */\n      tag_171\n        /* \"contracts/ShadowPool.sol\":20478:20489  available() */\n      jump\t// in\n    tag_879:\n        /* \"contracts/ShadowPool.sol\":20459:20489  uint256 balAfter = available() */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":20517:20527  msg.sender */\n      caller\n        /* \"contracts/ShadowPool.sol\":20509:20552  Harvest(msg.sender, (balAfter - balBefore)) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/ShadowPool.sol\":20530:20550  balAfter - balBefore */\n      tag_880\n        /* \"contracts/ShadowPool.sol\":20541:20550  balBefore */\n      dup5\n        /* \"contracts/ShadowPool.sol\":20459:20489  uint256 balAfter = available() */\n      dup5\n        /* \"contracts/ShadowPool.sol\":20530:20550  balAfter - balBefore */\n      tag_419\n      jump\t// in\n    tag_880:\n        /* \"contracts/ShadowPool.sol\":20509:20552  Harvest(msg.sender, (balAfter - balBefore)) */\n      mload(0x40)\n      tag_881\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_881:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowPool.sol\":20325:20564  if (pendingShdw > 0) {\r... */\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":20201:20571  function harvest() internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":7514:11176  function updateUserShare(address _user) internal {\r... */\n    tag_727:\n        /* \"contracts/ShadowPool.sol\":7598:7613  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":7574:7595  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowPool.sol\":7598:7613  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":7598:7606  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":7598:7613  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ShadowPool.sol\":7628:7639  user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":7628:7643  user.shares > 0 */\n      iszero\n        /* \"contracts/ShadowPool.sol\":7624:11169  if (user.shares > 0) {\r... */\n      tag_650\n      jumpi\n        /* \"contracts/ShadowPool.sol\":7664:7675  user.locked */\n      0x07\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":7660:11158  if (user.locked) {\r... */\n      iszero\n      tag_884\n      jumpi\n        /* \"contracts/ShadowPool.sol\":7789:7810  uint256 currentAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":7859:7863  user */\n      dup2\n        /* \"contracts/ShadowPool.sol\":7859:7880  user.userBoostedShare */\n      0x06\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":7845:7856  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":7829:7833  user */\n      dup4\n        /* \"contracts/ShadowPool.sol\":7829:7840  user.shares */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":7814:7825  balanceOf() */\n      tag_885\n        /* \"contracts/ShadowPool.sol\":7814:7823  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":7814:7825  balanceOf() */\n      jump\t// in\n    tag_885:\n        /* \"contracts/ShadowPool.sol\":7814:7841  balanceOf() * (user.shares) */\n      tag_886\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_886:\n        /* \"contracts/ShadowPool.sol\":7813:7856  (balanceOf() * (user.shares)) / totalShares */\n      tag_887\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_887:\n        /* \"contracts/ShadowPool.sol\":7813:7880  (balanceOf() * (user.shares)) / totalShares - user.userBoostedShare */\n      tag_888\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_888:\n        /* \"contracts/ShadowPool.sol\":7789:7880  uint256 currentAmount = (balanceOf() * (user.shares)) / totalShares - user.userBoostedShare */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":7917:7921  user */\n      dup2\n        /* \"contracts/ShadowPool.sol\":7917:7938  user.userBoostedShare */\n      0x06\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":7899:7913  totalBoostDebt */\n      0x0c\n      0x00\n        /* \"contracts/ShadowPool.sol\":7899:7938  totalBoostDebt -= user.userBoostedShare */\n      dup3\n      dup3\n      sload\n      tag_889\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_889:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":7981:7982  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":7957:7978  user.userBoostedShare */\n      0x06\n      dup4\n      add\n        /* \"contracts/ShadowPool.sol\":7957:7982  user.userBoostedShare = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":8016:8027  user.shares */\n      dup3\n      sload\n        /* \"contracts/ShadowPool.sol\":8001:8012  totalShares */\n      0x07\n        /* \"contracts/ShadowPool.sol\":8001:8027  totalShares -= user.shares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":8016:8027  user.shares */\n      swap2\n      swap3\n        /* \"contracts/ShadowPool.sol\":8001:8012  totalShares */\n      swap1\n      swap2\n        /* \"contracts/ShadowPool.sol\":8001:8027  totalShares -= user.shares */\n      tag_890\n      swap1\n        /* \"contracts/ShadowPool.sol\":8016:8027  user.shares */\n      dup5\n      swap1\n        /* \"contracts/ShadowPool.sol\":8001:8027  totalShares -= user.shares */\n      tag_419\n      jump\t// in\n    tag_890:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":8128:8154  freeOverdueFeeUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":8128:8147  freeOverdueFeeUsers */\n      0x06\n        /* \"contracts/ShadowPool.sol\":8128:8154  freeOverdueFeeUsers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":8127:8154  !freeOverdueFeeUsers[_user] */\n      iszero\n        /* \"contracts/ShadowPool.sol\":8127:8219  !freeOverdueFeeUsers[_user] && ((user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp) */\n      dup1\n      iszero\n      tag_891\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":8203:8218  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":8179:8199  UNLOCK_FREE_DURATION */\n      sload(0x0e)\n        /* \"contracts/ShadowPool.sol\":8160:8164  user */\n      dup4\n        /* \"contracts/ShadowPool.sol\":8160:8176  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":8160:8199  user.lockEndTime + UNLOCK_FREE_DURATION */\n      tag_892\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_892:\n        /* \"contracts/ShadowPool.sol\":8159:8218  (user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp */\n      lt\n        /* \"contracts/ShadowPool.sol\":8127:8219  !freeOverdueFeeUsers[_user] && ((user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp) */\n    tag_891:\n        /* \"contracts/ShadowPool.sol\":8123:8996  if (!freeOverdueFeeUsers[_user] && ((user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp)) {\r... */\n      iszero\n      tag_893\n      jumpi\n        /* \"contracts/ShadowPool.sol\":8244:8262  uint256 earnAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":8281:8285  user */\n      dup3\n        /* \"contracts/ShadowPool.sol\":8281:8298  user.lockedAmount */\n      0x08\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":8265:8278  currentAmount */\n      dup3\n        /* \"contracts/ShadowPool.sol\":8265:8298  currentAmount - user.lockedAmount */\n      tag_894\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_894:\n        /* \"contracts/ShadowPool.sol\":8244:8298  uint256 earnAmount = currentAmount - user.lockedAmount */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":8321:8344  uint256 overdueDuration */\n      0x00\n        /* \"contracts/ShadowPool.sol\":8384:8404  UNLOCK_FREE_DURATION */\n      sload(0x0e)\n        /* \"contracts/ShadowPool.sol\":8365:8369  user */\n      dup5\n        /* \"contracts/ShadowPool.sol\":8365:8381  user.lockEndTime */\n      0x05\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":8347:8362  block.timestamp */\n      timestamp\n        /* \"contracts/ShadowPool.sol\":8347:8381  block.timestamp - user.lockEndTime */\n      tag_895\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_895:\n        /* \"contracts/ShadowPool.sol\":8347:8404  block.timestamp - user.lockEndTime - UNLOCK_FREE_DURATION */\n      tag_896\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_896:\n        /* \"contracts/ShadowPool.sol\":8321:8404  uint256 overdueDuration = block.timestamp - user.lockEndTime - UNLOCK_FREE_DURATION */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":8449:8472  DURATION_FACTOR_OVERDUE */\n      sload(0x11)\n        /* \"contracts/ShadowPool.sol\":8431:8446  overdueDuration */\n      dup2\n        /* \"contracts/ShadowPool.sol\":8431:8472  overdueDuration > DURATION_FACTOR_OVERDUE */\n      gt\n        /* \"contracts/ShadowPool.sol\":8427:8566  if (overdueDuration > DURATION_FACTOR_OVERDUE) {\r... */\n      iszero\n      tag_897\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":8519:8542  DURATION_FACTOR_OVERDUE */\n      sload(0x11)\n        /* \"contracts/ShadowPool.sol\":8427:8566  if (overdueDuration > DURATION_FACTOR_OVERDUE) {\r... */\n    tag_897:\n        /* \"contracts/ShadowPool.sol\":8671:8692  uint256 overdueWeight */\n      0x00\n        /* \"contracts/ShadowPool.sol\":8728:8751  DURATION_FACTOR_OVERDUE */\n      sload(0x11)\n        /* \"contracts/ShadowPool.sol\":8714:8724  overdueFee */\n      sload(0x17)\n        /* \"contracts/ShadowPool.sol\":8696:8711  overdueDuration */\n      dup4\n        /* \"contracts/ShadowPool.sol\":8696:8724  overdueDuration * overdueFee */\n      tag_898\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_898:\n        /* \"contracts/ShadowPool.sol\":8695:8751  (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE */\n      tag_899\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_899:\n        /* \"contracts/ShadowPool.sol\":8671:8751  uint256 overdueWeight = (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":8774:8799  uint256 currentOverdueFee */\n      0x00\n        /* \"contracts/ShadowPool.sol\":2506:2510  1e12 */\n      0xe8d4a51000\n        /* \"contracts/ShadowPool.sol\":8803:8829  earnAmount * overdueWeight */\n      tag_900\n        /* \"contracts/ShadowPool.sol\":8671:8751  uint256 overdueWeight = (overdueDuration * overdueFee) / DURATION_FACTOR_OVERDUE */\n      dup4\n        /* \"contracts/ShadowPool.sol\":8803:8813  earnAmount */\n      dup7\n        /* \"contracts/ShadowPool.sol\":8803:8829  earnAmount * overdueWeight */\n      tag_411\n      jump\t// in\n    tag_900:\n        /* \"contracts/ShadowPool.sol\":8802:8849  (earnAmount * overdueWeight) / PRECISION_FACTOR */\n      tag_901\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_901:\n        /* \"contracts/ShadowPool.sol\":8891:8899  treasury */\n      sload(0x09)\n        /* \"contracts/ShadowPool.sol\":8774:8849  uint256 currentOverdueFee = (earnAmount * overdueWeight) / PRECISION_FACTOR */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":8872:8919  token.safeTransfer(treasury, currentOverdueFee) */\n      tag_902\n      swap1\n        /* \"contracts/ShadowPool.sol\":8891:8899  treasury */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":8872:8877  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":8872:8890  token.safeTransfer */\n      dup2\n      and\n      swap2\n        /* \"contracts/ShadowPool.sol\":8891:8899  treasury */\n      and\n        /* \"contracts/ShadowPool.sol\":8774:8849  uint256 currentOverdueFee = (earnAmount * overdueWeight) / PRECISION_FACTOR */\n      dup4\n        /* \"contracts/ShadowPool.sol\":8872:8890  token.safeTransfer */\n      tag_651\n        /* \"contracts/ShadowPool.sol\":8872:8919  token.safeTransfer(treasury, currentOverdueFee) */\n      jump\t// in\n    tag_902:\n        /* \"contracts/ShadowPool.sol\":8942:8976  currentAmount -= currentOverdueFee */\n      tag_903\n        /* \"contracts/ShadowPool.sol\":8959:8976  currentOverdueFee */\n      dup2\n        /* \"contracts/ShadowPool.sol\":8942:8976  currentAmount -= currentOverdueFee */\n      dup7\n      tag_419\n      jump\t// in\n    tag_903:\n      swap5\n      pop\n        /* \"contracts/ShadowPool.sol\":8123:8996  if (!freeOverdueFeeUsers[_user] && ((user.lockEndTime + UNLOCK_FREE_DURATION) < block.timestamp)) {\r... */\n      pop\n      pop\n      pop\n      pop\n    tag_893:\n        /* \"contracts/ShadowPool.sol\":9064:9076  uint256 pool */\n      0x00\n        /* \"contracts/ShadowPool.sol\":9079:9090  balanceOf() */\n      tag_904\n        /* \"contracts/ShadowPool.sol\":9079:9088  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":9079:9090  balanceOf() */\n      jump\t// in\n    tag_904:\n        /* \"contracts/ShadowPool.sol\":9064:9090  uint256 pool = balanceOf() */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":9109:9130  uint256 currentShares */\n      0x00\n        /* \"contracts/ShadowPool.sol\":9153:9164  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":9168:9169  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":9153:9169  totalShares != 0 */\n      eq\n        /* \"contracts/ShadowPool.sol\":9149:9362  if (totalShares != 0) {\r... */\n      tag_905\n      jumpi\n        /* \"contracts/ShadowPool.sol\":9243:9263  pool - currentAmount */\n      tag_906\n        /* \"contracts/ShadowPool.sol\":9250:9263  currentAmount */\n      dup4\n        /* \"contracts/ShadowPool.sol\":9243:9247  pool */\n      dup4\n        /* \"contracts/ShadowPool.sol\":9243:9263  pool - currentAmount */\n      tag_419\n      jump\t// in\n    tag_906:\n        /* \"contracts/ShadowPool.sol\":9227:9238  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":9211:9238  currentAmount * totalShares */\n      tag_907\n      swap1\n        /* \"contracts/ShadowPool.sol\":9211:9224  currentAmount */\n      dup6\n        /* \"contracts/ShadowPool.sol\":9211:9238  currentAmount * totalShares */\n      tag_411\n      jump\t// in\n    tag_907:\n        /* \"contracts/ShadowPool.sol\":9210:9264  (currentAmount * totalShares) / (pool - currentAmount) */\n      tag_908\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_908:\n        /* \"contracts/ShadowPool.sol\":9194:9264  currentShares = (currentAmount * totalShares) / (pool - currentAmount) */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":9149:9362  if (totalShares != 0) {\r... */\n      jump(tag_909)\n    tag_905:\n      pop\n        /* \"contracts/ShadowPool.sol\":9329:9342  currentAmount */\n      dup2\n        /* \"contracts/ShadowPool.sol\":9149:9362  if (totalShares != 0) {\r... */\n    tag_909:\n        /* \"contracts/ShadowPool.sol\":9380:9407  user.shares = currentShares */\n      dup1\n      dup5\n      sstore\n        /* \"contracts/ShadowPool.sol\":9426:9437  totalShares */\n      0x07\n        /* \"contracts/ShadowPool.sol\":9426:9454  totalShares += currentShares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":9394:9407  currentShares */\n      dup3\n      swap2\n        /* \"contracts/ShadowPool.sol\":9426:9437  totalShares */\n      swap1\n        /* \"contracts/ShadowPool.sol\":9380:9391  user.shares */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":9426:9454  totalShares += currentShares */\n      tag_910\n      swap1\n        /* \"contracts/ShadowPool.sol\":9394:9407  currentShares */\n      dup5\n      swap1\n        /* \"contracts/ShadowPool.sol\":9426:9454  totalShares += currentShares */\n      tag_405\n      jump\t// in\n    tag_910:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":9549:9565  user.lockEndTime */\n      0x05\n      dup5\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":9568:9583  block.timestamp */\n      timestamp\n      gt\n        /* \"contracts/ShadowPool.sol\":9545:9913  if (user.lockEndTime < block.timestamp) {\r... */\n      iszero\n      tag_911\n      jumpi\n        /* \"contracts/ShadowPool.sol\":9608:9619  user.locked */\n      0x07\n      dup5\n      add\n        /* \"contracts/ShadowPool.sol\":9608:9627  user.locked = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":9622:9627  false */\n      0x00\n        /* \"contracts/ShadowPool.sol\":9650:9668  user.lockStartTime */\n      0x04\n      dup6\n      add\n        /* \"contracts/ShadowPool.sol\":9650:9672  user.lockStartTime = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":9695:9711  user.lockEndTime */\n      0x05\n      dup6\n      add\n        /* \"contracts/ShadowPool.sol\":9695:9715  user.lockEndTime = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ShadowPool.sol\":9759:9776  user.lockedAmount */\n      0x08\n      dup6\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":9738:9755  totalLockedAmount */\n      0x0d\n        /* \"contracts/ShadowPool.sol\":9738:9776  totalLockedAmount -= user.lockedAmount */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":9759:9776  user.lockedAmount */\n      swap2\n      swap3\n        /* \"contracts/ShadowPool.sol\":9738:9755  totalLockedAmount */\n      swap1\n      swap2\n        /* \"contracts/ShadowPool.sol\":9738:9776  totalLockedAmount -= user.lockedAmount */\n      tag_912\n      swap1\n        /* \"contracts/ShadowPool.sol\":9759:9776  user.lockedAmount */\n      dup5\n      swap1\n        /* \"contracts/ShadowPool.sol\":9738:9776  totalLockedAmount -= user.lockedAmount */\n      tag_419\n      jump\t// in\n    tag_912:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":9819:9820  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":9799:9816  user.lockedAmount */\n      0x08\n      dup6\n      add\n        /* \"contracts/ShadowPool.sol\":9799:9820  user.lockedAmount = 0 */\n      sstore\n        /* \"contracts/ShadowPool.sol\":9848:9893  Unlock(_user, currentAmount, block.timestamp) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0xf7870c5b224cbc19873599e46ccfc7103934650509b1af0c3ce90138377c2004\n      swap1\n      tag_913\n      swap1\n        /* \"contracts/ShadowPool.sol\":9862:9875  currentAmount */\n      dup7\n      swap1\n        /* \"contracts/ShadowPool.sol\":9877:9892  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/ShadowPool.sol\":9848:9893  Unlock(_user, currentAmount, block.timestamp) */\n      tag_875\n      jump\t// in\n    tag_913:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ShadowPool.sol\":9545:9913  if (user.lockEndTime < block.timestamp) {\r... */\n    tag_911:\n        /* \"contracts/ShadowPool.sol\":7660:11158  if (user.locked) {\r... */\n      pop\n      pop\n      pop\n      jump(tag_650)\n    tag_884:\n        /* \"contracts/ShadowPool.sol\":9939:9969  freePerformanceFeeUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":9939:9962  freePerformanceFeeUsers */\n      0x04\n        /* \"contracts/ShadowPool.sol\":9939:9969  freePerformanceFeeUsers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ShadowPool.sol\":9934:11158  if (!freePerformanceFeeUsers[_user]) {\r... */\n      tag_650\n      jumpi\n        /* \"contracts/ShadowPool.sol\":10037:10056  uint256 totalAmount */\n      0x00\n        /* \"contracts/ShadowPool.sol\":10089:10100  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":10074:10085  balanceOf() */\n      tag_916\n        /* \"contracts/ShadowPool.sol\":10074:10083  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":10074:10085  balanceOf() */\n      jump\t// in\n    tag_916:\n        /* \"contracts/ShadowPool.sol\":10060:10071  user.shares */\n      dup4\n      sload\n        /* \"contracts/ShadowPool.sol\":10060:10085  user.shares * balanceOf() */\n      tag_917\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_917:\n        /* \"contracts/ShadowPool.sol\":10059:10100  (user.shares * balanceOf()) / totalShares */\n      tag_918\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_918:\n        /* \"contracts/ShadowPool.sol\":10037:10100  uint256 totalAmount = (user.shares * balanceOf()) / totalShares */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":10134:10138  user */\n      dup2\n        /* \"contracts/ShadowPool.sol\":10134:10145  user.shares */\n      0x00\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":10119:10130  totalShares */\n      0x07\n      0x00\n        /* \"contracts/ShadowPool.sol\":10119:10145  totalShares -= user.shares */\n      dup3\n      dup3\n      sload\n      tag_919\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_919:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":10178:10179  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":10164:10179  user.shares = 0 */\n      dup1\n      dup4\n      sstore\n        /* \"contracts/ShadowPool.sol\":10233:10258  user.shdwAtLastUserAction */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":10219:10258  totalAmount - user.shdwAtLastUserAction */\n      tag_920\n      swap1\n        /* \"contracts/ShadowPool.sol\":10219:10230  totalAmount */\n      dup4\n        /* \"contracts/ShadowPool.sol\":10219:10258  totalAmount - user.shdwAtLastUserAction */\n      tag_419\n      jump\t// in\n    tag_920:\n        /* \"contracts/ShadowPool.sol\":10295:10309  performanceFee */\n      sload(0x13)\n        /* \"contracts/ShadowPool.sol\":10198:10258  uint256 earnAmount = totalAmount - user.shdwAtLastUserAction */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ShadowPool.sol\":10332:10350  _isContract(_user) */\n      tag_921\n        /* \"contracts/ShadowPool.sol\":10344:10349  _user */\n      dup6\n        /* \"contracts/ShadowPool.sol\":10332:10343  _isContract */\n      tag_424\n        /* \"contracts/ShadowPool.sol\":10332:10350  _isContract(_user) */\n      jump\t// in\n    tag_921:\n        /* \"contracts/ShadowPool.sol\":10328:10427  if (_isContract(_user)) {\r... */\n      iszero\n      tag_922\n      jumpi\n      pop\n        /* \"contracts/ShadowPool.sol\":10385:10407  performanceFeeContract */\n      sload(0x14)\n        /* \"contracts/ShadowPool.sol\":10328:10427  if (_isContract(_user)) {\r... */\n    tag_922:\n        /* \"contracts/ShadowPool.sol\":10445:10474  uint256 currentPerformanceFee */\n      0x00\n        /* \"contracts/ShadowPool.sol\":10502:10507  10000 */\n      0x2710\n        /* \"contracts/ShadowPool.sol\":10478:10498  earnAmount * feeRate */\n      tag_923\n        /* \"contracts/ShadowPool.sol\":10491:10498  feeRate */\n      dup4\n        /* \"contracts/ShadowPool.sol\":10478:10488  earnAmount */\n      dup6\n        /* \"contracts/ShadowPool.sol\":10478:10498  earnAmount * feeRate */\n      tag_411\n      jump\t// in\n    tag_923:\n        /* \"contracts/ShadowPool.sol\":10477:10507  (earnAmount * feeRate) / 10000 */\n      tag_924\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_924:\n        /* \"contracts/ShadowPool.sol\":10445:10507  uint256 currentPerformanceFee = (earnAmount * feeRate) / 10000 */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":10530:10555  currentPerformanceFee > 0 */\n      dup1\n      iszero\n        /* \"contracts/ShadowPool.sol\":10526:10710  if (currentPerformanceFee > 0) {\r... */\n      tag_925\n      jumpi\n        /* \"contracts/ShadowPool.sol\":10599:10607  treasury */\n      sload(0x09)\n        /* \"contracts/ShadowPool.sol\":10580:10631  token.safeTransfer(treasury, currentPerformanceFee) */\n      tag_926\n      swap1\n        /* \"contracts/ShadowPool.sol\":10599:10607  treasury */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":10580:10585  token */\n      immutable(\"0x8d841e129c158ed00fc3618c65b249d82e3b0efc8bcebb06537fd0a18b989353\")\n        /* \"contracts/ShadowPool.sol\":10580:10598  token.safeTransfer */\n      dup2\n      and\n      swap2\n        /* \"contracts/ShadowPool.sol\":10599:10607  treasury */\n      and\n        /* \"contracts/ShadowPool.sol\":10609:10630  currentPerformanceFee */\n      dup4\n        /* \"contracts/ShadowPool.sol\":10580:10598  token.safeTransfer */\n      tag_651\n        /* \"contracts/ShadowPool.sol\":10580:10631  token.safeTransfer(treasury, currentPerformanceFee) */\n      jump\t// in\n    tag_926:\n        /* \"contracts/ShadowPool.sol\":10654:10690  totalAmount -= currentPerformanceFee */\n      tag_927\n        /* \"contracts/ShadowPool.sol\":10669:10690  currentPerformanceFee */\n      dup2\n        /* \"contracts/ShadowPool.sol\":10654:10690  totalAmount -= currentPerformanceFee */\n      dup6\n      tag_419\n      jump\t// in\n    tag_927:\n      swap4\n      pop\n        /* \"contracts/ShadowPool.sol\":10526:10710  if (currentPerformanceFee > 0) {\r... */\n    tag_925:\n        /* \"contracts/ShadowPool.sol\":10778:10790  uint256 pool */\n      0x00\n        /* \"contracts/ShadowPool.sol\":10793:10804  balanceOf() */\n      tag_928\n        /* \"contracts/ShadowPool.sol\":10793:10802  balanceOf */\n      tag_214\n        /* \"contracts/ShadowPool.sol\":10793:10804  balanceOf() */\n      jump\t// in\n    tag_928:\n        /* \"contracts/ShadowPool.sol\":10778:10804  uint256 pool = balanceOf() */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":10823:10840  uint256 newShares */\n      0x00\n        /* \"contracts/ShadowPool.sol\":10863:10874  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":10878:10879  0 */\n      0x00\n        /* \"contracts/ShadowPool.sol\":10863:10879  totalShares != 0 */\n      eq\n        /* \"contracts/ShadowPool.sol\":10859:11058  if (totalShares != 0) {\r... */\n      tag_929\n      jumpi\n        /* \"contracts/ShadowPool.sol\":10947:10965  pool - totalAmount */\n      tag_930\n        /* \"contracts/ShadowPool.sol\":10954:10965  totalAmount */\n      dup7\n        /* \"contracts/ShadowPool.sol\":10947:10951  pool */\n      dup4\n        /* \"contracts/ShadowPool.sol\":10947:10965  pool - totalAmount */\n      tag_419\n      jump\t// in\n    tag_930:\n        /* \"contracts/ShadowPool.sol\":10931:10942  totalShares */\n      sload(0x07)\n        /* \"contracts/ShadowPool.sol\":10917:10942  totalAmount * totalShares */\n      tag_931\n      swap1\n        /* \"contracts/ShadowPool.sol\":10917:10928  totalAmount */\n      dup9\n        /* \"contracts/ShadowPool.sol\":10917:10942  totalAmount * totalShares */\n      tag_411\n      jump\t// in\n    tag_931:\n        /* \"contracts/ShadowPool.sol\":10916:10966  (totalAmount * totalShares) / (pool - totalAmount) */\n      tag_932\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_932:\n        /* \"contracts/ShadowPool.sol\":10904:10966  newShares = (totalAmount * totalShares) / (pool - totalAmount) */\n      swap1\n      pop\n        /* \"contracts/ShadowPool.sol\":10859:11058  if (totalShares != 0) {\r... */\n      jump(tag_933)\n    tag_929:\n      pop\n        /* \"contracts/ShadowPool.sol\":11027:11038  totalAmount */\n      dup5\n        /* \"contracts/ShadowPool.sol\":10859:11058  if (totalShares != 0) {\r... */\n    tag_933:\n        /* \"contracts/ShadowPool.sol\":11076:11099  user.shares = newShares */\n      dup1\n      dup8\n      sstore\n        /* \"contracts/ShadowPool.sol\":11118:11129  totalShares */\n      0x07\n        /* \"contracts/ShadowPool.sol\":11118:11142  totalShares += newShares */\n      dup1\n      sload\n        /* \"contracts/ShadowPool.sol\":11090:11099  newShares */\n      dup3\n      swap2\n        /* \"contracts/ShadowPool.sol\":11118:11129  totalShares */\n      swap1\n        /* \"contracts/ShadowPool.sol\":11076:11087  user.shares */\n      0x00\n      swap1\n        /* \"contracts/ShadowPool.sol\":11118:11142  totalShares += newShares */\n      tag_934\n      swap1\n        /* \"contracts/ShadowPool.sol\":11090:11099  newShares */\n      dup5\n      swap1\n        /* \"contracts/ShadowPool.sol\":11118:11142  totalShares += newShares */\n      tag_405\n      jump\t// in\n    tag_934:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":7514:11176  function updateUserShare(address _user) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ShadowPool.sol\":6895:7381  function updateBoostContractInfo(address _user) internal {\r... */\n    tag_758:\n        /* \"contracts/ShadowPool.sol\":6967:6980  boostContract */\n      sload(0x01)\n        /* \"contracts/ShadowPool.sol\":6967:6994  boostContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ShadowPool.sol\":6967:6980  boostContract */\n      and\n        /* \"contracts/ShadowPool.sol\":6967:6994  boostContract != address(0) */\n      iszero\n        /* \"contracts/ShadowPool.sol\":6963:7374  if (boostContract != address(0)) {\r... */\n      tag_435\n      jumpi\n        /* \"contracts/ShadowPool.sol\":7035:7050  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/ShadowPool.sol\":7011:7032  UserInfo storage user */\n      0x00\n        /* \"contracts/ShadowPool.sol\":7035:7050  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":7035:7043  userInfo */\n      0x03\n        /* \"contracts/ShadowPool.sol\":7035:7050  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ShadowPool.sol\":7107:7125  user.lockStartTime */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":7088:7104  user.lockEndTime */\n      0x05\n      dup3\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":7035:7050  userInfo[_user] */\n      swap2\n      swap3\n        /* \"contracts/ShadowPool.sol\":7011:7032  UserInfo storage user */\n      swap2\n        /* \"contracts/ShadowPool.sol\":7088:7125  user.lockEndTime - user.lockStartTime */\n      tag_937\n      swap2\n        /* \"contracts/ShadowPool.sol\":7107:7125  user.lockStartTime */\n      swap1\n        /* \"contracts/ShadowPool.sol\":7088:7125  user.lockEndTime - user.lockStartTime */\n      tag_419\n      jump\t// in\n    tag_937:\n        /* \"contracts/ShadowPool.sol\":7155:7168  boostContract */\n      sload(0x01)\n        /* \"contracts/ShadowPool.sol\":7229:7246  user.lockedAmount */\n      0x08\n      dup5\n      add\n      sload\n        /* \"contracts/ShadowPool.sol\":7296:7313  totalLockedAmount */\n      sload(0x0d)\n        /* \"contracts/ShadowPool.sol\":7332:7347  DURATION_FACTOR */\n      sload(0x10)\n        /* \"contracts/ShadowPool.sol\":7140:7362  IBoostContract(boostContract).onShdwPoolUpdate(\r... */\n      mload(0x40)\n      0x87356ef700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ShadowPool.sol\":7065:7125  uint256 lockDuration = user.lockEndTime - user.lockStartTime */\n      swap5\n      swap6\n      pop\n        /* \"contracts/ShadowPool.sol\":7155:7168  boostContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap4\n      and\n      swap4\n        /* \"contracts/ShadowPool.sol\":7140:7186  IBoostContract(boostContract).onShdwPoolUpdate */\n      0x87356ef7\n      swap4\n        /* \"contracts/ShadowPool.sol\":7140:7362  IBoostContract(boostContract).onShdwPoolUpdate(\r... */\n      tag_938\n      swap4\n        /* \"contracts/ShadowPool.sol\":7205:7210  _user */\n      dup10\n      swap4\n        /* \"contracts/ShadowPool.sol\":7229:7246  user.lockedAmount */\n      swap1\n      swap3\n        /* \"contracts/ShadowPool.sol\":7065:7125  uint256 lockDuration = user.lockEndTime - user.lockStartTime */\n      dup9\n      swap3\n        /* \"contracts/ShadowPool.sol\":7332:7347  DURATION_FACTOR */\n      swap1\n        /* \"contracts/ShadowPool.sol\":7140:7362  IBoostContract(boostContract).onShdwPoolUpdate(\r... */\n      0x04\n      add\n      tag_939\n      jump\t// in\n    tag_938:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_940\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_940:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_942\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_942:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":6963:7374  if (boostContract != address(0)) {\r... */\n      pop\n      pop\n        /* \"contracts/ShadowPool.sol\":6895:7381  function updateBoostContractInfo(address _user) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_860:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_944\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_945\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_944:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_943:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_945:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_947\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_949\n      jump\t// in\n    tag_947:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_950\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_951\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_950:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_952\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_954\n      jump\t// in\n    tag_952:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_955\n      swap2\n      swap1\n      tag_956\n      jump\t// in\n    tag_955:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_959\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_958)\n    tag_959:\n      0x60\n      swap2\n      pop\n    tag_958:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_960\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_961\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_960:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_951:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_961:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_964\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_943)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_964:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_966\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8069:8214  {... */\n    tag_966:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_969\n      jump\t// in\n        /* \"#utility.yul\":14:273   */\n    tag_122:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_972\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_972:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:243   */\n      tag_943\n        /* \"#utility.yul\":237:242   */\n      dup2\n        /* \"#utility.yul\":210:243   */\n      tag_974\n      jump\t// in\n        /* \"#utility.yul\":278:674   */\n    tag_168:\n      0x00\n      dup1\n        /* \"#utility.yul\":404:406   */\n      0x40\n        /* \"#utility.yul\":392:401   */\n      dup4\n        /* \"#utility.yul\":383:390   */\n      dup6\n        /* \"#utility.yul\":379:402   */\n      sub\n        /* \"#utility.yul\":375:407   */\n      slt\n        /* \"#utility.yul\":372:374   */\n      iszero\n      tag_976\n      jumpi\n        /* \"#utility.yul\":425:431   */\n      dup1\n        /* \"#utility.yul\":417:423   */\n      dup2\n        /* \"#utility.yul\":410:432   */\n      revert\n        /* \"#utility.yul\":372:374   */\n    tag_976:\n        /* \"#utility.yul\":469:478   */\n      dup3\n        /* \"#utility.yul\":456:479   */\n      calldataload\n        /* \"#utility.yul\":488:521   */\n      tag_977\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":488:521   */\n      tag_974\n      jump\t// in\n    tag_977:\n        /* \"#utility.yul\":540:545   */\n      swap2\n      pop\n        /* \"#utility.yul\":597:599   */\n      0x20\n        /* \"#utility.yul\":582:600   */\n      dup4\n      add\n        /* \"#utility.yul\":569:601   */\n      calldataload\n        /* \"#utility.yul\":610:642   */\n      tag_978\n        /* \"#utility.yul\":569:601   */\n      dup2\n        /* \"#utility.yul\":610:642   */\n      tag_979\n      jump\t// in\n    tag_978:\n        /* \"#utility.yul\":661:668   */\n      dup1\n        /* \"#utility.yul\":651:668   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":362:674   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":679:1006   */\n    tag_138:\n      0x00\n      dup1\n        /* \"#utility.yul\":808:810   */\n      0x40\n        /* \"#utility.yul\":796:805   */\n      dup4\n        /* \"#utility.yul\":787:794   */\n      dup6\n        /* \"#utility.yul\":783:806   */\n      sub\n        /* \"#utility.yul\":779:811   */\n      slt\n        /* \"#utility.yul\":776:778   */\n      iszero\n      tag_981\n      jumpi\n        /* \"#utility.yul\":829:835   */\n      dup2\n        /* \"#utility.yul\":821:827   */\n      dup3\n        /* \"#utility.yul\":814:836   */\n      revert\n        /* \"#utility.yul\":776:778   */\n    tag_981:\n        /* \"#utility.yul\":873:882   */\n      dup3\n        /* \"#utility.yul\":860:883   */\n      calldataload\n        /* \"#utility.yul\":892:925   */\n      tag_982\n        /* \"#utility.yul\":919:924   */\n      dup2\n        /* \"#utility.yul\":892:925   */\n      tag_974\n      jump\t// in\n    tag_982:\n        /* \"#utility.yul\":944:949   */\n      swap5\n        /* \"#utility.yul\":996:998   */\n      0x20\n        /* \"#utility.yul\":981:999   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":766:1006   */\n      jump\t// out\n        /* \"#utility.yul\":1011:1268   */\n    tag_387:\n      0x00\n        /* \"#utility.yul\":1131:1133   */\n      0x20\n        /* \"#utility.yul\":1119:1128   */\n      dup3\n        /* \"#utility.yul\":1110:1117   */\n      dup5\n        /* \"#utility.yul\":1106:1129   */\n      sub\n        /* \"#utility.yul\":1102:1134   */\n      slt\n        /* \"#utility.yul\":1099:1101   */\n      iszero\n      tag_984\n      jumpi\n        /* \"#utility.yul\":1152:1158   */\n      dup1\n        /* \"#utility.yul\":1144:1150   */\n      dup2\n        /* \"#utility.yul\":1137:1159   */\n      revert\n        /* \"#utility.yul\":1099:1101   */\n    tag_984:\n        /* \"#utility.yul\":1189:1198   */\n      dup2\n        /* \"#utility.yul\":1183:1199   */\n      mload\n        /* \"#utility.yul\":1208:1238   */\n      tag_943\n        /* \"#utility.yul\":1232:1237   */\n      dup2\n        /* \"#utility.yul\":1208:1238   */\n      tag_979\n      jump\t// in\n        /* \"#utility.yul\":1551:1741   */\n    tag_115:\n      0x00\n        /* \"#utility.yul\":1663:1665   */\n      0x20\n        /* \"#utility.yul\":1651:1660   */\n      dup3\n        /* \"#utility.yul\":1642:1649   */\n      dup5\n        /* \"#utility.yul\":1638:1661   */\n      sub\n        /* \"#utility.yul\":1634:1666   */\n      slt\n        /* \"#utility.yul\":1631:1633   */\n      iszero\n      tag_990\n      jumpi\n        /* \"#utility.yul\":1684:1690   */\n      dup1\n        /* \"#utility.yul\":1676:1682   */\n      dup2\n        /* \"#utility.yul\":1669:1691   */\n      revert\n        /* \"#utility.yul\":1631:1633   */\n    tag_990:\n      pop\n        /* \"#utility.yul\":1712:1735   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1621:1741   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1746:1940   */\n    tag_375:\n      0x00\n        /* \"#utility.yul\":1869:1871   */\n      0x20\n        /* \"#utility.yul\":1857:1866   */\n      dup3\n        /* \"#utility.yul\":1848:1855   */\n      dup5\n        /* \"#utility.yul\":1844:1867   */\n      sub\n        /* \"#utility.yul\":1840:1872   */\n      slt\n        /* \"#utility.yul\":1837:1839   */\n      iszero\n      tag_992\n      jumpi\n        /* \"#utility.yul\":1890:1896   */\n      dup1\n        /* \"#utility.yul\":1882:1888   */\n      dup2\n        /* \"#utility.yul\":1875:1897   */\n      revert\n        /* \"#utility.yul\":1837:1839   */\n    tag_992:\n      pop\n        /* \"#utility.yul\":1918:1934   */\n      mload\n      swap2\n        /* \"#utility.yul\":1827:1940   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1945:2203   */\n    tag_316:\n      0x00\n      dup1\n        /* \"#utility.yul\":2074:2076   */\n      0x40\n        /* \"#utility.yul\":2062:2071   */\n      dup4\n        /* \"#utility.yul\":2053:2060   */\n      dup6\n        /* \"#utility.yul\":2049:2072   */\n      sub\n        /* \"#utility.yul\":2045:2077   */\n      slt\n        /* \"#utility.yul\":2042:2044   */\n      iszero\n      tag_994\n      jumpi\n        /* \"#utility.yul\":2095:2101   */\n      dup2\n        /* \"#utility.yul\":2087:2093   */\n      dup3\n        /* \"#utility.yul\":2080:2102   */\n      revert\n        /* \"#utility.yul\":2042:2044   */\n    tag_994:\n      pop\n      pop\n        /* \"#utility.yul\":2123:2146   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2193:2195   */\n      0x20\n        /* \"#utility.yul\":2178:2196   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2165:2197   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2032:2203   */\n      jump\t// out\n        /* \"#utility.yul\":2208:2482   */\n    tag_956:\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup3\n        /* \"#utility.yul\":2369:2382   */\n      mload\n        /* \"#utility.yul\":2391:2444   */\n      tag_996\n        /* \"#utility.yul\":2437:2443   */\n      dup2\n        /* \"#utility.yul\":2432:2435   */\n      dup5\n        /* \"#utility.yul\":2425:2429   */\n      0x20\n        /* \"#utility.yul\":2417:2423   */\n      dup8\n        /* \"#utility.yul\":2413:2430   */\n      add\n        /* \"#utility.yul\":2391:2444   */\n      tag_997\n      jump\t// in\n    tag_996:\n        /* \"#utility.yul\":2460:2476   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2345:2482   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2487:2713   */\n    tag_188:\n        /* \"#utility.yul\":2663:2705   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2651:2706   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2633:2707   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2621:2623   */\n      0x20\n        /* \"#utility.yul\":2606:2624   */\n      add\n      swap1\n        /* \"#utility.yul\":2588:2713   */\n      jump\t// out\n        /* \"#utility.yul\":2718:3116   */\n    tag_698:\n        /* \"#utility.yul\":2930:2972   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2999:3014   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":2981:3015   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3051:3066   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3046:3048   */\n      0x20\n        /* \"#utility.yul\":3031:3049   */\n      dup3\n      add\n        /* \"#utility.yul\":3024:3067   */\n      mstore\n        /* \"#utility.yul\":3098:3100   */\n      0x40\n        /* \"#utility.yul\":3083:3101   */\n      dup2\n      add\n        /* \"#utility.yul\":3076:3110   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2908:2910   */\n      0x60\n        /* \"#utility.yul\":2893:2911   */\n      add\n      swap1\n        /* \"#utility.yul\":2875:3116   */\n      jump\t// out\n        /* \"#utility.yul\":3121:3418   */\n    tag_382:\n        /* \"#utility.yul\":3325:3367   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3313:3368   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3295:3369   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3400:3402   */\n      0x20\n        /* \"#utility.yul\":3385:3403   */\n      dup3\n      add\n        /* \"#utility.yul\":3378:3412   */\n      mstore\n        /* \"#utility.yul\":3283:3285   */\n      0x40\n        /* \"#utility.yul\":3268:3286   */\n      add\n      swap1\n        /* \"#utility.yul\":3250:3418   */\n      jump\t// out\n        /* \"#utility.yul\":3423:3791   */\n    tag_780:\n        /* \"#utility.yul\":3655:3697   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3643:3698   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3625:3699   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3730:3732   */\n      0x20\n        /* \"#utility.yul\":3715:3733   */\n      dup4\n      add\n        /* \"#utility.yul\":3708:3742   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3773:3775   */\n      0x40\n        /* \"#utility.yul\":3758:3776   */\n      dup3\n      add\n        /* \"#utility.yul\":3751:3785   */\n      mstore\n        /* \"#utility.yul\":3613:3615   */\n      0x60\n        /* \"#utility.yul\":3598:3616   */\n      add\n      swap1\n        /* \"#utility.yul\":3580:3791   */\n      jump\t// out\n        /* \"#utility.yul\":3796:4308   */\n    tag_939:\n        /* \"#utility.yul\":4085:4127   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4073:4128   */\n      swap6\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":4055:4129   */\n      dup6\n      mstore\n        /* \"#utility.yul\":4160:4162   */\n      0x20\n        /* \"#utility.yul\":4145:4163   */\n      dup6\n      add\n        /* \"#utility.yul\":4138:4172   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":4203:4205   */\n      0x40\n        /* \"#utility.yul\":4188:4206   */\n      dup5\n      add\n        /* \"#utility.yul\":4181:4215   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4246:4248   */\n      0x60\n        /* \"#utility.yul\":4231:4249   */\n      dup4\n      add\n        /* \"#utility.yul\":4224:4258   */\n      mstore\n        /* \"#utility.yul\":4289:4292   */\n      0x80\n        /* \"#utility.yul\":4274:4293   */\n      dup3\n      add\n        /* \"#utility.yul\":4267:4302   */\n      mstore\n        /* \"#utility.yul\":4042:4045   */\n      0xa0\n        /* \"#utility.yul\":4027:4046   */\n      add\n      swap1\n        /* \"#utility.yul\":4009:4308   */\n      jump\t// out\n        /* \"#utility.yul\":4313:4500   */\n    tag_165:\n        /* \"#utility.yul\":4478:4492   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4471:4493   */\n      iszero\n        /* \"#utility.yul\":4453:4494   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4441:4443   */\n      0x20\n        /* \"#utility.yul\":4426:4444   */\n      add\n      swap1\n        /* \"#utility.yul\":4408:4500   */\n      jump\t// out\n        /* \"#utility.yul\":5003:5445   */\n    tag_969:\n      0x00\n        /* \"#utility.yul\":5152:5154   */\n      0x20\n        /* \"#utility.yul\":5141:5150   */\n      dup3\n        /* \"#utility.yul\":5134:5155   */\n      mstore\n        /* \"#utility.yul\":5184:5190   */\n      dup3\n        /* \"#utility.yul\":5178:5191   */\n      mload\n        /* \"#utility.yul\":5227:5233   */\n      dup1\n        /* \"#utility.yul\":5222:5224   */\n      0x20\n        /* \"#utility.yul\":5211:5220   */\n      dup5\n        /* \"#utility.yul\":5207:5225   */\n      add\n        /* \"#utility.yul\":5200:5234   */\n      mstore\n        /* \"#utility.yul\":5243:5309   */\n      tag_1007\n        /* \"#utility.yul\":5302:5308   */\n      dup2\n        /* \"#utility.yul\":5297:5299   */\n      0x40\n        /* \"#utility.yul\":5286:5295   */\n      dup6\n        /* \"#utility.yul\":5282:5300   */\n      add\n        /* \"#utility.yul\":5277:5279   */\n      0x20\n        /* \"#utility.yul\":5269:5275   */\n      dup8\n        /* \"#utility.yul\":5265:5280   */\n      add\n        /* \"#utility.yul\":5243:5309   */\n      tag_997\n      jump\t// in\n    tag_1007:\n        /* \"#utility.yul\":5361:5363   */\n      0x1f\n        /* \"#utility.yul\":5349:5364   */\n      add\n        /* \"#utility.yul\":5366:5432   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":5345:5433   */\n      and\n        /* \"#utility.yul\":5330:5434   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5436:5438   */\n      0x40\n        /* \"#utility.yul\":5326:5439   */\n      add\n      swap3\n        /* \"#utility.yul\":5124:5445   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5450:5792   */\n    tag_665:\n        /* \"#utility.yul\":5652:5654   */\n      0x20\n        /* \"#utility.yul\":5634:5655   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5691:5693   */\n      0x12\n        /* \"#utility.yul\":5671:5689   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5664:5694   */\n      mstore\n        /* \"#utility.yul\":5730:5750   */\n      0x4e6f7468696e6720746f206465706f7369740000000000000000000000000000\n        /* \"#utility.yul\":5725:5727   */\n      0x40\n        /* \"#utility.yul\":5710:5728   */\n      dup3\n      add\n        /* \"#utility.yul\":5703:5751   */\n      mstore\n        /* \"#utility.yul\":5783:5785   */\n      0x60\n        /* \"#utility.yul\":5768:5786   */\n      add\n      swap1\n        /* \"#utility.yul\":5624:5792   */\n      jump\t// out\n        /* \"#utility.yul\":5797:6141   */\n    tag_842:\n        /* \"#utility.yul\":5999:6001   */\n      0x20\n        /* \"#utility.yul\":5981:6002   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6038:6040   */\n      0x14\n        /* \"#utility.yul\":6018:6036   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6011:6041   */\n      mstore\n        /* \"#utility.yul\":6077:6099   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":6072:6074   */\n      0x40\n        /* \"#utility.yul\":6057:6075   */\n      dup3\n      add\n        /* \"#utility.yul\":6050:6100   */\n      mstore\n        /* \"#utility.yul\":6132:6134   */\n      0x60\n        /* \"#utility.yul\":6117:6135   */\n      add\n      swap1\n        /* \"#utility.yul\":5971:6141   */\n      jump\t// out\n        /* \"#utility.yul\":6146:6489   */\n    tag_434:\n        /* \"#utility.yul\":6348:6350   */\n      0x20\n        /* \"#utility.yul\":6330:6351   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6387:6389   */\n      0x13\n        /* \"#utility.yul\":6367:6385   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6360:6390   */\n      mstore\n        /* \"#utility.yul\":6426:6447   */\n      0x4e6f7468696e6720746f20776974686472617700000000000000000000000000\n        /* \"#utility.yul\":6421:6423   */\n      0x40\n        /* \"#utility.yul\":6406:6424   */\n      dup3\n      add\n        /* \"#utility.yul\":6399:6448   */\n      mstore\n        /* \"#utility.yul\":6480:6482   */\n      0x60\n        /* \"#utility.yul\":6465:6483   */\n      add\n      swap1\n        /* \"#utility.yul\":6320:6489   */\n      jump\t// out\n        /* \"#utility.yul\":6494:6896   */\n    tag_678:\n        /* \"#utility.yul\":6696:6698   */\n      0x20\n        /* \"#utility.yul\":6678:6699   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6735:6737   */\n      0x26\n        /* \"#utility.yul\":6715:6733   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6708:6738   */\n      mstore\n        /* \"#utility.yul\":6774:6808   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6769:6771   */\n      0x40\n        /* \"#utility.yul\":6754:6772   */\n      dup3\n      add\n        /* \"#utility.yul\":6747:6809   */\n      mstore\n        /* \"#utility.yul\":6845:6853   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6840:6842   */\n      0x60\n        /* \"#utility.yul\":6825:6843   */\n      dup3\n      add\n        /* \"#utility.yul\":6818:6854   */\n      mstore\n        /* \"#utility.yul\":6886:6889   */\n      0x80\n        /* \"#utility.yul\":6871:6890   */\n      add\n      swap1\n        /* \"#utility.yul\":6668:6896   */\n      jump\t// out\n        /* \"#utility.yul\":6901:7255   */\n    tag_581:\n        /* \"#utility.yul\":7103:7105   */\n      0x20\n        /* \"#utility.yul\":7085:7106   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7142:7144   */\n      0x1e\n        /* \"#utility.yul\":7122:7140   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7115:7145   */\n      mstore\n        /* \"#utility.yul\":7181:7213   */\n      0x4455524154494f4e5f464143544f522063616e6e6f74206265207a65726f0000\n        /* \"#utility.yul\":7176:7178   */\n      0x40\n        /* \"#utility.yul\":7161:7179   */\n      dup3\n      add\n        /* \"#utility.yul\":7154:7214   */\n      mstore\n        /* \"#utility.yul\":7246:7248   */\n      0x60\n        /* \"#utility.yul\":7231:7249   */\n      add\n      swap1\n        /* \"#utility.yul\":7075:7255   */\n      jump\t// out\n        /* \"#utility.yul\":7260:7597   */\n    tag_716:\n        /* \"#utility.yul\":7462:7464   */\n      0x20\n        /* \"#utility.yul\":7444:7465   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7501:7503   */\n      0x0d\n        /* \"#utility.yul\":7481:7499   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7474:7504   */\n      mstore\n        /* \"#utility.yul\":7540:7555   */\n      0x5374696c6c20696e206c6f636b00000000000000000000000000000000000000\n        /* \"#utility.yul\":7535:7537   */\n      0x40\n        /* \"#utility.yul\":7520:7538   */\n      dup3\n      add\n        /* \"#utility.yul\":7513:7556   */\n      mstore\n        /* \"#utility.yul\":7588:7590   */\n      0x60\n        /* \"#utility.yul\":7573:7591   */\n      add\n      swap1\n        /* \"#utility.yul\":7434:7597   */\n      jump\t// out\n        /* \"#utility.yul\":7602:8017   */\n    tag_553:\n        /* \"#utility.yul\":7804:7806   */\n      0x20\n        /* \"#utility.yul\":7786:7807   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7843:7845   */\n      0x33\n        /* \"#utility.yul\":7823:7841   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7816:7846   */\n      mstore\n        /* \"#utility.yul\":7882:7916   */\n      0x424f4f53545f5745494748542063616e6e6f74206265206d6f7265207468616e\n        /* \"#utility.yul\":7877:7879   */\n      0x40\n        /* \"#utility.yul\":7862:7880   */\n      dup3\n      add\n        /* \"#utility.yul\":7855:7917   */\n      mstore\n        /* \"#utility.yul\":7953:7974   */\n      0x20424f4f53545f5745494748545f4c494d495400000000000000000000000000\n        /* \"#utility.yul\":7948:7950   */\n      0x60\n        /* \"#utility.yul\":7933:7951   */\n      dup3\n      add\n        /* \"#utility.yul\":7926:7975   */\n      mstore\n        /* \"#utility.yul\":8007:8010   */\n      0x80\n        /* \"#utility.yul\":7992:8011   */\n      add\n      swap1\n        /* \"#utility.yul\":7776:8017   */\n      jump\t// out\n        /* \"#utility.yul\":8022:8367   */\n    tag_378:\n        /* \"#utility.yul\":8224:8226   */\n      0x20\n        /* \"#utility.yul\":8206:8227   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8263:8265   */\n      0x15\n        /* \"#utility.yul\":8243:8261   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8236:8266   */\n      mstore\n        /* \"#utility.yul\":8302:8325   */\n      0x42616c616e6365206d7573742065786365656420300000000000000000000000\n        /* \"#utility.yul\":8297:8299   */\n      0x40\n        /* \"#utility.yul\":8282:8300   */\n      dup3\n      add\n        /* \"#utility.yul\":8275:8326   */\n      mstore\n        /* \"#utility.yul\":8358:8360   */\n      0x60\n        /* \"#utility.yul\":8343:8361   */\n      add\n      swap1\n        /* \"#utility.yul\":8196:8367   */\n      jump\t// out\n        /* \"#utility.yul\":8372:8773   */\n    tag_644:\n        /* \"#utility.yul\":8574:8576   */\n      0x20\n        /* \"#utility.yul\":8556:8577   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8613:8615   */\n      0x25\n        /* \"#utility.yul\":8593:8611   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8586:8616   */\n      mstore\n        /* \"#utility.yul\":8652:8686   */\n      0x546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420\n        /* \"#utility.yul\":8647:8649   */\n      0x40\n        /* \"#utility.yul\":8632:8650   */\n      dup3\n      add\n        /* \"#utility.yul\":8625:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8730   */\n      0x746f6b656e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8718:8720   */\n      0x60\n        /* \"#utility.yul\":8703:8721   */\n      dup3\n      add\n        /* \"#utility.yul\":8696:8731   */\n      mstore\n        /* \"#utility.yul\":8763:8766   */\n      0x80\n        /* \"#utility.yul\":8748:8767   */\n      add\n      swap1\n        /* \"#utility.yul\":8546:8773   */\n      jump\t// out\n        /* \"#utility.yul\":8778:9133   */\n    tag_713:\n        /* \"#utility.yul\":8980:8982   */\n      0x20\n        /* \"#utility.yul\":8962:8983   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9019:9021   */\n      0x1f\n        /* \"#utility.yul\":8999:9017   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8992:9022   */\n      mstore\n        /* \"#utility.yul\":9058:9091   */\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n        /* \"#utility.yul\":9053:9055   */\n      0x40\n        /* \"#utility.yul\":9038:9056   */\n      dup3\n      add\n        /* \"#utility.yul\":9031:9092   */\n      mstore\n        /* \"#utility.yul\":9124:9126   */\n      0x60\n        /* \"#utility.yul\":9109:9127   */\n      add\n      swap1\n        /* \"#utility.yul\":8952:9133   */\n      jump\t// out\n        /* \"#utility.yul\":9138:9490   */\n    tag_777:\n        /* \"#utility.yul\":9340:9342   */\n      0x20\n        /* \"#utility.yul\":9322:9343   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9379:9381   */\n      0x1c\n        /* \"#utility.yul\":9359:9377   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9352:9382   */\n      mstore\n        /* \"#utility.yul\":9418:9448   */\n      0x4d6178696d756d206c6f636b20706572696f6420657863656564656400000000\n        /* \"#utility.yul\":9413:9415   */\n      0x40\n        /* \"#utility.yul\":9398:9416   */\n      dup3\n      add\n        /* \"#utility.yul\":9391:9449   */\n      mstore\n        /* \"#utility.yul\":9481:9483   */\n      0x60\n        /* \"#utility.yul\":9466:9484   */\n      add\n      swap1\n        /* \"#utility.yul\":9312:9490   */\n      jump\t// out\n        /* \"#utility.yul\":9495:9845   */\n    tag_441:\n        /* \"#utility.yul\":9697:9699   */\n      0x20\n        /* \"#utility.yul\":9679:9700   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9736:9738   */\n      0x1a\n        /* \"#utility.yul\":9716:9734   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9709:9739   */\n      mstore\n        /* \"#utility.yul\":9775:9803   */\n      0x4e6f74206f70657261746f72206f722053686477206f776e6572000000000000\n        /* \"#utility.yul\":9770:9772   */\n      0x40\n        /* \"#utility.yul\":9755:9773   */\n      dup3\n      add\n        /* \"#utility.yul\":9748:9804   */\n      mstore\n        /* \"#utility.yul\":9836:9838   */\n      0x60\n        /* \"#utility.yul\":9821:9839   */\n      add\n      swap1\n        /* \"#utility.yul\":9669:9845   */\n      jump\t// out\n        /* \"#utility.yul\":9850:10205   */\n    tag_774:\n        /* \"#utility.yul\":10052:10054   */\n      0x20\n        /* \"#utility.yul\":10034:10055   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10091:10093   */\n      0x1f\n        /* \"#utility.yul\":10071:10089   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10064:10094   */\n      mstore\n        /* \"#utility.yul\":10130:10163   */\n      0x4d696e696d756d206c6f636b20706572696f64206973206f6e65207765656b00\n        /* \"#utility.yul\":10125:10127   */\n      0x40\n        /* \"#utility.yul\":10110:10128   */\n      dup3\n      add\n        /* \"#utility.yul\":10103:10164   */\n      mstore\n        /* \"#utility.yul\":10196:10198   */\n      0x60\n        /* \"#utility.yul\":10181:10199   */\n      add\n      swap1\n        /* \"#utility.yul\":10024:10205   */\n      jump\t// out\n        /* \"#utility.yul\":10210:10612   */\n    tag_949:\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10394:10415   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10451:10453   */\n      0x26\n        /* \"#utility.yul\":10431:10449   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10424:10454   */\n      mstore\n        /* \"#utility.yul\":10490:10524   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":10485:10487   */\n      0x40\n        /* \"#utility.yul\":10470:10488   */\n      dup3\n      add\n        /* \"#utility.yul\":10463:10525   */\n      mstore\n        /* \"#utility.yul\":10561:10569   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10556:10558   */\n      0x60\n        /* \"#utility.yul\":10541:10559   */\n      dup3\n      add\n        /* \"#utility.yul\":10534:10570   */\n      mstore\n        /* \"#utility.yul\":10602:10605   */\n      0x80\n        /* \"#utility.yul\":10587:10606   */\n      add\n      swap1\n        /* \"#utility.yul\":10384:10612   */\n      jump\t// out\n        /* \"#utility.yul\":10617:11035   */\n    tag_514:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10801:10822   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10858:10860   */\n      0x36\n        /* \"#utility.yul\":10838:10856   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10831:10861   */\n      mstore\n        /* \"#utility.yul\":10897:10931   */\n      0x706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468\n        /* \"#utility.yul\":10892:10894   */\n      0x40\n        /* \"#utility.yul\":10877:10895   */\n      dup3\n      add\n        /* \"#utility.yul\":10870:10932   */\n      mstore\n        /* \"#utility.yul\":10968:10992   */\n      0x616e204d41585f504552464f524d414e43455f46454500000000000000000000\n        /* \"#utility.yul\":10963:10965   */\n      0x60\n        /* \"#utility.yul\":10948:10966   */\n      dup3\n      add\n        /* \"#utility.yul\":10941:10993   */\n      mstore\n        /* \"#utility.yul\":11025:11028   */\n      0x80\n        /* \"#utility.yul\":11010:11029   */\n      add\n      swap1\n        /* \"#utility.yul\":10791:11035   */\n      jump\t// out\n        /* \"#utility.yul\":11040:11380   */\n    tag_709:\n        /* \"#utility.yul\":11242:11244   */\n      0x20\n        /* \"#utility.yul\":11224:11245   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11281:11283   */\n      0x10\n        /* \"#utility.yul\":11261:11279   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11254:11284   */\n      mstore\n        /* \"#utility.yul\":11320:11338   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":11315:11317   */\n      0x40\n        /* \"#utility.yul\":11300:11318   */\n      dup3\n      add\n        /* \"#utility.yul\":11293:11339   */\n      mstore\n        /* \"#utility.yul\":11371:11373   */\n      0x60\n        /* \"#utility.yul\":11356:11374   */\n      add\n      swap1\n        /* \"#utility.yul\":11214:11380   */\n      jump\t// out\n        /* \"#utility.yul\":11385:11731   */\n    tag_474:\n        /* \"#utility.yul\":11587:11589   */\n      0x20\n        /* \"#utility.yul\":11569:11590   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11626:11628   */\n      0x16\n        /* \"#utility.yul\":11606:11624   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11599:11629   */\n      mstore\n        /* \"#utility.yul\":11665:11689   */\n      0x43616e6e6f74206265207a65726f206164647265737300000000000000000000\n        /* \"#utility.yul\":11660:11662   */\n      0x40\n        /* \"#utility.yul\":11645:11663   */\n      dup3\n      add\n        /* \"#utility.yul\":11638:11690   */\n      mstore\n        /* \"#utility.yul\":11722:11724   */\n      0x60\n        /* \"#utility.yul\":11707:11725   */\n      add\n      swap1\n        /* \"#utility.yul\":11559:11731   */\n      jump\t// out\n        /* \"#utility.yul\":11736:12138   */\n    tag_457:\n        /* \"#utility.yul\":11938:11940   */\n      0x20\n        /* \"#utility.yul\":11920:11941   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11977:11979   */\n      0x26\n        /* \"#utility.yul\":11957:11975   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11950:11980   */\n      mstore\n        /* \"#utility.yul\":12016:12050   */\n      0x4455524154494f4e5f464143544f525f4f5645524455452063616e6e6f742062\n        /* \"#utility.yul\":12011:12013   */\n      0x40\n        /* \"#utility.yul\":11996:12014   */\n      dup3\n      add\n        /* \"#utility.yul\":11989:12051   */\n      mstore\n        /* \"#utility.yul\":12087:12095   */\n      0x65207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12082:12084   */\n      0x60\n        /* \"#utility.yul\":12067:12085   */\n      dup3\n      add\n        /* \"#utility.yul\":12060:12096   */\n      mstore\n        /* \"#utility.yul\":12128:12131   */\n      0x80\n        /* \"#utility.yul\":12113:12132   */\n      add\n      swap1\n        /* \"#utility.yul\":11910:12138   */\n      jump\t// out\n        /* \"#utility.yul\":12143:12553   */\n    tag_356:\n        /* \"#utility.yul\":12345:12347   */\n      0x20\n        /* \"#utility.yul\":12327:12348   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12384:12386   */\n      0x2e\n        /* \"#utility.yul\":12364:12382   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12357:12387   */\n      mstore\n        /* \"#utility.yul\":12423:12457   */\n      0x6f7665726475654665652063616e6e6f74206265206d6f7265207468616e204d\n        /* \"#utility.yul\":12418:12420   */\n      0x40\n        /* \"#utility.yul\":12403:12421   */\n      dup3\n      add\n        /* \"#utility.yul\":12396:12458   */\n      mstore\n        /* \"#utility.yul\":12494:12510   */\n      0x41585f4f5645524455455f464545000000000000000000000000000000000000\n        /* \"#utility.yul\":12489:12491   */\n      0x60\n        /* \"#utility.yul\":12474:12492   */\n      dup3\n      add\n        /* \"#utility.yul\":12467:12511   */\n      mstore\n        /* \"#utility.yul\":12543:12546   */\n      0x80\n        /* \"#utility.yul\":12528:12547   */\n      add\n      swap1\n        /* \"#utility.yul\":12317:12553   */\n      jump\t// out\n        /* \"#utility.yul\":12558:12976   */\n    tag_765:\n        /* \"#utility.yul\":12760:12762   */\n      0x20\n        /* \"#utility.yul\":12742:12763   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12799:12801   */\n      0x36\n        /* \"#utility.yul\":12779:12797   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12772:12802   */\n      mstore\n        /* \"#utility.yul\":12838:12872   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":12833:12835   */\n      0x40\n        /* \"#utility.yul\":12818:12836   */\n      dup3\n      add\n        /* \"#utility.yul\":12811:12873   */\n      mstore\n        /* \"#utility.yul\":12909:12933   */\n      0x68616e204d494e5f4445504f5349545f414d4f554e5400000000000000000000\n        /* \"#utility.yul\":12904:12906   */\n      0x60\n        /* \"#utility.yul\":12889:12907   */\n      dup3\n      add\n        /* \"#utility.yul\":12882:12934   */\n      mstore\n        /* \"#utility.yul\":12966:12969   */\n      0x80\n        /* \"#utility.yul\":12951:12970   */\n      add\n      swap1\n        /* \"#utility.yul\":12732:12976   */\n      jump\t// out\n        /* \"#utility.yul\":12981:13406   */\n    tag_686:\n        /* \"#utility.yul\":13183:13185   */\n      0x20\n        /* \"#utility.yul\":13165:13186   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13222:13224   */\n      0x3d\n        /* \"#utility.yul\":13202:13220   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13195:13225   */\n      mstore\n        /* \"#utility.yul\":13261:13295   */\n      0x4d41585f4c4f434b5f4455524154494f4e2063616e6e6f74206265206d6f7265\n        /* \"#utility.yul\":13256:13258   */\n      0x40\n        /* \"#utility.yul\":13241:13259   */\n      dup3\n      add\n        /* \"#utility.yul\":13234:13296   */\n      mstore\n        /* \"#utility.yul\":13332:13363   */\n      0x207468616e204d41585f4c4f434b5f4455524154494f4e5f4c494d4954000000\n        /* \"#utility.yul\":13327:13329   */\n      0x60\n        /* \"#utility.yul\":13312:13330   */\n      dup3\n      add\n        /* \"#utility.yul\":13305:13364   */\n      mstore\n        /* \"#utility.yul\":13396:13399   */\n      0x80\n        /* \"#utility.yul\":13381:13400   */\n      add\n      swap1\n        /* \"#utility.yul\":13155:13406   */\n      jump\t// out\n        /* \"#utility.yul\":13411:13767   */\n    tag_694:\n        /* \"#utility.yul\":13613:13615   */\n      0x20\n        /* \"#utility.yul\":13595:13616   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13632:13650   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13625:13655   */\n      mstore\n        /* \"#utility.yul\":13691:13725   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13686:13688   */\n      0x40\n        /* \"#utility.yul\":13671:13689   */\n      dup3\n      add\n        /* \"#utility.yul\":13664:13726   */\n      mstore\n        /* \"#utility.yul\":13758:13760   */\n      0x60\n        /* \"#utility.yul\":13743:13761   */\n      add\n      swap1\n        /* \"#utility.yul\":13585:13767   */\n      jump\t// out\n        /* \"#utility.yul\":13772:14107   */\n    tag_352:\n        /* \"#utility.yul\":13974:13976   */\n      0x20\n        /* \"#utility.yul\":13956:13977   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14013:14015   */\n      0x0b\n        /* \"#utility.yul\":13993:14011   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13986:14016   */\n      mstore\n        /* \"#utility.yul\":14052:14065   */\n      0x61646d696e3a207775743f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14047:14049   */\n      0x40\n        /* \"#utility.yul\":14032:14050   */\n      dup3\n      add\n        /* \"#utility.yul\":14025:14066   */\n      mstore\n        /* \"#utility.yul\":14098:14100   */\n      0x60\n        /* \"#utility.yul\":14083:14101   */\n      add\n      swap1\n        /* \"#utility.yul\":13946:14107   */\n      jump\t// out\n        /* \"#utility.yul\":14112:14532   */\n    tag_492:\n        /* \"#utility.yul\":14314:14316   */\n      0x20\n        /* \"#utility.yul\":14296:14317   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14353:14355   */\n      0x38\n        /* \"#utility.yul\":14333:14351   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14326:14356   */\n      mstore\n        /* \"#utility.yul\":14392:14426   */\n      0x576974686472617720616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":14387:14389   */\n      0x40\n        /* \"#utility.yul\":14372:14390   */\n      dup3\n      add\n        /* \"#utility.yul\":14365:14427   */\n      mstore\n        /* \"#utility.yul\":14463:14489   */\n      0x7468616e204d494e5f57495448445241575f414d4f554e540000000000000000\n        /* \"#utility.yul\":14458:14460   */\n      0x60\n        /* \"#utility.yul\":14443:14461   */\n      dup3\n      add\n        /* \"#utility.yul\":14436:14490   */\n      mstore\n        /* \"#utility.yul\":14522:14525   */\n      0x80\n        /* \"#utility.yul\":14507:14526   */\n      add\n      swap1\n        /* \"#utility.yul\":14286:14532   */\n      jump\t// out\n        /* \"#utility.yul\":14537:14890   */\n    tag_954:\n        /* \"#utility.yul\":14739:14741   */\n      0x20\n        /* \"#utility.yul\":14721:14742   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14778:14780   */\n      0x1d\n        /* \"#utility.yul\":14758:14776   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14751:14781   */\n      mstore\n        /* \"#utility.yul\":14817:14848   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":14812:14814   */\n      0x40\n        /* \"#utility.yul\":14797:14815   */\n      dup3\n      add\n        /* \"#utility.yul\":14790:14849   */\n      mstore\n        /* \"#utility.yul\":14881:14883   */\n      0x60\n        /* \"#utility.yul\":14866:14884   */\n      add\n      swap1\n        /* \"#utility.yul\":14711:14890   */\n      jump\t// out\n        /* \"#utility.yul\":14895:15320   */\n    tag_399:\n        /* \"#utility.yul\":15097:15099   */\n      0x20\n        /* \"#utility.yul\":15079:15100   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15136:15138   */\n      0x3d\n        /* \"#utility.yul\":15116:15134   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15109:15139   */\n      mstore\n        /* \"#utility.yul\":15175:15209   */\n      0x7769746864726177466565506572696f642063616e6e6f74206265206d6f7265\n        /* \"#utility.yul\":15170:15172   */\n      0x40\n        /* \"#utility.yul\":15155:15173   */\n      dup3\n      add\n        /* \"#utility.yul\":15148:15210   */\n      mstore\n        /* \"#utility.yul\":15246:15277   */\n      0x207468616e204d41585f57495448445241575f4645455f504552494f44000000\n        /* \"#utility.yul\":15241:15243   */\n      0x60\n        /* \"#utility.yul\":15226:15244   */\n      dup3\n      add\n        /* \"#utility.yul\":15219:15278   */\n      mstore\n        /* \"#utility.yul\":15310:15313   */\n      0x80\n        /* \"#utility.yul\":15295:15314   */\n      add\n      swap1\n        /* \"#utility.yul\":15069:15320   */\n      jump\t// out\n        /* \"#utility.yul\":15325:15731   */\n    tag_865:\n        /* \"#utility.yul\":15527:15529   */\n      0x20\n        /* \"#utility.yul\":15509:15530   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15566:15568   */\n      0x2a\n        /* \"#utility.yul\":15546:15564   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15539:15569   */\n      mstore\n        /* \"#utility.yul\":15605:15639   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":15600:15602   */\n      0x40\n        /* \"#utility.yul\":15585:15603   */\n      dup3\n      add\n        /* \"#utility.yul\":15578:15640   */\n      mstore\n        /* \"#utility.yul\":15676:15688   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15671:15673   */\n      0x60\n        /* \"#utility.yul\":15656:15674   */\n      dup3\n      add\n        /* \"#utility.yul\":15649:15689   */\n      mstore\n        /* \"#utility.yul\":15721:15724   */\n      0x80\n        /* \"#utility.yul\":15706:15725   */\n      add\n      swap1\n        /* \"#utility.yul\":15499:15731   */\n      jump\t// out\n        /* \"#utility.yul\":15736:16148   */\n    tag_364:\n        /* \"#utility.yul\":15938:15940   */\n      0x20\n        /* \"#utility.yul\":15920:15941   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15977:15979   */\n      0x30\n        /* \"#utility.yul\":15957:15975   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15950:15980   */\n      mstore\n        /* \"#utility.yul\":16016:16050   */\n      0x77697468647261774665652063616e6e6f74206265206d6f7265207468616e20\n        /* \"#utility.yul\":16011:16013   */\n      0x40\n        /* \"#utility.yul\":15996:16014   */\n      dup3\n      add\n        /* \"#utility.yul\":15989:16051   */\n      mstore\n        /* \"#utility.yul\":16087:16105   */\n      0x4d41585f57495448445241575f46454500000000000000000000000000000000\n        /* \"#utility.yul\":16082:16084   */\n      0x60\n        /* \"#utility.yul\":16067:16085   */\n      dup3\n      add\n        /* \"#utility.yul\":16060:16106   */\n      mstore\n        /* \"#utility.yul\":16138:16141   */\n      0x80\n        /* \"#utility.yul\":16123:16142   */\n      add\n      swap1\n        /* \"#utility.yul\":15910:16148   */\n      jump\t// out\n        /* \"#utility.yul\":16153:16552   */\n    tag_615:\n        /* \"#utility.yul\":16355:16357   */\n      0x20\n        /* \"#utility.yul\":16337:16358   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16394:16396   */\n      0x23\n        /* \"#utility.yul\":16374:16392   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16367:16397   */\n      mstore\n        /* \"#utility.yul\":16433:16467   */\n      0x554e4c4f434b5f465245455f4455524154494f4e2063616e6e6f74206265207a\n        /* \"#utility.yul\":16428:16430   */\n      0x40\n        /* \"#utility.yul\":16413:16431   */\n      dup3\n      add\n        /* \"#utility.yul\":16406:16468   */\n      mstore\n        /* \"#utility.yul\":16504:16509   */\n      0x65726f0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16499:16501   */\n      0x60\n        /* \"#utility.yul\":16484:16502   */\n      dup3\n      add\n        /* \"#utility.yul\":16477:16510   */\n      mstore\n        /* \"#utility.yul\":16542:16545   */\n      0x80\n        /* \"#utility.yul\":16527:16546   */\n      add\n      swap1\n        /* \"#utility.yul\":16327:16552   */\n      jump\t// out\n        /* \"#utility.yul\":16557:16898   */\n    tag_448:\n        /* \"#utility.yul\":16759:16761   */\n      0x20\n        /* \"#utility.yul\":16741:16762   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16798:16800   */\n      0x11\n        /* \"#utility.yul\":16778:16796   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16771:16801   */\n      mstore\n        /* \"#utility.yul\":16837:16856   */\n      0x43616e6e6f7420756e6c6f636b20796574000000000000000000000000000000\n        /* \"#utility.yul\":16832:16834   */\n      0x40\n        /* \"#utility.yul\":16817:16835   */\n      dup3\n      add\n        /* \"#utility.yul\":16810:16857   */\n      mstore\n        /* \"#utility.yul\":16889:16891   */\n      0x60\n        /* \"#utility.yul\":16874:16892   */\n      add\n      swap1\n        /* \"#utility.yul\":16731:16898   */\n      jump\t// out\n        /* \"#utility.yul\":16903:17080   */\n    tag_109:\n        /* \"#utility.yul\":17049:17074   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":17037:17039   */\n      0x20\n        /* \"#utility.yul\":17022:17040   */\n      add\n      swap1\n        /* \"#utility.yul\":17004:17080   */\n      jump\t// out\n        /* \"#utility.yul\":17085:17382   */\n    tag_633:\n        /* \"#utility.yul\":17259:17284   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":17332:17374   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17320:17375   */\n      and\n        /* \"#utility.yul\":17315:17317   */\n      0x20\n        /* \"#utility.yul\":17300:17318   */\n      dup3\n      add\n        /* \"#utility.yul\":17293:17376   */\n      mstore\n        /* \"#utility.yul\":17247:17249   */\n      0x40\n        /* \"#utility.yul\":17232:17250   */\n      add\n      swap1\n        /* \"#utility.yul\":17214:17382   */\n      jump\t// out\n        /* \"#utility.yul\":17387:17643   */\n    tag_875:\n        /* \"#utility.yul\":17569:17594   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":17625:17627   */\n      0x20\n        /* \"#utility.yul\":17610:17628   */\n      dup3\n      add\n        /* \"#utility.yul\":17603:17637   */\n      mstore\n        /* \"#utility.yul\":17557:17559   */\n      0x40\n        /* \"#utility.yul\":17542:17560   */\n      add\n      swap1\n        /* \"#utility.yul\":17524:17643   */\n      jump\t// out\n        /* \"#utility.yul\":17901:18292   */\n    tag_826:\n        /* \"#utility.yul\":18132:18157   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":18188:18190   */\n      0x20\n        /* \"#utility.yul\":18173:18191   */\n      dup5\n      add\n        /* \"#utility.yul\":18166:18200   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":18231:18233   */\n      0x40\n        /* \"#utility.yul\":18216:18234   */\n      dup4\n      add\n        /* \"#utility.yul\":18209:18243   */\n      mstore\n        /* \"#utility.yul\":18274:18276   */\n      0x60\n        /* \"#utility.yul\":18259:18277   */\n      dup3\n      add\n        /* \"#utility.yul\":18252:18286   */\n      mstore\n        /* \"#utility.yul\":18119:18122   */\n      0x80\n        /* \"#utility.yul\":18104:18123   */\n      add\n      swap1\n        /* \"#utility.yul\":18086:18292   */\n      jump\t// out\n        /* \"#utility.yul\":18297:19058   */\n    tag_125:\n        /* \"#utility.yul\":18662:18687   */\n      swap9\n      dup10\n      mstore\n        /* \"#utility.yul\":18718:18720   */\n      0x20\n        /* \"#utility.yul\":18703:18721   */\n      dup10\n      add\n        /* \"#utility.yul\":18696:18730   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":18761:18763   */\n      0x40\n        /* \"#utility.yul\":18746:18764   */\n      dup9\n      add\n        /* \"#utility.yul\":18739:18773   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":18804:18806   */\n      0x60\n        /* \"#utility.yul\":18789:18807   */\n      dup8\n      add\n        /* \"#utility.yul\":18782:18816   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":18847:18850   */\n      0x80\n        /* \"#utility.yul\":18832:18851   */\n      dup7\n      add\n        /* \"#utility.yul\":18825:18860   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":18891:18894   */\n      0xa0\n        /* \"#utility.yul\":18876:18895   */\n      dup6\n      add\n        /* \"#utility.yul\":18869:18904   */\n      mstore\n        /* \"#utility.yul\":18935:18938   */\n      0xc0\n        /* \"#utility.yul\":18920:18939   */\n      dup5\n      add\n        /* \"#utility.yul\":18913:18948   */\n      mstore\n        /* \"#utility.yul\":18992:19006   */\n      iszero\n        /* \"#utility.yul\":18985:19007   */\n      iszero\n        /* \"#utility.yul\":18979:18982   */\n      0xe0\n        /* \"#utility.yul\":18964:18983   */\n      dup4\n      add\n        /* \"#utility.yul\":18957:19008   */\n      mstore\n        /* \"#utility.yul\":19039:19042   */\n      0x0100\n        /* \"#utility.yul\":19024:19043   */\n      dup3\n      add\n        /* \"#utility.yul\":19017:19052   */\n      mstore\n        /* \"#utility.yul\":18649:18652   */\n      0x0120\n        /* \"#utility.yul\":18634:18653   */\n      add\n      swap1\n        /* \"#utility.yul\":18616:19058   */\n      jump\t// out\n        /* \"#utility.yul\":19063:19191   */\n    tag_405:\n      0x00\n        /* \"#utility.yul\":19134:19135   */\n      dup3\n        /* \"#utility.yul\":19130:19136   */\n      not\n        /* \"#utility.yul\":19127:19128   */\n      dup3\n        /* \"#utility.yul\":19124:19137   */\n      gt\n        /* \"#utility.yul\":19121:19123   */\n      iszero\n      tag_1046\n      jumpi\n        /* \"#utility.yul\":19140:19158   */\n      tag_1046\n      tag_1047\n      jump\t// in\n    tag_1046:\n      pop\n        /* \"#utility.yul\":19176:19185   */\n      add\n      swap1\n        /* \"#utility.yul\":19111:19191   */\n      jump\t// out\n        /* \"#utility.yul\":19196:19470   */\n    tag_413:\n      0x00\n        /* \"#utility.yul\":19262:19263   */\n      dup3\n        /* \"#utility.yul\":19252:19254   */\n      tag_1049\n      jumpi\n        /* \"#utility.yul\":19297:19374   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19294:19295   */\n      dup2\n        /* \"#utility.yul\":19287:19375   */\n      mstore\n        /* \"#utility.yul\":19398:19402   */\n      0x12\n        /* \"#utility.yul\":19395:19396   */\n      0x04\n        /* \"#utility.yul\":19388:19403   */\n      mstore\n        /* \"#utility.yul\":19426:19430   */\n      0x24\n        /* \"#utility.yul\":19423:19424   */\n      dup2\n        /* \"#utility.yul\":19416:19431   */\n      revert\n        /* \"#utility.yul\":19252:19254   */\n    tag_1049:\n      pop\n        /* \"#utility.yul\":19455:19464   */\n      div\n      swap1\n        /* \"#utility.yul\":19242:19470   */\n      jump\t// out\n        /* \"#utility.yul\":19475:19703   */\n    tag_411:\n      0x00\n        /* \"#utility.yul\":19641:19642   */\n      dup2\n        /* \"#utility.yul\":19573:19639   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19569:19643   */\n      div\n        /* \"#utility.yul\":19566:19567   */\n      dup4\n        /* \"#utility.yul\":19563:19644   */\n      gt\n        /* \"#utility.yul\":19558:19559   */\n      dup3\n        /* \"#utility.yul\":19551:19560   */\n      iszero\n        /* \"#utility.yul\":19544:19561   */\n      iszero\n        /* \"#utility.yul\":19540:19645   */\n      and\n        /* \"#utility.yul\":19537:19539   */\n      iszero\n      tag_1052\n      jumpi\n        /* \"#utility.yul\":19648:19666   */\n      tag_1052\n      tag_1047\n      jump\t// in\n    tag_1052:\n      pop\n        /* \"#utility.yul\":19688:19697   */\n      mul\n      swap1\n        /* \"#utility.yul\":19527:19703   */\n      jump\t// out\n        /* \"#utility.yul\":19708:19833   */\n    tag_419:\n      0x00\n        /* \"#utility.yul\":19776:19777   */\n      dup3\n        /* \"#utility.yul\":19773:19774   */\n      dup3\n        /* \"#utility.yul\":19770:19778   */\n      lt\n        /* \"#utility.yul\":19767:19769   */\n      iszero\n      tag_1055\n      jumpi\n        /* \"#utility.yul\":19781:19799   */\n      tag_1055\n      tag_1047\n      jump\t// in\n    tag_1055:\n      pop\n        /* \"#utility.yul\":19818:19827   */\n      sub\n      swap1\n        /* \"#utility.yul\":19757:19833   */\n      jump\t// out\n        /* \"#utility.yul\":19838:20096   */\n    tag_997:\n        /* \"#utility.yul\":19910:19911   */\n      0x00\n        /* \"#utility.yul\":19920:20033   */\n    tag_1057:\n        /* \"#utility.yul\":19934:19940   */\n      dup4\n        /* \"#utility.yul\":19931:19932   */\n      dup2\n        /* \"#utility.yul\":19928:19941   */\n      lt\n        /* \"#utility.yul\":19920:20033   */\n      iszero\n      tag_1059\n      jumpi\n        /* \"#utility.yul\":20010:20021   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":20004:20022   */\n      mload\n        /* \"#utility.yul\":19991:20002   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":19984:20023   */\n      mstore\n        /* \"#utility.yul\":19956:19958   */\n      0x20\n        /* \"#utility.yul\":19949:19959   */\n      add\n        /* \"#utility.yul\":19920:20033   */\n      jump(tag_1057)\n    tag_1059:\n        /* \"#utility.yul\":20051:20057   */\n      dup4\n        /* \"#utility.yul\":20048:20049   */\n      dup2\n        /* \"#utility.yul\":20045:20058   */\n      gt\n        /* \"#utility.yul\":20042:20044   */\n      iszero\n      tag_696\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":20086:20087   */\n      0x00\n        /* \"#utility.yul\":20068:20084   */\n      swap2\n      add\n        /* \"#utility.yul\":20061:20088   */\n      mstore\n        /* \"#utility.yul\":19891:20096   */\n      jump\t// out\n        /* \"#utility.yul\":20101:20285   */\n    tag_1047:\n        /* \"#utility.yul\":20153:20230   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20150:20151   */\n      0x00\n        /* \"#utility.yul\":20143:20231   */\n      mstore\n        /* \"#utility.yul\":20250:20254   */\n      0x11\n        /* \"#utility.yul\":20247:20248   */\n      0x04\n        /* \"#utility.yul\":20240:20255   */\n      mstore\n        /* \"#utility.yul\":20274:20278   */\n      0x24\n        /* \"#utility.yul\":20271:20272   */\n      0x00\n        /* \"#utility.yul\":20264:20279   */\n      revert\n        /* \"#utility.yul\":20290:20446   */\n    tag_974:\n        /* \"#utility.yul\":20378:20420   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20371:20376   */\n      dup2\n        /* \"#utility.yul\":20367:20421   */\n      and\n        /* \"#utility.yul\":20360:20365   */\n      dup2\n        /* \"#utility.yul\":20357:20422   */\n      eq\n        /* \"#utility.yul\":20347:20349   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":20436:20437   */\n      0x00\n        /* \"#utility.yul\":20433:20434   */\n      dup1\n        /* \"#utility.yul\":20426:20438   */\n      revert\n        /* \"#utility.yul\":20451:20571   */\n    tag_979:\n        /* \"#utility.yul\":20539:20544   */\n      dup1\n        /* \"#utility.yul\":20532:20545   */\n      iszero\n        /* \"#utility.yul\":20525:20546   */\n      iszero\n        /* \"#utility.yul\":20518:20523   */\n      dup2\n        /* \"#utility.yul\":20515:20547   */\n      eq\n        /* \"#utility.yul\":20505:20507   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":20561:20562   */\n      0x00\n        /* \"#utility.yul\":20558:20559   */\n      dup1\n        /* \"#utility.yul\":20551:20563   */\n      revert\n\n    auxdata: 0xa26469706673582212209148be7dbd4a79d027a9f9903f87a5cb14661085db3d662088dd1dffc4d82e9664736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1061:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "216:705:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "263:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "272:6:11"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "280:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "265:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "265:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "265:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "237:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "246:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "233:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "233:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "258:3:11",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "229:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "229:33:11"
															},
															"nodeType": "YulIf",
															"src": "226:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "298:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "311:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "311:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "302:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "363:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "378:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "388:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "378:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "402:40:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "427:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "438:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "423:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "417:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:25:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "406:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "478:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "451:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "495:17:11",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "505:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "521:40:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "546:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "557:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "542:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "536:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:25:11"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "525:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "597:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "570:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "614:17:11",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "624:7:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "640:40:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "665:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "676:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "655:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:25:11"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "644:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "716:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "689:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "689:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "733:17:11",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "743:7:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "733:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "759:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "795:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:19:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "774:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:26:11"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "763:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "836:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "809:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:17:11",
															"value": {
																"name": "value_4",
																"nodeType": "YulIdentifier",
																"src": "863:7:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "879:36:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "899:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "910:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "895:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "895:19:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "889:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:26:11"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "879:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$298t_contract$_IShadowChefV2_$3586t_addresst_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "142:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "153:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "165:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "173:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "181:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "189:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "197:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "205:6:11",
														"type": ""
													}
												],
												"src": "14:907:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "973:86:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1037:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1046:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1039:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1039:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1039:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "996:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1007:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1022:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1027:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1018:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1031:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1014:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1014:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1003:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "993:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:50:11"
															},
															"nodeType": "YulIf",
															"src": "983:2:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "962:5:11",
														"type": ""
													}
												],
												"src": "926:133:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$298t_contract$_IShadowChefV2_$3586t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_t_address(value_3)\n        value3 := value_3\n        let value_4 := mload(add(headStart, 128))\n        validator_revert_t_address(value_4)\n        value4 := value_4\n        value5 := mload(add(headStart, 160))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405262093a80600e556301e13380600f556301e1338060105562ed4e0060115564e8d4a5100060125560c860135560c8601455600a601555600a60165564e8d4a510006017556203f4806018553480156200005c57600080fd5b5060405162005021380380620050218339810160408190526200007f9162000157565b620000936200008d62000103565b62000107565b6000805460ff60a01b191690556001600160601b0319606096871b81166080529490951b90931660a052600880546001600160a01b039384166001600160a01b0319918216179091556009805492841692821692909217909155600a8054929093169116179055600b55620001f7565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060008060c0878903121562000170578182fd5b86516200017d81620001de565b60208801519096506200019081620001de565b6040880151909550620001a381620001de565b6060880151909450620001b681620001de565b6080880151909350620001c981620001de565b8092505060a087015190509295509295509295565b6001600160a01b0381168114620001f457600080fd5b50565b60805160601c60a05160601c614d9c6200028560003960008181610c6001528181610d1d0152818161208e015281816123a00152818161384e01526139280152600081816113ec01528181611937015281816124aa015281816129ab01528181612e0f01528181612e61015281816131650152818161324001528181613b7b0152613db30152614d9c6000f3fe608060405234801561001057600080fd5b50600436106105145760003560e01c806387788782116102a1578063c6ed51be1161016b578063e464c623116100e3578063f2fde38b11610097578063f851a4401161007c578063f851a440146108fb578063fc0c546a14610903578063fd253b641461090b57610514565b8063f2fde38b146108d5578063f786b958146108e857610514565b8063e73008bc116100c8578063e73008bc146108b2578063e941fa78146108ba578063f0f44260146108c257610514565b8063e464c623146108a2578063e4b37ef5146108aa57610514565b8063def68a9c1161013a578063df10b4e61161011f578063df10b4e61461087f578063dfcedeee14610887578063e2bbb1581461088f57610514565b8063def68a9c14610859578063def7869d1461086c57610514565b8063c6ed51be14610836578063cc9cfba114610849578063ccd34cd514610779578063d4b0de2f1461085157610514565b8063acaf88cd11610219578063bc3d652a116101cd578063bdca9165116101b2578063bdca916514610808578063beba0fa014610810578063c54d349c1461082357610514565b8063bc3d652a146107f8578063bc75f4b81461080057610514565b8063b6857844116101fe578063b6857844146105a2578063b6ac642a146107d2578063bb9f408d146107e557610514565b8063acaf88cd146107b7578063b3ab15fb146107bf57610514565b8063948a03f211610270578063a3639b3911610255578063a3639b3914610794578063a5834e06146107a7578063aaada5da146107af57610514565b8063948a03f21461077957806395dc14e11461078157610514565b8063877887821461074357806387d4bda91461074b5780638da5cb5b1461075e57806393c99e6a1461076657610514565b80634e4de1e9116103e2578063668679ba1161035a578063731ff24a1161030e57806378b4330f116102f357806378b4330f146105d05780638456cb5914610733578063853828b61461073b57610514565b8063731ff24a1461072357806377c7b8fc1461072b57610514565b806370897b231161033f57806370897b2314610700578063715018a614610713578063722713f71461071b57610514565b8063668679ba146106da578063704b6c02146106ed57610514565b8063570ca735116103b157806361d027b31161039657806361d027b3146106b757806361fa6368146106bf57806362122f5a146106c757610514565b8063570ca7351461069a5780635c975abb146106af57610514565b80634e4de1e9146106645780634f1bfc9e1461067757806351fb26df1461067f5780635521e9bf1461068757610514565b80632cfc5f01116104905780633eb78874116104445780633fec4e32116104295780633fec4e3214610629578063423b93ed1461064957806348a0d7541461065c57610514565b80633eb78874146106195780633f4ba83a1461062157610514565b80632f6c493c116104755780632f6c493c146105eb57806335981921146105fe5780633a98ef391461061157610514565b80632cfc5f01146105d05780632e1a7d4d146105d857610514565b80631959a002116104e75780631ea30fef116104cc5780631ea30fef146105a25780631efac1b8146105aa57806329a5cfd6146105bd57610514565b80631959a0021461056757806319ab453c1461058f57610514565b806301e813261461051957806305a9f274146105375780630c59696b1461053f57806314ff303914610554575b600080fd5b610521610913565b60405161052e9190614b9f565b60405180910390f35b61052161091b565b61055261054d366004614171565b610921565b005b610552610562366004614171565b6109fa565b61057a6105753660046140d6565b610abc565b60405161052e99989796959493929190614bf5565b61055261059d3660046140d6565b610b0e565b610521610db2565b6105526105b8366004614171565b610dbc565b6105216105cb36600461412a565b610e7f565b610521610fce565b6105526105e6366004614171565b610fd5565b6105526105f93660046140d6565b611025565b61055261060c366004614171565b611122565b6105216111e2565b6105216111e8565b6105526111ee565b61063c6106373660046140d6565b61127a565b60405161052e91906142bf565b6105526106573660046140f2565b61128f565b6105216113ac565b6105526106723660046140f2565b611476565b610521611593565b610521611599565b610552610695366004614171565b61159f565b6106a26115f1565b60405161052e91906141de565b61063c61160d565b6106a261162e565b6106a261164a565b6105526106d53660046140d6565b611666565b61063c6106e83660046140d6565b61177a565b6105526106fb3660046140d6565b61178f565b61055261070e366004614171565b61185a565b61055261191c565b610521611930565b6105216119e8565b6105216119f8565b610552611a4f565b610552611adb565b610521611af4565b61063c6107593660046140d6565b611afa565b6106a2611b0f565b610552610774366004614171565b611b2b565b610521611bf1565b61052161078f3660046140d6565b611bfa565b6105526107a2366004614171565b611d6b565b610521611e2b565b610521611e31565b610521611e37565b6105526107cd3660046140d6565b611e3d565b6105526107e0366004614171565b611f08565b6105526107f3366004614171565b611fca565b6106a261208c565b6105216120b0565b6105216120b6565b61055261081e3660046140f2565b6120bc565b610552610831366004614171565b6121d9565b6105216108443660046140d6565b612299565b61052161239b565b610521612451565b6105526108673660046140d6565b612457565b61055261087a3660046140d6565b6125fa565b61052161270e565b6106a2612714565b61055261089d3660046141a1565b612730565b610521612788565b61052161278e565b610521612794565b61052161279a565b6105526108d03660046140d6565b6127a0565b6105526108e33660046140d6565b61286b565b6105526108f6366004614171565b6128c9565b6106a261298d565b6106a26129a9565b6105216129cd565b6305265c0081565b600d5481565b60085473ffffffffffffffffffffffffffffffffffffffff16331461097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b60405180910390fd5b64e8d4a510008111156109ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906147dd565b60178190556040517ff4bd1c5978320077e792afbb3911e8cab1325ce28a6b3e67f9067a1d80692961906109ef908390614b9f565b60405180910390a150565b60085473ffffffffffffffffffffffffffffffffffffffff163314610a4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6101f4811115610a87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614aae565b60168190556040517fcab352e118188b8a2f20a2e8c4ce1241ce2c1740aac4f17c5b0831e65824d8ef906109ef908390614b9f565b6003602081905260009182526040909120805460018201546002830154938301546004840154600585015460068601546007870154600890970154959794969495939492939192909160ff9091169089565b610b166129d7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190610b6b9033906004016141de565b60206040518083038186803b158015610b8357600080fd5b505afa158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190614189565b905080610bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906144e8565b610c1673ffffffffffffffffffffffffffffffffffffffff8316333084612a4a565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063095ea7b390610c8a907f0000000000000000000000000000000000000000000000000000000000000000908590600401614230565b602060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc9190614155565b50600b546040517fe2bbb15800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163e2bbb15891610d5391908590600401614bcc565b600060405180830381600087803b158015610d6d57600080fd5b505af1158015610d81573d6000803e3d6000fd5b50506040517f57a86f7d14ccde89e22870afe839e3011216827daa9b24e18629f0a1e9d6cc14925060009150a15050565b6509184e72a00081565b60085473ffffffffffffffffffffffffffffffffffffffff163314610e0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b62093a80811115610e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906149f4565b60188190556040517fb89ddaddb7435be26824cb48d2d0186c9525a2e1ec057abcb502704cdc0686cc906109ef908390614b9f565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054831115610eb257805492505b3360009081526005602052604090205460ff16158015610ee257506018548160010154610edf9190614c36565b42105b15610fc2576000610ef161239b565b610ef9611930565b610f039190614c36565b8254909150600090610f1a64e8d4a5100087614c87565b610f249190614c4e565b90506000610f3187612af3565b60068501546007548654610f459087614c87565b610f4f9190614c4e565b610f599190614cc4565b610f639190614cc4565b9050600064e8d4a51000610f778484614c87565b610f819190614c4e565b601554909150610f9033612b11565b15610f9a57506016545b6000612710610fa98385614c87565b610fb39190614c4e565b9750610fc89650505050505050565b60009150505b92915050565b62093a8081565b610fdd612b17565b60008111611017576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614389565b611022816000612b56565b50565b803373ffffffffffffffffffffffffffffffffffffffff821614806110615750600a5473ffffffffffffffffffffffffffffffffffffffff1633145b611097576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906145ea565b61109f612b17565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020600781015460ff1680156110db5750428160050154105b611111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614b68565b61111d60008085612f29565b505050565b60085473ffffffffffffffffffffffffffffffffffffffff163314611173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b600081116111ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614780565b60118190556040517f18b6d179114082d7eda9837e15a39eb30032d5f3df00487a67541398f48fabfe906109ef908390614b9f565b60075481565b60145481565b60085473ffffffffffffffffffffffffffffffffffffffff16331461123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b61124761359f565b61124f6135dd565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60046020526000908152604090205460ff1681565b60085473ffffffffffffffffffffffffffffffffffffffff1633146112e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff821661132d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b73ffffffffffffffffffffffffffffffffffffffff821660008181526004602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d4491a35050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906114219030906004016141de565b60206040518083038186803b15801561143957600080fd5b505afa15801561144d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114719190614189565b905090565b60085473ffffffffffffffffffffffffffffffffffffffff1633146114c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff8216611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b73ffffffffffffffffffffffffffffffffffffffff821660008181526006602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d4491a35050565b600f5481565b600b5481565b6115a7612b17565b6509184e72a00081116115e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614960565b611022600082612b56565b600a5473ffffffffffffffffffffffffffffffffffffffff1681565b60005474010000000000000000000000000000000000000000900460ff1690565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60085473ffffffffffffffffffffffffffffffffffffffff1633146116b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff8116611704576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517faf38f30be8d095bc1461196db21930b7d89226e57b0167f9d6abe951c53f3332926109ef9216906141de565b60066020526000908152604090205460ff1681565b6117976129d7565b73ffffffffffffffffffffffffffffffffffffffff81166117e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c926109ef9216906141de565b60085473ffffffffffffffffffffffffffffffffffffffff1633146118ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6107d08111156118e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906146b5565b60138190556040517fefeafcf03e479a9566d7ef321b4816de0ba19cfa3cd0fae2f8c5f4a0afb342c4906109ef908390614b9f565b6119246129d7565b61192e600061364d565b565b6000600c547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161198e91906141de565b60206040518083038186803b1580156119a657600080fd5b505afa1580156119ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119de9190614189565b6114719190614c36565b6b204fce5e3e2502611000000081565b6000600754600014611a4257600754611a0f61239b565b611a17611930565b611a219190614c36565b611a3390670de0b6b3a7640000614c87565b611a3d9190614c4e565b611471565b50670de0b6b3a764000090565b60085473ffffffffffffffffffffffffffffffffffffffff163314611aa0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b611aa8612b17565b611ab06136c2565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b3360009081526003602052604090205461192e90610fd5565b60135481565b60056020526000908152604090205460ff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60085473ffffffffffffffffffffffffffffffffffffffff163314611b7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b652d79883d2000811115611bbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061448b565b60128190556040517f7666dfff8c3377938e522b4eed3aff079973a976f95969db60a406d49f40da4e906109ef908390614b9f565b64e8d4a5100081565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120805415801590611c335750600781015460ff165b8015611c65575073ffffffffffffffffffffffffffffffffffffffff831660009081526006602052604090205460ff16155b8015611c81575042600e548260050154611c7f9190614c36565b105b15611d60576000611c9061239b565b611c98611930565b611ca29190614c36565b60068301546007548454929350600092611cbc9085614c87565b611cc69190614c4e565b611cd09190614cc4565b90506000836008015482611ce49190614cc4565b90506000600e54856005015442611cfb9190614cc4565b611d059190614cc4565b9050601154811115611d1657506011545b600060115460175483611d299190614c87565b611d339190614c4e565b9050600064e8d4a51000611d478386614c87565b611d519190614c4e565b9750611d669650505050505050565b60009150505b919050565b60085473ffffffffffffffffffffffffffffffffffffffff163314611dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b60008111611df6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061441d565b60108190556040517f9478eb023aac0a7d58a4e935377056bf27cf5b72a2300725f831817a8f62fbde906109ef908390614b9f565b60175481565b600e5481565b60115481565b611e456129d7565b73ffffffffffffffffffffffffffffffffffffffff8116611e92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517fda12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a926109ef9216906141de565b60085473ffffffffffffffffffffffffffffffffffffffff163314611f59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6101f4811115611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614aae565b60158190556040517fd5fe46099fa396290a7f57e36c3c3c8774e2562c18ed5d1dcc0fa75071e03f1d906109ef908390614b9f565b60085473ffffffffffffffffffffffffffffffffffffffff16331461201b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6107d0811115612057576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906146b5565b60148190556040517fc5d25457b67b87678c987375af13f6e50beb3ad7bfd009da26766ae986eaa20d906109ef908390614b9f565b7f000000000000000000000000000000000000000000000000000000000000000081565b60125481565b6107d081565b60085473ffffffffffffffffffffffffffffffffffffffff16331461210d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff821661215a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d4491a35050565b60085473ffffffffffffffffffffffffffffffffffffffff16331461222a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b60008111612264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614b0b565b600e8190556040517ff84bf2b901cfc02956d4e69556d7448cef4ea13587e7714dba7c6d697091e7ad906109ef908390614b9f565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081208054158015906122d35750600781015460ff16155b8015612305575073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff16155b15611d6057600061231461239b565b61231c611930565b6123269190614c36565b9050600060075482846000015461233d9190614c87565b6123479190614c4e565b9050600083600201548261235b9190614cc4565b60135490915061236a87612b11565b1561237457506014545b60006127106123838385614c87565b61238d9190614c4e565b9650611d6695505050505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c799b59d600b54306040518363ffffffff1660e01b81526004016123fb929190614ba8565b60206040518083038186803b15801561241357600080fd5b505afa158015612427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244b9190614189565b91505090565b6101f481565b60085473ffffffffffffffffffffffffffffffffffffffff1633146124a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561252e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061451f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a08231906125839030906004016141de565b60206040518083038186803b15801561259b57600080fd5b505afa1580156125af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d39190614189565b90506125f673ffffffffffffffffffffffffffffffffffffffff83163383613732565b5050565b60085473ffffffffffffffffffffffffffffffffffffffff16331461264b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff8116612698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517f8f49a182922022d9119a1a6aeeca151b4a5665e86bd61c1ff32e152d459558b2926109ef9216906141de565b60185481565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b612738612b17565b60008211806127475750600081115b61277d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061431b565b6125f6828233612f29565b60105481565b60165481565b600c5481565b60155481565b6127a86129d7565b73ffffffffffffffffffffffffffffffffffffffff81166127f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517fafa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea086926109ef9216906141de565b6128736129d7565b73ffffffffffffffffffffffffffffffffffffffff81166128c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906143c0565b6110228161364d565b60085473ffffffffffffffffffffffffffffffffffffffff16331461291a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6305265c00811115612958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614897565b600f8190556040517fcab2f3455b51b6ca5377e84fccd0f890b6f6ca36c02e18b6d36cb34f469fe4fe906109ef908390614b9f565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b652d79883d200081565b6129df613751565b73ffffffffffffffffffffffffffffffffffffffff166129fd611b0f565b73ffffffffffffffffffffffffffffffffffffffff161461192e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906148f4565b612aed846323b872dd60e01b858585604051602401612a6b939291906141ff565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613755565b50505050565b6000612afe82611bfa565b612b0783612299565b610fc89190614c36565b3b151590565b612b1f61160d565b1561192e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614712565b3360009081526003602052604090208054831115612ba0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061457c565b42816005015410612bdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614454565b60025473ffffffffffffffffffffffffffffffffffffffff1615612c84576002546040517f51cff8d900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906351cff8d990612c519033906004016141de565b600060405180830381600087803b158015612c6b57600080fd5b505af1158015612c7f573d6000803e3d6000fd5b505050505b80548390600090612ca16b204fce5e3e2502611000000084614c87565b612cab9190614c4e565b9050612cb561380b565b612cbe336139e2565b84158015612ccc5750600084115b15612d0d576000612cdb611930565b90508060075486612cec9190614c87565b612cf69190614c4e565b8454909350831115612d0757835492505b50612d34565b82546b204fce5e3e2502611000000090612d279083614c87565b612d319190614c4e565b91505b600060075483612d42611930565b612d4c9190614c87565b612d569190614c4e565b905082846000016000828254612d6c9190614cc4565b925050819055508260076000828254612d859190614cc4565b90915550503360009081526005602052604090205460ff16158015612dba57506018548460010154612db79190614c36565b42105b15612e4757601554612dcb33612b11565b15612dd557506016545b6000612710612de48385614c87565b612dee9190614c4e565b600954909150612e389073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b612e428184614cc4565b925050505b612e8873ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163383613732565b835415612eba57600754612e9a611930565b8554612ea69190614c87565b612eb09190614c4e565b6002850155612ec2565b600060028501555b426003850155612ed133613e53565b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688285604051612f19929190614bcc565b60405180910390a2505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080541580612f5c5750600084115b15612fa0576509184e72a0008411612fa0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061483a565b600581015483904211612ffe578415612fdd574260048301556008820154600d8054600090612fd0908490614cc4565b9091555050600060088301555b81600401548260050154612ff19190614cc4565b612ffb9082614c36565b90505b83158061300e575062093a808110155b613044576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614621565b600f54811115613080576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906145b3565b60025473ffffffffffffffffffffffffffffffffffffffff161561312b576002546040517f0efe6a8b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630efe6a8b906130f890869089908990600401614256565b600060405180830381600087803b15801561311257600080fd5b505af1158015613126573d6000803e3d6000fd5b505050505b61313361380b565b6007546131905760006131446113ac565b60095490915061318e9073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b505b613199836139e2565b83156132105742826005015410156131c85742600483018190556131be908590614c36565b60058301556131e2565b838260050160008282546131dc9190614c36565b90915550505b6007820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b60008060008061321e611930565b9050881561326c5761326873ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001688308c612a4a565b8892505b8554158015906132805750600786015460ff165b156132f95760075486546132949083614c87565b61329e9190614c4e565b91506132aa8284614c36565b92508560000154600760008282546132c29190614cc4565b90915550506000865560048601544214156132f95760088601829055600d80548391906000906132f3908490614c36565b90915550505b600754156133295761330b8282614cc4565b6007546133189085614c87565b6133229190614c4e565b935061332d565b8293505b8560040154866005015411156134b0576000601054601254886004015489600501546133599190614cc4565b6133639190614c87565b61336d9190614c4e565b9050600064e8d4a510006133818784614c87565b61338b9190614c4e565b90506133978187614c36565b9550858860000160008282546133ad9190614c36565b909155506000905064e8d4a510006133c58785614c87565b6133cf9190614c4e565b9050808960060160008282546133e59190614c36565b9250508190555080600c60008282546133fe9190614c36565b925050819055508b8960080160008282546134199190614c36565b925050819055508b600d60008282546134329190614c36565b925050819055508973ffffffffffffffffffffffffffffffffffffffff167f2b943276e5d747f6f7dd46d3b880d8874cb8d6b9b88ca1903990a2738e7dc7a18a600801548b600001548c600401548d6005015461348f9190614cc4565b426040516134a09493929190614bda565b60405180910390a25050506134ca565b838660000160008282546134c49190614c36565b90915550505b60008911806134d95750600088115b156134e5574260018701555b83600760008282546134f79190614c36565b9091555050600686015460075461350c611930565b88546135189190614c87565b6135229190614c4e565b61352c9190614cc4565b600287015542600387015561354087613e53565b8673ffffffffffffffffffffffffffffffffffffffff167f7162984403f6c73c8639375d45a9187dfd04602231bd8e587c415718b5f7e5f98a868b4260405161358c9493929190614bda565b60405180910390a2505050505050505050565b6135a761160d565b61192e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614352565b6135e561359f565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa613636613751565b60405161364391906141de565b60405180910390a1565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6136ca612b17565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613636613751565b61111d8363a9059cbb60e01b8484604051602401612a6b929190614230565b3390565b60006137b7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16613f4d9092919063ffffffff16565b80519091501561111d57808060200190518101906137d59190614155565b61111d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614a51565b600b546040517fc799b59d00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163c799b59d91613883913090600401614ba8565b60206040518083038186803b15801561389b57600080fd5b505afa1580156138af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138d39190614189565b905080156110225760006138e56113ac565b600b546040517f441a3e7000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163441a3e709161395e91600090600401614bcc565b600060405180830381600087803b15801561397857600080fd5b505af115801561398c573d6000803e3d6000fd5b50505050600061399a6113ac565b9050337fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba6139c88484614cc4565b6040516139d59190614b9f565b60405180910390a2505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090208054156125f657600781015460ff1615613cda57600081600601546007548360000154613a32611930565b613a3c9190614c87565b613a469190614c4e565b613a509190614cc4565b90508160060154600c6000828254613a689190614cc4565b909155505060006006830181905582546007805491929091613a8b908490614cc4565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526006602052604090205460ff16158015613ad6575042600e548360050154613ad49190614c36565b105b15613bb5576000826008015482613aed9190614cc4565b90506000600e54846005015442613b049190614cc4565b613b0e9190614cc4565b9050601154811115613b1f57506011545b600060115460175483613b329190614c87565b613b3c9190614c4e565b9050600064e8d4a51000613b508386614c87565b613b5a9190614c4e565b600954909150613ba49073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b613bae8186614cc4565b9450505050505b6000613bbf611930565b90506000600754600014613bf557613bd78383614cc4565b600754613be49085614c87565b613bee9190614c4e565b9050613bf8565b50815b80845560078054829190600090613c10908490614c36565b90915550506005840154421115613cd2576007840180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600060048501819055600585018190556008850154600d805491929091613c73908490614cc4565b90915550506000600885015560405173ffffffffffffffffffffffffffffffffffffffff8616907ff7870c5b224cbc19873599e46ccfc7103934650509b1af0c3ce90138377c200490613cc99086904290614bcc565b60405180910390a25b5050506125f6565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205460ff166125f6576000600754613d14611930565b8354613d209190614c87565b613d2a9190614c4e565b9050816000015460076000828254613d429190614cc4565b909155505060008083556002830154613d5b9083614cc4565b601354909150613d6a85612b11565b15613d7457506014545b6000612710613d838385614c87565b613d8d9190614c4e565b90508015613de957600954613ddc9073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b613de68185614cc4565b93505b6000613df3611930565b90506000600754600014613e2957613e0b8683614cc4565b600754613e189088614c87565b613e229190614c4e565b9050613e2c565b50845b80875560078054829190600090613e44908490614c36565b90915550505050505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16156110225773ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040812060048101546005820154919291613ead9190614cc4565b6001546008840154600d546010546040517f87356ef700000000000000000000000000000000000000000000000000000000815294955073ffffffffffffffffffffffffffffffffffffffff909316936387356ef793613f169389939092889290600401614284565b600060405180830381600087803b158015613f3057600080fd5b505af1158015613f44573d6000803e3d6000fd5b50505050505050565b6060613f5c8484600085613f66565b90505b9392505050565b606082471015613fa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614658565b613fab85614067565b613fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906149bd565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161400a91906141c2565b60006040518083038185875af1925050503d8060008114614047576040519150601f19603f3d011682016040523d82523d6000602084013e61404c565b606091505b509150915061405c828286614083565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60608315614092575081613f5f565b8251156140a25782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097291906142ca565b6000602082840312156140e7578081fd5b8135613f5f81614d36565b60008060408385031215614104578081fd5b823561410f81614d36565b9150602083013561411f81614d58565b809150509250929050565b6000806040838503121561413c578182fd5b823561414781614d36565b946020939093013593505050565b600060208284031215614166578081fd5b8151613f5f81614d58565b600060208284031215614182578081fd5b5035919050565b60006020828403121561419a578081fd5b5051919050565b600080604083850312156141b3578182fd5b50508035926020909101359150565b600082516141d4818460208701614cdb565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff959095168552602085019390935260408401919091526060830152608082015260a00190565b901515815260200190565b60006020825282518060208401526142e9816040850160208701614cdb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526012908201527f4e6f7468696e6720746f206465706f7369740000000000000000000000000000604082015260600190565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b60208082526013908201527f4e6f7468696e6720746f20776974686472617700000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f4455524154494f4e5f464143544f522063616e6e6f74206265207a65726f0000604082015260600190565b6020808252600d908201527f5374696c6c20696e206c6f636b00000000000000000000000000000000000000604082015260600190565b60208082526033908201527f424f4f53545f5745494748542063616e6e6f74206265206d6f7265207468616e60408201527f20424f4f53545f5745494748545f4c494d495400000000000000000000000000606082015260800190565b60208082526015908201527f42616c616e6365206d7573742065786365656420300000000000000000000000604082015260600190565b60208082526025908201527f546f6b656e2063616e6e6f742062652073616d65206173206465706f7369742060408201527f746f6b656e000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f576974686472617720616d6f756e7420657863656564732062616c616e636500604082015260600190565b6020808252601c908201527f4d6178696d756d206c6f636b20706572696f6420657863656564656400000000604082015260600190565b6020808252601a908201527f4e6f74206f70657261746f72206f722053686477206f776e6572000000000000604082015260600190565b6020808252601f908201527f4d696e696d756d206c6f636b20706572696f64206973206f6e65207765656b00604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526036908201527f706572666f726d616e63654665652063616e6e6f74206265206d6f726520746860408201527f616e204d41585f504552464f524d414e43455f46454500000000000000000000606082015260800190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60208082526016908201527f43616e6e6f74206265207a65726f206164647265737300000000000000000000604082015260600190565b60208082526026908201527f4455524154494f4e5f464143544f525f4f5645524455452063616e6e6f74206260408201527f65207a65726f0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602e908201527f6f7665726475654665652063616e6e6f74206265206d6f7265207468616e204d60408201527f41585f4f5645524455455f464545000000000000000000000000000000000000606082015260800190565b60208082526036908201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460408201527f68616e204d494e5f4445504f5349545f414d4f554e5400000000000000000000606082015260800190565b6020808252603d908201527f4d41585f4c4f434b5f4455524154494f4e2063616e6e6f74206265206d6f726560408201527f207468616e204d41585f4c4f434b5f4455524154494f4e5f4c494d4954000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f61646d696e3a207775743f000000000000000000000000000000000000000000604082015260600190565b60208082526038908201527f576974686472617720616d6f756e74206d75737420626520677265617465722060408201527f7468616e204d494e5f57495448445241575f414d4f554e540000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252603d908201527f7769746864726177466565506572696f642063616e6e6f74206265206d6f726560408201527f207468616e204d41585f57495448445241575f4645455f504552494f44000000606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526030908201527f77697468647261774665652063616e6e6f74206265206d6f7265207468616e2060408201527f4d41585f57495448445241575f46454500000000000000000000000000000000606082015260800190565b60208082526023908201527f554e4c4f434b5f465245455f4455524154494f4e2063616e6e6f74206265207a60408201527f65726f0000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f43616e6e6f7420756e6c6f636b20796574000000000000000000000000000000604082015260600190565b90815260200190565b91825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b918252602082015260400190565b93845260208401929092526040830152606082015260800190565b988952602089019790975260408801959095526060870193909352608086019190915260a085015260c0840152151560e08301526101008201526101200190565b60008219821115614c4957614c49614d07565b500190565b600082614c82577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614cbf57614cbf614d07565b500290565b600082821015614cd657614cd6614d07565b500390565b60005b83811015614cf6578181015183820152602001614cde565b83811115612aed5750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461102257600080fd5b801515811461102257600080fdfea26469706673582212209148be7dbd4a79d027a9f9903f87a5cb14661085db3d662088dd1dffc4d82e9664736f6c63430008010033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH3 0x93A80 PUSH1 0xE SSTORE PUSH4 0x1E13380 PUSH1 0xF SSTORE PUSH4 0x1E13380 PUSH1 0x10 SSTORE PUSH3 0xED4E00 PUSH1 0x11 SSTORE PUSH5 0xE8D4A51000 PUSH1 0x12 SSTORE PUSH1 0xC8 PUSH1 0x13 SSTORE PUSH1 0xC8 PUSH1 0x14 SSTORE PUSH1 0xA PUSH1 0x15 SSTORE PUSH1 0xA PUSH1 0x16 SSTORE PUSH5 0xE8D4A51000 PUSH1 0x17 SSTORE PUSH3 0x3F480 PUSH1 0x18 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5021 CODESIZE SUB DUP1 PUSH3 0x5021 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x7F SWAP2 PUSH3 0x157 JUMP JUMPDEST PUSH3 0x93 PUSH3 0x8D PUSH3 0x103 JUMP JUMPDEST PUSH3 0x107 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP7 DUP8 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP5 SWAP1 SWAP6 SHL SWAP1 SWAP4 AND PUSH1 0xA0 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP3 DUP5 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0xB SSTORE PUSH3 0x1F7 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x170 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x17D DUP2 PUSH3 0x1DE JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP PUSH3 0x190 DUP2 PUSH3 0x1DE JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP6 POP PUSH3 0x1A3 DUP2 PUSH3 0x1DE JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x1B6 DUP2 PUSH3 0x1DE JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x1C9 DUP2 PUSH3 0x1DE JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x4D9C PUSH3 0x285 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xC60 ADD MSTORE DUP2 DUP2 PUSH2 0xD1D ADD MSTORE DUP2 DUP2 PUSH2 0x208E ADD MSTORE DUP2 DUP2 PUSH2 0x23A0 ADD MSTORE DUP2 DUP2 PUSH2 0x384E ADD MSTORE PUSH2 0x3928 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x13EC ADD MSTORE DUP2 DUP2 PUSH2 0x1937 ADD MSTORE DUP2 DUP2 PUSH2 0x24AA ADD MSTORE DUP2 DUP2 PUSH2 0x29AB ADD MSTORE DUP2 DUP2 PUSH2 0x2E0F ADD MSTORE DUP2 DUP2 PUSH2 0x2E61 ADD MSTORE DUP2 DUP2 PUSH2 0x3165 ADD MSTORE DUP2 DUP2 PUSH2 0x3240 ADD MSTORE DUP2 DUP2 PUSH2 0x3B7B ADD MSTORE PUSH2 0x3DB3 ADD MSTORE PUSH2 0x4D9C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x514 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87788782 GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xC6ED51BE GT PUSH2 0x16B JUMPI DUP1 PUSH4 0xE464C623 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF851A440 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x903 JUMPI DUP1 PUSH4 0xFD253B64 EQ PUSH2 0x90B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xF786B958 EQ PUSH2 0x8E8 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xE73008BC GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE73008BC EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x8C2 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xE464C623 EQ PUSH2 0x8A2 JUMPI DUP1 PUSH4 0xE4B37EF5 EQ PUSH2 0x8AA JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xDEF68A9C GT PUSH2 0x13A JUMPI DUP1 PUSH4 0xDF10B4E6 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x887 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x88F JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0xDEF7869D EQ PUSH2 0x86C JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xC6ED51BE EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xCC9CFBA1 EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x779 JUMPI DUP1 PUSH4 0xD4B0DE2F EQ PUSH2 0x851 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xACAF88CD GT PUSH2 0x219 JUMPI DUP1 PUSH4 0xBC3D652A GT PUSH2 0x1CD JUMPI DUP1 PUSH4 0xBDCA9165 GT PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xBDCA9165 EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xBEBA0FA0 EQ PUSH2 0x810 JUMPI DUP1 PUSH4 0xC54D349C EQ PUSH2 0x823 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xBC3D652A EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0xBC75F4B8 EQ PUSH2 0x800 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xB6857844 GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0xB6857844 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xB6AC642A EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0xBB9F408D EQ PUSH2 0x7E5 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xACAF88CD EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x7BF JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x948A03F2 GT PUSH2 0x270 JUMPI DUP1 PUSH4 0xA3639B39 GT PUSH2 0x255 JUMPI DUP1 PUSH4 0xA3639B39 EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0xA5834E06 EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0xAAADA5DA EQ PUSH2 0x7AF JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x948A03F2 EQ PUSH2 0x779 JUMPI DUP1 PUSH4 0x95DC14E1 EQ PUSH2 0x781 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x87788782 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0x87D4BDA9 EQ PUSH2 0x74B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0x93C99E6A EQ PUSH2 0x766 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x4E4DE1E9 GT PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x668679BA GT PUSH2 0x35A JUMPI DUP1 PUSH4 0x731FF24A GT PUSH2 0x30E JUMPI DUP1 PUSH4 0x78B4330F GT PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x78B4330F EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x73B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x731FF24A EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x72B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x70897B23 GT PUSH2 0x33F JUMPI DUP1 PUSH4 0x70897B23 EQ PUSH2 0x700 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x71B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x668679BA EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x6ED JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 GT PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x61D027B3 GT PUSH2 0x396 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x61FA6368 EQ PUSH2 0x6BF JUMPI DUP1 PUSH4 0x62122F5A EQ PUSH2 0x6C7 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AF JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x4E4DE1E9 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0x4F1BFC9E EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x51FB26DF EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x5521E9BF EQ PUSH2 0x687 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x2CFC5F01 GT PUSH2 0x490 JUMPI DUP1 PUSH4 0x3EB78874 GT PUSH2 0x444 JUMPI DUP1 PUSH4 0x3FEC4E32 GT PUSH2 0x429 JUMPI DUP1 PUSH4 0x3FEC4E32 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0x423B93ED EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x65C JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x3EB78874 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x621 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x2F6C493C GT PUSH2 0x475 JUMPI DUP1 PUSH4 0x2F6C493C EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x35981921 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x611 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x2CFC5F01 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x5D8 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x1959A002 GT PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x1EA30FEF GT PUSH2 0x4CC JUMPI DUP1 PUSH4 0x1EA30FEF EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x1EFAC1B8 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0x29A5CFD6 EQ PUSH2 0x5BD JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x58F JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x1E81326 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x5A9F274 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xC59696B EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x14FF3039 EQ PUSH2 0x554 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x521 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x521 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x552 PUSH2 0x54D CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x552 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x57A PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BF5 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x521 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x5B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x521 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x412A JUMP JUMPDEST PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x521 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x552 PUSH2 0x5E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x63C PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x42BF JUMP JUMPDEST PUSH2 0x552 PUSH2 0x657 CALLDATASIZE PUSH1 0x4 PUSH2 0x40F2 JUMP JUMPDEST PUSH2 0x128F JUMP JUMPDEST PUSH2 0x521 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x552 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x40F2 JUMP JUMPDEST PUSH2 0x1476 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1593 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH2 0x63C PUSH2 0x160D JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x162E JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x63C PUSH2 0x6E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x177A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x6FB CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x178F JUMP JUMPDEST PUSH2 0x552 PUSH2 0x70E CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x185A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x552 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x63C PUSH2 0x759 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x552 PUSH2 0x774 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1E37 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7CD CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1FCA JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x521 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x81E CALLDATASIZE PUSH1 0x4 PUSH2 0x40F2 JUMP JUMPDEST PUSH2 0x20BC JUMP JUMPDEST PUSH2 0x552 PUSH2 0x831 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x844 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x867 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x2457 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x87A CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x521 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x2714 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x89D CALLDATASIZE PUSH1 0x4 PUSH2 0x41A1 JUMP JUMPDEST PUSH2 0x2730 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2794 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x279A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x8D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x27A0 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x8E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x286B JUMP JUMPDEST PUSH2 0x552 PUSH2 0x8F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x28C9 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x29A9 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x29CD JUMP JUMPDEST PUSH4 0x5265C00 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 DUP2 GT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x47DD JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF4BD1C5978320077E792AFBB3911E8CAB1325CE28A6B3E67F9067A1D80692961 SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4AAE JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCAB352E118188B8A2F20A2E8C4CE1241CE2C1740AAC4F17C5B0831E65824D8EF SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP8 SWAP5 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP10 JUMP JUMPDEST PUSH2 0xB16 PUSH2 0x29D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB6B SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x44E8 JUMP JUMPDEST PUSH2 0xC16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0xC8A SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4230 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDC SWAP2 SWAP1 PUSH2 0x4155 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0xE2BBB15800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0xE2BBB158 SWAP2 PUSH2 0xD53 SWAP2 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14 SWAP3 POP PUSH1 0x0 SWAP2 POP LOG1 POP POP JUMP JUMPDEST PUSH6 0x9184E72A000 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH3 0x93A80 DUP2 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x49F4 JUMP JUMPDEST PUSH1 0x18 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB89DDADDB7435BE26824CB48D2D0186C9525A2E1EC057ABCB502704CDC0686CC SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0xEB2 JUMPI DUP1 SLOAD SWAP3 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI POP PUSH1 0x18 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 PUSH2 0xEF1 PUSH2 0x239B JUMP JUMPDEST PUSH2 0xEF9 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xF1A PUSH5 0xE8D4A51000 DUP8 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF31 DUP8 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 SLOAD DUP7 SLOAD PUSH2 0xF45 SWAP1 DUP8 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0xF77 DUP5 DUP5 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 SWAP2 POP PUSH2 0xF90 CALLER PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0xF9A JUMPI POP PUSH1 0x16 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xFA9 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xFB3 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP8 POP PUSH2 0xFC8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xFDD PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1017 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH1 0x0 PUSH2 0x2B56 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x1061 JUMPI POP PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x109F PUSH2 0x2B17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x10DB JUMPI POP TIMESTAMP DUP2 PUSH1 0x5 ADD SLOAD LT JUMPDEST PUSH2 0x1111 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4B68 JUMP JUMPDEST PUSH2 0x111D PUSH1 0x0 DUP1 DUP6 PUSH2 0x2F29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4780 JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x18B6D179114082D7EDA9837E15A39EB30032D5F3DF00487A67541398F48FABFE SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1247 PUSH2 0x359F JUMP JUMPDEST PUSH2 0x124F PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x12E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x132D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1421 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x144D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1471 SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A7 PUSH2 0x2B17 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP2 GT PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4960 JUMP JUMPDEST PUSH2 0x1022 PUSH1 0x0 DUP3 PUSH2 0x2B56 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1704 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAF38F30BE8D095BC1461196DB21930B7D89226E57B0167F9D6ABE951C53F3332 SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1797 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x17E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x71614071B88DEE5E0B2AE578A9DD7B2EBBE9AE832BA419DC0242CD065A290B6C SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x18E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x46B5 JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xEFEAFCF03E479A9566D7EF321B4816DE0BA19CFA3CD0FAE2F8C5F4A0AFB342C4 SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH2 0x1924 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x192E PUSH1 0x0 PUSH2 0x364D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198E SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19DE SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST PUSH2 0x1471 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x0 EQ PUSH2 0x1A42 JUMPI PUSH1 0x7 SLOAD PUSH2 0x1A0F PUSH2 0x239B JUMP JUMPDEST PUSH2 0x1A17 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x1A21 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH2 0x1A33 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x1471 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1AA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1AA8 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x192E SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1B7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP2 GT ISZERO PUSH2 0x1BBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x448B JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7666DFFF8C3377938E522B4EED3AFF079973A976F95969DB60A406D49F40DA4E SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C33 JUMPI POP PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1C65 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C81 JUMPI POP TIMESTAMP PUSH1 0xE SLOAD DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x1C7F SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1D60 JUMPI PUSH1 0x0 PUSH2 0x1C90 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x1C98 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x1CA2 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 SLOAD DUP5 SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x1CBC SWAP1 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x1CD0 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x8 ADD SLOAD DUP3 PUSH2 0x1CE4 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE SLOAD DUP6 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH2 0x1CFB SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x1D16 JUMPI POP PUSH1 0x11 SLOAD JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0x17 SLOAD DUP4 PUSH2 0x1D29 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1D33 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x1D47 DUP4 DUP7 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP8 POP PUSH2 0x1D66 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1DBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1DF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x441D JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9478EB023AAC0A7D58A4E935377056BF27CF5B72A2300725F831817A8F62FBDE SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E45 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1E92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0x1F95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4AAE JUMP JUMPDEST PUSH1 0x15 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD5FE46099FA396290A7F57E36C3C3C8774E2562C18ED5D1DCC0FA75071E03F1D SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x201B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x2057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x46B5 JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC5D25457B67B87678C987375AF13F6E50BEB3AD7BFD009DA26766AE986EAA20D SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x215A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x222A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4B0B JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF84BF2B901CFC02956D4E69556D7448CEF4EA13587E7714DBA7C6D697091E7AD SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x22D3 JUMPI POP PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2305 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1D60 JUMPI PUSH1 0x0 PUSH2 0x2314 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x231C PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x2326 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x233D SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2347 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH2 0x236A DUP8 PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0x2374 JUMPI POP PUSH1 0x14 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0x2383 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x238D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP7 POP PUSH2 0x1D66 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC799B59D PUSH1 0xB SLOAD ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23FB SWAP3 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2427 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x244B SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x24A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x252E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x451F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2583 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x259B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25D3 SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP PUSH2 0x25F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER DUP4 PUSH2 0x3732 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2698 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8F49A182922022D9119A1A6AEECA151B4A5665E86BD61C1FF32E152D459558B2 SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2738 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x2747 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x277D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x431B JUMP JUMPDEST PUSH2 0x25F6 DUP3 DUP3 CALLER PUSH2 0x2F29 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27A8 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x27F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAFA147634B29E2C7BD53CE194256B9F41CFB9BA3036F2B822FDD1D965BEEA086 SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH2 0x2873 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x28C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x43C0 JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH2 0x364D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x291A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH4 0x5265C00 DUP2 GT ISZERO PUSH2 0x2958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4897 JUMP JUMPDEST PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCAB2F3455B51B6CA5377E84FCCD0F890B6F6CA36C02E18B6D36CB34F469FE4FE SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP2 JUMP JUMPDEST PUSH2 0x29DF PUSH2 0x3751 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29FD PUSH2 0x1B0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x48F4 JUMP JUMPDEST PUSH2 0x2AED DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A6B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3755 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFE DUP3 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x2B07 DUP4 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0xFC8 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B1F PUSH2 0x160D JUMP JUMPDEST ISZERO PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4712 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x2BA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x457C JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x5 ADD SLOAD LT PUSH2 0x2BDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4454 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x2C84 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x51CFF8D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x51CFF8D9 SWAP1 PUSH2 0x2C51 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 SLOAD DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2CA1 PUSH12 0x204FCE5E3E25026110000000 DUP5 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2CAB SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB5 PUSH2 0x380B JUMP JUMPDEST PUSH2 0x2CBE CALLER PUSH2 0x39E2 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x2CCC JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x2D0D JUMPI PUSH1 0x0 PUSH2 0x2CDB PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 SLOAD DUP7 PUSH2 0x2CEC SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2CF6 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP4 POP DUP4 GT ISZERO PUSH2 0x2D07 JUMPI DUP4 SLOAD SWAP3 POP JUMPDEST POP PUSH2 0x2D34 JUMP JUMPDEST DUP3 SLOAD PUSH12 0x204FCE5E3E25026110000000 SWAP1 PUSH2 0x2D27 SWAP1 DUP4 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2D31 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x2D42 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x2D4C SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2D56 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP3 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D6C SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D85 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2DBA JUMPI POP PUSH1 0x18 SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x2DB7 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x2E47 JUMPI PUSH1 0x15 SLOAD PUSH2 0x2DCB CALLER PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0x2DD5 JUMPI POP PUSH1 0x16 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0x2DE4 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2DEE SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x2E38 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST PUSH2 0x2E42 DUP2 DUP5 PUSH2 0x4CC4 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH2 0x2E88 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER DUP4 PUSH2 0x3732 JUMP JUMPDEST DUP4 SLOAD ISZERO PUSH2 0x2EBA JUMPI PUSH1 0x7 SLOAD PUSH2 0x2E9A PUSH2 0x1930 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2EA6 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2EB0 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x2EC2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x2ED1 CALLER PUSH2 0x3E53 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2F19 SWAP3 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO DUP1 PUSH2 0x2F5C JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x2FA0 JUMPI PUSH6 0x9184E72A000 DUP5 GT PUSH2 0x2FA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x483A JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD DUP4 SWAP1 TIMESTAMP GT PUSH2 0x2FFE JUMPI DUP5 ISZERO PUSH2 0x2FDD JUMPI TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2FD0 SWAP1 DUP5 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x8 DUP4 ADD SSTORE JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x2FF1 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x2FFB SWAP1 DUP3 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 ISZERO DUP1 PUSH2 0x300E JUMPI POP PUSH3 0x93A80 DUP2 LT ISZERO JUMPDEST PUSH2 0x3044 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4621 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 GT ISZERO PUSH2 0x3080 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x312B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xEFE6A8B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xEFE6A8B SWAP1 PUSH2 0x30F8 SWAP1 DUP7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4256 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3126 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x3133 PUSH2 0x380B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3190 JUMPI PUSH1 0x0 PUSH2 0x3144 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x318E SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST POP JUMPDEST PUSH2 0x3199 DUP4 PUSH2 0x39E2 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3210 JUMPI TIMESTAMP DUP3 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x31C8 JUMPI TIMESTAMP PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0x31BE SWAP1 DUP6 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SSTORE PUSH2 0x31E2 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x31DC SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x321E PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP DUP9 ISZERO PUSH2 0x326C JUMPI PUSH2 0x3268 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP9 ADDRESS DUP13 PUSH2 0x2A4A JUMP JUMPDEST DUP9 SWAP3 POP JUMPDEST DUP6 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3280 JUMPI POP PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x32F9 JUMPI PUSH1 0x7 SLOAD DUP7 SLOAD PUSH2 0x3294 SWAP1 DUP4 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x329E SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP2 POP PUSH2 0x32AA DUP3 DUP5 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x0 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x32C2 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 SSTORE PUSH1 0x4 DUP7 ADD SLOAD TIMESTAMP EQ ISZERO PUSH2 0x32F9 JUMPI PUSH1 0x8 DUP7 ADD DUP3 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x32F3 SWAP1 DUP5 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x3329 JUMPI PUSH2 0x330B DUP3 DUP3 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3318 SWAP1 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3322 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP4 POP PUSH2 0x332D JUMP JUMPDEST DUP3 SWAP4 POP JUMPDEST DUP6 PUSH1 0x4 ADD SLOAD DUP7 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x34B0 JUMPI PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x12 SLOAD DUP9 PUSH1 0x4 ADD SLOAD DUP10 PUSH1 0x5 ADD SLOAD PUSH2 0x3359 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x3363 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x336D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x3381 DUP8 DUP5 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x338B SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x3397 DUP2 DUP8 PUSH2 0x4C36 JUMP JUMPDEST SWAP6 POP DUP6 DUP9 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33AD SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH5 0xE8D4A51000 PUSH2 0x33C5 DUP8 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x33CF SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP1 DUP10 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33E5 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33FE SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP12 DUP10 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3419 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP12 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3432 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2B943276E5D747F6F7DD46D3B880D8874CB8D6B9B88CA1903990A2738E7DC7A1 DUP11 PUSH1 0x8 ADD SLOAD DUP12 PUSH1 0x0 ADD SLOAD DUP13 PUSH1 0x4 ADD SLOAD DUP14 PUSH1 0x5 ADD SLOAD PUSH2 0x348F SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x34A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x34CA JUMP JUMPDEST DUP4 DUP7 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34C4 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP10 GT DUP1 PUSH2 0x34D9 JUMPI POP PUSH1 0x0 DUP9 GT JUMPDEST ISZERO PUSH2 0x34E5 JUMPI TIMESTAMP PUSH1 0x1 DUP8 ADD SSTORE JUMPDEST DUP4 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34F7 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x350C PUSH2 0x1930 JUMP JUMPDEST DUP9 SLOAD PUSH2 0x3518 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3522 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x352C SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE TIMESTAMP PUSH1 0x3 DUP8 ADD SSTORE PUSH2 0x3540 DUP8 PUSH2 0x3E53 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7162984403F6C73C8639375D45A9187DFD04602231BD8E587C415718B5F7E5F9 DUP11 DUP7 DUP12 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x358C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x35A7 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4352 JUMP JUMPDEST PUSH2 0x35E5 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3636 PUSH2 0x3751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3643 SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x36CA PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3636 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x111D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A6B SWAP3 SWAP2 SWAP1 PUSH2 0x4230 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3F4D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x111D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x37D5 SWAP2 SWAP1 PUSH2 0x4155 JUMP JUMPDEST PUSH2 0x111D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4A51 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0xC799B59D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0xC799B59D SWAP2 PUSH2 0x3883 SWAP2 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D3 SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 PUSH2 0x38E5 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x441A3E70 SWAP2 PUSH2 0x395E SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x398C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x399A PUSH2 0x13AC JUMP JUMPDEST SWAP1 POP CALLER PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA PUSH2 0x39C8 DUP5 DUP5 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D5 SWAP2 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x25F6 JUMPI PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3CDA JUMPI PUSH1 0x0 DUP2 PUSH1 0x6 ADD SLOAD PUSH1 0x7 SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3A32 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x3A3C SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3A46 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x3A50 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 ADD SLOAD PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A68 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x6 DUP4 ADD DUP2 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x3A8B SWAP1 DUP5 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3AD6 JUMPI POP TIMESTAMP PUSH1 0xE SLOAD DUP4 PUSH1 0x5 ADD SLOAD PUSH2 0x3AD4 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3BB5 JUMPI PUSH1 0x0 DUP3 PUSH1 0x8 ADD SLOAD DUP3 PUSH2 0x3AED SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE SLOAD DUP5 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH2 0x3B04 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x3B0E SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x3B1F JUMPI POP PUSH1 0x11 SLOAD JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0x17 SLOAD DUP4 PUSH2 0x3B32 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3B3C SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x3B50 DUP4 DUP7 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x3BA4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST PUSH2 0x3BAE DUP2 DUP7 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x3BBF PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x0 EQ PUSH2 0x3BF5 JUMPI PUSH2 0x3BD7 DUP4 DUP4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3BE4 SWAP1 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3BEE SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF8 JUMP JUMPDEST POP DUP2 JUMPDEST DUP1 DUP5 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3C10 SWAP1 DUP5 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x3CD2 JUMPI PUSH1 0x7 DUP5 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x5 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x8 DUP6 ADD SLOAD PUSH1 0xD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x3C73 SWAP1 DUP5 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x8 DUP6 ADD SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH32 0xF7870C5B224CBC19873599E46CCFC7103934650509B1AF0C3CE90138377C2004 SWAP1 PUSH2 0x3CC9 SWAP1 DUP7 SWAP1 TIMESTAMP SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x25F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x25F6 JUMPI PUSH1 0x0 PUSH1 0x7 SLOAD PUSH2 0x3D14 PUSH2 0x1930 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x3D20 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3D2A SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D42 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x3D5B SWAP1 DUP4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH2 0x3D6A DUP6 PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0x3D74 JUMPI POP PUSH1 0x14 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0x3D83 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3D8D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3DE9 JUMPI PUSH1 0x9 SLOAD PUSH2 0x3DDC SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST PUSH2 0x3DE6 DUP2 DUP6 PUSH2 0x4CC4 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH2 0x3DF3 PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x0 EQ PUSH2 0x3E29 JUMPI PUSH2 0x3E0B DUP7 DUP4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3E18 SWAP1 DUP9 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3E22 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x3E2C JUMP JUMPDEST POP DUP5 JUMPDEST DUP1 DUP8 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3E44 SWAP1 DUP5 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1022 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x3EAD SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 DUP5 ADD SLOAD PUSH1 0xD SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH32 0x87356EF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP5 SWAP6 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP4 PUSH4 0x87356EF7 SWAP4 PUSH2 0x3F16 SWAP4 DUP10 SWAP4 SWAP1 SWAP3 DUP9 SWAP3 SWAP1 PUSH1 0x4 ADD PUSH2 0x4284 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F5C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3F66 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3FA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4658 JUMP JUMPDEST PUSH2 0x3FAB DUP6 PUSH2 0x4067 JUMP JUMPDEST PUSH2 0x3FE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x400A SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4047 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x404C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x405C DUP3 DUP3 DUP7 PUSH2 0x4083 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4092 JUMPI POP DUP2 PUSH2 0x3F5F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x40A2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x42CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40E7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F5F DUP2 PUSH2 0x4D36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4104 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x410F DUP2 PUSH2 0x4D36 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x411F DUP2 PUSH2 0x4D58 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x413C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4147 DUP2 PUSH2 0x4D36 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4166 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3F5F DUP2 PUSH2 0x4D58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4182 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x419A JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41B3 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x41D4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4CDB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x42E9 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4455524154494F4E5F464143544F522063616E6E6F74206265207A65726F0000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x5374696C6C20696E206C6F636B00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x424F4F53545F5745494748542063616E6E6F74206265206D6F7265207468616E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20424F4F53545F5745494748545F4C494D495400000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742065786365656420300000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E6E6F742062652073616D65206173206465706F73697420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206C6F636B20706572696F6420657863656564656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F72206F722053686477206F776E6572000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206C6F636B20706572696F64206973206F6E65207765656B00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x706572666F726D616E63654665652063616E6E6F74206265206D6F7265207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E204D41585F504552464F524D414E43455F46454500000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4455524154494F4E5F464143544F525F4F5645524455452063616E6E6F742062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x6F7665726475654665652063616E6E6F74206265206D6F7265207468616E204D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x41585F4F5645524455455F464545000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x68616E204D494E5F4445504F5349545F414D4F554E5400000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4D41585F4C4F434B5F4455524154494F4E2063616E6E6F74206265206D6F7265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207468616E204D41585F4C4F434B5F4455524154494F4E5F4C494D4954000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E74206D757374206265206772656174657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7468616E204D494E5F57495448445241575F414D4F554E540000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x7769746864726177466565506572696F642063616E6E6F74206265206D6F7265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207468616E204D41585F57495448445241575F4645455F504552494F44000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261774665652063616E6E6F74206265206D6F7265207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x4D41585F57495448445241575F46454500000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E4C4F434B5F465245455F4455524154494F4E2063616E6E6F74206265207A PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420756E6C6F636B20796574000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4C49 JUMPI PUSH2 0x4C49 PUSH2 0x4D07 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4C82 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4CBF JUMPI PUSH2 0x4CBF PUSH2 0x4D07 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4CD6 JUMPI PUSH2 0x4CD6 PUSH2 0x4D07 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4CF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4CDE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2AED JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0x48 0xBE PUSH30 0xBD4A79D027A9F9903F87A5CB14661085DB3D662088DD1DFFC4D82E966473 PUSH16 0x6C634300080100330000000000000000 ",
							"sourceMap": "360:33632:7:-:0;;;2798:7;2760:45;;2857:8;2822:43;;2917:8;2884:41;;3031:8;2990:49;;3124:10;3094:40;;3183:3;3151:35;;3239:3;3199:43;;3284:2;3255:31;;3338:2;3301:39;;3383:10;3355:38;;3443:8;3408:43;;5311:373;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;:12::i;:::-;936:18;:32::i;:::-;1006:5:1;996:15;;-1:-1:-1;;;;996:15:1;;;-1:-1:-1;;;;;;5507:14:7;;;;;;;;5532:28;;;;;;;;;5571:5;:14;;-1:-1:-1;;;;;5571:14:7;;;-1:-1:-1;;;;;;5571:14:7;;;;;;;5596:8;:20;;;;;;;;;;;;;;;5627:8;:20;;;;;;;;;;;5658:11;:18;360:33632;;640:96:6;719:10;640:96;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;14:907:11:-;;;;;;;258:3;246:9;237:7;233:23;229:33;226:2;;;280:6;272;265:22;226:2;317:9;311:16;336:33;363:5;336:33;:::i;:::-;438:2;423:18;;417:25;388:5;;-1:-1:-1;451:35:11;417:25;451:35;:::i;:::-;557:2;542:18;;536:25;505:7;;-1:-1:-1;570:35:11;536:25;570:35;:::i;:::-;676:2;661:18;;655:25;624:7;;-1:-1:-1;689:35:11;655:25;689:35;:::i;:::-;795:3;780:19;;774:26;743:7;;-1:-1:-1;809:35:11;774:26;809:35;:::i;:::-;863:7;853:17;;;910:3;899:9;895:19;889:26;879:36;;216:705;;;;;;;;:::o;926:133::-;-1:-1:-1;;;;;1003:31:11;;993:42;;983:2;;1049:1;1046;1039:12;983:2;973:86;:::o;:::-;360:33632:7;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20573:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:189:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:11"
															},
															"nodeType": "YulIf",
															"src": "94:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "237:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "252:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "262:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "252:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:11",
														"type": ""
													}
												],
												"src": "14:259:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "362:312:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "408:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "417:6:11"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "425:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "410:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "410:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "410:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "383:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "392:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "379:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "379:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "404:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "375:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:32:11"
															},
															"nodeType": "YulIf",
															"src": "372:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "443:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "469:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "456:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "447:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "515:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "488:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "530:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "540:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "530:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "554:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "586:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "597:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "569:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "558:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "634:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "610:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "610:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "610:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "651:17:11",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "661:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "320:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "331:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "343:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "351:6:11",
														"type": ""
													}
												],
												"src": "278:396:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:240:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "812:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "821:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "829:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "814:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "814:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "787:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "796:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "808:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "779:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "779:32:11"
															},
															"nodeType": "YulIf",
															"src": "776:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "847:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "873:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "860:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "851:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "919:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "892:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "892:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "934:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "944:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "934:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "724:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "735:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "755:6:11",
														"type": ""
													}
												],
												"src": "679:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1089:179:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1144:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1152:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1137:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1137:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1137:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1110:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1119:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1106:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1131:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:32:11"
															},
															"nodeType": "YulIf",
															"src": "1099:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1170:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1183:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1174:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1232:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1208:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1247:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1257:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1055:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1066:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1078:6:11",
														"type": ""
													}
												],
												"src": "1011:257:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1357:189:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1403:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1412:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1420:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1405:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1405:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1405:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1374:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:32:11"
															},
															"nodeType": "YulIf",
															"src": "1367:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1438:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1464:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1451:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1442:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1510:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1483:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1483:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1525:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1535:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$298",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1323:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1334:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1346:6:11",
														"type": ""
													}
												],
												"src": "1273:273:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1621:120:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1667:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1676:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1684:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1669:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1669:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1669:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1642:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1638:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1638:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1634:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:32:11"
															},
															"nodeType": "YulIf",
															"src": "1631:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1702:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1725:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1712:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1587:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1598:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1610:6:11",
														"type": ""
													}
												],
												"src": "1551:190:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1827:113:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1873:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1882:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1890:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1875:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1875:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1848:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1857:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1844:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1844:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1840:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:32:11"
															},
															"nodeType": "YulIf",
															"src": "1837:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1908:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1924:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1918:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1908:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1816:6:11",
														"type": ""
													}
												],
												"src": "1746:194:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:171:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2078:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2087:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2095:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2080:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2080:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2080:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2053:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2062:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2074:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2045:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2045:32:11"
															},
															"nodeType": "YulIf",
															"src": "2042:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2136:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2123:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2123:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2155:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2182:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2193:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2165:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1990:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2001:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2013:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2021:6:11",
														"type": ""
													}
												],
												"src": "1945:258:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2345:137:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2355:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2375:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2369:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2359:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2425:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2413:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2413:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2432:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2437:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2391:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:53:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2391:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2453:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2464:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2460:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2453:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2321:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2326:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2337:3:11",
														"type": ""
													}
												],
												"src": "2208:274:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2588:125:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2598:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2610:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2606:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2606:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2598:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2640:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2651:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2651:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:74:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2633:74:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2557:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2568:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2579:4:11",
														"type": ""
													}
												],
												"src": "2487:226:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2875:241:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2885:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2897:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2908:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2893:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2885:4:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2920:52:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2930:42:11",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2924:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2988:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3003:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3011:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2981:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2981:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3035:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3046:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3055:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3063:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3051:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3024:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3087:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3098:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3076:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3076:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2828:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2839:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2847:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2855:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2866:4:11",
														"type": ""
													}
												],
												"src": "2718:398:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3250:168:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3260:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3272:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3283:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3268:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3268:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3260:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3302:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3325:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3295:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:74:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3295:74:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3389:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3400:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3385:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3405:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3378:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3378:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3211:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3222:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3230:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3241:4:11",
														"type": ""
													}
												],
												"src": "3121:297:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3580:211:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3590:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3602:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3613:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3598:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3598:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3590:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3632:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3647:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3655:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3625:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:74:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3625:74:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3719:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3730:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3715:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3715:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3735:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3708:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3708:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3762:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3773:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3758:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3778:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3751:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3751:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3544:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3552:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3560:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3571:4:11",
														"type": ""
													}
												],
												"src": "3423:368:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:299:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4019:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4031:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4042:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4027:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4027:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4019:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4062:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4077:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4085:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4073:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4073:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4055:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4055:74:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4055:74:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4149:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4160:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4145:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4145:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4165:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4138:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4203:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4208:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4181:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4181:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4235:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4246:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4231:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4251:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4224:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4224:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4278:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4289:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4274:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:19:11"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4295:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4267:35:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3946:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3957:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3965:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3973:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3981:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3989:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4000:4:11",
														"type": ""
													}
												],
												"src": "3796:512:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4418:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4430:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4441:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4418:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4460:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4485:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4478:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4478:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4471:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4471:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4453:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4377:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4388:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:11",
														"type": ""
													}
												],
												"src": "4313:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4620:125:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4630:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4638:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4672:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4687:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4695:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4683:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:74:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4665:74:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$298__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4589:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4600:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4611:4:11",
														"type": ""
													}
												],
												"src": "4505:240:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4873:125:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4883:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4895:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4906:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4891:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4883:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4925:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4940:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4948:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:74:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4918:74:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IShadowChefV2_$3586__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4842:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4853:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4864:4:11",
														"type": ""
													}
												],
												"src": "4750:248:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5124:321:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5141:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5152:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5134:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5134:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5134:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5164:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5184:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5178:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5168:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5211:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5222:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5207:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5207:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5227:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5200:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5200:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5200:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5269:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5277:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5265:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5265:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5286:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5297:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5282:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5302:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5243:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5243:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5318:121:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5334:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5353:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5361:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5349:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5349:15:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5366:66:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5345:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5345:88:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5330:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:104:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5436:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5326:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:113:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5318:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5093:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5104:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5115:4:11",
														"type": ""
													}
												],
												"src": "5003:442:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5624:168:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5641:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5652:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5634:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5675:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5686:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5671:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5691:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5664:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5714:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5710:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5710:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5730:20:11",
																		"type": "",
																		"value": "Nothing to deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5703:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5760:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5772:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5783:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5760:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5601:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5615:4:11",
														"type": ""
													}
												],
												"src": "5450:342:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5971:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5988:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5999:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5981:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5981:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6022:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6033:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6018:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6018:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6038:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6011:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6011:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6072:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6057:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6077:22:11",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6050:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6050:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6050:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6109:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6121:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6132:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6117:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6117:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6109:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5948:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5962:4:11",
														"type": ""
													}
												],
												"src": "5797:344:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6320:169:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6337:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6330:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6330:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6371:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6382:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6367:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6367:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6387:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6360:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6360:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6410:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6421:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6406:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6406:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6426:21:11",
																		"type": "",
																		"value": "Nothing to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6399:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6457:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6469:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6465:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6465:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6457:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6297:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6311:4:11",
														"type": ""
													}
												],
												"src": "6146:343:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6668:228:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6685:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6678:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6678:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6719:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6730:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6715:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6758:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6769:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6754:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6754:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6774:34:11",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6747:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6747:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6829:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6840:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6825:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6825:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6845:8:11",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6818:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6818:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6818:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6863:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6875:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6871:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6863:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6645:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6659:4:11",
														"type": ""
													}
												],
												"src": "6494:402:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7075:180:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7092:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7085:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7126:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7122:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7122:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7142:2:11",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7165:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7176:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7161:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7181:32:11",
																		"type": "",
																		"value": "DURATION_FACTOR cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:60:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7154:60:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7223:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7235:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7223:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29c3dda5238886c0c2b0c920ff04c8c094d90964430542d409c152ec9508c598__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7052:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7066:4:11",
														"type": ""
													}
												],
												"src": "6901:354:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7434:163:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7451:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7462:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7485:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7496:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7481:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7481:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7501:2:11",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7524:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7535:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7520:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7520:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7540:15:11",
																		"type": "",
																		"value": "Still in lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7513:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7513:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7565:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7577:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7588:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7573:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7565:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29d27746870030af2e78977aa435ecab484940719b10b267e22948038aa00957__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7411:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7425:4:11",
														"type": ""
													}
												],
												"src": "7260:337:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7776:241:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7793:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7786:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7786:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7827:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7838:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7823:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7843:2:11",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7866:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7877:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7862:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7862:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7882:34:11",
																		"type": "",
																		"value": "BOOST_WEIGHT cannot be more than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7855:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7948:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7933:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7953:21:11",
																		"type": "",
																		"value": " BOOST_WEIGHT_LIMIT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7926:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7926:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7984:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7996:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8007:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7984:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b575fa66b8451a79394d49306a8697c34d0aae2614b1db0b1eae983133b5a92__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7753:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7767:4:11",
														"type": ""
													}
												],
												"src": "7602:415:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8196:171:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8213:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8224:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8206:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8247:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8258:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8243:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8243:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8236:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8236:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8286:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8297:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8282:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8282:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8302:23:11",
																		"type": "",
																		"value": "Balance must exceed 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8275:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8275:51:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8335:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8347:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8358:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8343:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8343:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8335:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b838860d699c47ba608155cae8e0b922267380a0c086049df111458f89a4642__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8173:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8187:4:11",
														"type": ""
													}
												],
												"src": "8022:345:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8546:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8563:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8574:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8556:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8556:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8556:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8597:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8608:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8593:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8593:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8586:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8586:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8636:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8647:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8632:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8632:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8652:34:11",
																		"type": "",
																		"value": "Token cannot be same as deposit "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8625:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8625:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8625:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8723:7:11",
																		"type": "",
																		"value": "token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8696:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8740:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8740:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8523:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8537:4:11",
														"type": ""
													}
												],
												"src": "8372:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8952:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8969:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8980:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8962:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8962:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8962:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9003:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9014:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9019:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8992:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8992:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8992:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9042:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9053:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9038:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9058:33:11",
																		"type": "",
																		"value": "Withdraw amount exceeds balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9031:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9101:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9113:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9124:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9109:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9101:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8929:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8943:4:11",
														"type": ""
													}
												],
												"src": "8778:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9312:178:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9329:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9340:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9322:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9322:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9363:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9374:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9359:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9359:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9379:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9352:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9352:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9352:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9402:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9413:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9398:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9398:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9418:30:11",
																		"type": "",
																		"value": "Maximum lock period exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9391:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9391:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9391:58:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9458:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9470:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9481:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9466:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9466:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9458:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f9a81cbfca3a725fc52efdf7a411f037786a7ea2243778c8f3608eb63c701fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9289:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9303:4:11",
														"type": ""
													}
												],
												"src": "9138:352:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9669:176:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9686:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9697:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9679:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9679:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9720:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9731:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9716:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9716:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9736:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9709:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9709:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9759:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9770:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9755:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9755:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9775:28:11",
																		"type": "",
																		"value": "Not operator or Shdw owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9748:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9748:56:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9748:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9813:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9825:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9836:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9821:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9821:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9813:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51ed317ec37625583b076c69411cb03eb9dc395dd6067b84031e30305b72e49c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9646:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9660:4:11",
														"type": ""
													}
												],
												"src": "9495:350:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10024:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10041:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10034:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10034:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10034:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10075:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10086:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10071:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10071:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10091:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10064:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10064:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10114:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10125:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10110:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10110:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10130:33:11",
																		"type": "",
																		"value": "Minimum lock period is one week"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10103:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10103:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10103:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10173:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10185:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10196:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10181:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10173:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5395d0e79b5fe321e02a944456c705009d074a4a152ef1b6119b4bfa5d6044fa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10001:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10015:4:11",
														"type": ""
													}
												],
												"src": "9850:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10384:228:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10401:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10394:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10435:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10446:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10431:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10431:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10451:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10424:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10424:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10424:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10474:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10485:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10470:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10470:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10490:34:11",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10463:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10463:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10463:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10545:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10556:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10541:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10541:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10561:8:11",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10534:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10534:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10534:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10579:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10591:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10602:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10587:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10587:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10579:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10361:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10375:4:11",
														"type": ""
													}
												],
												"src": "10210:402:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10791:244:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10808:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10819:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10801:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10801:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10801:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10842:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10853:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10838:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10858:2:11",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10831:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10881:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10892:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10877:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10897:34:11",
																		"type": "",
																		"value": "performanceFee cannot be more th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10870:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10952:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10963:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10948:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10948:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10968:24:11",
																		"type": "",
																		"value": "an MAX_PERFORMANCE_FEE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10941:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10941:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10941:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11002:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11014:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11025:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11010:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11010:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11002:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10768:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10782:4:11",
														"type": ""
													}
												],
												"src": "10617:418:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11214:166:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11231:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11242:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11224:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11224:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11224:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11265:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11276:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11261:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11261:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11281:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11254:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11254:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11254:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11304:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11315:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11300:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11300:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11320:18:11",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11293:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11293:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11348:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11360:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11371:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11356:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11356:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11348:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11191:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11205:4:11",
														"type": ""
													}
												],
												"src": "11040:340:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11559:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11576:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11587:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11569:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11569:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11569:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11610:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11621:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11606:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11606:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11626:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11599:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11599:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11599:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11649:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11660:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11645:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11645:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11665:24:11",
																		"type": "",
																		"value": "Cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11638:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11638:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11638:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11699:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11711:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11722:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11707:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11699:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11536:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11550:4:11",
														"type": ""
													}
												],
												"src": "11385:346:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11910:228:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11927:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11938:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11920:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11920:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11961:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11972:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11957:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11957:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11977:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11950:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11950:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11950:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12000:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12011:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11996:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11996:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12016:34:11",
																		"type": "",
																		"value": "DURATION_FACTOR_OVERDUE cannot b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11989:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11989:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11989:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12071:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12082:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12067:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12067:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12087:8:11",
																		"type": "",
																		"value": "e zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12060:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12060:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12060:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12105:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12117:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12128:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12113:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12113:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12105:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71c64dcd9910993c4406a203e7eeb1a8bd40bb350e3ff095a417b8236fbf716d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11887:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11901:4:11",
														"type": ""
													}
												],
												"src": "11736:402:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12317:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12334:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12327:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12327:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12368:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12379:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12364:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12364:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12384:2:11",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12357:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12357:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12357:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12407:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12418:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12403:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12403:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12423:34:11",
																		"type": "",
																		"value": "overdueFee cannot be more than M"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12396:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12396:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12478:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12489:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12474:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12474:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12494:16:11",
																		"type": "",
																		"value": "AX_OVERDUE_FEE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12467:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12467:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12467:44:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12520:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12532:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12543:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12528:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12528:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12520:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7444f8aec3a1112aed3b0b68aa294562ece2ae020ce7917040293e4bd9eec93f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12294:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12308:4:11",
														"type": ""
													}
												],
												"src": "12143:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12732:244:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12749:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12760:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12742:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12742:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12742:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12783:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12794:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12779:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12779:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12799:2:11",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12772:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12772:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12772:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12822:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12833:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12818:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12818:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12838:34:11",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12811:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12811:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12893:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12904:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12889:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12889:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12909:24:11",
																		"type": "",
																		"value": "han MIN_DEPOSIT_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12882:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12882:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12943:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12955:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12966:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12951:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12951:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12943:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12709:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12723:4:11",
														"type": ""
													}
												],
												"src": "12558:418:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13155:251:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13172:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13183:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13165:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13165:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13165:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13206:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13217:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13202:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13202:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13222:2:11",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13195:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13195:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13195:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13245:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13256:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13241:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13241:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13261:34:11",
																		"type": "",
																		"value": "MAX_LOCK_DURATION cannot be more"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13234:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13234:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13234:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13316:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13327:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13312:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13312:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13332:31:11",
																		"type": "",
																		"value": " than MAX_LOCK_DURATION_LIMIT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13305:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13305:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13305:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13373:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13385:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13396:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13381:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13381:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13373:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ce64d2b78e772fd03ab4b249ad40764f5663f940bce3610710f57f4f06d907d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13132:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13146:4:11",
														"type": ""
													}
												],
												"src": "12981:425:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13585:182:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13602:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13613:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13595:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13595:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13595:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13636:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13647:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13632:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13632:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13625:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13625:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13625:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13675:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13686:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13671:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13671:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13691:34:11",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13664:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13664:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13664:62:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13735:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13747:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13758:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13743:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13743:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13735:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13562:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13576:4:11",
														"type": ""
													}
												],
												"src": "13411:356:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13946:161:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13963:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13974:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13956:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13956:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13956:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13997:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14008:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13993:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13993:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14013:2:11",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13986:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13986:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13986:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14036:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14047:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14032:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14032:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14052:13:11",
																		"type": "",
																		"value": "admin: wut?"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14025:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14025:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14025:41:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14075:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14087:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14098:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14083:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14083:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14075:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13923:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13937:4:11",
														"type": ""
													}
												],
												"src": "13772:335:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14286:246:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14303:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14314:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14296:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14296:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14296:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14337:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14348:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14333:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14333:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14353:2:11",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14326:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14326:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14326:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14376:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14387:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14372:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14372:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14392:34:11",
																		"type": "",
																		"value": "Withdraw amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14365:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14365:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14365:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14447:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14458:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14443:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14443:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14463:26:11",
																		"type": "",
																		"value": "than MIN_WITHDRAW_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14436:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14436:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14436:54:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14499:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14511:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14522:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14507:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14507:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14499:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c43d6a685c0672f27d6b004d2a2a91af0473e9cda90215ed97c8e5a61cd2deee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14263:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14277:4:11",
														"type": ""
													}
												],
												"src": "14112:420:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14711:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14728:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14739:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14721:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14721:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14762:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14773:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14758:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14758:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14778:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14751:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14751:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14751:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14801:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14812:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14797:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14797:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14817:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14790:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14790:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14790:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14858:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14870:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14881:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14866:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14866:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14858:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14688:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14702:4:11",
														"type": ""
													}
												],
												"src": "14537:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15069:251:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15086:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15097:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15079:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15079:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15079:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15120:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15131:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15116:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15116:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:2:11",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15109:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15109:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15109:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15170:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15155:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15155:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15175:34:11",
																		"type": "",
																		"value": "withdrawFeePeriod cannot be more"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15148:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15230:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15241:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15226:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15226:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15246:31:11",
																		"type": "",
																		"value": " than MAX_WITHDRAW_FEE_PERIOD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15219:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15219:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15219:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15287:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15299:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15310:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15295:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15295:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15287:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15046:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15060:4:11",
														"type": ""
													}
												],
												"src": "14895:425:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15499:232:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15516:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15527:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15509:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15509:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15550:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15561:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15546:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15546:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15566:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15589:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15600:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15585:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15585:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15605:34:11",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15578:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15578:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15578:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15660:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15671:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15656:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15656:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15676:12:11",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15649:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15649:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15649:40:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15698:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15710:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15721:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15706:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15706:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15698:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15476:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15490:4:11",
														"type": ""
													}
												],
												"src": "15325:406:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15910:238:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15927:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15938:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15920:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15920:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15920:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15961:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15972:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15957:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15957:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15977:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15950:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15950:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15950:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16000:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16011:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15996:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15996:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16016:34:11",
																		"type": "",
																		"value": "withdrawFee cannot be more than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15989:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15989:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15989:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16071:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16082:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16067:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16067:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16087:18:11",
																		"type": "",
																		"value": "MAX_WITHDRAW_FEE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16060:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16060:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16060:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16115:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16127:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16138:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16123:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16123:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16115:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15887:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15901:4:11",
														"type": ""
													}
												],
												"src": "15736:412:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16327:225:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16344:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16355:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16337:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16337:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16337:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16378:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16389:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16374:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16374:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16394:2:11",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16367:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16367:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16367:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16417:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16428:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16413:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16413:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16433:34:11",
																		"type": "",
																		"value": "UNLOCK_FREE_DURATION cannot be z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16406:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16406:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16406:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16488:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16499:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16484:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16484:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16504:5:11",
																		"type": "",
																		"value": "ero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16477:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16477:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16477:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16519:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16531:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16542:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16527:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16527:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16519:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_efe7ff328c30df05a818fd689e8dfc735e13c3b6ee781869dfe88f3867bf2df1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16304:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16318:4:11",
														"type": ""
													}
												],
												"src": "16153:399:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16731:167:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16748:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16759:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16741:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16741:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16741:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16782:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16793:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16778:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16778:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16798:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16771:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16771:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16771:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16821:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16832:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16817:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16817:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16837:19:11",
																		"type": "",
																		"value": "Cannot unlock yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16810:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16810:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16810:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16866:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16878:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16889:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16874:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16874:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16866:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb8b6a34be55e366d93331203617938f2f166352c2d5a75dbfa7ec7bd7a79007__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16708:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16722:4:11",
														"type": ""
													}
												],
												"src": "16557:341:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17004:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17014:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17026:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17037:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17022:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17022:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17014:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17056:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17067:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17049:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17049:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17049:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16973:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16984:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16995:4:11",
														"type": ""
													}
												],
												"src": "16903:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17214:168:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17224:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17236:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17247:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17232:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17232:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17224:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17266:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17277:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17259:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17259:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17259:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17304:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17315:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17300:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17300:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17324:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17332:42:11",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17320:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17320:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17293:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17293:83:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17293:83:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17175:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17186:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17194:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17205:4:11",
														"type": ""
													}
												],
												"src": "17085:297:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17524:119:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17534:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17546:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17542:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17542:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17534:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17576:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17587:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17569:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17569:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17569:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17614:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17625:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17610:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17610:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17630:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17603:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17603:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17603:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17485:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17496:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17504:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17515:4:11",
														"type": ""
													}
												],
												"src": "17387:256:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17777:119:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17787:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17799:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17810:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17795:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17795:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17787:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17829:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17840:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17822:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17822:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17822:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17867:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17878:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17863:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17863:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17883:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17856:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17856:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17856:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17738:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17749:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17757:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17768:4:11",
														"type": ""
													}
												],
												"src": "17648:248:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18086:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18096:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18108:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18119:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18104:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18104:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18096:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18139:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18150:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18132:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18132:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18132:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18177:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18188:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18173:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18173:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18193:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18166:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18166:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18166:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18220:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18231:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18216:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18216:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18236:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18209:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18209:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18209:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18263:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18274:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18259:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18259:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18279:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18252:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18252:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18252:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18031:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18042:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18050:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18058:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18066:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18077:4:11",
														"type": ""
													}
												],
												"src": "17901:391:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18616:442:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18626:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18638:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18649:3:11",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18634:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18634:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18626:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18669:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18680:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18662:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18662:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18662:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18707:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18718:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18703:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18703:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18723:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18696:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18696:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18696:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18750:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18761:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18746:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18746:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18766:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18739:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18739:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18739:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18793:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18804:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18789:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18789:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18809:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18782:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18782:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18782:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18836:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18847:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18832:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18832:19:11"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18853:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18825:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18825:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18825:35:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18880:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18891:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18876:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18876:19:11"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "18897:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18869:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18869:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18869:35:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18924:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18935:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18920:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18920:19:11"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "18941:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18913:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18913:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18913:35:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18968:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18979:3:11",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18964:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18964:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value7",
																						"nodeType": "YulIdentifier",
																						"src": "18999:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18992:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18992:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18985:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18985:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18957:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18957:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18957:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19028:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19039:3:11",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19024:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19024:19:11"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "19045:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19017:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19017:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19017:35:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18521:9:11",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "18532:6:11",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "18540:6:11",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "18548:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "18556:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18564:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18572:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18580:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18588:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18596:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18607:4:11",
														"type": ""
													}
												],
												"src": "18297:761:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19111:80:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19138:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19140:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19140:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19140:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19127:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19134:1:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19130:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19130:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19124:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19124:13:11"
															},
															"nodeType": "YulIf",
															"src": "19121:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19169:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19180:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19183:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19176:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19176:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19169:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19094:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19097:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19103:3:11",
														"type": ""
													}
												],
												"src": "19063:128:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19242:228:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19273:168:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "19294:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19297:77:11",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19287:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19287:88:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19287:88:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19395:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19398:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19388:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19388:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19388:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "19423:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19426:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19416:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19416:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19416:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19262:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19255:9:11"
															},
															"nodeType": "YulIf",
															"src": "19252:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19450:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19459:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19462:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19455:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19455:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19450:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19227:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19230:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19236:1:11",
														"type": ""
													}
												],
												"src": "19196:274:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19527:176:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19646:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19648:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19648:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19648:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19558:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19551:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19551:9:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19544:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19544:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19566:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19573:66:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19641:1:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "19569:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19569:74:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19563:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19563:81:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19540:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19540:105:11"
															},
															"nodeType": "YulIf",
															"src": "19537:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19677:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19692:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19695:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19688:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19688:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19677:7:11"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19506:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19509:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19515:7:11",
														"type": ""
													}
												],
												"src": "19475:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19757:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19779:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19781:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19781:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19781:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19773:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19776:1:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19770:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19770:8:11"
															},
															"nodeType": "YulIf",
															"src": "19767:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19810:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19822:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19825:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19818:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19818:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19810:4:11"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19739:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19742:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19748:4:11",
														"type": ""
													}
												],
												"src": "19708:125:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19891:205:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19901:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19910:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "19905:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19970:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19995:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20000:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19991:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19991:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "20014:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20019:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20010:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20010:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20004:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20004:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19984:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19984:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19984:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19931:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19934:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19928:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19928:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19942:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19944:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "19953:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19956:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19949:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19949:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "19944:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19924:3:11",
																"statements": []
															},
															"src": "19920:113:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20059:31:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20072:3:11"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "20077:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20068:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20068:16:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20086:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20061:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20061:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20061:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20048:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20051:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20045:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20045:13:11"
															},
															"nodeType": "YulIf",
															"src": "20042:2:11"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19869:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "19874:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19879:6:11",
														"type": ""
													}
												],
												"src": "19838:258:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20133:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20150:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20153:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20143:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20143:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20143:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20247:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20250:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20240:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20240:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20240:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20271:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20274:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20264:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20264:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20264:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20101:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20337:109:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20424:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20433:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20436:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20426:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20426:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20426:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20360:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20371:5:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20378:42:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "20367:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20367:54:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20357:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20357:65:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20350:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20350:73:11"
															},
															"nodeType": "YulIf",
															"src": "20347:2:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20326:5:11",
														"type": ""
													}
												],
												"src": "20290:156:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20495:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20549:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20558:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20561:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20551:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20551:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20551:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20518:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "20539:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "20532:6:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20532:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20525:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20525:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20515:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20515:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20508:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20508:40:11"
															},
															"nodeType": "YulIf",
															"src": "20505:2:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20484:5:11",
														"type": ""
													}
												],
												"src": "20451:120:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$298(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$298__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IShadowChefV2_$3586__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Nothing to deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Nothing to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_29c3dda5238886c0c2b0c920ff04c8c094d90964430542d409c152ec9508c598__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"DURATION_FACTOR cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_29d27746870030af2e78977aa435ecab484940719b10b267e22948038aa00957__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Still in lock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2b575fa66b8451a79394d49306a8697c34d0aae2614b1db0b1eae983133b5a92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"BOOST_WEIGHT cannot be more than\")\n        mstore(add(headStart, 96), \" BOOST_WEIGHT_LIMIT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2b838860d699c47ba608155cae8e0b922267380a0c086049df111458f89a4642__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Balance must exceed 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Token cannot be same as deposit \")\n        mstore(add(headStart, 96), \"token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Withdraw amount exceeds balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f9a81cbfca3a725fc52efdf7a411f037786a7ea2243778c8f3608eb63c701fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Maximum lock period exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51ed317ec37625583b076c69411cb03eb9dc395dd6067b84031e30305b72e49c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Not operator or Shdw owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5395d0e79b5fe321e02a944456c705009d074a4a152ef1b6119b4bfa5d6044fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Minimum lock period is one week\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"performanceFee cannot be more th\")\n        mstore(add(headStart, 96), \"an MAX_PERFORMANCE_FEE\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_71c64dcd9910993c4406a203e7eeb1a8bd40bb350e3ff095a417b8236fbf716d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"DURATION_FACTOR_OVERDUE cannot b\")\n        mstore(add(headStart, 96), \"e zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7444f8aec3a1112aed3b0b68aa294562ece2ae020ce7917040293e4bd9eec93f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"overdueFee cannot be more than M\")\n        mstore(add(headStart, 96), \"AX_OVERDUE_FEE\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Deposit amount must be greater t\")\n        mstore(add(headStart, 96), \"han MIN_DEPOSIT_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ce64d2b78e772fd03ab4b249ad40764f5663f940bce3610710f57f4f06d907d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"MAX_LOCK_DURATION cannot be more\")\n        mstore(add(headStart, 96), \" than MAX_LOCK_DURATION_LIMIT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"admin: wut?\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c43d6a685c0672f27d6b004d2a2a91af0473e9cda90215ed97c8e5a61cd2deee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Withdraw amount must be greater \")\n        mstore(add(headStart, 96), \"than MIN_WITHDRAW_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"withdrawFeePeriod cannot be more\")\n        mstore(add(headStart, 96), \" than MAX_WITHDRAW_FEE_PERIOD\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"withdrawFee cannot be more than \")\n        mstore(add(headStart, 96), \"MAX_WITHDRAW_FEE\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_efe7ff328c30df05a818fd689e8dfc735e13c3b6ee781869dfe88f3867bf2df1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"UNLOCK_FREE_DURATION cannot be z\")\n        mstore(add(headStart, 96), \"ero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb8b6a34be55e366d93331203617938f2f166352c2d5a75dbfa7ec7bd7a79007__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cannot unlock yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n        mstore(add(headStart, 256), value8)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"970": [
									{
										"length": 32,
										"start": 5100
									},
									{
										"length": 32,
										"start": 6455
									},
									{
										"length": 32,
										"start": 9386
									},
									{
										"length": 32,
										"start": 10667
									},
									{
										"length": 32,
										"start": 11791
									},
									{
										"length": 32,
										"start": 11873
									},
									{
										"length": 32,
										"start": 12645
									},
									{
										"length": 32,
										"start": 12864
									},
									{
										"length": 32,
										"start": 15227
									},
									{
										"length": 32,
										"start": 15795
									}
								],
								"973": [
									{
										"length": 32,
										"start": 3168
									},
									{
										"length": 32,
										"start": 3357
									},
									{
										"length": 32,
										"start": 8334
									},
									{
										"length": 32,
										"start": 9120
									},
									{
										"length": 32,
										"start": 14414
									},
									{
										"length": 32,
										"start": 14632
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106105145760003560e01c806387788782116102a1578063c6ed51be1161016b578063e464c623116100e3578063f2fde38b11610097578063f851a4401161007c578063f851a440146108fb578063fc0c546a14610903578063fd253b641461090b57610514565b8063f2fde38b146108d5578063f786b958146108e857610514565b8063e73008bc116100c8578063e73008bc146108b2578063e941fa78146108ba578063f0f44260146108c257610514565b8063e464c623146108a2578063e4b37ef5146108aa57610514565b8063def68a9c1161013a578063df10b4e61161011f578063df10b4e61461087f578063dfcedeee14610887578063e2bbb1581461088f57610514565b8063def68a9c14610859578063def7869d1461086c57610514565b8063c6ed51be14610836578063cc9cfba114610849578063ccd34cd514610779578063d4b0de2f1461085157610514565b8063acaf88cd11610219578063bc3d652a116101cd578063bdca9165116101b2578063bdca916514610808578063beba0fa014610810578063c54d349c1461082357610514565b8063bc3d652a146107f8578063bc75f4b81461080057610514565b8063b6857844116101fe578063b6857844146105a2578063b6ac642a146107d2578063bb9f408d146107e557610514565b8063acaf88cd146107b7578063b3ab15fb146107bf57610514565b8063948a03f211610270578063a3639b3911610255578063a3639b3914610794578063a5834e06146107a7578063aaada5da146107af57610514565b8063948a03f21461077957806395dc14e11461078157610514565b8063877887821461074357806387d4bda91461074b5780638da5cb5b1461075e57806393c99e6a1461076657610514565b80634e4de1e9116103e2578063668679ba1161035a578063731ff24a1161030e57806378b4330f116102f357806378b4330f146105d05780638456cb5914610733578063853828b61461073b57610514565b8063731ff24a1461072357806377c7b8fc1461072b57610514565b806370897b231161033f57806370897b2314610700578063715018a614610713578063722713f71461071b57610514565b8063668679ba146106da578063704b6c02146106ed57610514565b8063570ca735116103b157806361d027b31161039657806361d027b3146106b757806361fa6368146106bf57806362122f5a146106c757610514565b8063570ca7351461069a5780635c975abb146106af57610514565b80634e4de1e9146106645780634f1bfc9e1461067757806351fb26df1461067f5780635521e9bf1461068757610514565b80632cfc5f01116104905780633eb78874116104445780633fec4e32116104295780633fec4e3214610629578063423b93ed1461064957806348a0d7541461065c57610514565b80633eb78874146106195780633f4ba83a1461062157610514565b80632f6c493c116104755780632f6c493c146105eb57806335981921146105fe5780633a98ef391461061157610514565b80632cfc5f01146105d05780632e1a7d4d146105d857610514565b80631959a002116104e75780631ea30fef116104cc5780631ea30fef146105a25780631efac1b8146105aa57806329a5cfd6146105bd57610514565b80631959a0021461056757806319ab453c1461058f57610514565b806301e813261461051957806305a9f274146105375780630c59696b1461053f57806314ff303914610554575b600080fd5b610521610913565b60405161052e9190614b9f565b60405180910390f35b61052161091b565b61055261054d366004614171565b610921565b005b610552610562366004614171565b6109fa565b61057a6105753660046140d6565b610abc565b60405161052e99989796959493929190614bf5565b61055261059d3660046140d6565b610b0e565b610521610db2565b6105526105b8366004614171565b610dbc565b6105216105cb36600461412a565b610e7f565b610521610fce565b6105526105e6366004614171565b610fd5565b6105526105f93660046140d6565b611025565b61055261060c366004614171565b611122565b6105216111e2565b6105216111e8565b6105526111ee565b61063c6106373660046140d6565b61127a565b60405161052e91906142bf565b6105526106573660046140f2565b61128f565b6105216113ac565b6105526106723660046140f2565b611476565b610521611593565b610521611599565b610552610695366004614171565b61159f565b6106a26115f1565b60405161052e91906141de565b61063c61160d565b6106a261162e565b6106a261164a565b6105526106d53660046140d6565b611666565b61063c6106e83660046140d6565b61177a565b6105526106fb3660046140d6565b61178f565b61055261070e366004614171565b61185a565b61055261191c565b610521611930565b6105216119e8565b6105216119f8565b610552611a4f565b610552611adb565b610521611af4565b61063c6107593660046140d6565b611afa565b6106a2611b0f565b610552610774366004614171565b611b2b565b610521611bf1565b61052161078f3660046140d6565b611bfa565b6105526107a2366004614171565b611d6b565b610521611e2b565b610521611e31565b610521611e37565b6105526107cd3660046140d6565b611e3d565b6105526107e0366004614171565b611f08565b6105526107f3366004614171565b611fca565b6106a261208c565b6105216120b0565b6105216120b6565b61055261081e3660046140f2565b6120bc565b610552610831366004614171565b6121d9565b6105216108443660046140d6565b612299565b61052161239b565b610521612451565b6105526108673660046140d6565b612457565b61055261087a3660046140d6565b6125fa565b61052161270e565b6106a2612714565b61055261089d3660046141a1565b612730565b610521612788565b61052161278e565b610521612794565b61052161279a565b6105526108d03660046140d6565b6127a0565b6105526108e33660046140d6565b61286b565b6105526108f6366004614171565b6128c9565b6106a261298d565b6106a26129a9565b6105216129cd565b6305265c0081565b600d5481565b60085473ffffffffffffffffffffffffffffffffffffffff16331461097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b60405180910390fd5b64e8d4a510008111156109ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906147dd565b60178190556040517ff4bd1c5978320077e792afbb3911e8cab1325ce28a6b3e67f9067a1d80692961906109ef908390614b9f565b60405180910390a150565b60085473ffffffffffffffffffffffffffffffffffffffff163314610a4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6101f4811115610a87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614aae565b60168190556040517fcab352e118188b8a2f20a2e8c4ce1241ce2c1740aac4f17c5b0831e65824d8ef906109ef908390614b9f565b6003602081905260009182526040909120805460018201546002830154938301546004840154600585015460068601546007870154600890970154959794969495939492939192909160ff9091169089565b610b166129d7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190610b6b9033906004016141de565b60206040518083038186803b158015610b8357600080fd5b505afa158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190614189565b905080610bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906144e8565b610c1673ffffffffffffffffffffffffffffffffffffffff8316333084612a4a565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063095ea7b390610c8a907f0000000000000000000000000000000000000000000000000000000000000000908590600401614230565b602060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc9190614155565b50600b546040517fe2bbb15800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163e2bbb15891610d5391908590600401614bcc565b600060405180830381600087803b158015610d6d57600080fd5b505af1158015610d81573d6000803e3d6000fd5b50506040517f57a86f7d14ccde89e22870afe839e3011216827daa9b24e18629f0a1e9d6cc14925060009150a15050565b6509184e72a00081565b60085473ffffffffffffffffffffffffffffffffffffffff163314610e0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b62093a80811115610e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906149f4565b60188190556040517fb89ddaddb7435be26824cb48d2d0186c9525a2e1ec057abcb502704cdc0686cc906109ef908390614b9f565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054831115610eb257805492505b3360009081526005602052604090205460ff16158015610ee257506018548160010154610edf9190614c36565b42105b15610fc2576000610ef161239b565b610ef9611930565b610f039190614c36565b8254909150600090610f1a64e8d4a5100087614c87565b610f249190614c4e565b90506000610f3187612af3565b60068501546007548654610f459087614c87565b610f4f9190614c4e565b610f599190614cc4565b610f639190614cc4565b9050600064e8d4a51000610f778484614c87565b610f819190614c4e565b601554909150610f9033612b11565b15610f9a57506016545b6000612710610fa98385614c87565b610fb39190614c4e565b9750610fc89650505050505050565b60009150505b92915050565b62093a8081565b610fdd612b17565b60008111611017576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614389565b611022816000612b56565b50565b803373ffffffffffffffffffffffffffffffffffffffff821614806110615750600a5473ffffffffffffffffffffffffffffffffffffffff1633145b611097576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906145ea565b61109f612b17565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020600781015460ff1680156110db5750428160050154105b611111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614b68565b61111d60008085612f29565b505050565b60085473ffffffffffffffffffffffffffffffffffffffff163314611173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b600081116111ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614780565b60118190556040517f18b6d179114082d7eda9837e15a39eb30032d5f3df00487a67541398f48fabfe906109ef908390614b9f565b60075481565b60145481565b60085473ffffffffffffffffffffffffffffffffffffffff16331461123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b61124761359f565b61124f6135dd565b6040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60046020526000908152604090205460ff1681565b60085473ffffffffffffffffffffffffffffffffffffffff1633146112e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff821661132d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b73ffffffffffffffffffffffffffffffffffffffff821660008181526004602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d4491a35050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906114219030906004016141de565b60206040518083038186803b15801561143957600080fd5b505afa15801561144d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114719190614189565b905090565b60085473ffffffffffffffffffffffffffffffffffffffff1633146114c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff8216611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b73ffffffffffffffffffffffffffffffffffffffff821660008181526006602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d4491a35050565b600f5481565b600b5481565b6115a7612b17565b6509184e72a00081116115e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614960565b611022600082612b56565b600a5473ffffffffffffffffffffffffffffffffffffffff1681565b60005474010000000000000000000000000000000000000000900460ff1690565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60085473ffffffffffffffffffffffffffffffffffffffff1633146116b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff8116611704576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517faf38f30be8d095bc1461196db21930b7d89226e57b0167f9d6abe951c53f3332926109ef9216906141de565b60066020526000908152604090205460ff1681565b6117976129d7565b73ffffffffffffffffffffffffffffffffffffffff81166117e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c926109ef9216906141de565b60085473ffffffffffffffffffffffffffffffffffffffff1633146118ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6107d08111156118e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906146b5565b60138190556040517fefeafcf03e479a9566d7ef321b4816de0ba19cfa3cd0fae2f8c5f4a0afb342c4906109ef908390614b9f565b6119246129d7565b61192e600061364d565b565b6000600c547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161198e91906141de565b60206040518083038186803b1580156119a657600080fd5b505afa1580156119ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119de9190614189565b6114719190614c36565b6b204fce5e3e2502611000000081565b6000600754600014611a4257600754611a0f61239b565b611a17611930565b611a219190614c36565b611a3390670de0b6b3a7640000614c87565b611a3d9190614c4e565b611471565b50670de0b6b3a764000090565b60085473ffffffffffffffffffffffffffffffffffffffff163314611aa0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b611aa8612b17565b611ab06136c2565b6040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b3360009081526003602052604090205461192e90610fd5565b60135481565b60056020526000908152604090205460ff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60085473ffffffffffffffffffffffffffffffffffffffff163314611b7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b652d79883d2000811115611bbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061448b565b60128190556040517f7666dfff8c3377938e522b4eed3aff079973a976f95969db60a406d49f40da4e906109ef908390614b9f565b64e8d4a5100081565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120805415801590611c335750600781015460ff165b8015611c65575073ffffffffffffffffffffffffffffffffffffffff831660009081526006602052604090205460ff16155b8015611c81575042600e548260050154611c7f9190614c36565b105b15611d60576000611c9061239b565b611c98611930565b611ca29190614c36565b60068301546007548454929350600092611cbc9085614c87565b611cc69190614c4e565b611cd09190614cc4565b90506000836008015482611ce49190614cc4565b90506000600e54856005015442611cfb9190614cc4565b611d059190614cc4565b9050601154811115611d1657506011545b600060115460175483611d299190614c87565b611d339190614c4e565b9050600064e8d4a51000611d478386614c87565b611d519190614c4e565b9750611d669650505050505050565b60009150505b919050565b60085473ffffffffffffffffffffffffffffffffffffffff163314611dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b60008111611df6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061441d565b60108190556040517f9478eb023aac0a7d58a4e935377056bf27cf5b72a2300725f831817a8f62fbde906109ef908390614b9f565b60175481565b600e5481565b60115481565b611e456129d7565b73ffffffffffffffffffffffffffffffffffffffff8116611e92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517fda12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a926109ef9216906141de565b60085473ffffffffffffffffffffffffffffffffffffffff163314611f59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6101f4811115611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614aae565b60158190556040517fd5fe46099fa396290a7f57e36c3c3c8774e2562c18ed5d1dcc0fa75071e03f1d906109ef908390614b9f565b60085473ffffffffffffffffffffffffffffffffffffffff16331461201b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6107d0811115612057576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906146b5565b60148190556040517fc5d25457b67b87678c987375af13f6e50beb3ad7bfd009da26766ae986eaa20d906109ef908390614b9f565b7f000000000000000000000000000000000000000000000000000000000000000081565b60125481565b6107d081565b60085473ffffffffffffffffffffffffffffffffffffffff16331461210d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff821661215a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f3d7902bc9a6665bd7caf4240b834bb805d3cd68256889e9f8d2e40a10be41d4491a35050565b60085473ffffffffffffffffffffffffffffffffffffffff16331461222a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b60008111612264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614b0b565b600e8190556040517ff84bf2b901cfc02956d4e69556d7448cef4ea13587e7714dba7c6d697091e7ad906109ef908390614b9f565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081208054158015906122d35750600781015460ff16155b8015612305575073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff16155b15611d6057600061231461239b565b61231c611930565b6123269190614c36565b9050600060075482846000015461233d9190614c87565b6123479190614c4e565b9050600083600201548261235b9190614cc4565b60135490915061236a87612b11565b1561237457506014545b60006127106123838385614c87565b61238d9190614c4e565b9650611d6695505050505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c799b59d600b54306040518363ffffffff1660e01b81526004016123fb929190614ba8565b60206040518083038186803b15801561241357600080fd5b505afa158015612427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244b9190614189565b91505090565b6101f481565b60085473ffffffffffffffffffffffffffffffffffffffff1633146124a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561252e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061451f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a08231906125839030906004016141de565b60206040518083038186803b15801561259b57600080fd5b505afa1580156125af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d39190614189565b90506125f673ffffffffffffffffffffffffffffffffffffffff83163383613732565b5050565b60085473ffffffffffffffffffffffffffffffffffffffff16331461264b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b73ffffffffffffffffffffffffffffffffffffffff8116612698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517f8f49a182922022d9119a1a6aeeca151b4a5665e86bd61c1ff32e152d459558b2926109ef9216906141de565b60185481565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b612738612b17565b60008211806127475750600081115b61277d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061431b565b6125f6828233612f29565b60105481565b60165481565b600c5481565b60155481565b6127a86129d7565b73ffffffffffffffffffffffffffffffffffffffff81166127f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614749565b600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691909117918290556040517fafa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea086926109ef9216906141de565b6128736129d7565b73ffffffffffffffffffffffffffffffffffffffff81166128c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906143c0565b6110228161364d565b60085473ffffffffffffffffffffffffffffffffffffffff16331461291a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614929565b6305265c00811115612958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614897565b600f8190556040517fcab2f3455b51b6ca5377e84fccd0f890b6f6ca36c02e18b6d36cb34f469fe4fe906109ef908390614b9f565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b652d79883d200081565b6129df613751565b73ffffffffffffffffffffffffffffffffffffffff166129fd611b0f565b73ffffffffffffffffffffffffffffffffffffffff161461192e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906148f4565b612aed846323b872dd60e01b858585604051602401612a6b939291906141ff565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613755565b50505050565b6000612afe82611bfa565b612b0783612299565b610fc89190614c36565b3b151590565b612b1f61160d565b1561192e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614712565b3360009081526003602052604090208054831115612ba0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061457c565b42816005015410612bdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614454565b60025473ffffffffffffffffffffffffffffffffffffffff1615612c84576002546040517f51cff8d900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906351cff8d990612c519033906004016141de565b600060405180830381600087803b158015612c6b57600080fd5b505af1158015612c7f573d6000803e3d6000fd5b505050505b80548390600090612ca16b204fce5e3e2502611000000084614c87565b612cab9190614c4e565b9050612cb561380b565b612cbe336139e2565b84158015612ccc5750600084115b15612d0d576000612cdb611930565b90508060075486612cec9190614c87565b612cf69190614c4e565b8454909350831115612d0757835492505b50612d34565b82546b204fce5e3e2502611000000090612d279083614c87565b612d319190614c4e565b91505b600060075483612d42611930565b612d4c9190614c87565b612d569190614c4e565b905082846000016000828254612d6c9190614cc4565b925050819055508260076000828254612d859190614cc4565b90915550503360009081526005602052604090205460ff16158015612dba57506018548460010154612db79190614c36565b42105b15612e4757601554612dcb33612b11565b15612dd557506016545b6000612710612de48385614c87565b612dee9190614c4e565b600954909150612e389073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b612e428184614cc4565b925050505b612e8873ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163383613732565b835415612eba57600754612e9a611930565b8554612ea69190614c87565b612eb09190614c4e565b6002850155612ec2565b600060028501555b426003850155612ed133613e53565b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688285604051612f19929190614bcc565b60405180910390a2505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080541580612f5c5750600084115b15612fa0576509184e72a0008411612fa0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109729061483a565b600581015483904211612ffe578415612fdd574260048301556008820154600d8054600090612fd0908490614cc4565b9091555050600060088301555b81600401548260050154612ff19190614cc4565b612ffb9082614c36565b90505b83158061300e575062093a808110155b613044576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614621565b600f54811115613080576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906145b3565b60025473ffffffffffffffffffffffffffffffffffffffff161561312b576002546040517f0efe6a8b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630efe6a8b906130f890869089908990600401614256565b600060405180830381600087803b15801561311257600080fd5b505af1158015613126573d6000803e3d6000fd5b505050505b61313361380b565b6007546131905760006131446113ac565b60095490915061318e9073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b505b613199836139e2565b83156132105742826005015410156131c85742600483018190556131be908590614c36565b60058301556131e2565b838260050160008282546131dc9190614c36565b90915550505b6007820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b60008060008061321e611930565b9050881561326c5761326873ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001688308c612a4a565b8892505b8554158015906132805750600786015460ff165b156132f95760075486546132949083614c87565b61329e9190614c4e565b91506132aa8284614c36565b92508560000154600760008282546132c29190614cc4565b90915550506000865560048601544214156132f95760088601829055600d80548391906000906132f3908490614c36565b90915550505b600754156133295761330b8282614cc4565b6007546133189085614c87565b6133229190614c4e565b935061332d565b8293505b8560040154866005015411156134b0576000601054601254886004015489600501546133599190614cc4565b6133639190614c87565b61336d9190614c4e565b9050600064e8d4a510006133818784614c87565b61338b9190614c4e565b90506133978187614c36565b9550858860000160008282546133ad9190614c36565b909155506000905064e8d4a510006133c58785614c87565b6133cf9190614c4e565b9050808960060160008282546133e59190614c36565b9250508190555080600c60008282546133fe9190614c36565b925050819055508b8960080160008282546134199190614c36565b925050819055508b600d60008282546134329190614c36565b925050819055508973ffffffffffffffffffffffffffffffffffffffff167f2b943276e5d747f6f7dd46d3b880d8874cb8d6b9b88ca1903990a2738e7dc7a18a600801548b600001548c600401548d6005015461348f9190614cc4565b426040516134a09493929190614bda565b60405180910390a25050506134ca565b838660000160008282546134c49190614c36565b90915550505b60008911806134d95750600088115b156134e5574260018701555b83600760008282546134f79190614c36565b9091555050600686015460075461350c611930565b88546135189190614c87565b6135229190614c4e565b61352c9190614cc4565b600287015542600387015561354087613e53565b8673ffffffffffffffffffffffffffffffffffffffff167f7162984403f6c73c8639375d45a9187dfd04602231bd8e587c415718b5f7e5f98a868b4260405161358c9493929190614bda565b60405180910390a2505050505050505050565b6135a761160d565b61192e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614352565b6135e561359f565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa613636613751565b60405161364391906141de565b60405180910390a1565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6136ca612b17565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613636613751565b61111d8363a9059cbb60e01b8484604051602401612a6b929190614230565b3390565b60006137b7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16613f4d9092919063ffffffff16565b80519091501561111d57808060200190518101906137d59190614155565b61111d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614a51565b600b546040517fc799b59d00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163c799b59d91613883913090600401614ba8565b60206040518083038186803b15801561389b57600080fd5b505afa1580156138af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138d39190614189565b905080156110225760006138e56113ac565b600b546040517f441a3e7000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163441a3e709161395e91600090600401614bcc565b600060405180830381600087803b15801561397857600080fd5b505af115801561398c573d6000803e3d6000fd5b50505050600061399a6113ac565b9050337fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba6139c88484614cc4565b6040516139d59190614b9f565b60405180910390a2505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090208054156125f657600781015460ff1615613cda57600081600601546007548360000154613a32611930565b613a3c9190614c87565b613a469190614c4e565b613a509190614cc4565b90508160060154600c6000828254613a689190614cc4565b909155505060006006830181905582546007805491929091613a8b908490614cc4565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526006602052604090205460ff16158015613ad6575042600e548360050154613ad49190614c36565b105b15613bb5576000826008015482613aed9190614cc4565b90506000600e54846005015442613b049190614cc4565b613b0e9190614cc4565b9050601154811115613b1f57506011545b600060115460175483613b329190614c87565b613b3c9190614c4e565b9050600064e8d4a51000613b508386614c87565b613b5a9190614c4e565b600954909150613ba49073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b613bae8186614cc4565b9450505050505b6000613bbf611930565b90506000600754600014613bf557613bd78383614cc4565b600754613be49085614c87565b613bee9190614c4e565b9050613bf8565b50815b80845560078054829190600090613c10908490614c36565b90915550506005840154421115613cd2576007840180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600060048501819055600585018190556008850154600d805491929091613c73908490614cc4565b90915550506000600885015560405173ffffffffffffffffffffffffffffffffffffffff8616907ff7870c5b224cbc19873599e46ccfc7103934650509b1af0c3ce90138377c200490613cc99086904290614bcc565b60405180910390a25b5050506125f6565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205460ff166125f6576000600754613d14611930565b8354613d209190614c87565b613d2a9190614c4e565b9050816000015460076000828254613d429190614cc4565b909155505060008083556002830154613d5b9083614cc4565b601354909150613d6a85612b11565b15613d7457506014545b6000612710613d838385614c87565b613d8d9190614c4e565b90508015613de957600954613ddc9073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683613732565b613de68185614cc4565b93505b6000613df3611930565b90506000600754600014613e2957613e0b8683614cc4565b600754613e189088614c87565b613e229190614c4e565b9050613e2c565b50845b80875560078054829190600090613e44908490614c36565b90915550505050505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16156110225773ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040812060048101546005820154919291613ead9190614cc4565b6001546008840154600d546010546040517f87356ef700000000000000000000000000000000000000000000000000000000815294955073ffffffffffffffffffffffffffffffffffffffff909316936387356ef793613f169389939092889290600401614284565b600060405180830381600087803b158015613f3057600080fd5b505af1158015613f44573d6000803e3d6000fd5b50505050505050565b6060613f5c8484600085613f66565b90505b9392505050565b606082471015613fa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290614658565b613fab85614067565b613fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906149bd565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161400a91906141c2565b60006040518083038185875af1925050503d8060008114614047576040519150601f19603f3d011682016040523d82523d6000602084013e61404c565b606091505b509150915061405c828286614083565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60608315614092575081613f5f565b8251156140a25782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097291906142ca565b6000602082840312156140e7578081fd5b8135613f5f81614d36565b60008060408385031215614104578081fd5b823561410f81614d36565b9150602083013561411f81614d58565b809150509250929050565b6000806040838503121561413c578182fd5b823561414781614d36565b946020939093013593505050565b600060208284031215614166578081fd5b8151613f5f81614d58565b600060208284031215614182578081fd5b5035919050565b60006020828403121561419a578081fd5b5051919050565b600080604083850312156141b3578182fd5b50508035926020909101359150565b600082516141d4818460208701614cdb565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff959095168552602085019390935260408401919091526060830152608082015260a00190565b901515815260200190565b60006020825282518060208401526142e9816040850160208701614cdb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526012908201527f4e6f7468696e6720746f206465706f7369740000000000000000000000000000604082015260600190565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b60208082526013908201527f4e6f7468696e6720746f20776974686472617700000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f4455524154494f4e5f464143544f522063616e6e6f74206265207a65726f0000604082015260600190565b6020808252600d908201527f5374696c6c20696e206c6f636b00000000000000000000000000000000000000604082015260600190565b60208082526033908201527f424f4f53545f5745494748542063616e6e6f74206265206d6f7265207468616e60408201527f20424f4f53545f5745494748545f4c494d495400000000000000000000000000606082015260800190565b60208082526015908201527f42616c616e6365206d7573742065786365656420300000000000000000000000604082015260600190565b60208082526025908201527f546f6b656e2063616e6e6f742062652073616d65206173206465706f7369742060408201527f746f6b656e000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f576974686472617720616d6f756e7420657863656564732062616c616e636500604082015260600190565b6020808252601c908201527f4d6178696d756d206c6f636b20706572696f6420657863656564656400000000604082015260600190565b6020808252601a908201527f4e6f74206f70657261746f72206f722053686477206f776e6572000000000000604082015260600190565b6020808252601f908201527f4d696e696d756d206c6f636b20706572696f64206973206f6e65207765656b00604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526036908201527f706572666f726d616e63654665652063616e6e6f74206265206d6f726520746860408201527f616e204d41585f504552464f524d414e43455f46454500000000000000000000606082015260800190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60208082526016908201527f43616e6e6f74206265207a65726f206164647265737300000000000000000000604082015260600190565b60208082526026908201527f4455524154494f4e5f464143544f525f4f5645524455452063616e6e6f74206260408201527f65207a65726f0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602e908201527f6f7665726475654665652063616e6e6f74206265206d6f7265207468616e204d60408201527f41585f4f5645524455455f464545000000000000000000000000000000000000606082015260800190565b60208082526036908201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460408201527f68616e204d494e5f4445504f5349545f414d4f554e5400000000000000000000606082015260800190565b6020808252603d908201527f4d41585f4c4f434b5f4455524154494f4e2063616e6e6f74206265206d6f726560408201527f207468616e204d41585f4c4f434b5f4455524154494f4e5f4c494d4954000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f61646d696e3a207775743f000000000000000000000000000000000000000000604082015260600190565b60208082526038908201527f576974686472617720616d6f756e74206d75737420626520677265617465722060408201527f7468616e204d494e5f57495448445241575f414d4f554e540000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252603d908201527f7769746864726177466565506572696f642063616e6e6f74206265206d6f726560408201527f207468616e204d41585f57495448445241575f4645455f504552494f44000000606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526030908201527f77697468647261774665652063616e6e6f74206265206d6f7265207468616e2060408201527f4d41585f57495448445241575f46454500000000000000000000000000000000606082015260800190565b60208082526023908201527f554e4c4f434b5f465245455f4455524154494f4e2063616e6e6f74206265207a60408201527f65726f0000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f43616e6e6f7420756e6c6f636b20796574000000000000000000000000000000604082015260600190565b90815260200190565b91825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b918252602082015260400190565b93845260208401929092526040830152606082015260800190565b988952602089019790975260408801959095526060870193909352608086019190915260a085015260c0840152151560e08301526101008201526101200190565b60008219821115614c4957614c49614d07565b500190565b600082614c82577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614cbf57614cbf614d07565b500290565b600082821015614cd657614cd6614d07565b500390565b60005b83811015614cf6578181015183820152602001614cde565b83811115612aed5750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461102257600080fd5b801515811461102257600080fdfea26469706673582212209148be7dbd4a79d027a9f9903f87a5cb14661085db3d662088dd1dffc4d82e9664736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x514 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87788782 GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xC6ED51BE GT PUSH2 0x16B JUMPI DUP1 PUSH4 0xE464C623 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF851A440 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x903 JUMPI DUP1 PUSH4 0xFD253B64 EQ PUSH2 0x90B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xF786B958 EQ PUSH2 0x8E8 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xE73008BC GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE73008BC EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x8C2 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xE464C623 EQ PUSH2 0x8A2 JUMPI DUP1 PUSH4 0xE4B37EF5 EQ PUSH2 0x8AA JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xDEF68A9C GT PUSH2 0x13A JUMPI DUP1 PUSH4 0xDF10B4E6 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x887 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x88F JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xDEF68A9C EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0xDEF7869D EQ PUSH2 0x86C JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xC6ED51BE EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xCC9CFBA1 EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x779 JUMPI DUP1 PUSH4 0xD4B0DE2F EQ PUSH2 0x851 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xACAF88CD GT PUSH2 0x219 JUMPI DUP1 PUSH4 0xBC3D652A GT PUSH2 0x1CD JUMPI DUP1 PUSH4 0xBDCA9165 GT PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xBDCA9165 EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xBEBA0FA0 EQ PUSH2 0x810 JUMPI DUP1 PUSH4 0xC54D349C EQ PUSH2 0x823 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xBC3D652A EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0xBC75F4B8 EQ PUSH2 0x800 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xB6857844 GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0xB6857844 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xB6AC642A EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0xBB9F408D EQ PUSH2 0x7E5 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0xACAF88CD EQ PUSH2 0x7B7 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x7BF JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x948A03F2 GT PUSH2 0x270 JUMPI DUP1 PUSH4 0xA3639B39 GT PUSH2 0x255 JUMPI DUP1 PUSH4 0xA3639B39 EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0xA5834E06 EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0xAAADA5DA EQ PUSH2 0x7AF JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x948A03F2 EQ PUSH2 0x779 JUMPI DUP1 PUSH4 0x95DC14E1 EQ PUSH2 0x781 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x87788782 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0x87D4BDA9 EQ PUSH2 0x74B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0x93C99E6A EQ PUSH2 0x766 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x4E4DE1E9 GT PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x668679BA GT PUSH2 0x35A JUMPI DUP1 PUSH4 0x731FF24A GT PUSH2 0x30E JUMPI DUP1 PUSH4 0x78B4330F GT PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x78B4330F EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x73B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x731FF24A EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x72B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x70897B23 GT PUSH2 0x33F JUMPI DUP1 PUSH4 0x70897B23 EQ PUSH2 0x700 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x71B JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x668679BA EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x6ED JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 GT PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x61D027B3 GT PUSH2 0x396 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x61FA6368 EQ PUSH2 0x6BF JUMPI DUP1 PUSH4 0x62122F5A EQ PUSH2 0x6C7 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AF JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x4E4DE1E9 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0x4F1BFC9E EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x51FB26DF EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x5521E9BF EQ PUSH2 0x687 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x2CFC5F01 GT PUSH2 0x490 JUMPI DUP1 PUSH4 0x3EB78874 GT PUSH2 0x444 JUMPI DUP1 PUSH4 0x3FEC4E32 GT PUSH2 0x429 JUMPI DUP1 PUSH4 0x3FEC4E32 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0x423B93ED EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x65C JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x3EB78874 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x621 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x2F6C493C GT PUSH2 0x475 JUMPI DUP1 PUSH4 0x2F6C493C EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x35981921 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x611 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x2CFC5F01 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x5D8 JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x1959A002 GT PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x1EA30FEF GT PUSH2 0x4CC JUMPI DUP1 PUSH4 0x1EA30FEF EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x1EFAC1B8 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0x29A5CFD6 EQ PUSH2 0x5BD JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x58F JUMPI PUSH2 0x514 JUMP JUMPDEST DUP1 PUSH4 0x1E81326 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x5A9F274 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xC59696B EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x14FF3039 EQ PUSH2 0x554 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x521 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x521 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x552 PUSH2 0x54D CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x552 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x57A PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BF5 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x521 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x5B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x521 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x412A JUMP JUMPDEST PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x521 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x552 PUSH2 0x5E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x63C PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x42BF JUMP JUMPDEST PUSH2 0x552 PUSH2 0x657 CALLDATASIZE PUSH1 0x4 PUSH2 0x40F2 JUMP JUMPDEST PUSH2 0x128F JUMP JUMPDEST PUSH2 0x521 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x552 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x40F2 JUMP JUMPDEST PUSH2 0x1476 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1593 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH2 0x63C PUSH2 0x160D JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x162E JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x63C PUSH2 0x6E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x177A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x6FB CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x178F JUMP JUMPDEST PUSH2 0x552 PUSH2 0x70E CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x185A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x552 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x63C PUSH2 0x759 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x552 PUSH2 0x774 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x1E37 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7CD CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x1FCA JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x521 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x81E CALLDATASIZE PUSH1 0x4 PUSH2 0x40F2 JUMP JUMPDEST PUSH2 0x20BC JUMP JUMPDEST PUSH2 0x552 PUSH2 0x831 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x844 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x867 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x2457 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x87A CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x521 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x2714 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x89D CALLDATASIZE PUSH1 0x4 PUSH2 0x41A1 JUMP JUMPDEST PUSH2 0x2730 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2794 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x279A JUMP JUMPDEST PUSH2 0x552 PUSH2 0x8D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x27A0 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x8E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D6 JUMP JUMPDEST PUSH2 0x286B JUMP JUMPDEST PUSH2 0x552 PUSH2 0x8F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x28C9 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x29A9 JUMP JUMPDEST PUSH2 0x521 PUSH2 0x29CD JUMP JUMPDEST PUSH4 0x5265C00 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 DUP2 GT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x47DD JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF4BD1C5978320077E792AFBB3911E8CAB1325CE28A6B3E67F9067A1D80692961 SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4AAE JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCAB352E118188B8A2F20A2E8C4CE1241CE2C1740AAC4F17C5B0831E65824D8EF SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP8 SWAP5 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP10 JUMP JUMPDEST PUSH2 0xB16 PUSH2 0x29D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB6B SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x44E8 JUMP JUMPDEST PUSH2 0xC16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0xC8A SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4230 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDC SWAP2 SWAP1 PUSH2 0x4155 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0xE2BBB15800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0xE2BBB158 SWAP2 PUSH2 0xD53 SWAP2 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14 SWAP3 POP PUSH1 0x0 SWAP2 POP LOG1 POP POP JUMP JUMPDEST PUSH6 0x9184E72A000 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH3 0x93A80 DUP2 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x49F4 JUMP JUMPDEST PUSH1 0x18 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB89DDADDB7435BE26824CB48D2D0186C9525A2E1EC057ABCB502704CDC0686CC SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0xEB2 JUMPI DUP1 SLOAD SWAP3 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI POP PUSH1 0x18 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 PUSH2 0xEF1 PUSH2 0x239B JUMP JUMPDEST PUSH2 0xEF9 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xF1A PUSH5 0xE8D4A51000 DUP8 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF31 DUP8 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 SLOAD DUP7 SLOAD PUSH2 0xF45 SWAP1 DUP8 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0xF77 DUP5 DUP5 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 SWAP2 POP PUSH2 0xF90 CALLER PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0xF9A JUMPI POP PUSH1 0x16 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xFA9 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0xFB3 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP8 POP PUSH2 0xFC8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xFDD PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1017 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4389 JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH1 0x0 PUSH2 0x2B56 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x1061 JUMPI POP PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x109F PUSH2 0x2B17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x10DB JUMPI POP TIMESTAMP DUP2 PUSH1 0x5 ADD SLOAD LT JUMPDEST PUSH2 0x1111 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4B68 JUMP JUMPDEST PUSH2 0x111D PUSH1 0x0 DUP1 DUP6 PUSH2 0x2F29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4780 JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x18B6D179114082D7EDA9837E15A39EB30032D5F3DF00487A67541398F48FABFE SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1247 PUSH2 0x359F JUMP JUMPDEST PUSH2 0x124F PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x12E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x132D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1421 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x144D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1471 SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A7 PUSH2 0x2B17 JUMP JUMPDEST PUSH6 0x9184E72A000 DUP2 GT PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4960 JUMP JUMPDEST PUSH2 0x1022 PUSH1 0x0 DUP3 PUSH2 0x2B56 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1704 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAF38F30BE8D095BC1461196DB21930B7D89226E57B0167F9D6ABE951C53F3332 SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1797 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x17E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x71614071B88DEE5E0B2AE578A9DD7B2EBBE9AE832BA419DC0242CD065A290B6C SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x18E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x46B5 JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xEFEAFCF03E479A9566D7EF321B4816DE0BA19CFA3CD0FAE2F8C5F4A0AFB342C4 SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH2 0x1924 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x192E PUSH1 0x0 PUSH2 0x364D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198E SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19DE SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST PUSH2 0x1471 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x0 EQ PUSH2 0x1A42 JUMPI PUSH1 0x7 SLOAD PUSH2 0x1A0F PUSH2 0x239B JUMP JUMPDEST PUSH2 0x1A17 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x1A21 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH2 0x1A33 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x1471 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1AA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1AA8 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x1AB0 PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x192E SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1B7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP2 GT ISZERO PUSH2 0x1BBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x448B JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7666DFFF8C3377938E522B4EED3AFF079973A976F95969DB60A406D49F40DA4E SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C33 JUMPI POP PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1C65 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C81 JUMPI POP TIMESTAMP PUSH1 0xE SLOAD DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x1C7F SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1D60 JUMPI PUSH1 0x0 PUSH2 0x1C90 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x1C98 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x1CA2 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 SLOAD DUP5 SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x1CBC SWAP1 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x1CD0 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x8 ADD SLOAD DUP3 PUSH2 0x1CE4 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE SLOAD DUP6 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH2 0x1CFB SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x1D16 JUMPI POP PUSH1 0x11 SLOAD JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0x17 SLOAD DUP4 PUSH2 0x1D29 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1D33 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x1D47 DUP4 DUP7 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP8 POP PUSH2 0x1D66 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1DBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1DF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x441D JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9478EB023AAC0A7D58A4E935377056BF27CF5B72A2300725F831817A8F62FBDE SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E45 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1E92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xDA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0x1F95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4AAE JUMP JUMPDEST PUSH1 0x15 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD5FE46099FA396290A7F57E36C3C3C8774E2562C18ED5D1DCC0FA75071E03F1D SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x201B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x2057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x46B5 JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC5D25457B67B87678C987375AF13F6E50BEB3AD7BFD009DA26766AE986EAA20D SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x215A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x222A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4B0B JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF84BF2B901CFC02956D4E69556D7448CEF4EA13587E7714DBA7C6D697091E7AD SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x22D3 JUMPI POP PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2305 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1D60 JUMPI PUSH1 0x0 PUSH2 0x2314 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x231C PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x2326 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x233D SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2347 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH2 0x236A DUP8 PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0x2374 JUMPI POP PUSH1 0x14 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0x2383 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x238D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP7 POP PUSH2 0x1D66 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC799B59D PUSH1 0xB SLOAD ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23FB SWAP3 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2427 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x244B SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x24A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x252E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x451F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2583 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x259B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25D3 SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP PUSH2 0x25F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER DUP4 PUSH2 0x3732 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2698 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8F49A182922022D9119A1A6AEECA151B4A5665E86BD61C1FF32E152D459558B2 SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2738 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x2747 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x277D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x431B JUMP JUMPDEST PUSH2 0x25F6 DUP3 DUP3 CALLER PUSH2 0x2F29 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27A8 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x27F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4749 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAFA147634B29E2C7BD53CE194256B9F41CFB9BA3036F2B822FDD1D965BEEA086 SWAP3 PUSH2 0x9EF SWAP3 AND SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH2 0x2873 PUSH2 0x29D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x28C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x43C0 JUMP JUMPDEST PUSH2 0x1022 DUP2 PUSH2 0x364D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x291A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4929 JUMP JUMPDEST PUSH4 0x5265C00 DUP2 GT ISZERO PUSH2 0x2958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4897 JUMP JUMPDEST PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCAB2F3455B51B6CA5377E84FCCD0F890B6F6CA36C02E18B6D36CB34F469FE4FE SWAP1 PUSH2 0x9EF SWAP1 DUP4 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH6 0x2D79883D2000 DUP2 JUMP JUMPDEST PUSH2 0x29DF PUSH2 0x3751 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29FD PUSH2 0x1B0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x48F4 JUMP JUMPDEST PUSH2 0x2AED DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A6B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3755 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFE DUP3 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x2B07 DUP4 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0xFC8 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B1F PUSH2 0x160D JUMP JUMPDEST ISZERO PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4712 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x2BA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x457C JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x5 ADD SLOAD LT PUSH2 0x2BDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4454 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x2C84 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x51CFF8D900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x51CFF8D9 SWAP1 PUSH2 0x2C51 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 SLOAD DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2CA1 PUSH12 0x204FCE5E3E25026110000000 DUP5 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2CAB SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB5 PUSH2 0x380B JUMP JUMPDEST PUSH2 0x2CBE CALLER PUSH2 0x39E2 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x2CCC JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x2D0D JUMPI PUSH1 0x0 PUSH2 0x2CDB PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 SLOAD DUP7 PUSH2 0x2CEC SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2CF6 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP4 POP DUP4 GT ISZERO PUSH2 0x2D07 JUMPI DUP4 SLOAD SWAP3 POP JUMPDEST POP PUSH2 0x2D34 JUMP JUMPDEST DUP3 SLOAD PUSH12 0x204FCE5E3E25026110000000 SWAP1 PUSH2 0x2D27 SWAP1 DUP4 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2D31 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x2D42 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x2D4C SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2D56 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP3 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D6C SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D85 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2DBA JUMPI POP PUSH1 0x18 SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x2DB7 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x2E47 JUMPI PUSH1 0x15 SLOAD PUSH2 0x2DCB CALLER PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0x2DD5 JUMPI POP PUSH1 0x16 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0x2DE4 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2DEE SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x2E38 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST PUSH2 0x2E42 DUP2 DUP5 PUSH2 0x4CC4 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH2 0x2E88 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER DUP4 PUSH2 0x3732 JUMP JUMPDEST DUP4 SLOAD ISZERO PUSH2 0x2EBA JUMPI PUSH1 0x7 SLOAD PUSH2 0x2E9A PUSH2 0x1930 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2EA6 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x2EB0 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x2EC2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x2ED1 CALLER PUSH2 0x3E53 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2F19 SWAP3 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO DUP1 PUSH2 0x2F5C JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x2FA0 JUMPI PUSH6 0x9184E72A000 DUP5 GT PUSH2 0x2FA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x483A JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD DUP4 SWAP1 TIMESTAMP GT PUSH2 0x2FFE JUMPI DUP5 ISZERO PUSH2 0x2FDD JUMPI TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2FD0 SWAP1 DUP5 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x8 DUP4 ADD SSTORE JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x2FF1 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x2FFB SWAP1 DUP3 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 ISZERO DUP1 PUSH2 0x300E JUMPI POP PUSH3 0x93A80 DUP2 LT ISZERO JUMPDEST PUSH2 0x3044 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4621 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 GT ISZERO PUSH2 0x3080 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x312B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xEFE6A8B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xEFE6A8B SWAP1 PUSH2 0x30F8 SWAP1 DUP7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4256 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3126 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x3133 PUSH2 0x380B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3190 JUMPI PUSH1 0x0 PUSH2 0x3144 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x318E SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST POP JUMPDEST PUSH2 0x3199 DUP4 PUSH2 0x39E2 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x3210 JUMPI TIMESTAMP DUP3 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x31C8 JUMPI TIMESTAMP PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0x31BE SWAP1 DUP6 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SSTORE PUSH2 0x31E2 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x31DC SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x321E PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP DUP9 ISZERO PUSH2 0x326C JUMPI PUSH2 0x3268 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP9 ADDRESS DUP13 PUSH2 0x2A4A JUMP JUMPDEST DUP9 SWAP3 POP JUMPDEST DUP6 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3280 JUMPI POP PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x32F9 JUMPI PUSH1 0x7 SLOAD DUP7 SLOAD PUSH2 0x3294 SWAP1 DUP4 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x329E SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP2 POP PUSH2 0x32AA DUP3 DUP5 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0x0 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x32C2 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 SSTORE PUSH1 0x4 DUP7 ADD SLOAD TIMESTAMP EQ ISZERO PUSH2 0x32F9 JUMPI PUSH1 0x8 DUP7 ADD DUP3 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x32F3 SWAP1 DUP5 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x3329 JUMPI PUSH2 0x330B DUP3 DUP3 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3318 SWAP1 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3322 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP4 POP PUSH2 0x332D JUMP JUMPDEST DUP3 SWAP4 POP JUMPDEST DUP6 PUSH1 0x4 ADD SLOAD DUP7 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x34B0 JUMPI PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x12 SLOAD DUP9 PUSH1 0x4 ADD SLOAD DUP10 PUSH1 0x5 ADD SLOAD PUSH2 0x3359 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x3363 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x336D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x3381 DUP8 DUP5 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x338B SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x3397 DUP2 DUP8 PUSH2 0x4C36 JUMP JUMPDEST SWAP6 POP DUP6 DUP9 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33AD SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH5 0xE8D4A51000 PUSH2 0x33C5 DUP8 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x33CF SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP1 DUP10 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33E5 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33FE SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP12 DUP10 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3419 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP12 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3432 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2B943276E5D747F6F7DD46D3B880D8874CB8D6B9B88CA1903990A2738E7DC7A1 DUP11 PUSH1 0x8 ADD SLOAD DUP12 PUSH1 0x0 ADD SLOAD DUP13 PUSH1 0x4 ADD SLOAD DUP14 PUSH1 0x5 ADD SLOAD PUSH2 0x348F SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x34A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x34CA JUMP JUMPDEST DUP4 DUP7 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34C4 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP10 GT DUP1 PUSH2 0x34D9 JUMPI POP PUSH1 0x0 DUP9 GT JUMPDEST ISZERO PUSH2 0x34E5 JUMPI TIMESTAMP PUSH1 0x1 DUP8 ADD SSTORE JUMPDEST DUP4 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34F7 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x350C PUSH2 0x1930 JUMP JUMPDEST DUP9 SLOAD PUSH2 0x3518 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3522 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x352C SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE TIMESTAMP PUSH1 0x3 DUP8 ADD SSTORE PUSH2 0x3540 DUP8 PUSH2 0x3E53 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7162984403F6C73C8639375D45A9187DFD04602231BD8E587C415718B5F7E5F9 DUP11 DUP7 DUP12 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x358C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x35A7 PUSH2 0x160D JUMP JUMPDEST PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4352 JUMP JUMPDEST PUSH2 0x35E5 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3636 PUSH2 0x3751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3643 SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x36CA PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x3636 PUSH2 0x3751 JUMP JUMPDEST PUSH2 0x111D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A6B SWAP3 SWAP2 SWAP1 PUSH2 0x4230 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3F4D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x111D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x37D5 SWAP2 SWAP1 PUSH2 0x4155 JUMP JUMPDEST PUSH2 0x111D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4A51 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0xC799B59D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0xC799B59D SWAP2 PUSH2 0x3883 SWAP2 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D3 SWAP2 SWAP1 PUSH2 0x4189 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 PUSH2 0x38E5 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x441A3E70 SWAP2 PUSH2 0x395E SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x398C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x399A PUSH2 0x13AC JUMP JUMPDEST SWAP1 POP CALLER PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA PUSH2 0x39C8 DUP5 DUP5 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D5 SWAP2 SWAP1 PUSH2 0x4B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x25F6 JUMPI PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3CDA JUMPI PUSH1 0x0 DUP2 PUSH1 0x6 ADD SLOAD PUSH1 0x7 SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3A32 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x3A3C SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3A46 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH2 0x3A50 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 ADD SLOAD PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A68 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x6 DUP4 ADD DUP2 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x3A8B SWAP1 DUP5 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3AD6 JUMPI POP TIMESTAMP PUSH1 0xE SLOAD DUP4 PUSH1 0x5 ADD SLOAD PUSH2 0x3AD4 SWAP2 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3BB5 JUMPI PUSH1 0x0 DUP3 PUSH1 0x8 ADD SLOAD DUP3 PUSH2 0x3AED SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE SLOAD DUP5 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH2 0x3B04 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH2 0x3B0E SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x3B1F JUMPI POP PUSH1 0x11 SLOAD JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0x17 SLOAD DUP4 PUSH2 0x3B32 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3B3C SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 PUSH2 0x3B50 DUP4 DUP7 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x3BA4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST PUSH2 0x3BAE DUP2 DUP7 PUSH2 0x4CC4 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x3BBF PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x0 EQ PUSH2 0x3BF5 JUMPI PUSH2 0x3BD7 DUP4 DUP4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3BE4 SWAP1 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3BEE SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF8 JUMP JUMPDEST POP DUP2 JUMPDEST DUP1 DUP5 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3C10 SWAP1 DUP5 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x3CD2 JUMPI PUSH1 0x7 DUP5 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x5 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x8 DUP6 ADD SLOAD PUSH1 0xD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x3C73 SWAP1 DUP5 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x8 DUP6 ADD SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH32 0xF7870C5B224CBC19873599E46CCFC7103934650509B1AF0C3CE90138377C2004 SWAP1 PUSH2 0x3CC9 SWAP1 DUP7 SWAP1 TIMESTAMP SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x25F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x25F6 JUMPI PUSH1 0x0 PUSH1 0x7 SLOAD PUSH2 0x3D14 PUSH2 0x1930 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x3D20 SWAP2 SWAP1 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3D2A SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D42 SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x3D5B SWAP1 DUP4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH2 0x3D6A DUP6 PUSH2 0x2B11 JUMP JUMPDEST ISZERO PUSH2 0x3D74 JUMPI POP PUSH1 0x14 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0x3D83 DUP4 DUP6 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3D8D SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3DE9 JUMPI PUSH1 0x9 SLOAD PUSH2 0x3DDC SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x3732 JUMP JUMPDEST PUSH2 0x3DE6 DUP2 DUP6 PUSH2 0x4CC4 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x0 PUSH2 0x3DF3 PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x0 EQ PUSH2 0x3E29 JUMPI PUSH2 0x3E0B DUP7 DUP4 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3E18 SWAP1 DUP9 PUSH2 0x4C87 JUMP JUMPDEST PUSH2 0x3E22 SWAP2 SWAP1 PUSH2 0x4C4E JUMP JUMPDEST SWAP1 POP PUSH2 0x3E2C JUMP JUMPDEST POP DUP5 JUMPDEST DUP1 DUP8 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3E44 SWAP1 DUP5 SWAP1 PUSH2 0x4C36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1022 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x3EAD SWAP2 SWAP1 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 DUP5 ADD SLOAD PUSH1 0xD SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH32 0x87356EF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP5 SWAP6 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP4 PUSH4 0x87356EF7 SWAP4 PUSH2 0x3F16 SWAP4 DUP10 SWAP4 SWAP1 SWAP3 DUP9 SWAP3 SWAP1 PUSH1 0x4 ADD PUSH2 0x4284 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F5C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3F66 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3FA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x4658 JUMP JUMPDEST PUSH2 0x3FAB DUP6 PUSH2 0x4067 JUMP JUMPDEST PUSH2 0x3FE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x49BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x400A SWAP2 SWAP1 PUSH2 0x41C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4047 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x404C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x405C DUP3 DUP3 DUP7 PUSH2 0x4083 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4092 JUMPI POP DUP2 PUSH2 0x3F5F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x40A2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x42CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40E7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F5F DUP2 PUSH2 0x4D36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4104 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x410F DUP2 PUSH2 0x4D36 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x411F DUP2 PUSH2 0x4D58 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x413C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4147 DUP2 PUSH2 0x4D36 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4166 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3F5F DUP2 PUSH2 0x4D58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4182 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x419A JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41B3 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x41D4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4CDB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x42E9 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4455524154494F4E5F464143544F522063616E6E6F74206265207A65726F0000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x5374696C6C20696E206C6F636B00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x424F4F53545F5745494748542063616E6E6F74206265206D6F7265207468616E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20424F4F53545F5745494748545F4C494D495400000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742065786365656420300000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063616E6E6F742062652073616D65206173206465706F73697420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206C6F636B20706572696F6420657863656564656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F74206F70657261746F72206F722053686477206F776E6572000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D206C6F636B20706572696F64206973206F6E65207765656B00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x706572666F726D616E63654665652063616E6E6F74206265206D6F7265207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x616E204D41585F504552464F524D414E43455F46454500000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206265207A65726F206164647265737300000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4455524154494F4E5F464143544F525F4F5645524455452063616E6E6F742062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x6F7665726475654665652063616E6E6F74206265206D6F7265207468616E204D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x41585F4F5645524455455F464545000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x68616E204D494E5F4445504F5349545F414D4F554E5400000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4D41585F4C4F434B5F4455524154494F4E2063616E6E6F74206265206D6F7265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207468616E204D41585F4C4F434B5F4455524154494F4E5F4C494D4954000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61646D696E3A207775743F000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E74206D757374206265206772656174657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7468616E204D494E5F57495448445241575F414D4F554E540000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x7769746864726177466565506572696F642063616E6E6F74206265206D6F7265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207468616E204D41585F57495448445241575F4645455F504552494F44000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261774665652063616E6E6F74206265206D6F7265207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x4D41585F57495448445241575F46454500000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E4C4F434B5F465245455F4455524154494F4E2063616E6E6F74206265207A PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420756E6C6F636B20796574000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4C49 JUMPI PUSH2 0x4C49 PUSH2 0x4D07 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4C82 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4CBF JUMPI PUSH2 0x4CBF PUSH2 0x4D07 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4CD6 JUMPI PUSH2 0x4CD6 PUSH2 0x4D07 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4CF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4CDE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2AED JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0x48 0xBE PUSH30 0xBD4A79D027A9F9903F87A5CB14661085DB3D662088DD1DFFC4D82E966473 PUSH16 0x6C634300080100330000000000000000 ",
							"sourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;1917:32;;;:::i;24861:248::-;;;;;;:::i;:::-;;:::i;:::-;;25231:313;;;;;;:::i;:::-;;:::i;1389:44::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;5922:388::-;;;;;;:::i;:::-;;:::i;2629:58::-;;;:::i;25660:356::-;;;;;;:::i;:::-;;:::i;31559:1102::-;;;;;;:::i;:::-;;:::i;2170:57::-;;;:::i;17324:158::-;;;;;;:::i;:::-;;:::i;11330:273::-;;;;;;:::i;:::-;;:::i;26953:304::-;;;;;;:::i;:::-;;:::i;1707:26::-;;;:::i;3199:43::-;;;:::i;28737:103::-;;;:::i;1440:55::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;22366:244::-;;;;;;:::i;:::-;;:::i;33332:107::-;;;:::i;22813:232::-;;;;;;:::i;:::-;;:::i;2822:43::-;;;:::i;1827:26::-;;;:::i;16973:221::-;;;;;;:::i;:::-;;:::i;1797:23::-;;;:::i;:::-;;;;;;;:::i;1615:84:1:-;;;:::i;1767:23:7:-;;;:::i;1360:20::-;;;:::i;21960:199::-;;;;;;:::i;:::-;;:::i;1620:51::-;;;;;;:::i;:::-;;:::i;20681:183::-;;;;;;:::i;:::-;;:::i;23595:287::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;33600:124:7:-;;;:::i;2538:53::-;;;:::i;33007:193::-;;;:::i;28520:100::-;;;:::i;20027:88::-;;;:::i;3151:35::-;;;:::i;1533:52::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;;;:::i;27763:264:7:-;;;;;;:::i;:::-;;:::i;2103:52::-;;;:::i;29867:1148::-;;;;;;:::i;:::-;;:::i;26587:246::-;;;;;;:::i;:::-;;:::i;3355:38::-;;;:::i;2760:45::-;;;:::i;2990:49::-;;;:::i;21289:204::-;;;;;;:::i;:::-;;:::i;24496:257::-;;;;;;:::i;:::-;;:::i;24007:380::-;;;;;;:::i;:::-;;:::i;1235:43::-;;;:::i;3094:40::-;;;:::i;1980:50::-;;;:::i;23249:234::-;;;;;;:::i;:::-;;:::i;27374:280::-;;;;;;:::i;:::-;;:::i;28985:745::-;;;;;;:::i;:::-;;:::i;32813:186::-;;;:::i;2044:46::-;;;:::i;28118:285::-;;;;;;:::i;:::-;;:::i;21607:239::-;;;;;;:::i;:::-;;:::i;3408:43::-;;;:::i;1287:28::-;;;:::i;11844:225::-;;;;;;:::i;:::-;;:::i;2884:41::-;;;:::i;3301:39::-;;;:::i;1860:29::-;;;:::i;3255:31::-;;;:::i;20977:204::-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;26130:345:7:-;;;;;;:::i;:::-;;:::i;1740:20::-;;;:::i;1182:29::-;;;:::i;2391:56::-;;;:::i;2312:59::-;2362:9;2312:59;:::o;1917:32::-;;;;:::o;24861:248::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2145:10:::1;24943:11;:30;;24935:89;;;;;;;;;;;;:::i;:::-;25035:10;:24:::0;;;25075:26:::1;::::0;::::1;::::0;::::1;::::0;25048:11;;25075:26:::1;:::i;:::-;;;;;;;;24861:248:::0;:::o;25231:313::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;2087:3:::1;25331:20;:40;;25323:101;;;;;;;;;;;;:::i;:::-;25435:19;:42:::0;;;25493:43:::1;::::0;::::1;::::0;::::1;::::0;25457:20;;25493:43:::1;:::i;1389:44::-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5922:388::-;1094:13:0;:11;:13::i;:::-;6003:32:7::1;::::0;;;;5985:15:::1;::::0;6003:20:::1;::::0;::::1;::::0;::::1;::::0;:32:::1;::::0;6024:10:::1;::::0;6003:32:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5985:50:::0;-1:-1:-1;6054:12:7;6046:46:::1;;;;;;;;;;;;:::i;:::-;6103:63;:27;::::0;::::1;6131:10;6151:4;6158:7:::0;6103:27:::1;:63::i;:::-;6177:50;::::0;;;;:18:::1;::::0;::::1;::::0;::::1;::::0;:50:::1;::::0;6204:12:::1;::::0;6219:7;;6177:50:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6259:11:7::1;::::0;6238:42:::1;::::0;;;;:20:::1;:12;:20;::::0;::::1;::::0;:42:::1;::::0;6259:11;6272:7;;6238:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6296:6:7::1;::::0;::::1;::::0;-1:-1:-1;6296:6:7;;-1:-1:-1;6296:6:7::1;1117:1:0;5922:388:7::0;:::o;2629:58::-;2674:13;2629:58;:::o;25660:356::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;2220:7:::1;25770:18;:45;;25748:156;;;;;;;;;;;;:::i;:::-;25915:17;:38:::0;;;25969:39:::1;::::0;::::1;::::0;::::1;::::0;25935:18;;25969:39:::1;:::i;31559:1102::-:0;31686:15;;;31642:7;31686:15;;;:8;:15;;;;;31716:11;;:21;-1:-1:-1;31712:75:7;;;31764:11;;;-1:-1:-1;31712:75:7;31823:10;31802:32;;;;:20;:32;;;;;;;;31801:33;:99;;;;;31882:17;;31857:4;:22;;;:42;;;;:::i;:::-;31839:15;:60;31801:99;31797:838;;;31917:12;31946:34;:32;:34::i;:::-;31932:11;:9;:11::i;:::-;:48;;;;:::i;:::-;32050:11;;31917:63;;-1:-1:-1;31995:21:7;;32020:26;2506:4;32020:7;:26;:::i;:::-;32019:42;;;;:::i;:::-;31995:66;;32076:26;32219:42;32255:5;32219:35;:42::i;:::-;32178:21;;;;32147:11;;32114;;32106:20;;:4;:20;:::i;:::-;32105:53;;;;:::i;:::-;:94;;;;:::i;:::-;:156;;;;:::i;:::-;32076:185;-1:-1:-1;32276:21:7;2506:4;32301:34;32322:13;32076:185;32301:34;:::i;:::-;32300:55;;;;:::i;:::-;32388:11;;32276:79;;-1:-1:-1;32418:23:7;32430:10;32418:11;:23::i;:::-;32414:93;;;-1:-1:-1;32472:19:7;;32414:93;32521:26;32578:5;32551:23;32567:7;32551:13;:23;:::i;:::-;32550:33;;;;:::i;:::-;32521:62;-1:-1:-1;32598:25:7;;-1:-1:-1;;;;;;;32598:25:7;31797:838;32652:1;32645:8;;;31559:1102;;;;;:::o;2170:57::-;2220:7;2170:57;:::o;17324:158::-;1239:19:1;:17;:19::i;:::-;17409:1:7::1;17399:7;:11;17391:43;;;;;;;;;;;;:::i;:::-;17445:29;17463:7;17472:1;17445:17;:29::i;:::-;17324:158:::0;:::o;11330:273::-;11394:5;6686:10;:19;;;;;:45;;-1:-1:-1;6723:8:7;;;;6709:10;:22;6686:45;6678:84;;;;;;;;;;;;:::i;:::-;1239:19:1::1;:17;:19::i;:::-;11450:15:7::2;::::0;::::2;11426:21;11450:15:::0;;;:8:::2;:15;::::0;;;;11484:11:::2;::::0;::::2;::::0;::::2;;:49:::0;::::2;;;;11518:15;11499:4;:16;;;:34;11484:49;11476:79;;;;;;;;;;;;:::i;:::-;11566:29;11583:1;11586::::0;11589:5:::2;11566:16;:29::i;:::-;1268:1:1;11330:273:7::0;;:::o;26953:304::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;27082:1:::1;27057:22;:26;27049:77;;;;;;;;;;;;:::i;:::-;27137:23;:48:::0;;;27201::::1;::::0;::::1;::::0;::::1;::::0;27163:22;;27201:48:::1;:::i;1707:26::-:0;;;;:::o;3199:43::-;;;;:::o;28737:103::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;1486:16:1::1;:14;:16::i;:::-;28797:10:7::2;:8;:10::i;:::-;28823:9;::::0;::::2;::::0;;;::::2;28737:103::o:0;1440:55::-;;;;;;;;;;;;;;;:::o;22366:244::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;22466:19:::1;::::0;::::1;22458:54;;;;;;;;;;;;:::i;:::-;22523:30;::::0;::::1;;::::0;;;:23:::1;:30;::::0;;;;;:38;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;22577:25;;22523:38;;:30;22577:25:::1;::::0;::::1;22366:244:::0;;:::o;33332:107::-;33401:30;;;;;33374:7;;33401:15;:5;:15;;;;:30;;33425:4;;33401:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33394:37;;33332:107;:::o;22813:232::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;22905:19:::1;::::0;::::1;22897:54;;;;;;;;;;;;:::i;:::-;22962:26;::::0;::::1;;::::0;;;:19:::1;:26;::::0;;;;;:34;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;23012:25;;22962:34;;:26;23012:25:::1;::::0;::::1;22813:232:::0;;:::o;2822:43::-;;;;:::o;1827:26::-;;;;:::o;16973:221::-;1239:19:1;:17;:19::i;:::-;2740:13:7::1;17056:7;:29;17048:98;;;;;;;;;;;;:::i;:::-;17157:29;17175:1;17178:7;17157:17;:29::i;1797:23::-:0;;;;;;:::o;1615:84:1:-;1662:4;1685:7;;;;;;;1615:84::o;1767:23:7:-;;;;;;:::o;1360:20::-;;;;;;:::o;21960:199::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;22040:20:::1;::::0;::::1;22032:55;;;;;;;;;;;;:::i;:::-;22098:5;:14:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;;22128:23:::1;::::0;::::1;::::0;::::1;::::0;22145:5:::1;::::0;22128:23:::1;:::i;1620:51::-:0;;;;;;;;;;;;;;;:::o;20681:183::-;1094:13:0;:11;:13::i;:::-;20753:20:7::1;::::0;::::1;20745:55;;;;;;;;;;;;:::i;:::-;20811:5;:14:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;;20841:15:::1;::::0;::::1;::::0;::::1;::::0;20850:5:::1;::::0;20841:15:::1;:::i;23595:287::-:0;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;2026:4:::1;23685:15;:38;;23677:105;;;;;;;;;;;;:::i;:::-;23793:14;:32:::0;;;23841:33:::1;::::0;::::1;::::0;::::1;::::0;23810:15;;23841:33:::1;:::i;1831:101:0:-:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;33600:124:7:-;33642:7;33702:14;;33669:5;:15;;;33693:4;33669:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;2538:53::-;2587:4;2538:53;:::o;33007:193::-;33062:7;33089:11;;33104:1;33089:16;:103;;33180:11;;33132:34;:32;:34::i;:::-;33118:11;:9;:11::i;:::-;:48;;;;:::i;:::-;33117:59;;33171:4;33117:59;:::i;:::-;33116:75;;;;:::i;:::-;33089:103;;;-1:-1:-1;33108:4:7;;33007:193::o;28520:100::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;1239:19:1::1;:17;:19::i;:::-;28581:8:7::2;:6;:8::i;:::-;28605:7;::::0;::::2;::::0;;;::::2;28520:100::o:0;20027:88::-;20088:10;20079:20;;;;:8;:20;;;;;:27;20070:37;;:8;:37::i;3151:35::-;;;;:::o;1533:52::-;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;1201:85;:::o;27763:264:7:-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;2436:11:::1;27847:12;:34;;27839:98;;;;;;;;;;;;:::i;:::-;27948:12;:27:::0;;;27991:28:::1;::::0;::::1;::::0;::::1;::::0;27963:12;;27991:28:::1;:::i;2103:52::-:0;2145:10;2103:52;:::o;29867:1148::-;29976:15;;;29932:7;29976:15;;;:8;:15;;;;;30020:11;;:15;;;;:43;;-1:-1:-1;30052:11:7;;;;;;30020:43;:87;;;;-1:-1:-1;30081:26:7;;;;;;;:19;:26;;;;;;;;30080:27;30020:87;:165;;;;;30169:15;30145:20;;30126:4;:16;;;:39;;;;:::i;:::-;30125:59;30020:165;30002:987;;;30212:12;30241:34;:32;:34::i;:::-;30227:11;:9;:11::i;:::-;:48;;;;:::i;:::-;30353:21;;;;30339:11;;30323;;30212:63;;-1:-1:-1;30290:21:7;;30315:20;;30212:63;30315:20;:::i;:::-;30314:36;;;;:::i;:::-;:60;;;;:::i;:::-;30290:84;;30389:18;30426:4;:17;;;30410:13;:33;;;;:::i;:::-;30389:54;;30458:23;30521:20;;30502:4;:16;;;30484:15;:34;;;;:::i;:::-;:57;;;;:::i;:::-;30458:83;;30578:23;;30560:15;:41;30556:123;;;-1:-1:-1;30640:23:7;;30556:123;30768:21;30825:23;;30811:10;;30793:15;:28;;;;:::i;:::-;30792:56;;;;:::i;:::-;30768:80;-1:-1:-1;30863:25:7;2506:4;30892:26;30768:80;30892:10;:26;:::i;:::-;30891:47;;;;:::i;:::-;30863:75;-1:-1:-1;30953:24:7;;-1:-1:-1;;;;;;;30953:24:7;30002:987;31006:1;30999:8;;;29867:1148;;;;:::o;26587:246::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;26695:1:::1;26677:15;:19;26669:62;;;;;;;;;;;;:::i;:::-;26742:15;:33:::0;;;26791:34:::1;::::0;::::1;::::0;::::1;::::0;26760:15;;26791:34:::1;:::i;3355:38::-:0;;;;:::o;2760:45::-;;;;:::o;2990:49::-;;;;:::o;21289:204::-;1094:13:0;:11;:13::i;:::-;21367:23:7::1;::::0;::::1;21359:58;;;;;;;;;;;;:::i;:::-;21428:8;:20:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;;21464:21:::1;::::0;::::1;::::0;::::1;::::0;21476:8:::1;::::0;21464:21:::1;:::i;24496:257::-:0;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;2087:3:::1;24580:12;:32;;24572:93;;;;;;;;;;;;:::i;:::-;24676:11;:26:::0;;;24718:27:::1;::::0;::::1;::::0;::::1;::::0;24690:12;;24718:27:::1;:::i;24007:380::-:0;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;2026:4:::1;24127:23;:46;;24105:150;;;;;;;;;;;;:::i;:::-;24266:22;:48:::0;;;24330:49:::1;::::0;::::1;::::0;::::1;::::0;24291:23;;24330:49:::1;:::i;1235:43::-:0;;;:::o;3094:40::-;;;;:::o;1980:50::-;2026:4;1980:50;:::o;23249:234::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;23342:19:::1;::::0;::::1;23334:54;;;;;;;;;;;;:::i;:::-;23399:27;::::0;::::1;;::::0;;;:20:::1;:27;::::0;;;;;:35;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;23450:25;;23399:35;;:27;23450:25:::1;::::0;::::1;23249:234:::0;;:::o;27374:280::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;27494:1:::1;27472:19;:23;27464:71;;;;;;;;;;;;:::i;:::-;27546:20;:42:::0;;;27604::::1;::::0;::::1;::::0;::::1;::::0;27569:19;;27604:42:::1;:::i;28985:745::-:0;29098:15;;;29054:7;29098:15;;;:8;:15;;;;;29128:11;;:15;;;;:31;;-1:-1:-1;29148:11:7;;;;;;29147:12;29128:31;:66;;;;-1:-1:-1;29164:30:7;;;;;;;:23;:30;;;;;;;;29163:31;29128:66;29124:580;;;29211:12;29240:34;:32;:34::i;:::-;29226:11;:9;:11::i;:::-;:48;;;;:::i;:::-;29211:63;;29289:19;29334:11;;29326:4;29312;:11;;;:18;;;;:::i;:::-;29311:34;;;;:::i;:::-;29289:56;;29360:18;29395:4;:25;;;29381:11;:39;;;;:::i;:::-;29453:14;;29360:60;;-1:-1:-1;29486:18:7;29498:5;29486:11;:18::i;:::-;29482:91;;;-1:-1:-1;29535:22:7;;29482:91;29587:29;29644:5;29620:20;29633:7;29620:10;:20;:::i;:::-;29619:30;;;;:::i;:::-;29587:62;-1:-1:-1;29664:28:7;;-1:-1:-1;;;;;;29664:28:7;32813:186;32878:7;32898:14;32915:12;:24;;;32940:11;;32961:4;32915:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32898:69;-1:-1:-1;;32813:186:7;:::o;2044:46::-;2087:3;2044:46;:::o;28118:285::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;28220:5:::1;28202:24;;:6;:24;;;;28194:74;;;;;;;;;;;;:::i;:::-;28298:39;::::0;;;;28281:14:::1;::::0;28298:24:::1;::::0;::::1;::::0;::::1;::::0;:39:::1;::::0;28331:4:::1;::::0;28298:39:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28281:56:::0;-1:-1:-1;28348:47:7::1;:27;::::0;::::1;28376:10;28281:56:::0;28348:27:::1;:47::i;:::-;6485:1;28118:285:::0;:::o;21607:239::-;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;21695:28:::1;::::0;::::1;21687:63;;;;;;;;;;;;:::i;:::-;21761:13;:30:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;;21807:31:::1;::::0;::::1;::::0;::::1;::::0;21824:13:::1;::::0;21807:31:::1;:::i;3408:43::-:0;;;;:::o;1287:28::-;;;;;;:::o;11844:225::-;1239:19:1;:17;:19::i;:::-;11953:1:7::1;11943:7;:11;:32;;;;11974:1;11958:13;:17;11943:32;11935:63;;;;;;;;;;;;:::i;:::-;12009:52;12026:7;12035:13;12050:10;12009:16;:52::i;2884:41::-:0;;;;:::o;3301:39::-;;;;:::o;1860:29::-;;;;:::o;3255:31::-;;;;:::o;20977:204::-;1094:13:0;:11;:13::i;:::-;21055:23:7::1;::::0;::::1;21047:58;;;;;;;;;;;;:::i;:::-;21116:8;:20:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;;21152:21:::1;::::0;::::1;::::0;::::1;::::0;21164:8:::1;::::0;21152:21:::1;:::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;;;;;;;;;;:::i;:::-;2244:28;2263:8;2244:18;:28::i;26130:345:7:-:0;6453:5;;;;6439:10;:19;6431:43;;;;;;;;;;;;:::i;:::-;2362:9:::1;26236:16;:43;;26214:154;;;;;;;;;;;;:::i;:::-;26379:17;:36:::0;;;26431::::1;::::0;::::1;::::0;::::1;::::0;26399:16;;26431:36:::1;:::i;1740:20::-:0;;;;;;:::o;1182:29::-;;;:::o;2391:56::-;2436:11;2391:56;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;974:241:4:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;31190:177:7:-;31273:7;31333:26;31353:5;31333:19;:26::i;:::-;31300:30;31324:5;31300:23;:30::i;:::-;:59;;;;:::i;33798:191::-;33928:17;33973:8;;;33798:191::o;1767:106:1:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;17657:2298:7:-;17771:10;17738:21;17762:20;;;:8;:20;;;;;17812:11;;17801:22;;;17793:66;;;;;;;;;;;;:::i;:::-;17897:15;17878:4;:16;;;:34;17870:60;;;;;;;;;;;;:::i;:::-;17947:5;;:19;:5;:19;17943:86;;17990:5;;17983:34;;;;;17990:5;;;;;17983:22;;:34;;18006:10;;17983:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17943:86;18276:11;;18197:7;;18174:20;;18240:32;2587:4;18197:7;18240:32;:::i;:::-;18239:48;;;;:::i;:::-;18215:72;;18345:9;:7;:9::i;:::-;18398:27;18414:10;18398:15;:27::i;:::-;18442:12;;:27;;;;;18468:1;18458:7;:11;18442:27;18438:386;;;18486:12;18501:11;:9;:11::i;:::-;18486:26;;18568:4;18553:11;;18543:7;:21;;;;:::i;:::-;18542:30;;;;:::i;:::-;18637:11;;18527:45;;-1:-1:-1;18622:26:7;;18618:93;;;18684:11;;;-1:-1:-1;18618:93:7;18438:386;;;;18775:11;;2587:4;;18759:27;;:13;:27;:::i;:::-;18758:54;;;;:::i;:::-;18743:69;;18438:386;18834:21;18889:11;;18873:12;18859:11;:9;:11::i;:::-;:26;;;;:::i;:::-;18858:42;;;;:::i;:::-;18834:66;;18926:12;18911:4;:11;;;:27;;;;;;;:::i;:::-;;;;;;;;18964:12;18949:11;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;19050:10:7;19029:32;;;;:20;:32;;;;;;;;19028:33;:99;;;;;19109:17;;19084:4;:22;;;:42;;;;:::i;:::-;19066:15;:60;19028:99;19024:458;;;19162:11;;19192:23;19204:10;19192:11;:23::i;:::-;19188:93;;;-1:-1:-1;19246:19:7;;19188:93;19295:26;19352:5;19325:23;19341:7;19325:13;:23;:::i;:::-;19324:33;;;;:::i;:::-;19391:8;;19295:62;;-1:-1:-1;19372:48:7;;19391:8;19372:5;:18;;;19391:8;19295:62;19372:18;:48::i;:::-;19435:35;19452:18;19435:35;;:::i;:::-;;;19024:458;;;19494:45;:18;:5;:18;19513:10;19525:13;19494:18;:45::i;:::-;19556:11;;:15;19552:179;;19646:11;;19631;:9;:11::i;:::-;19617;;:25;;;;:::i;:::-;19616:41;;;;:::i;:::-;19588:25;;;:69;19552:179;;;19718:1;19690:25;;;:29;19552:179;19769:15;19743:23;;;:41;19845:35;19869:10;19845:23;:35::i;:::-;19907:10;19898:49;;;19919:13;19934:12;19898:49;;;;;;;:::i;:::-;;;;;;;;17657:2298;;;;;;:::o;12285:4558::-;12444:15;;;12420:21;12444:15;;;:8;:15;;;;;12474:11;;:16;;:31;;;12504:1;12494:7;:11;12474:31;12470:159;;;2674:13;12530:7;:28;12522:95;;;;;;;;;;;;:::i;:::-;12799:16;;;;12771:13;;12819:15;-1:-1:-1;12795:453:7;;12983:11;;12979:185;;13036:15;13015:18;;;:36;13091:17;;;;13070;:38;;:17;;:38;;13091:17;;13070:38;:::i;:::-;;;;-1:-1:-1;;13147:1:7;13127:17;;;:21;12979:185;13218:4;:18;;;13199:4;:16;;;:37;;;;:::i;:::-;13178:58;;;;:::i;:::-;;;12795:453;13266:18;;;:60;;;2288:7;13288:17;:38;;13266:60;13258:104;;;;;;;;;;;;:::i;:::-;13402:17;;13381;:38;;13373:79;;;;;;;;;;;;:::i;:::-;13469:5;;:19;:5;:19;13465:104;;13512:5;;13505:52;;;;;13512:5;;;;;13505:21;;:52;;13527:5;;13534:7;;13543:13;;13505:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13465:104;13625:9;:7;:9::i;:::-;13683:11;;13679:138;;13716:19;13738:11;:9;:11::i;:::-;13783:8;;13716:33;;-1:-1:-1;13764:41:7;;13783:8;13764:5;:18;;;13783:8;13716:33;13764:18;:41::i;:::-;13679:138;;13858:22;13874:5;13858:15;:22::i;:::-;13931:17;;13927:336;;13988:15;13969:4;:16;;;:34;13965:254;;;14045:15;14024:18;;;:36;;;14098:31;;14116:13;;14098:31;:::i;:::-;14079:16;;;:50;13965:254;;;14190:13;14170:4;:16;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;13965:254:7;14233:11;;;:18;;;;14247:4;14233:18;;;13927:336;14275:21;14307;14339:32;14382:12;14397:11;:9;:11::i;:::-;14382:26;-1:-1:-1;14423:11:7;;14419:135;;14451:53;:22;:5;:22;14474:5;14489:4;14496:7;14451:22;:53::i;:::-;14535:7;14519:23;;14419:135;14603:11;;:15;;;;:30;;-1:-1:-1;14622:11:7;;;;;;14603:30;14599:481;;;14700:11;;14685;;14678:18;;:4;:18;:::i;:::-;14677:34;;;;:::i;:::-;14650:61;-1:-1:-1;14726:41:7;14650:61;14726:41;;:::i;:::-;;;14797:4;:11;;;14782;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;14837:1:7;14823:15;;14894:18;;;;14916:15;14894:37;14890:179;;;14952:17;;;:44;;;15015:17;:38;;14972:24;;15015:17;;;:38;;14972:24;;15015:38;:::i;:::-;;;;-1:-1:-1;;14890:179:7;15094:11;;:16;15090:192;;15176:31;15183:24;15176:4;:31;:::i;:::-;15160:11;;15144:27;;:13;:27;:::i;:::-;15143:65;;;;:::i;:::-;15127:81;;15090:192;;;15257:13;15241:29;;15090:192;15363:4;:18;;;15344:4;:16;;;:37;15340:1003;;;15437:19;15518:15;;15502:12;;15480:4;:18;;;15461:4;:16;;;:37;;;;:::i;:::-;15460:54;;;;:::i;:::-;15459:74;;;;:::i;:::-;15437:96;-1:-1:-1;15548:19:7;2506:4;15571:27;15585:13;15437:96;15571:27;:::i;:::-;15570:48;;;;:::i;:::-;15548:70;-1:-1:-1;15633:28:7;15548:70;15633:28;;:::i;:::-;;;15691:13;15676:4;:11;;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;15843:24:7;;-1:-1:-1;2506:4:7;15871:27;15885:13;15871:11;:27;:::i;:::-;15870:48;;;;:::i;:::-;15843:75;;15958:16;15933:4;:21;;;:41;;;;;;;:::i;:::-;;;;;;;;16007:16;15989:14;;:34;;;;;;;:::i;:::-;;;;;;;;16097:7;16076:4;:17;;;:28;;;;;;;:::i;:::-;;;;;;;;16140:7;16119:17;;:28;;;;;;;:::i;:::-;;;;;;;;16174:5;16169:101;;;16181:4;:17;;;16200:4;:11;;;16233:4;:18;;;16214:4;:16;;;:37;;;;:::i;:::-;16254:15;16169:101;;;;;;;;;:::i;:::-;;;;;;;;15340:1003;;;;;;16318:13;16303:4;:11;;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;15340:1003:7;16369:1;16359:7;:11;:32;;;;16390:1;16374:13;:17;16359:32;16355:105;;;16433:15;16408:22;;;:40;16355:105;16485:13;16470:11;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;16583:21:7;;;;16569:11;;16554;:9;:11::i;:::-;16540;;:25;;;;:::i;:::-;16539:41;;;;:::i;:::-;:65;;;;:::i;:::-;16511:25;;;:93;16641:15;16615:23;;;:41;16717:30;16741:5;16717:23;:30::i;:::-;16773:5;16765:70;;;16780:7;16789:13;16804;16819:15;16765:70;;;;;;;;;:::i;:::-;;;;;;;;12285:4558;;;;;;;;;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;2433:117::-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;;::::1;::::0;;2521:22:::1;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;:187:0:-;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;;::::1;::::0;::::1;::::0;;2274:20:::1;2281:12;:10;:12::i;763:205:4:-:0;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;640:96:6:-;719:10;640:96;:::o;3747:706:4:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;20201:370:7:-;20287:11;;20262:52;;;;;20240:19;;20262:24;:12;:24;;;;:52;;20308:4;;20262:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20240:74;-1:-1:-1;20329:15:7;;20325:239;;20361:17;20381:11;:9;:11::i;:::-;20429;;20407:37;;;;;20361:31;;-1:-1:-1;20407:21:7;:12;:21;;;;:37;;20442:1;;20407:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20459:16;20478:11;:9;:11::i;:::-;20459:30;-1:-1:-1;20517:10:7;20509:43;20530:20;20541:9;20459:30;20530:20;:::i;:::-;20509:43;;;;;;:::i;:::-;;;;;;;;20325:239;;20201:370;:::o;7514:3662::-;7598:15;;;7574:21;7598:15;;;:8;:15;;;;;7628:11;;:15;7624:3545;;7664:11;;;;;;7660:3498;;;7789:21;7859:4;:21;;;7845:11;;7829:4;:11;;;7814;:9;:11::i;:::-;:27;;;;:::i;:::-;7813:43;;;;:::i;:::-;:67;;;;:::i;:::-;7789:91;;7917:4;:21;;;7899:14;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;7981:1:7;7957:21;;;:25;;;8016:11;;8001;:26;;8016:11;;8001;;:26;;8016:11;;8001:26;:::i;:::-;;;;-1:-1:-1;;8128:26:7;;;;;;;:19;:26;;;;;;;;8127:27;:92;;;;;8203:15;8179:20;;8160:4;:16;;;:39;;;;:::i;:::-;8159:59;8127:92;8123:873;;;8244:18;8281:4;:17;;;8265:13;:33;;;;:::i;:::-;8244:54;;8321:23;8384:20;;8365:4;:16;;;8347:15;:34;;;;:::i;:::-;:57;;;;:::i;:::-;8321:83;;8449:23;;8431:15;:41;8427:139;;;-1:-1:-1;8519:23:7;;8427:139;8671:21;8728:23;;8714:10;;8696:15;:28;;;;:::i;:::-;8695:56;;;;:::i;:::-;8671:80;-1:-1:-1;8774:25:7;2506:4;8803:26;8671:80;8803:10;:26;:::i;:::-;8802:47;;;;:::i;:::-;8891:8;;8774:75;;-1:-1:-1;8872:47:7;;8891:8;8872:5;:18;;;8891:8;8774:75;8872:18;:47::i;:::-;8942:34;8959:17;8942:34;;:::i;:::-;;;8123:873;;;;;9064:12;9079:11;:9;:11::i;:::-;9064:26;;9109:21;9153:11;;9168:1;9153:16;9149:213;;9243:20;9250:13;9243:4;:20;:::i;:::-;9227:11;;9211:27;;:13;:27;:::i;:::-;9210:54;;;;:::i;:::-;9194:70;;9149:213;;;-1:-1:-1;9329:13:7;9149:213;9380:27;;;9426:11;:28;;9394:13;;9426:11;9380;;9426:28;;9394:13;;9426:28;:::i;:::-;;;;-1:-1:-1;;9549:16:7;;;;9568:15;-1:-1:-1;9545:368:7;;;9608:11;;;:19;;;;;;9622:5;9650:18;;;:22;;;9695:16;;;:20;;;9759:17;;;;9738;:38;;9759:17;;9738;;:38;;9759:17;;9738:38;:::i;:::-;;;;-1:-1:-1;;9819:1:7;9799:17;;;:21;9848:45;;;;;;;;;;9862:13;;9877:15;;9848:45;:::i;:::-;;;;;;;;9545:368;7660:3498;;;;;;9939:30;;;;;;;:23;:30;;;;;;;;9934:1224;;10037:19;10089:11;;10074;:9;:11::i;:::-;10060;;:25;;;;:::i;:::-;10059:41;;;;:::i;:::-;10037:63;;10134:4;:11;;;10119;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;10178:1:7;10164:15;;;10233:25;;;;10219:39;;:11;:39;:::i;:::-;10295:14;;10198:60;;-1:-1:-1;10332:18:7;10344:5;10332:11;:18::i;:::-;10328:99;;;-1:-1:-1;10385:22:7;;10328:99;10445:29;10502:5;10478:20;10491:7;10478:10;:20;:::i;:::-;10477:30;;;;:::i;:::-;10445:62;-1:-1:-1;10530:25:7;;10526:184;;10599:8;;10580:51;;10599:8;10580:5;:18;;;10599:8;10609:21;10580:18;:51::i;:::-;10654:36;10669:21;10654:36;;:::i;:::-;;;10526:184;10778:12;10793:11;:9;:11::i;:::-;10778:26;;10823:17;10863:11;;10878:1;10863:16;10859:199;;10947:18;10954:11;10947:4;:18;:::i;:::-;10931:11;;10917:25;;:11;:25;:::i;:::-;10916:50;;;;:::i;:::-;10904:62;;10859:199;;;-1:-1:-1;11027:11:7;10859:199;11076:23;;;11118:11;:24;;11090:9;;11118:11;11076;;11118:24;;11090:9;;11118:24;:::i;:::-;;;;-1:-1:-1;;;;;;;;7514:3662:7;;:::o;6895:486::-;6967:13;;:27;:13;:27;6963:411;;7035:15;;;7011:21;7035:15;;;:8;:15;;;;;7107:18;;;;7088:16;;;;7035:15;;7011:21;7088:37;;7107:18;7088:37;:::i;:::-;7155:13;;7229:17;;;;7296;;7332:15;;7140:222;;;;;7065:60;;-1:-1:-1;7155:13:7;;;;;7140:46;;:222;;7205:5;;7229:17;;7065:60;;7332:15;7140:222;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6963:411;;6895:486;:::o;3861:223:5:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;1175:320::-;1465:19;;;:23;;;1175:320::o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:5;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;8069:145;8259:12;8252:20;;;;;;;;;;;:::i;14:259:11:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:396::-;;;404:2;392:9;383:7;379:23;375:32;372:2;;;425:6;417;410:22;372:2;469:9;456:23;488:33;515:5;488:33;:::i;:::-;540:5;-1:-1:-1;597:2:11;582:18;;569:32;610;569;610;:::i;:::-;661:7;651:17;;;362:312;;;;;:::o;679:327::-;;;808:2;796:9;787:7;783:23;779:32;776:2;;;829:6;821;814:22;776:2;873:9;860:23;892:33;919:5;892:33;:::i;:::-;944:5;996:2;981:18;;;;968:32;;-1:-1:-1;;;766:240:11:o;1011:257::-;;1131:2;1119:9;1110:7;1106:23;1102:32;1099:2;;;1152:6;1144;1137:22;1099:2;1189:9;1183:16;1208:30;1232:5;1208:30;:::i;1551:190::-;;1663:2;1651:9;1642:7;1638:23;1634:32;1631:2;;;1684:6;1676;1669:22;1631:2;-1:-1:-1;1712:23:11;;1621:120;-1:-1:-1;1621:120:11:o;1746:194::-;;1869:2;1857:9;1848:7;1844:23;1840:32;1837:2;;;1890:6;1882;1875:22;1837:2;-1:-1:-1;1918:16:11;;1827:113;-1:-1:-1;1827:113:11:o;1945:258::-;;;2074:2;2062:9;2053:7;2049:23;2045:32;2042:2;;;2095:6;2087;2080:22;2042:2;-1:-1:-1;;2123:23:11;;;2193:2;2178:18;;;2165:32;;-1:-1:-1;2032:171:11:o;2208:274::-;;2375:6;2369:13;2391:53;2437:6;2432:3;2425:4;2417:6;2413:17;2391:53;:::i;:::-;2460:16;;;;;2345:137;-1:-1:-1;;2345:137:11:o;2487:226::-;2663:42;2651:55;;;;2633:74;;2621:2;2606:18;;2588:125::o;2718:398::-;2930:42;2999:15;;;2981:34;;3051:15;;;;3046:2;3031:18;;3024:43;3098:2;3083:18;;3076:34;;;;2908:2;2893:18;;2875:241::o;3121:297::-;3325:42;3313:55;;;;3295:74;;3400:2;3385:18;;3378:34;3283:2;3268:18;;3250:168::o;3423:368::-;3655:42;3643:55;;;;3625:74;;3730:2;3715:18;;3708:34;;;;3773:2;3758:18;;3751:34;3613:2;3598:18;;3580:211::o;3796:512::-;4085:42;4073:55;;;;4055:74;;4160:2;4145:18;;4138:34;;;;4203:2;4188:18;;4181:34;;;;4246:2;4231:18;;4224:34;4289:3;4274:19;;4267:35;4042:3;4027:19;;4009:299::o;4313:187::-;4478:14;;4471:22;4453:41;;4441:2;4426:18;;4408:92::o;5003:442::-;;5152:2;5141:9;5134:21;5184:6;5178:13;5227:6;5222:2;5211:9;5207:18;5200:34;5243:66;5302:6;5297:2;5286:9;5282:18;5277:2;5269:6;5265:15;5243:66;:::i;:::-;5361:2;5349:15;5366:66;5345:88;5330:104;;;;5436:2;5326:113;;5124:321;-1:-1:-1;;5124:321:11:o;5450:342::-;5652:2;5634:21;;;5691:2;5671:18;;;5664:30;5730:20;5725:2;5710:18;;5703:48;5783:2;5768:18;;5624:168::o;5797:344::-;5999:2;5981:21;;;6038:2;6018:18;;;6011:30;6077:22;6072:2;6057:18;;6050:50;6132:2;6117:18;;5971:170::o;6146:343::-;6348:2;6330:21;;;6387:2;6367:18;;;6360:30;6426:21;6421:2;6406:18;;6399:49;6480:2;6465:18;;6320:169::o;6494:402::-;6696:2;6678:21;;;6735:2;6715:18;;;6708:30;6774:34;6769:2;6754:18;;6747:62;6845:8;6840:2;6825:18;;6818:36;6886:3;6871:19;;6668:228::o;6901:354::-;7103:2;7085:21;;;7142:2;7122:18;;;7115:30;7181:32;7176:2;7161:18;;7154:60;7246:2;7231:18;;7075:180::o;7260:337::-;7462:2;7444:21;;;7501:2;7481:18;;;7474:30;7540:15;7535:2;7520:18;;7513:43;7588:2;7573:18;;7434:163::o;7602:415::-;7804:2;7786:21;;;7843:2;7823:18;;;7816:30;7882:34;7877:2;7862:18;;7855:62;7953:21;7948:2;7933:18;;7926:49;8007:3;7992:19;;7776:241::o;8022:345::-;8224:2;8206:21;;;8263:2;8243:18;;;8236:30;8302:23;8297:2;8282:18;;8275:51;8358:2;8343:18;;8196:171::o;8372:401::-;8574:2;8556:21;;;8613:2;8593:18;;;8586:30;8652:34;8647:2;8632:18;;8625:62;8723:7;8718:2;8703:18;;8696:35;8763:3;8748:19;;8546:227::o;8778:355::-;8980:2;8962:21;;;9019:2;8999:18;;;8992:30;9058:33;9053:2;9038:18;;9031:61;9124:2;9109:18;;8952:181::o;9138:352::-;9340:2;9322:21;;;9379:2;9359:18;;;9352:30;9418;9413:2;9398:18;;9391:58;9481:2;9466:18;;9312:178::o;9495:350::-;9697:2;9679:21;;;9736:2;9716:18;;;9709:30;9775:28;9770:2;9755:18;;9748:56;9836:2;9821:18;;9669:176::o;9850:355::-;10052:2;10034:21;;;10091:2;10071:18;;;10064:30;10130:33;10125:2;10110:18;;10103:61;10196:2;10181:18;;10024:181::o;10210:402::-;10412:2;10394:21;;;10451:2;10431:18;;;10424:30;10490:34;10485:2;10470:18;;10463:62;10561:8;10556:2;10541:18;;10534:36;10602:3;10587:19;;10384:228::o;10617:418::-;10819:2;10801:21;;;10858:2;10838:18;;;10831:30;10897:34;10892:2;10877:18;;10870:62;10968:24;10963:2;10948:18;;10941:52;11025:3;11010:19;;10791:244::o;11040:340::-;11242:2;11224:21;;;11281:2;11261:18;;;11254:30;11320:18;11315:2;11300:18;;11293:46;11371:2;11356:18;;11214:166::o;11385:346::-;11587:2;11569:21;;;11626:2;11606:18;;;11599:30;11665:24;11660:2;11645:18;;11638:52;11722:2;11707:18;;11559:172::o;11736:402::-;11938:2;11920:21;;;11977:2;11957:18;;;11950:30;12016:34;12011:2;11996:18;;11989:62;12087:8;12082:2;12067:18;;12060:36;12128:3;12113:19;;11910:228::o;12143:410::-;12345:2;12327:21;;;12384:2;12364:18;;;12357:30;12423:34;12418:2;12403:18;;12396:62;12494:16;12489:2;12474:18;;12467:44;12543:3;12528:19;;12317:236::o;12558:418::-;12760:2;12742:21;;;12799:2;12779:18;;;12772:30;12838:34;12833:2;12818:18;;12811:62;12909:24;12904:2;12889:18;;12882:52;12966:3;12951:19;;12732:244::o;12981:425::-;13183:2;13165:21;;;13222:2;13202:18;;;13195:30;13261:34;13256:2;13241:18;;13234:62;13332:31;13327:2;13312:18;;13305:59;13396:3;13381:19;;13155:251::o;13411:356::-;13613:2;13595:21;;;13632:18;;;13625:30;13691:34;13686:2;13671:18;;13664:62;13758:2;13743:18;;13585:182::o;13772:335::-;13974:2;13956:21;;;14013:2;13993:18;;;13986:30;14052:13;14047:2;14032:18;;14025:41;14098:2;14083:18;;13946:161::o;14112:420::-;14314:2;14296:21;;;14353:2;14333:18;;;14326:30;14392:34;14387:2;14372:18;;14365:62;14463:26;14458:2;14443:18;;14436:54;14522:3;14507:19;;14286:246::o;14537:353::-;14739:2;14721:21;;;14778:2;14758:18;;;14751:30;14817:31;14812:2;14797:18;;14790:59;14881:2;14866:18;;14711:179::o;14895:425::-;15097:2;15079:21;;;15136:2;15116:18;;;15109:30;15175:34;15170:2;15155:18;;15148:62;15246:31;15241:2;15226:18;;15219:59;15310:3;15295:19;;15069:251::o;15325:406::-;15527:2;15509:21;;;15566:2;15546:18;;;15539:30;15605:34;15600:2;15585:18;;15578:62;15676:12;15671:2;15656:18;;15649:40;15721:3;15706:19;;15499:232::o;15736:412::-;15938:2;15920:21;;;15977:2;15957:18;;;15950:30;16016:34;16011:2;15996:18;;15989:62;16087:18;16082:2;16067:18;;16060:46;16138:3;16123:19;;15910:238::o;16153:399::-;16355:2;16337:21;;;16394:2;16374:18;;;16367:30;16433:34;16428:2;16413:18;;16406:62;16504:5;16499:2;16484:18;;16477:33;16542:3;16527:19;;16327:225::o;16557:341::-;16759:2;16741:21;;;16798:2;16778:18;;;16771:30;16837:19;16832:2;16817:18;;16810:47;16889:2;16874:18;;16731:167::o;16903:177::-;17049:25;;;17037:2;17022:18;;17004:76::o;17085:297::-;17259:25;;;17332:42;17320:55;17315:2;17300:18;;17293:83;17247:2;17232:18;;17214:168::o;17387:256::-;17569:25;;;17625:2;17610:18;;17603:34;17557:2;17542:18;;17524:119::o;17901:391::-;18132:25;;;18188:2;18173:18;;18166:34;;;;18231:2;18216:18;;18209:34;18274:2;18259:18;;18252:34;18119:3;18104:19;;18086:206::o;18297:761::-;18662:25;;;18718:2;18703:18;;18696:34;;;;18761:2;18746:18;;18739:34;;;;18804:2;18789:18;;18782:34;;;;18847:3;18832:19;;18825:35;;;;18891:3;18876:19;;18869:35;18935:3;18920:19;;18913:35;18992:14;18985:22;18979:3;18964:19;;18957:51;19039:3;19024:19;;19017:35;18649:3;18634:19;;18616:442::o;19063:128::-;;19134:1;19130:6;19127:1;19124:13;19121:2;;;19140:18;;:::i;:::-;-1:-1:-1;19176:9:11;;19111:80::o;19196:274::-;;19262:1;19252:2;;19297:77;19294:1;19287:88;19398:4;19395:1;19388:15;19426:4;19423:1;19416:15;19252:2;-1:-1:-1;19455:9:11;;19242:228::o;19475:::-;;19641:1;19573:66;19569:74;19566:1;19563:81;19558:1;19551:9;19544:17;19540:105;19537:2;;;19648:18;;:::i;:::-;-1:-1:-1;19688:9:11;;19527:176::o;19708:125::-;;19776:1;19773;19770:8;19767:2;;;19781:18;;:::i;:::-;-1:-1:-1;19818:9:11;;19757:76::o;19838:258::-;19910:1;19920:113;19934:6;19931:1;19928:13;19920:113;;;20010:11;;;20004:18;19991:11;;;19984:39;19956:2;19949:10;19920:113;;;20051:6;20048:1;20045:13;20042:2;;;-1:-1:-1;;20086:1:11;20068:16;;20061:27;19891:205::o;20101:184::-;20153:77;20150:1;20143:88;20250:4;20247:1;20240:15;20274:4;20271:1;20264:15;20290:156;20378:42;20371:5;20367:54;20360:5;20357:65;20347:2;;20436:1;20433;20426:12;20451:120;20539:5;20532:13;20525:21;20518:5;20515:32;20505:2;;20561:1;20558;20551:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3973600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BOOST_WEIGHT()": "1140",
								"BOOST_WEIGHT_LIMIT()": "360",
								"DURATION_FACTOR()": "1118",
								"DURATION_FACTOR_OVERDUE()": "1119",
								"MAX_LOCK_DURATION()": "1119",
								"MAX_LOCK_DURATION_LIMIT()": "298",
								"MAX_OVERDUE_FEE()": "319",
								"MAX_PERFORMANCE_FEE()": "317",
								"MAX_WITHDRAW_FEE()": "362",
								"MAX_WITHDRAW_FEE_PERIOD()": "320",
								"MIN_DEPOSIT_AMOUNT()": "319",
								"MIN_LOCK_DURATION()": "317",
								"MIN_WITHDRAW_AMOUNT()": "318",
								"PRECISION_FACTOR()": "340",
								"PRECISION_FACTOR_SHARE()": "318",
								"UNLOCK_FREE_DURATION()": "1162",
								"VShdw()": "1158",
								"admin()": "1134",
								"available()": "infinite",
								"balanceOf()": "infinite",
								"boostContract()": "1157",
								"calculateOverdueFee(address)": "infinite",
								"calculatePerformanceFee(address)": "infinite",
								"calculateTotalpendingShdwRewards()": "infinite",
								"calculateWithdrawFee(address,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"freeOverdueFeeUsers(address)": "1337",
								"freePerformanceFeeUsers(address)": "1336",
								"freeWithdrawFeeUsers(address)": "1337",
								"getPricePerFullShare()": "infinite",
								"inCaseTokensGetStuck(address)": "infinite",
								"init(address)": "infinite",
								"operator()": "1137",
								"overdueFee()": "1140",
								"owner()": "1159",
								"pause()": "infinite",
								"paused()": "1164",
								"performanceFee()": "1097",
								"performanceFeeContract()": "1119",
								"renounceOwnership()": "infinite",
								"setAdmin(address)": "23290",
								"setBoostContract(address)": "23199",
								"setBoostWeight(uint256)": "22314",
								"setDurationFactor(uint256)": "22266",
								"setDurationFactorOverdue(uint256)": "22289",
								"setFreePerformanceFeeUser(address,bool)": "infinite",
								"setMaxLockDuration(uint256)": "22290",
								"setOperator(address)": "23290",
								"setOverdueFee(uint256)": "22293",
								"setOverdueFeeUser(address,bool)": "infinite",
								"setPerformanceFee(uint256)": "22269",
								"setPerformanceFeeContract(uint256)": "22313",
								"setTreasury(address)": "23310",
								"setUnlockFreeDuration(uint256)": "22309",
								"setVShdwContract(address)": "23221",
								"setWithdrawFee(uint256)": "22291",
								"setWithdrawFeeContract(uint256)": "22315",
								"setWithdrawFeePeriod(uint256)": "22292",
								"setWithdrawFeeUser(address,bool)": "infinite",
								"shadowchefV2()": "infinite",
								"shdwPoolPID()": "1141",
								"token()": "infinite",
								"totalBoostDebt()": "1117",
								"totalLockedAmount()": "1120",
								"totalShares()": "1163",
								"transferOwnership(address)": "infinite",
								"treasury()": "1136",
								"unlock(address)": "infinite",
								"unpause()": "infinite",
								"userInfo(address)": "8056",
								"withdraw(uint256)": "infinite",
								"withdrawAll()": "infinite",
								"withdrawByAmount(uint256)": "infinite",
								"withdrawFee()": "1139",
								"withdrawFeeContract()": "1140",
								"withdrawFeePeriod()": "1117"
							},
							"internal": {
								"_isContract(address)": "718",
								"calculatePerformanceFeeOrOverdueFee(address)": "infinite",
								"depositOperation(uint256,uint256,address)": "infinite",
								"harvest()": "infinite",
								"updateBoostContractInfo(address)": "infinite",
								"updateUserShare(address)": "infinite",
								"withdrawOperation(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2798,
									"end": 2805,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 2760,
									"end": 2805,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 2760,
									"end": 2805,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2865,
									"name": "PUSH",
									"source": 7,
									"value": "1E13380"
								},
								{
									"begin": 2822,
									"end": 2865,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 2822,
									"end": 2865,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2917,
									"end": 2925,
									"name": "PUSH",
									"source": 7,
									"value": "1E13380"
								},
								{
									"begin": 2884,
									"end": 2925,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2884,
									"end": 2925,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3031,
									"end": 3039,
									"name": "PUSH",
									"source": 7,
									"value": "ED4E00"
								},
								{
									"begin": 2990,
									"end": 3039,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 2990,
									"end": 3039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3124,
									"end": 3134,
									"name": "PUSH",
									"source": 7,
									"value": "E8D4A51000"
								},
								{
									"begin": 3094,
									"end": 3134,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3094,
									"end": 3134,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3183,
									"end": 3186,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 3151,
									"end": 3186,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3151,
									"end": 3186,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3239,
									"end": 3242,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 3199,
									"end": 3242,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3199,
									"end": 3242,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3284,
									"end": 3286,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 3255,
									"end": 3286,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3255,
									"end": 3286,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3340,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 3301,
									"end": 3340,
									"name": "PUSH",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 3301,
									"end": 3340,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3383,
									"end": 3393,
									"name": "PUSH",
									"source": 7,
									"value": "E8D4A51000"
								},
								{
									"begin": 3355,
									"end": 3393,
									"name": "PUSH",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 3355,
									"end": 3393,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3443,
									"end": 3451,
									"name": "PUSH",
									"source": 7,
									"value": "3F480"
								},
								{
									"begin": 3408,
									"end": 3451,
									"name": "PUSH",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 3408,
									"end": 3451,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5311,
									"end": 5684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5507,
									"end": 5521,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 5532,
									"end": 5560,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5576,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5571,
									"end": 5585,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5604,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5616,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5635,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5647,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 5669,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 5658,
									"end": 5676,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 921,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 921,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 14,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 921,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 14,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 921,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 14,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 921,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 258,
									"end": 261,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 246,
									"end": 255,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 237,
									"end": 244,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 233,
									"end": 256,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 229,
									"end": 262,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 226,
									"end": 228,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 226,
									"end": 228,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 226,
									"end": 228,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 280,
									"end": 286,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 272,
									"end": 278,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 265,
									"end": 287,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 226,
									"end": 228,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 226,
									"end": 228,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 317,
									"end": 326,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 311,
									"end": 327,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 336,
									"end": 369,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 363,
									"end": 368,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 336,
									"end": 369,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 336,
									"end": 369,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 336,
									"end": 369,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 336,
									"end": 369,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 438,
									"end": 440,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 423,
									"end": 441,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 423,
									"end": 441,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 417,
									"end": 442,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 388,
									"end": 393,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 388,
									"end": 393,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 451,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 417,
									"end": 442,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 451,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 451,
									"end": 486,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 451,
									"end": 486,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 451,
									"end": 486,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 557,
									"end": 559,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 542,
									"end": 560,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 536,
									"end": 561,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 505,
									"end": 512,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 505,
									"end": 512,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 605,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 561,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 570,
									"end": 605,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 605,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 605,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 570,
									"end": 605,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 676,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 661,
									"end": 679,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 661,
									"end": 679,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 655,
									"end": 680,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 624,
									"end": 631,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 624,
									"end": 631,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 689,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 655,
									"end": 680,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 689,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 689,
									"end": 724,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 689,
									"end": 724,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 689,
									"end": 724,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 795,
									"end": 798,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 780,
									"end": 799,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 780,
									"end": 799,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 774,
									"end": 800,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 743,
									"end": 750,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 743,
									"end": 750,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 809,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 774,
									"end": 800,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 809,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 809,
									"end": 844,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 809,
									"end": 844,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 809,
									"end": 844,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 863,
									"end": 870,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 853,
									"end": 870,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 853,
									"end": 870,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 853,
									"end": 870,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 910,
									"end": 913,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 899,
									"end": 908,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 895,
									"end": 914,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 889,
									"end": 915,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 879,
									"end": 915,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 879,
									"end": 915,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 216,
									"end": 921,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 926,
									"end": 1059,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 926,
									"end": 1059,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1003,
									"end": 1034,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1003,
									"end": 1034,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 993,
									"end": 1035,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 993,
									"end": 1035,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 983,
									"end": 985,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 983,
									"end": 985,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 1047,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1039,
									"end": 1051,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 983,
									"end": 985,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 983,
									"end": 985,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 973,
									"end": 1059,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 973,
									"end": 1059,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 973,
									"end": 1059,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 973,
									"end": 1059,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "973"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "970"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 33992,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209148be7dbd4a79d027a9f9903f87a5cb14661085db3d662088dd1dffc4d82e9664736f6c63430008010033",
									".code": [
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "87788782"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "C6ED51BE"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E464C623"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "F851A440"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "F851A440"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "FD253B64"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "F786B958"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E73008BC"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E73008BC"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E941FA78"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "F0F44260"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E464C623"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E4B37EF5"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "DEF68A9C"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "DF10B4E6"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "DF10B4E6"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "DFCEDEEE"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "E2BBB158"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "DEF68A9C"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "DEF7869D"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "C6ED51BE"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "CC9CFBA1"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "CCD34CD5"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "D4B0DE2F"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "ACAF88CD"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "BC3D652A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "BDCA9165"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "BDCA9165"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "BEBA0FA0"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "C54D349C"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "BC3D652A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "BC75F4B8"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "B6857844"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "B6857844"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "B6AC642A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "BB9F408D"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "ACAF88CD"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "B3AB15FB"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "948A03F2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "A3639B39"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "A3639B39"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "A5834E06"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "AAADA5DA"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "948A03F2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "95DC14E1"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "87788782"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "87D4BDA9"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "93C99E6A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "4E4DE1E9"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "668679BA"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "731FF24A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "78B4330F"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "78B4330F"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "853828B6"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "731FF24A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "77C7B8FC"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "70897B23"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "70897B23"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "722713F7"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "668679BA"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "704B6C02"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "570CA735"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "61D027B3"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "61D027B3"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "61FA6368"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "62122F5A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "570CA735"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "4E4DE1E9"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "4F1BFC9E"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "51FB26DF"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "5521E9BF"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "2CFC5F01"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "3EB78874"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "3FEC4E32"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "3FEC4E32"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "423B93ED"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "48A0D754"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "3EB78874"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "2F6C493C"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "2F6C493C"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "35981921"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "3A98EF39"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "2CFC5F01"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "1959A002"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "1EA30FEF"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "1EA30FEF"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "1EFAC1B8"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "29A5CFD6"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "1959A002"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "19AB453C"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "1E81326"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "5A9F274"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "C59696B"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "14FF3039"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 360,
											"end": 33992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33600,
											"end": 33724,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 33600,
											"end": 33724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33600,
											"end": 33724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 33600,
											"end": 33724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 33600,
											"end": 33724,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20027,
											"end": 20115,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20027,
											"end": 20115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20027,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 20027,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 20027,
											"end": 20115,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "PUSH",
											"source": 7,
											"value": "5265C00"
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2371,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2155,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 24943,
											"end": 24954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24943,
											"end": 24973,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 24943,
											"end": 24973,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 24935,
											"end": 25024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25035,
											"end": 25045,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 25035,
											"end": 25059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25035,
											"end": 25059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25035,
											"end": 25059,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "PUSH",
											"source": 7,
											"value": "F4BD1C5978320077E792AFBB3911E8CAB1325CE28A6B3E67F9067A1D80692961"
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25048,
											"end": 25059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25048,
											"end": 25059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25075,
											"end": 25101,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24861,
											"end": 25109,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 25231,
											"end": 25544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "1F4"
										},
										{
											"begin": 25331,
											"end": 25351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25331,
											"end": 25371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 25331,
											"end": 25371,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 25323,
											"end": 25424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25435,
											"end": 25454,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 25435,
											"end": 25477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25435,
											"end": 25477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25435,
											"end": 25477,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "PUSH",
											"source": 7,
											"value": "CAB352E118188B8A2F20A2E8C4CE1241CE2C1740AAC4F17C5B0831E65824D8EF"
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25457,
											"end": 25477,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25457,
											"end": 25477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 25493,
											"end": 25536,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1433,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5985,
											"end": 6000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 6000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6034,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6003,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5985,
											"end": 6035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6054,
											"end": 6066,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6046,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 6103,
											"end": 6130,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6130,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6130,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6131,
											"end": 6141,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6155,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 6103,
											"end": 6166,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6103,
											"end": 6166,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 6103,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6177,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "E2BBB15800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6258,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6238,
											"end": 6250,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 6238,
											"end": 6258,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6258,
											"name": "PUSH",
											"source": 7,
											"value": "E2BBB158"
										},
										{
											"begin": 6238,
											"end": 6258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6279,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "875"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6238,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "PUSH",
											"source": 7,
											"value": "57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 6310,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2687,
											"name": "PUSH",
											"source": 7,
											"value": "9184E72A000"
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2687,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 25660,
											"end": 26016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 25770,
											"end": 25788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25770,
											"end": 25815,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 25770,
											"end": 25815,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 25748,
											"end": 25904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25915,
											"end": 25932,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 25915,
											"end": 25953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 25915,
											"end": 25953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25915,
											"end": 25953,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "PUSH",
											"source": 7,
											"value": "B89DDADDB7435BE26824CB48D2D0186C9525A2E1EC057ABCB502704CDC0686CC"
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25935,
											"end": 25953,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25935,
											"end": 25953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 25969,
											"end": 26008,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 31642,
											"end": 31649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 31686,
											"end": 31694,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 31686,
											"end": 31701,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 31716,
											"end": 31727,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 31716,
											"end": 31737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 31712,
											"end": 31787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 31712,
											"end": 31787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 31712,
											"end": 31787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 31764,
											"end": 31775,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 31764,
											"end": 31775,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 31764,
											"end": 31775,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31712,
											"end": 31787,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 31712,
											"end": 31787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31823,
											"end": 31833,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31822,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 31802,
											"end": 31834,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 31801,
											"end": 31834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 31801,
											"end": 31900,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 31801,
											"end": 31900,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 31801,
											"end": 31900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 31801,
											"end": 31900,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 31801,
											"end": 31900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31882,
											"end": 31899,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 31882,
											"end": 31899,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 31857,
											"end": 31861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 31857,
											"end": 31879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 31857,
											"end": 31899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 31857,
											"end": 31899,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 31857,
											"end": 31899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31857,
											"end": 31899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 31857,
											"end": 31899,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31857,
											"end": 31899,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 31857,
											"end": 31899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31839,
											"end": 31854,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 31839,
											"end": 31899,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 31801,
											"end": 31900,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 31801,
											"end": 31900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31797,
											"end": 32635,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 31797,
											"end": 32635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 31797,
											"end": 32635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 31917,
											"end": 31929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31946,
											"end": 31980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 31946,
											"end": 31978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 31946,
											"end": 31980,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31946,
											"end": 31980,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 31946,
											"end": 31980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31932,
											"end": 31943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 31932,
											"end": 31941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 31932,
											"end": 31943,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31932,
											"end": 31943,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 31932,
											"end": 31943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31932,
											"end": 31980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 31932,
											"end": 31980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 31932,
											"end": 31980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31932,
											"end": 31980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 31932,
											"end": 31980,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31932,
											"end": 31980,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 31932,
											"end": 31980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32050,
											"end": 32061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 32050,
											"end": 32061,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 31917,
											"end": 31980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31917,
											"end": 31980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31995,
											"end": 32016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31995,
											"end": 32016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32020,
											"end": 32046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 32020,
											"end": 32027,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 32020,
											"end": 32046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 32020,
											"end": 32046,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32020,
											"end": 32046,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 32020,
											"end": 32046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32019,
											"end": 32061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 32019,
											"end": 32061,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32019,
											"end": 32061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32019,
											"end": 32061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 32019,
											"end": 32061,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32019,
											"end": 32061,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 32019,
											"end": 32061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31995,
											"end": 32061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31995,
											"end": 32061,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32076,
											"end": 32102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 32255,
											"end": 32260,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 32219,
											"end": 32254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 32219,
											"end": 32261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32178,
											"end": 32199,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 32178,
											"end": 32199,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 32178,
											"end": 32199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 32178,
											"end": 32199,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 32147,
											"end": 32158,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 32147,
											"end": 32158,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 32114,
											"end": 32125,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 32114,
											"end": 32125,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 32106,
											"end": 32126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 32106,
											"end": 32126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32106,
											"end": 32110,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 32106,
											"end": 32126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 32106,
											"end": 32126,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32106,
											"end": 32126,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 32106,
											"end": 32126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 32105,
											"end": 32158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 32105,
											"end": 32158,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32105,
											"end": 32158,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 32105,
											"end": 32158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 32105,
											"end": 32199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 32105,
											"end": 32199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32105,
											"end": 32199,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 32105,
											"end": 32199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 32105,
											"end": 32261,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32105,
											"end": 32261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 32105,
											"end": 32261,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32105,
											"end": 32261,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 32105,
											"end": 32261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32076,
											"end": 32261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32276,
											"end": 32297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 32301,
											"end": 32335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 32322,
											"end": 32335,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 32076,
											"end": 32261,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 32301,
											"end": 32335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 32301,
											"end": 32335,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32301,
											"end": 32335,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 32301,
											"end": 32335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32300,
											"end": 32355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 32300,
											"end": 32355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32300,
											"end": 32355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32300,
											"end": 32355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 32300,
											"end": 32355,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32300,
											"end": 32355,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 32300,
											"end": 32355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32388,
											"end": 32399,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 32388,
											"end": 32399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 32276,
											"end": 32355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32276,
											"end": 32355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32418,
											"end": 32441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 32430,
											"end": 32440,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 32418,
											"end": 32429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 32418,
											"end": 32441,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32418,
											"end": 32441,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 32418,
											"end": 32441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32414,
											"end": 32507,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 32414,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 32414,
											"end": 32507,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32472,
											"end": 32491,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 32472,
											"end": 32491,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 32414,
											"end": 32507,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 32414,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32521,
											"end": 32547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 32578,
											"end": 32583,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 32551,
											"end": 32574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 32567,
											"end": 32574,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 32551,
											"end": 32564,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 32551,
											"end": 32574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 32551,
											"end": 32574,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32551,
											"end": 32574,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 32551,
											"end": 32574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32550,
											"end": 32583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 32550,
											"end": 32583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32550,
											"end": 32583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32550,
											"end": 32583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 32550,
											"end": 32583,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32550,
											"end": 32583,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 32550,
											"end": 32583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32521,
											"end": 32583,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32598,
											"end": 32623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 32598,
											"end": 32623,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32598,
											"end": 32623,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 31797,
											"end": 32635,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 31797,
											"end": 32635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32652,
											"end": 32653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 32645,
											"end": 32653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32645,
											"end": 32653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32645,
											"end": 32653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 31559,
											"end": 32661,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17409,
											"end": 17410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17399,
											"end": 17406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17399,
											"end": 17410,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 17391,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 17463,
											"end": 17470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17472,
											"end": 17473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17445,
											"end": 17462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17445,
											"end": 17474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17445,
											"end": 17474,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 17445,
											"end": 17474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17324,
											"end": 17482,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6696,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6705,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6705,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6705,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6705,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 6686,
											"end": 6731,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6731,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6723,
											"end": 6731,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6731,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6723,
											"end": 6731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6719,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6731,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6731,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 6686,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 6678,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11426,
											"end": 11447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11458,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11495,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 11484,
											"end": 11495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11495,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11495,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 11484,
											"end": 11495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11533,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11533,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11484,
											"end": 11533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11515,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 11499,
											"end": 11515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11515,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11533,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11533,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11484,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11476,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11586,
											"end": 11587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 11594,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11566,
											"end": 11595,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11566,
											"end": 11595,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11566,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11330,
											"end": 11603,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 26953,
											"end": 27257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27082,
											"end": 27083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27057,
											"end": 27079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27057,
											"end": 27083,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 27049,
											"end": 27126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27137,
											"end": 27160,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 27137,
											"end": 27185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27137,
											"end": 27185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27137,
											"end": 27185,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "PUSH",
											"source": 7,
											"value": "18B6D179114082D7EDA9837E15A39EB30032D5F3DF00487A67541398F48FABFE"
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27163,
											"end": 27185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27163,
											"end": 27185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 27201,
											"end": 27249,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3242,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28797,
											"end": 28807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 28797,
											"end": 28805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 28797,
											"end": 28807,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28797,
											"end": 28807,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 28797,
											"end": 28807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28823,
											"end": 28832,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 28832,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28823,
											"end": 28832,
											"name": "PUSH",
											"source": 7,
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 28823,
											"end": 28832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28823,
											"end": 28832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 28832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28823,
											"end": 28832,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 28737,
											"end": 28840,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1495,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22466,
											"end": 22485,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22466,
											"end": 22485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22466,
											"end": 22485,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 22458,
											"end": 22512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22546,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 22577,
											"end": 22602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22577,
											"end": 22602,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22523,
											"end": 22553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22577,
											"end": 22602,
											"name": "PUSH",
											"source": 7,
											"value": "3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44"
										},
										{
											"begin": 22577,
											"end": 22602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22577,
											"end": 22602,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22366,
											"end": 22610,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 33374,
											"end": 33381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33374,
											"end": 33381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33416,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33401,
											"end": 33406,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 33401,
											"end": 33416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33416,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 33401,
											"end": 33416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33425,
											"end": 33429,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 33425,
											"end": 33429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 33401,
											"end": 33431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33394,
											"end": 33431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33394,
											"end": 33431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33332,
											"end": 33439,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22905,
											"end": 22924,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22905,
											"end": 22924,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22905,
											"end": 22924,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 22897,
											"end": 22951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22981,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 23012,
											"end": 23037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23012,
											"end": 23037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22996,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22962,
											"end": 22988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23012,
											"end": 23037,
											"name": "PUSH",
											"source": 7,
											"value": "3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44"
										},
										{
											"begin": 23012,
											"end": 23037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23012,
											"end": 23037,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22813,
											"end": 23045,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1853,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 16973,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2753,
											"name": "PUSH",
											"source": 7,
											"value": "9184E72A000"
										},
										{
											"begin": 17056,
											"end": 17063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17056,
											"end": 17085,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17048,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17157,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 17175,
											"end": 17176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17178,
											"end": 17185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17157,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17157,
											"end": 17186,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1820,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 21960,
											"end": 22159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22040,
											"end": 22060,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22040,
											"end": 22060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22040,
											"end": 22060,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 22032,
											"end": 22087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22103,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22098,
											"end": 22112,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "PUSH",
											"source": 7,
											"value": "AF38F30BE8D095BC1461196DB21930B7D89226E57B0167F9D6ABE951C53F3332"
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22145,
											"end": 22150,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 22145,
											"end": 22150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 22128,
											"end": 22151,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1671,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 20681,
											"end": 20864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20753,
											"end": 20773,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20753,
											"end": 20773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20753,
											"end": 20773,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 20745,
											"end": 20800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20816,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20811,
											"end": 20825,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "PUSH",
											"source": 7,
											"value": "71614071B88DEE5E0B2AE578A9DD7B2EBBE9AE832BA419DC0242CD065A290B6C"
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20850,
											"end": 20855,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20850,
											"end": 20855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 20841,
											"end": 20856,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 23595,
											"end": 23882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2030,
											"name": "PUSH",
											"source": 7,
											"value": "7D0"
										},
										{
											"begin": 23685,
											"end": 23700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23685,
											"end": 23723,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 23685,
											"end": 23723,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 23677,
											"end": 23782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23793,
											"end": 23807,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 23793,
											"end": 23825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23793,
											"end": 23825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23793,
											"end": 23825,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "PUSH",
											"source": 7,
											"value": "EFEAFCF03E479A9566D7EF321B4816DE0BA19CFA3CD0FAE2F8C5F4A0AFB342C4"
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23810,
											"end": 23825,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23810,
											"end": 23825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 23841,
											"end": 23874,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33600,
											"end": 33724,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 33600,
											"end": 33724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33642,
											"end": 33649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33702,
											"end": 33716,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 33702,
											"end": 33716,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33674,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 33669,
											"end": 33684,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33669,
											"end": 33684,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33684,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 33693,
											"end": 33697,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 33669,
											"end": 33699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 33669,
											"end": 33716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33669,
											"end": 33716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 33669,
											"end": 33716,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33062,
											"end": 33069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33089,
											"end": 33100,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 33089,
											"end": 33100,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 33104,
											"end": 33105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 33089,
											"end": 33105,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 33089,
											"end": 33192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 33089,
											"end": 33192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 33180,
											"end": 33191,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 33180,
											"end": 33191,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 33132,
											"end": 33166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 33132,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 33132,
											"end": 33166,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33132,
											"end": 33166,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 33132,
											"end": 33166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33118,
											"end": 33129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 33118,
											"end": 33127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 33118,
											"end": 33129,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33118,
											"end": 33129,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 33118,
											"end": 33129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33118,
											"end": 33166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 33118,
											"end": 33166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 33118,
											"end": 33166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33118,
											"end": 33166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 33118,
											"end": 33166,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33118,
											"end": 33166,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 33118,
											"end": 33166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33117,
											"end": 33176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 33117,
											"end": 33176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33171,
											"end": 33175,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 33117,
											"end": 33176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 33117,
											"end": 33176,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33117,
											"end": 33176,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 33117,
											"end": 33176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33116,
											"end": 33191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 33116,
											"end": 33191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 33116,
											"end": 33191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33116,
											"end": 33191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 33116,
											"end": 33191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33116,
											"end": 33191,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 33116,
											"end": 33191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33089,
											"end": 33192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 33089,
											"end": 33192,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 33089,
											"end": 33192,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 33089,
											"end": 33192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33108,
											"end": 33112,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 33108,
											"end": 33112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33007,
											"end": 33200,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28581,
											"end": 28589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 28581,
											"end": 28587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 28581,
											"end": 28589,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28581,
											"end": 28589,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 28581,
											"end": 28589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28605,
											"end": 28612,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28605,
											"end": 28612,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28605,
											"end": 28612,
											"name": "PUSH",
											"source": 7,
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 28605,
											"end": 28612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28605,
											"end": 28612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28605,
											"end": 28612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28605,
											"end": 28612,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 28520,
											"end": 28620,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20027,
											"end": 20115,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 20027,
											"end": 20115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20088,
											"end": 20098,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20087,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20099,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20106,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20070,
											"end": 20107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 20070,
											"end": 20107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20070,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 20070,
											"end": 20107,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3186,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 27763,
											"end": 28027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "2D79883D2000"
										},
										{
											"begin": 27847,
											"end": 27859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27847,
											"end": 27881,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 27847,
											"end": 27881,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 27839,
											"end": 27937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27948,
											"end": 27960,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 27948,
											"end": 27975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27948,
											"end": 27975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27948,
											"end": 27975,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "PUSH",
											"source": 7,
											"value": "7666DFFF8C3377938E522B4EED3AFF079973A976F95969DB60A406D49F40DA4E"
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27963,
											"end": 27975,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27963,
											"end": 27975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 27991,
											"end": 28019,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2155,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2155,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 29932,
											"end": 29939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29976,
											"end": 29984,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29976,
											"end": 29991,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30031,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 30020,
											"end": 30063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30052,
											"end": 30063,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 30052,
											"end": 30063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30052,
											"end": 30063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30052,
											"end": 30063,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30052,
											"end": 30063,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 30052,
											"end": 30063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30063,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 30020,
											"end": 30063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30107,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 30020,
											"end": 30107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30100,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 30081,
											"end": 30107,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 30080,
											"end": 30107,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30107,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 30020,
											"end": 30107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30185,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 30020,
											"end": 30185,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30169,
											"end": 30184,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 30145,
											"end": 30165,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 30145,
											"end": 30165,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30126,
											"end": 30130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 30126,
											"end": 30142,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 30126,
											"end": 30142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30126,
											"end": 30142,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30125,
											"end": 30184,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 30020,
											"end": 30185,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 30020,
											"end": 30185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30002,
											"end": 30989,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 30002,
											"end": 30989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 30002,
											"end": 30989,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 30212,
											"end": 30224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30241,
											"end": 30275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 30241,
											"end": 30273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 30241,
											"end": 30275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30241,
											"end": 30275,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 30241,
											"end": 30275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30227,
											"end": 30238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 30227,
											"end": 30236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 30227,
											"end": 30238,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30227,
											"end": 30238,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 30227,
											"end": 30238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30227,
											"end": 30275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 30227,
											"end": 30275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30227,
											"end": 30275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30227,
											"end": 30275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 30227,
											"end": 30275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30227,
											"end": 30275,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 30227,
											"end": 30275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30353,
											"end": 30374,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 30353,
											"end": 30374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 30353,
											"end": 30374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30353,
											"end": 30374,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30339,
											"end": 30350,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 30339,
											"end": 30350,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30323,
											"end": 30334,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 30323,
											"end": 30334,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30212,
											"end": 30275,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 30212,
											"end": 30275,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30290,
											"end": 30311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30290,
											"end": 30311,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 30315,
											"end": 30335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 30315,
											"end": 30335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30212,
											"end": 30275,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 30315,
											"end": 30335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 30315,
											"end": 30335,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30315,
											"end": 30335,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 30315,
											"end": 30335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30314,
											"end": 30350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 30314,
											"end": 30350,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30314,
											"end": 30350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30314,
											"end": 30350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 30314,
											"end": 30350,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30314,
											"end": 30350,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 30314,
											"end": 30350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30314,
											"end": 30374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 30314,
											"end": 30374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30314,
											"end": 30374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30314,
											"end": 30374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 30314,
											"end": 30374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30314,
											"end": 30374,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 30314,
											"end": 30374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30290,
											"end": 30374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30290,
											"end": 30374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30389,
											"end": 30407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30426,
											"end": 30430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 30426,
											"end": 30443,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 30426,
											"end": 30443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30426,
											"end": 30443,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30410,
											"end": 30423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 30410,
											"end": 30443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 30410,
											"end": 30443,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30410,
											"end": 30443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30410,
											"end": 30443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 30410,
											"end": 30443,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30410,
											"end": 30443,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 30410,
											"end": 30443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30389,
											"end": 30443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30389,
											"end": 30443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30458,
											"end": 30481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30521,
											"end": 30541,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 30521,
											"end": 30541,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30502,
											"end": 30506,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 30502,
											"end": 30518,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 30502,
											"end": 30518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 30502,
											"end": 30518,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30484,
											"end": 30499,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 30484,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 30484,
											"end": 30518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30484,
											"end": 30518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30484,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 30484,
											"end": 30518,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30484,
											"end": 30518,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 30484,
											"end": 30518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30484,
											"end": 30541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 30484,
											"end": 30541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30484,
											"end": 30541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30484,
											"end": 30541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 30484,
											"end": 30541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30484,
											"end": 30541,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 30484,
											"end": 30541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30458,
											"end": 30541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30458,
											"end": 30541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30578,
											"end": 30601,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 30578,
											"end": 30601,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30560,
											"end": 30575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 30560,
											"end": 30601,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 30556,
											"end": 30679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 30556,
											"end": 30679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 30556,
											"end": 30679,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30640,
											"end": 30663,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 30640,
											"end": 30663,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30556,
											"end": 30679,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 30556,
											"end": 30679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30768,
											"end": 30789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30825,
											"end": 30848,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 30825,
											"end": 30848,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30811,
											"end": 30821,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 30811,
											"end": 30821,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 30793,
											"end": 30808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 30793,
											"end": 30821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 30793,
											"end": 30821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30793,
											"end": 30821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30793,
											"end": 30821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 30793,
											"end": 30821,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30793,
											"end": 30821,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 30793,
											"end": 30821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30792,
											"end": 30848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 30792,
											"end": 30848,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30792,
											"end": 30848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30792,
											"end": 30848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 30792,
											"end": 30848,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30792,
											"end": 30848,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 30792,
											"end": 30848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30768,
											"end": 30848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30863,
											"end": 30888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 30892,
											"end": 30918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 30768,
											"end": 30848,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 30892,
											"end": 30902,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 30892,
											"end": 30918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 30892,
											"end": 30918,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30892,
											"end": 30918,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 30892,
											"end": 30918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30891,
											"end": 30938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 30891,
											"end": 30938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30891,
											"end": 30938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 30891,
											"end": 30938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 30891,
											"end": 30938,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 30891,
											"end": 30938,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 30891,
											"end": 30938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 30863,
											"end": 30938,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30953,
											"end": 30977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 30953,
											"end": 30977,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30953,
											"end": 30977,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 30002,
											"end": 30989,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 30002,
											"end": 30989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31006,
											"end": 31007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 30999,
											"end": 31007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 30999,
											"end": 31007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 30999,
											"end": 31007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29867,
											"end": 31015,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 26587,
											"end": 26833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26695,
											"end": 26696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26677,
											"end": 26692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26677,
											"end": 26696,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 26669,
											"end": 26731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26742,
											"end": 26757,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 26742,
											"end": 26775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26742,
											"end": 26775,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26742,
											"end": 26775,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "PUSH",
											"source": 7,
											"value": "9478EB023AAC0A7D58A4E935377056BF27CF5B72A2300725F831817A8F62FBDE"
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26760,
											"end": 26775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26760,
											"end": 26775,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 26791,
											"end": 26825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2805,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3039,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 21289,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21367,
											"end": 21390,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21367,
											"end": 21390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21367,
											"end": 21390,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 21359,
											"end": 21417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21436,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21428,
											"end": 21448,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "PUSH",
											"source": 7,
											"value": "DA12EE837E6978172AAF54B16145FFE08414FD8710092EF033C71B8EB6EC189A"
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21476,
											"end": 21484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21476,
											"end": 21484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 21464,
											"end": 21485,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 24496,
											"end": 24753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "1F4"
										},
										{
											"begin": 24580,
											"end": 24592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24580,
											"end": 24612,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 24580,
											"end": 24612,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24676,
											"end": 24687,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 24676,
											"end": 24702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24676,
											"end": 24702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24676,
											"end": 24702,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "PUSH",
											"source": 7,
											"value": "D5FE46099FA396290A7F57E36C3C3C8774E2562C18ED5D1DCC0FA75071E03F1D"
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24690,
											"end": 24702,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24690,
											"end": 24702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 24718,
											"end": 24745,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 24007,
											"end": 24387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2030,
											"name": "PUSH",
											"source": 7,
											"value": "7D0"
										},
										{
											"begin": 24127,
											"end": 24150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24127,
											"end": 24173,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 24127,
											"end": 24173,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 24105,
											"end": 24255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24266,
											"end": 24288,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 24266,
											"end": 24314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24266,
											"end": 24314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24266,
											"end": 24314,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "PUSH",
											"source": 7,
											"value": "C5D25457B67B87678C987375AF13F6E50BEB3AD7BFD009DA26766AE986EAA20D"
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24291,
											"end": 24314,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24291,
											"end": 24314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 24330,
											"end": 24379,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1278,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3134,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2030,
											"name": "PUSH",
											"source": 7,
											"value": "7D0"
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2030,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23342,
											"end": 23361,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23342,
											"end": 23361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23342,
											"end": 23361,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "tag",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 23334,
											"end": 23388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23419,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 23450,
											"end": 23475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23450,
											"end": 23475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23434,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23399,
											"end": 23426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23450,
											"end": 23475,
											"name": "PUSH",
											"source": 7,
											"value": "3D7902BC9A6665BD7CAF4240B834BB805D3CD68256889E9F8D2E40A10BE41D44"
										},
										{
											"begin": 23450,
											"end": 23475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23450,
											"end": 23475,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23249,
											"end": 23483,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 27374,
											"end": 27654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27494,
											"end": 27495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27472,
											"end": 27491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27472,
											"end": 27495,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "tag",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 27464,
											"end": 27535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27546,
											"end": 27566,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 27546,
											"end": 27588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27546,
											"end": 27588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27546,
											"end": 27588,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "PUSH",
											"source": 7,
											"value": "F84BF2B901CFC02956D4E69556D7448CEF4EA13587E7714DBA7C6D697091E7AD"
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27569,
											"end": 27588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27569,
											"end": 27588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 27604,
											"end": 27646,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 28985,
											"end": 29730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 29054,
											"end": 29061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29098,
											"end": 29106,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29098,
											"end": 29113,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29139,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29143,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 29128,
											"end": 29159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29148,
											"end": 29159,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 29148,
											"end": 29159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29148,
											"end": 29159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29148,
											"end": 29159,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29148,
											"end": 29159,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 29148,
											"end": 29159,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 29147,
											"end": 29159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29159,
											"name": "tag",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 29128,
											"end": 29159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 29128,
											"end": 29194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29187,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 29164,
											"end": 29194,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 29163,
											"end": 29194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 29128,
											"end": 29194,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 29128,
											"end": 29194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29124,
											"end": 29704,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 29124,
											"end": 29704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 29124,
											"end": 29704,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 29211,
											"end": 29223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29240,
											"end": 29274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 29240,
											"end": 29272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 29240,
											"end": 29274,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29240,
											"end": 29274,
											"name": "tag",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 29240,
											"end": 29274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29226,
											"end": 29237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 29226,
											"end": 29235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 29226,
											"end": 29237,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29226,
											"end": 29237,
											"name": "tag",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 29226,
											"end": 29237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29226,
											"end": 29274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 29226,
											"end": 29274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29226,
											"end": 29274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29226,
											"end": 29274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 29226,
											"end": 29274,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29226,
											"end": 29274,
											"name": "tag",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 29226,
											"end": 29274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29211,
											"end": 29274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29211,
											"end": 29274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29289,
											"end": 29308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29334,
											"end": 29345,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 29334,
											"end": 29345,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29326,
											"end": 29330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29312,
											"end": 29316,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 29312,
											"end": 29323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29312,
											"end": 29323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29312,
											"end": 29323,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "tag",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 29312,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29311,
											"end": 29345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 29311,
											"end": 29345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29311,
											"end": 29345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29311,
											"end": 29345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 29311,
											"end": 29345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29311,
											"end": 29345,
											"name": "tag",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 29311,
											"end": 29345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29289,
											"end": 29345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29289,
											"end": 29345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 29360,
											"end": 29378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29395,
											"end": 29399,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 29395,
											"end": 29420,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 29395,
											"end": 29420,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 29395,
											"end": 29420,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29381,
											"end": 29392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 29381,
											"end": 29420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 29381,
											"end": 29420,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29381,
											"end": 29420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29381,
											"end": 29420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 29381,
											"end": 29420,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29381,
											"end": 29420,
											"name": "tag",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 29381,
											"end": 29420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29453,
											"end": 29467,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 29453,
											"end": 29467,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29360,
											"end": 29420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29360,
											"end": 29420,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29486,
											"end": 29504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 29498,
											"end": 29503,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 29486,
											"end": 29497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 29486,
											"end": 29504,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29486,
											"end": 29504,
											"name": "tag",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 29486,
											"end": 29504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29482,
											"end": 29573,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 29482,
											"end": 29573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "628"
										},
										{
											"begin": 29482,
											"end": 29573,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29535,
											"end": 29557,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 29535,
											"end": 29557,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 29482,
											"end": 29573,
											"name": "tag",
											"source": 7,
											"value": "628"
										},
										{
											"begin": 29482,
											"end": 29573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29587,
											"end": 29616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 29644,
											"end": 29649,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 29620,
											"end": 29640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 29633,
											"end": 29640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 29620,
											"end": 29630,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 29620,
											"end": 29640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 29620,
											"end": 29640,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29620,
											"end": 29640,
											"name": "tag",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 29620,
											"end": 29640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "tag",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 29587,
											"end": 29649,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29664,
											"end": 29692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 29664,
											"end": 29692,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29664,
											"end": 29692,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32878,
											"end": 32885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 32898,
											"end": 32912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32927,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 32915,
											"end": 32939,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32915,
											"end": 32939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32939,
											"name": "PUSH",
											"source": 7,
											"value": "C799B59D"
										},
										{
											"begin": 32940,
											"end": 32951,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 32940,
											"end": 32951,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 32961,
											"end": 32965,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "632"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "tag",
											"source": 7,
											"value": "632"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "tag",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "tag",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "tag",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 32915,
											"end": 32967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 32898,
											"end": 32967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 32813,
											"end": 32999,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "1F4"
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2090,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28220,
											"end": 28225,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 28202,
											"end": 28226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28202,
											"end": 28226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 28202,
											"end": 28208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28202,
											"end": 28226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28202,
											"end": 28226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 28202,
											"end": 28226,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 28202,
											"end": 28226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "tag",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 28194,
											"end": 28268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28281,
											"end": 28295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28281,
											"end": 28295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28322,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28298,
											"end": 28322,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28322,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28322,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 28298,
											"end": 28322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28331,
											"end": 28335,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 28331,
											"end": 28335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "tag",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "tag",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "tag",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 28298,
											"end": 28337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28281,
											"end": 28337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28348,
											"end": 28395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 28348,
											"end": 28375,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28348,
											"end": 28375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28348,
											"end": 28375,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 28376,
											"end": 28386,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 28281,
											"end": 28337,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28348,
											"end": 28375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 28348,
											"end": 28395,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 28348,
											"end": 28395,
											"name": "tag",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 28348,
											"end": 28395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28118,
											"end": 28403,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 21607,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21695,
											"end": 21723,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21695,
											"end": 21723,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21695,
											"end": 21723,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "tag",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 21687,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21774,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21761,
											"end": 21791,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "PUSH",
											"source": 7,
											"value": "8F49A182922022D9119A1A6AEECA151B4A5665E86BD61C1FF32E152D459558B2"
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21824,
											"end": 21837,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21824,
											"end": 21837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 21807,
											"end": 21838,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3451,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1315,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 11844,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11953,
											"end": 11954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11943,
											"end": 11950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11954,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 11975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11958,
											"end": 11971,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 11975,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "tag",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "663"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "tag",
											"source": 7,
											"value": "663"
										},
										{
											"begin": 11935,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 12026,
											"end": 12033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12060,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12009,
											"end": 12061,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2925,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3286,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 20977,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "668"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "668"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21055,
											"end": 21078,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21055,
											"end": 21078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21055,
											"end": 21078,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "tag",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 21047,
											"end": 21105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21124,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21136,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "PUSH",
											"source": 7,
											"value": "AFA147634B29E2C7BD53CE194256B9F41CFB9BA3036F2B822FDD1D965BEEA086"
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 21152,
											"end": 21173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "674"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "674"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 26130,
											"end": 26475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "PUSH",
											"source": 7,
											"value": "5265C00"
										},
										{
											"begin": 26236,
											"end": 26252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26236,
											"end": 26279,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 26236,
											"end": 26279,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "686"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "tag",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 26214,
											"end": 26368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26379,
											"end": 26396,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 26379,
											"end": 26415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26379,
											"end": 26415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26379,
											"end": 26415,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "PUSH",
											"source": 7,
											"value": "CAB2F3455B51B6CA5377E84FCCD0F890B6F6CA36C02E18B6D36CB34F469FE4FE"
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26399,
											"end": 26415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26399,
											"end": 26415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 26431,
											"end": 26467,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1760,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1211,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "2D79883D2000"
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2447,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "696"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "697"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "698"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 4,
											"value": "697"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "699"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 4,
											"value": "696"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 31190,
											"end": 31367,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 31190,
											"end": 31367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31273,
											"end": 31280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 31333,
											"end": 31359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "701"
										},
										{
											"begin": 31353,
											"end": 31358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 31333,
											"end": 31352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 31333,
											"end": 31359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31333,
											"end": 31359,
											"name": "tag",
											"source": 7,
											"value": "701"
										},
										{
											"begin": 31333,
											"end": 31359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31300,
											"end": 31330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 31324,
											"end": 31329,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 31300,
											"end": 31323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 31300,
											"end": 31330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 31300,
											"end": 31330,
											"name": "tag",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 31300,
											"end": 31330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 31300,
											"end": 31359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 31300,
											"end": 31359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 31300,
											"end": 31359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 31300,
											"end": 31359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 31300,
											"end": 31359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33798,
											"end": 33989,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 33798,
											"end": 33989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 33928,
											"end": 33945,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 33973,
											"end": 33981,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33973,
											"end": 33981,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 33973,
											"end": 33981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 33798,
											"end": 33989,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17771,
											"end": 17781,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 17738,
											"end": 17759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17762,
											"end": 17770,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17762,
											"end": 17782,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 17812,
											"end": 17823,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17812,
											"end": 17823,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17801,
											"end": 17823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17801,
											"end": 17823,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17801,
											"end": 17823,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "711"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "tag",
											"source": 7,
											"value": "711"
										},
										{
											"begin": 17793,
											"end": 17859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17897,
											"end": 17912,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 17878,
											"end": 17882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17878,
											"end": 17894,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 17878,
											"end": 17894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17878,
											"end": 17894,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17878,
											"end": 17912,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "716"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "tag",
											"source": 7,
											"value": "714"
										},
										{
											"begin": 17870,
											"end": 17930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17947,
											"end": 17952,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17947,
											"end": 17952,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17947,
											"end": 17966,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17947,
											"end": 17952,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17947,
											"end": 17966,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17943,
											"end": 18029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "717"
										},
										{
											"begin": 17943,
											"end": 18029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17990,
											"end": 17995,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17990,
											"end": 17995,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "51CFF8D900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17990,
											"end": 17995,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17990,
											"end": 17995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17990,
											"end": 17995,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17990,
											"end": 17995,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17990,
											"end": 17995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18005,
											"name": "PUSH",
											"source": 7,
											"value": "51CFF8D9"
										},
										{
											"begin": 17983,
											"end": 18005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "718"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18006,
											"end": 18016,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 18006,
											"end": 18016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "tag",
											"source": 7,
											"value": "718"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "tag",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "tag",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 18017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17943,
											"end": 18029,
											"name": "tag",
											"source": 7,
											"value": "717"
										},
										{
											"begin": 17943,
											"end": 18029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18276,
											"end": 18287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18276,
											"end": 18287,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18197,
											"end": 18204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18197,
											"end": 18204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18174,
											"end": 18194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18174,
											"end": 18194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18240,
											"end": 18272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "722"
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 18197,
											"end": 18204,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18240,
											"end": 18272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 18240,
											"end": 18272,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18240,
											"end": 18272,
											"name": "tag",
											"source": 7,
											"value": "722"
										},
										{
											"begin": 18240,
											"end": 18272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18239,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "723"
										},
										{
											"begin": 18239,
											"end": 18287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18239,
											"end": 18287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18239,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 18239,
											"end": 18287,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18239,
											"end": 18287,
											"name": "tag",
											"source": 7,
											"value": "723"
										},
										{
											"begin": 18239,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18215,
											"end": 18287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18215,
											"end": 18287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18345,
											"end": 18354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "724"
										},
										{
											"begin": 18345,
											"end": 18352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "725"
										},
										{
											"begin": 18345,
											"end": 18354,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18345,
											"end": 18354,
											"name": "tag",
											"source": 7,
											"value": "724"
										},
										{
											"begin": 18345,
											"end": 18354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18398,
											"end": 18425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "726"
										},
										{
											"begin": 18414,
											"end": 18424,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 18398,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "727"
										},
										{
											"begin": 18398,
											"end": 18425,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18398,
											"end": 18425,
											"name": "tag",
											"source": 7,
											"value": "726"
										},
										{
											"begin": 18398,
											"end": 18425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18442,
											"end": 18454,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18442,
											"end": 18454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18442,
											"end": 18469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18442,
											"end": 18469,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18442,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "728"
										},
										{
											"begin": 18442,
											"end": 18469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18442,
											"end": 18469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18458,
											"end": 18465,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18458,
											"end": 18469,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18442,
											"end": 18469,
											"name": "tag",
											"source": 7,
											"value": "728"
										},
										{
											"begin": 18442,
											"end": 18469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "729"
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18486,
											"end": 18498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18501,
											"end": 18512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "730"
										},
										{
											"begin": 18501,
											"end": 18510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 18501,
											"end": 18512,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18501,
											"end": 18512,
											"name": "tag",
											"source": 7,
											"value": "730"
										},
										{
											"begin": 18501,
											"end": 18512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18486,
											"end": 18512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18486,
											"end": 18512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18568,
											"end": 18572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18553,
											"end": 18564,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 18553,
											"end": 18564,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18543,
											"end": 18550,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18543,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "731"
										},
										{
											"begin": 18543,
											"end": 18564,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18543,
											"end": 18564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18543,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 18543,
											"end": 18564,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18543,
											"end": 18564,
											"name": "tag",
											"source": 7,
											"value": "731"
										},
										{
											"begin": 18543,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18542,
											"end": 18572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "732"
										},
										{
											"begin": 18542,
											"end": 18572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18542,
											"end": 18572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18542,
											"end": 18572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 18542,
											"end": 18572,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18542,
											"end": 18572,
											"name": "tag",
											"source": 7,
											"value": "732"
										},
										{
											"begin": 18542,
											"end": 18572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18637,
											"end": 18648,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18637,
											"end": 18648,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18527,
											"end": 18572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18527,
											"end": 18572,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18622,
											"end": 18648,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18622,
											"end": 18648,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18618,
											"end": 18711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18618,
											"end": 18711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "733"
										},
										{
											"begin": 18618,
											"end": 18711,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18684,
											"end": 18695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18684,
											"end": 18695,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18684,
											"end": 18695,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18618,
											"end": 18711,
											"name": "tag",
											"source": 7,
											"value": "733"
										},
										{
											"begin": 18618,
											"end": 18711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "734"
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "tag",
											"source": 7,
											"value": "729"
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18775,
											"end": 18786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18775,
											"end": 18786,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18759,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "735"
										},
										{
											"begin": 18759,
											"end": 18786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18759,
											"end": 18772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18759,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 18759,
											"end": 18786,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18759,
											"end": 18786,
											"name": "tag",
											"source": 7,
											"value": "735"
										},
										{
											"begin": 18759,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18758,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "736"
										},
										{
											"begin": 18758,
											"end": 18812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18758,
											"end": 18812,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18758,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 18758,
											"end": 18812,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18758,
											"end": 18812,
											"name": "tag",
											"source": 7,
											"value": "736"
										},
										{
											"begin": 18758,
											"end": 18812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18743,
											"end": 18812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18743,
											"end": 18812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "tag",
											"source": 7,
											"value": "734"
										},
										{
											"begin": 18438,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18834,
											"end": 18855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18889,
											"end": 18900,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 18889,
											"end": 18900,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18873,
											"end": 18885,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "737"
										},
										{
											"begin": 18859,
											"end": 18868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 18859,
											"end": 18870,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18859,
											"end": 18870,
											"name": "tag",
											"source": 7,
											"value": "737"
										},
										{
											"begin": 18859,
											"end": 18870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "738"
										},
										{
											"begin": 18859,
											"end": 18885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 18859,
											"end": 18885,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18859,
											"end": 18885,
											"name": "tag",
											"source": 7,
											"value": "738"
										},
										{
											"begin": 18859,
											"end": 18885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18858,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "739"
										},
										{
											"begin": 18858,
											"end": 18900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18858,
											"end": 18900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18858,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 18858,
											"end": 18900,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18858,
											"end": 18900,
											"name": "tag",
											"source": 7,
											"value": "739"
										},
										{
											"begin": 18858,
											"end": 18900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18834,
											"end": 18900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18834,
											"end": 18900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18926,
											"end": 18938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18915,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18911,
											"end": 18922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "740"
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "tag",
											"source": 7,
											"value": "740"
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18911,
											"end": 18938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18964,
											"end": 18976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18960,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 18949,
											"end": 18960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "741"
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "tag",
											"source": 7,
											"value": "741"
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 18976,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19050,
											"end": 19060,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19049,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 19029,
											"end": 19061,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19028,
											"end": 19061,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19028,
											"end": 19127,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19028,
											"end": 19127,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19028,
											"end": 19127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "742"
										},
										{
											"begin": 19028,
											"end": 19127,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19028,
											"end": 19127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19109,
											"end": 19126,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 19109,
											"end": 19126,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19088,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19106,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19084,
											"end": 19106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19106,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "743"
										},
										{
											"begin": 19084,
											"end": 19126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 19084,
											"end": 19126,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19084,
											"end": 19126,
											"name": "tag",
											"source": 7,
											"value": "743"
										},
										{
											"begin": 19084,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19066,
											"end": 19081,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 19066,
											"end": 19126,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19028,
											"end": 19127,
											"name": "tag",
											"source": 7,
											"value": "742"
										},
										{
											"begin": 19028,
											"end": 19127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19482,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "744"
										},
										{
											"begin": 19024,
											"end": 19482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19162,
											"end": 19173,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 19162,
											"end": 19173,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19192,
											"end": 19215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "745"
										},
										{
											"begin": 19204,
											"end": 19214,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 19192,
											"end": 19203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 19192,
											"end": 19215,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19192,
											"end": 19215,
											"name": "tag",
											"source": 7,
											"value": "745"
										},
										{
											"begin": 19192,
											"end": 19215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19188,
											"end": 19281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19188,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "746"
										},
										{
											"begin": 19188,
											"end": 19281,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19246,
											"end": 19265,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 19246,
											"end": 19265,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19188,
											"end": 19281,
											"name": "tag",
											"source": 7,
											"value": "746"
										},
										{
											"begin": 19188,
											"end": 19281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19295,
											"end": 19321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19352,
											"end": 19357,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 19325,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "747"
										},
										{
											"begin": 19341,
											"end": 19348,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19325,
											"end": 19338,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19325,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 19325,
											"end": 19348,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19325,
											"end": 19348,
											"name": "tag",
											"source": 7,
											"value": "747"
										},
										{
											"begin": 19325,
											"end": 19348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19324,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "748"
										},
										{
											"begin": 19324,
											"end": 19357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19324,
											"end": 19357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19324,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 19324,
											"end": 19357,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19324,
											"end": 19357,
											"name": "tag",
											"source": 7,
											"value": "748"
										},
										{
											"begin": 19324,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19391,
											"end": 19399,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 19391,
											"end": 19399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19295,
											"end": 19357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19295,
											"end": 19357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19372,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "749"
										},
										{
											"begin": 19372,
											"end": 19420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19391,
											"end": 19399,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19372,
											"end": 19377,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 19372,
											"end": 19390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19390,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19391,
											"end": 19399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19295,
											"end": 19357,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 19372,
											"end": 19420,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19372,
											"end": 19420,
											"name": "tag",
											"source": 7,
											"value": "749"
										},
										{
											"begin": 19372,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "750"
										},
										{
											"begin": 19452,
											"end": 19470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "tag",
											"source": 7,
											"value": "750"
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19435,
											"end": 19470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19482,
											"name": "tag",
											"source": 7,
											"value": "744"
										},
										{
											"begin": 19024,
											"end": 19482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19494,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "751"
										},
										{
											"begin": 19494,
											"end": 19512,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19494,
											"end": 19499,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 19494,
											"end": 19512,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19513,
											"end": 19523,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 19525,
											"end": 19538,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19494,
											"end": 19512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 19494,
											"end": 19539,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19494,
											"end": 19539,
											"name": "tag",
											"source": 7,
											"value": "751"
										},
										{
											"begin": 19494,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19556,
											"end": 19567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19556,
											"end": 19567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19556,
											"end": 19571,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "752"
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19646,
											"end": 19657,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 19646,
											"end": 19657,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19631,
											"end": 19642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "753"
										},
										{
											"begin": 19631,
											"end": 19640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 19631,
											"end": 19642,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19631,
											"end": 19642,
											"name": "tag",
											"source": 7,
											"value": "753"
										},
										{
											"begin": 19631,
											"end": 19642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19617,
											"end": 19628,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19617,
											"end": 19628,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19617,
											"end": 19642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "754"
										},
										{
											"begin": 19617,
											"end": 19642,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19617,
											"end": 19642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19617,
											"end": 19642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 19617,
											"end": 19642,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19617,
											"end": 19642,
											"name": "tag",
											"source": 7,
											"value": "754"
										},
										{
											"begin": 19617,
											"end": 19642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19616,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "755"
										},
										{
											"begin": 19616,
											"end": 19657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19616,
											"end": 19657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19616,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 19616,
											"end": 19657,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19616,
											"end": 19657,
											"name": "tag",
											"source": 7,
											"value": "755"
										},
										{
											"begin": 19616,
											"end": 19657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19588,
											"end": 19613,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 19588,
											"end": 19613,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19588,
											"end": 19613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19588,
											"end": 19657,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "756"
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "tag",
											"source": 7,
											"value": "752"
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19718,
											"end": 19719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19690,
											"end": 19715,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 19690,
											"end": 19715,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19690,
											"end": 19715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19690,
											"end": 19719,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "tag",
											"source": 7,
											"value": "756"
										},
										{
											"begin": 19552,
											"end": 19731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19769,
											"end": 19784,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 19743,
											"end": 19766,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 19743,
											"end": 19766,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19743,
											"end": 19766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19743,
											"end": 19784,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19845,
											"end": 19880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "757"
										},
										{
											"begin": 19869,
											"end": 19879,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 19845,
											"end": 19868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "758"
										},
										{
											"begin": 19845,
											"end": 19880,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19845,
											"end": 19880,
											"name": "tag",
											"source": 7,
											"value": "757"
										},
										{
											"begin": 19845,
											"end": 19880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19907,
											"end": 19917,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "PUSH",
											"source": 7,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 19919,
											"end": 19932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19934,
											"end": 19946,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "759"
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "875"
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "tag",
											"source": 7,
											"value": "759"
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19898,
											"end": 19947,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 19955,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12420,
											"end": 12441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12452,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12485,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "761"
										},
										{
											"begin": 12474,
											"end": 12505,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12501,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12494,
											"end": 12505,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12505,
											"name": "tag",
											"source": 7,
											"value": "761"
										},
										{
											"begin": 12474,
											"end": 12505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12470,
											"end": 12629,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12470,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "763"
										},
										{
											"begin": 12470,
											"end": 12629,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2687,
											"name": "PUSH",
											"source": 7,
											"value": "9184E72A000"
										},
										{
											"begin": 12530,
											"end": 12537,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12558,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "763"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "765"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "tag",
											"source": 7,
											"value": "763"
										},
										{
											"begin": 12522,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12799,
											"end": 12815,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 12799,
											"end": 12815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12799,
											"end": 12815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12799,
											"end": 12815,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12784,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12819,
											"end": 12834,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 12795,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "766"
										},
										{
											"begin": 12795,
											"end": 13248,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12983,
											"end": 12994,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12983,
											"end": 12994,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12979,
											"end": 13164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "767"
										},
										{
											"begin": 12979,
											"end": 13164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13051,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13091,
											"end": 13108,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 13091,
											"end": 13108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13091,
											"end": 13108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13091,
											"end": 13108,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13087,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "768"
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13091,
											"end": 13108,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13091,
											"end": 13108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "tag",
											"source": 7,
											"value": "768"
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13108,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13147,
											"end": 13148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13127,
											"end": 13144,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 13127,
											"end": 13144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13127,
											"end": 13144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13127,
											"end": 13148,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12979,
											"end": 13164,
											"name": "tag",
											"source": 7,
											"value": "767"
										},
										{
											"begin": 12979,
											"end": 13164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13236,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13218,
											"end": 13236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13236,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13215,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 13199,
											"end": 13215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13215,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "769"
										},
										{
											"begin": 13199,
											"end": 13236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 13199,
											"end": 13236,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13199,
											"end": 13236,
											"name": "tag",
											"source": 7,
											"value": "769"
										},
										{
											"begin": 13199,
											"end": 13236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "770"
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "tag",
											"source": 7,
											"value": "770"
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12795,
											"end": 13248,
											"name": "tag",
											"source": 7,
											"value": "766"
										},
										{
											"begin": 12795,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "771"
										},
										{
											"begin": 13266,
											"end": 13326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 13288,
											"end": 13305,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13288,
											"end": 13326,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13288,
											"end": 13326,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13326,
											"name": "tag",
											"source": 7,
											"value": "771"
										},
										{
											"begin": 13266,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "772"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "774"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "tag",
											"source": 7,
											"value": "772"
										},
										{
											"begin": 13258,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13402,
											"end": 13419,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 13402,
											"end": 13419,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13419,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13419,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "775"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "777"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "tag",
											"source": 7,
											"value": "775"
										},
										{
											"begin": 13373,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13469,
											"end": 13474,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13469,
											"end": 13474,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13469,
											"end": 13488,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13469,
											"end": 13474,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13469,
											"end": 13488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13465,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "778"
										},
										{
											"begin": 13465,
											"end": 13569,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13517,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13512,
											"end": 13517,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "EFE6A8B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13517,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13512,
											"end": 13517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13517,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13526,
											"name": "PUSH",
											"source": 7,
											"value": "EFE6A8B"
										},
										{
											"begin": 13505,
											"end": 13526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "779"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13527,
											"end": 13532,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13527,
											"end": 13532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13534,
											"end": 13541,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 13534,
											"end": 13541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13556,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "780"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "tag",
											"source": 7,
											"value": "779"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "781"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "tag",
											"source": 7,
											"value": "781"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "783"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "tag",
											"source": 7,
											"value": "783"
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13465,
											"end": 13569,
											"name": "tag",
											"source": 7,
											"value": "778"
										},
										{
											"begin": 13465,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "784"
										},
										{
											"begin": 13625,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "725"
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "tag",
											"source": 7,
											"value": "784"
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13679,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "785"
										},
										{
											"begin": 13679,
											"end": 13817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "786"
										},
										{
											"begin": 13738,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "tag",
											"source": 7,
											"value": "786"
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13783,
											"end": 13791,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 13783,
											"end": 13791,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13749,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13764,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "787"
										},
										{
											"begin": 13764,
											"end": 13805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13783,
											"end": 13791,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13764,
											"end": 13769,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 13764,
											"end": 13782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13764,
											"end": 13782,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13764,
											"end": 13782,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13783,
											"end": 13791,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13716,
											"end": 13749,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13764,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 13764,
											"end": 13805,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13764,
											"end": 13805,
											"name": "tag",
											"source": 7,
											"value": "787"
										},
										{
											"begin": 13764,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13679,
											"end": 13817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13679,
											"end": 13817,
											"name": "tag",
											"source": 7,
											"value": "785"
										},
										{
											"begin": 13679,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13858,
											"end": 13880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "788"
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13858,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "727"
										},
										{
											"begin": 13858,
											"end": 13880,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13858,
											"end": 13880,
											"name": "tag",
											"source": 7,
											"value": "788"
										},
										{
											"begin": 13858,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13931,
											"end": 13948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13931,
											"end": 13948,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13927,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "789"
										},
										{
											"begin": 13927,
											"end": 14263,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13988,
											"end": 14003,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 13973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 13985,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 13969,
											"end": 13985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 13985,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13969,
											"end": 14003,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "790"
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14045,
											"end": 14060,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 14024,
											"end": 14042,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14024,
											"end": 14042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14024,
											"end": 14042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14024,
											"end": 14060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14024,
											"end": 14060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14024,
											"end": 14060,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14098,
											"end": 14129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "791"
										},
										{
											"begin": 14098,
											"end": 14129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14116,
											"end": 14129,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14116,
											"end": 14129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14098,
											"end": 14129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 14098,
											"end": 14129,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14098,
											"end": 14129,
											"name": "tag",
											"source": 7,
											"value": "791"
										},
										{
											"begin": 14098,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14079,
											"end": 14095,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 14079,
											"end": 14095,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14079,
											"end": 14095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14079,
											"end": 14129,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "792"
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "tag",
											"source": 7,
											"value": "790"
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14190,
											"end": 14203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14186,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 14170,
											"end": 14186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "793"
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "tag",
											"source": 7,
											"value": "793"
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14170,
											"end": 14203,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "tag",
											"source": 7,
											"value": "792"
										},
										{
											"begin": 13965,
											"end": 14219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14244,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 14233,
											"end": 14244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14247,
											"end": 14251,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14251,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13927,
											"end": 14263,
											"name": "tag",
											"source": 7,
											"value": "789"
										},
										{
											"begin": 13927,
											"end": 14263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14275,
											"end": 14296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14328,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14339,
											"end": 14371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14382,
											"end": 14394,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14397,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "794"
										},
										{
											"begin": 14397,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 14397,
											"end": 14408,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14397,
											"end": 14408,
											"name": "tag",
											"source": 7,
											"value": "794"
										},
										{
											"begin": 14397,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14382,
											"end": 14408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14423,
											"end": 14434,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14423,
											"end": 14434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14419,
											"end": 14554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "795"
										},
										{
											"begin": 14419,
											"end": 14554,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14451,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "796"
										},
										{
											"begin": 14451,
											"end": 14473,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 14451,
											"end": 14473,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14474,
											"end": 14479,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14489,
											"end": 14493,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 14496,
											"end": 14503,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 14451,
											"end": 14473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 14451,
											"end": 14504,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14451,
											"end": 14504,
											"name": "tag",
											"source": 7,
											"value": "796"
										},
										{
											"begin": 14451,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14535,
											"end": 14542,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 14519,
											"end": 14542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14519,
											"end": 14542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14419,
											"end": 14554,
											"name": "tag",
											"source": 7,
											"value": "795"
										},
										{
											"begin": 14419,
											"end": 14554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14614,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14614,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14618,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14618,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14618,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "797"
										},
										{
											"begin": 14603,
											"end": 14633,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14622,
											"end": 14633,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 14622,
											"end": 14633,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14622,
											"end": 14633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14622,
											"end": 14633,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14622,
											"end": 14633,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 14622,
											"end": 14633,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14603,
											"end": 14633,
											"name": "tag",
											"source": 7,
											"value": "797"
										},
										{
											"begin": 14603,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14599,
											"end": 15080,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14599,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "803"
										},
										{
											"begin": 14599,
											"end": 15080,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14711,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 14700,
											"end": 14711,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14685,
											"end": 14696,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14685,
											"end": 14696,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14678,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "799"
										},
										{
											"begin": 14678,
											"end": 14696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14678,
											"end": 14682,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14678,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 14678,
											"end": 14696,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14678,
											"end": 14696,
											"name": "tag",
											"source": 7,
											"value": "799"
										},
										{
											"begin": 14678,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "800"
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "tag",
											"source": 7,
											"value": "800"
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14650,
											"end": 14711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "801"
										},
										{
											"begin": 14650,
											"end": 14711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "tag",
											"source": 7,
											"value": "801"
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14726,
											"end": 14767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14797,
											"end": 14801,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14797,
											"end": 14808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14797,
											"end": 14808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14797,
											"end": 14808,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14793,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 14782,
											"end": 14793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "802"
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "tag",
											"source": 7,
											"value": "802"
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14837,
											"end": 14838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14823,
											"end": 14838,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14823,
											"end": 14838,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14912,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14916,
											"end": 14931,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14931,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 15069,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 15069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "803"
										},
										{
											"begin": 14890,
											"end": 15069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 14969,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 14952,
											"end": 14969,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 14969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 14996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 14996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 14996,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15032,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 14996,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 14996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15015,
											"end": 15032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "804"
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 14996,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 14996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "tag",
											"source": 7,
											"value": "804"
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15053,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14890,
											"end": 15069,
											"name": "tag",
											"source": 7,
											"value": "803"
										},
										{
											"begin": 14890,
											"end": 15069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15094,
											"end": 15105,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 15094,
											"end": 15105,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15094,
											"end": 15110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "805"
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15176,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "806"
										},
										{
											"begin": 15183,
											"end": 15207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15176,
											"end": 15180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15176,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 15176,
											"end": 15207,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15176,
											"end": 15207,
											"name": "tag",
											"source": 7,
											"value": "806"
										},
										{
											"begin": 15176,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15160,
											"end": 15171,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 15160,
											"end": 15171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "807"
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15144,
											"end": 15157,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "tag",
											"source": 7,
											"value": "807"
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15143,
											"end": 15208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "808"
										},
										{
											"begin": 15143,
											"end": 15208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15143,
											"end": 15208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15143,
											"end": 15208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 15143,
											"end": 15208,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15143,
											"end": 15208,
											"name": "tag",
											"source": 7,
											"value": "808"
										},
										{
											"begin": 15143,
											"end": 15208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15127,
											"end": 15208,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15127,
											"end": 15208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "809"
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "tag",
											"source": 7,
											"value": "805"
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15257,
											"end": 15270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15241,
											"end": 15270,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15241,
											"end": 15270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "tag",
											"source": 7,
											"value": "809"
										},
										{
											"begin": 15090,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15363,
											"end": 15367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15344,
											"end": 15348,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15344,
											"end": 15360,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 15344,
											"end": 15360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15344,
											"end": 15360,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15344,
											"end": 15381,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "810"
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15437,
											"end": 15456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15518,
											"end": 15533,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 15518,
											"end": 15533,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15502,
											"end": 15514,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 15502,
											"end": 15514,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15484,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15498,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15480,
											"end": 15498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15498,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15461,
											"end": 15465,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 15461,
											"end": 15477,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 15461,
											"end": 15477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15461,
											"end": 15477,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15461,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "811"
										},
										{
											"begin": 15461,
											"end": 15498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15461,
											"end": 15498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15461,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 15461,
											"end": 15498,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15461,
											"end": 15498,
											"name": "tag",
											"source": 7,
											"value": "811"
										},
										{
											"begin": 15461,
											"end": 15498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15460,
											"end": 15514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "812"
										},
										{
											"begin": 15460,
											"end": 15514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15460,
											"end": 15514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15460,
											"end": 15514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 15460,
											"end": 15514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15460,
											"end": 15514,
											"name": "tag",
											"source": 7,
											"value": "812"
										},
										{
											"begin": 15460,
											"end": 15514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "813"
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "tag",
											"source": 7,
											"value": "813"
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15437,
											"end": 15533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15548,
											"end": 15567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 15571,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "814"
										},
										{
											"begin": 15585,
											"end": 15598,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 15437,
											"end": 15533,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15571,
											"end": 15598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 15571,
											"end": 15598,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15571,
											"end": 15598,
											"name": "tag",
											"source": 7,
											"value": "814"
										},
										{
											"begin": 15571,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15570,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "815"
										},
										{
											"begin": 15570,
											"end": 15618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15570,
											"end": 15618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15570,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 15570,
											"end": 15618,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15570,
											"end": 15618,
											"name": "tag",
											"source": 7,
											"value": "815"
										},
										{
											"begin": 15570,
											"end": 15618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "816"
										},
										{
											"begin": 15548,
											"end": 15618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "tag",
											"source": 7,
											"value": "816"
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15704,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15680,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15676,
											"end": 15687,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "817"
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "tag",
											"source": 7,
											"value": "817"
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15704,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15843,
											"end": 15867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15843,
											"end": 15867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 15871,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "818"
										},
										{
											"begin": 15885,
											"end": 15898,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 15871,
											"end": 15882,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15871,
											"end": 15898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 15871,
											"end": 15898,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15871,
											"end": 15898,
											"name": "tag",
											"source": 7,
											"value": "818"
										},
										{
											"begin": 15871,
											"end": 15898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15870,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "819"
										},
										{
											"begin": 15870,
											"end": 15918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15870,
											"end": 15918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15870,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 15870,
											"end": 15918,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15870,
											"end": 15918,
											"name": "tag",
											"source": 7,
											"value": "819"
										},
										{
											"begin": 15870,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15843,
											"end": 15918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15843,
											"end": 15918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15958,
											"end": 15974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15937,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15954,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 15933,
											"end": 15954,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "820"
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "tag",
											"source": 7,
											"value": "820"
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15933,
											"end": 15974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16007,
											"end": 16023,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16003,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 15989,
											"end": 16003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "821"
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "tag",
											"source": 7,
											"value": "821"
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15989,
											"end": 16023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16097,
											"end": 16104,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16080,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16093,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 16076,
											"end": 16093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "822"
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "tag",
											"source": 7,
											"value": "822"
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16076,
											"end": 16104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16140,
											"end": 16147,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16136,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 16119,
											"end": 16136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "823"
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "tag",
											"source": 7,
											"value": "823"
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16174,
											"end": 16179,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "PUSH",
											"source": 7,
											"value": "2B943276E5D747F6F7DD46D3B880D8874CB8D6B9B88CA1903990A2738E7DC7A1"
										},
										{
											"begin": 16181,
											"end": 16185,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 16181,
											"end": 16198,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 16181,
											"end": 16198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16181,
											"end": 16198,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16204,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16200,
											"end": 16211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16211,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16233,
											"end": 16237,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 16233,
											"end": 16251,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16233,
											"end": 16251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16233,
											"end": 16251,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16214,
											"end": 16218,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 16214,
											"end": 16230,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 16214,
											"end": 16230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16214,
											"end": 16230,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16214,
											"end": 16251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "824"
										},
										{
											"begin": 16214,
											"end": 16251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16214,
											"end": 16251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16214,
											"end": 16251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 16214,
											"end": 16251,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16214,
											"end": 16251,
											"name": "tag",
											"source": 7,
											"value": "824"
										},
										{
											"begin": 16214,
											"end": 16251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16269,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "825"
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "826"
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "tag",
											"source": 7,
											"value": "825"
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16270,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "827"
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "tag",
											"source": 7,
											"value": "810"
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16318,
											"end": 16331,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16307,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16303,
											"end": 16314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "828"
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "tag",
											"source": 7,
											"value": "828"
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16303,
											"end": 16331,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "tag",
											"source": 7,
											"value": "827"
										},
										{
											"begin": 15340,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16369,
											"end": 16370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16359,
											"end": 16366,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 16359,
											"end": 16370,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "829"
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16390,
											"end": 16391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16374,
											"end": 16387,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 16374,
											"end": 16391,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "tag",
											"source": 7,
											"value": "829"
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16355,
											"end": 16460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16355,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "830"
										},
										{
											"begin": 16355,
											"end": 16460,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16433,
											"end": 16448,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16430,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 16408,
											"end": 16430,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16448,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16355,
											"end": 16460,
											"name": "tag",
											"source": 7,
											"value": "830"
										},
										{
											"begin": 16355,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16485,
											"end": 16498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16481,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 16470,
											"end": 16481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "831"
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "tag",
											"source": 7,
											"value": "831"
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16498,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16583,
											"end": 16604,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 16583,
											"end": 16604,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16583,
											"end": 16604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16583,
											"end": 16604,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16569,
											"end": 16580,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 16569,
											"end": 16580,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16554,
											"end": 16565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "832"
										},
										{
											"begin": 16554,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 16554,
											"end": 16565,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16554,
											"end": 16565,
											"name": "tag",
											"source": 7,
											"value": "832"
										},
										{
											"begin": 16554,
											"end": 16565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16551,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16551,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "833"
										},
										{
											"begin": 16540,
											"end": 16565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 16540,
											"end": 16565,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16540,
											"end": 16565,
											"name": "tag",
											"source": 7,
											"value": "833"
										},
										{
											"begin": 16540,
											"end": 16565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "834"
										},
										{
											"begin": 16539,
											"end": 16580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 16539,
											"end": 16580,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16539,
											"end": 16580,
											"name": "tag",
											"source": 7,
											"value": "834"
										},
										{
											"begin": 16539,
											"end": 16580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "835"
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "tag",
											"source": 7,
											"value": "835"
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16511,
											"end": 16536,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 16511,
											"end": 16536,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16511,
											"end": 16536,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16511,
											"end": 16604,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16641,
											"end": 16656,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16615,
											"end": 16656,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16717,
											"end": 16747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "836"
										},
										{
											"begin": 16741,
											"end": 16746,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16717,
											"end": 16740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "758"
										},
										{
											"begin": 16717,
											"end": 16747,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16717,
											"end": 16747,
											"name": "tag",
											"source": 7,
											"value": "836"
										},
										{
											"begin": 16717,
											"end": 16747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16773,
											"end": 16778,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "PUSH",
											"source": 7,
											"value": "7162984403F6C73C8639375D45A9187DFD04602231BD8E587C415718B5F7E5F9"
										},
										{
											"begin": 16780,
											"end": 16787,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 16789,
											"end": 16802,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16804,
											"end": 16817,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 16834,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "837"
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "826"
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "tag",
											"source": 7,
											"value": "837"
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16765,
											"end": 16835,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 16843,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "tag",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "tag",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 2281,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 4,
											"value": "651"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 950,
											"end": 952,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 954,
											"end": 959,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "697"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "690"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 4,
											"value": "699"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "859"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "860"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 4,
											"value": "859"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "862"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 4,
											"value": "862"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "865"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 20201,
											"end": 20571,
											"name": "tag",
											"source": 7,
											"value": "725"
										},
										{
											"begin": 20201,
											"end": 20571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20287,
											"end": 20298,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 20287,
											"end": 20298,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "C799B59D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20240,
											"end": 20259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20240,
											"end": 20259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20286,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20262,
											"end": 20274,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 20262,
											"end": 20286,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20286,
											"name": "PUSH",
											"source": 7,
											"value": "C799B59D"
										},
										{
											"begin": 20262,
											"end": 20286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "867"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20308,
											"end": 20312,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 20308,
											"end": 20312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "tag",
											"source": 7,
											"value": "867"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "tag",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "870"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "tag",
											"source": 7,
											"value": "870"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "871"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "tag",
											"source": 7,
											"value": "871"
										},
										{
											"begin": 20262,
											"end": 20314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20240,
											"end": 20314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20329,
											"end": 20344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20329,
											"end": 20344,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20325,
											"end": 20564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 20325,
											"end": 20564,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20361,
											"end": 20378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20381,
											"end": 20392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "873"
										},
										{
											"begin": 20381,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 20381,
											"end": 20392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20381,
											"end": 20392,
											"name": "tag",
											"source": 7,
											"value": "873"
										},
										{
											"begin": 20381,
											"end": 20392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20429,
											"end": 20440,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 20429,
											"end": 20440,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "441A3E7000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20361,
											"end": 20392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20361,
											"end": 20392,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20407,
											"end": 20428,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20407,
											"end": 20419,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "973"
										},
										{
											"begin": 20407,
											"end": 20428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20428,
											"name": "PUSH",
											"source": 7,
											"value": "441A3E70"
										},
										{
											"begin": 20407,
											"end": 20428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "874"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20442,
											"end": 20443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20442,
											"end": 20443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "875"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "tag",
											"source": 7,
											"value": "874"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "876"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "tag",
											"source": 7,
											"value": "876"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "878"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "tag",
											"source": 7,
											"value": "878"
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20407,
											"end": 20444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20459,
											"end": 20475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20478,
											"end": 20489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "879"
										},
										{
											"begin": 20478,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 20478,
											"end": 20489,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20478,
											"end": 20489,
											"name": "tag",
											"source": 7,
											"value": "879"
										},
										{
											"begin": 20478,
											"end": 20489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20459,
											"end": 20489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20517,
											"end": 20527,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 20530,
											"end": 20550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "880"
										},
										{
											"begin": 20541,
											"end": 20550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20459,
											"end": 20489,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20530,
											"end": 20550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 20530,
											"end": 20550,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20530,
											"end": 20550,
											"name": "tag",
											"source": 7,
											"value": "880"
										},
										{
											"begin": 20530,
											"end": 20550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "881"
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "tag",
											"source": 7,
											"value": "881"
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20509,
											"end": 20552,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 20325,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20325,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20201,
											"end": 20571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20201,
											"end": 20571,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7514,
											"end": 11176,
											"name": "tag",
											"source": 7,
											"value": "727"
										},
										{
											"begin": 7514,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7606,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7639,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7639,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7643,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 11169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 7624,
											"end": 11169,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7675,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7664,
											"end": 7675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7675,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7675,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7664,
											"end": 7675,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "884"
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7856,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7845,
											"end": 7856,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7829,
											"end": 7840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7840,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "885"
										},
										{
											"begin": 7814,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 7814,
											"end": 7825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7814,
											"end": 7825,
											"name": "tag",
											"source": 7,
											"value": "885"
										},
										{
											"begin": 7814,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "886"
										},
										{
											"begin": 7814,
											"end": 7841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 7814,
											"end": 7841,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7814,
											"end": 7841,
											"name": "tag",
											"source": 7,
											"value": "886"
										},
										{
											"begin": 7814,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "887"
										},
										{
											"begin": 7813,
											"end": 7856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7813,
											"end": 7856,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7813,
											"end": 7856,
											"name": "tag",
											"source": 7,
											"value": "887"
										},
										{
											"begin": 7813,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "888"
										},
										{
											"begin": 7813,
											"end": 7880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 7813,
											"end": 7880,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7813,
											"end": 7880,
											"name": "tag",
											"source": 7,
											"value": "888"
										},
										{
											"begin": 7813,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7938,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 7899,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "889"
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "tag",
											"source": 7,
											"value": "889"
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7938,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7978,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7957,
											"end": 7978,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7982,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8027,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8012,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8027,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "890"
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8027,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "tag",
											"source": 7,
											"value": "890"
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8147,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8154,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8219,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8219,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "891"
										},
										{
											"begin": 8127,
											"end": 8219,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8203,
											"end": 8218,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8176,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8160,
											"end": 8176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8176,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "892"
										},
										{
											"begin": 8160,
											"end": 8199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8160,
											"end": 8199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8160,
											"end": 8199,
											"name": "tag",
											"source": 7,
											"value": "892"
										},
										{
											"begin": 8160,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8159,
											"end": 8218,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8219,
											"name": "tag",
											"source": 7,
											"value": "891"
										},
										{
											"begin": 8127,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "893"
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "894"
										},
										{
											"begin": 8265,
											"end": 8298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8265,
											"end": 8298,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8265,
											"end": 8298,
											"name": "tag",
											"source": 7,
											"value": "894"
										},
										{
											"begin": 8265,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8404,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 8384,
											"end": 8404,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8369,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8381,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8365,
											"end": 8381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8381,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8362,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "895"
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "tag",
											"source": 7,
											"value": "895"
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "896"
										},
										{
											"begin": 8347,
											"end": 8404,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8347,
											"end": 8404,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8404,
											"name": "tag",
											"source": 7,
											"value": "896"
										},
										{
											"begin": 8347,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8449,
											"end": 8472,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8449,
											"end": 8472,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8431,
											"end": 8446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8431,
											"end": 8472,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8566,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "897"
										},
										{
											"begin": 8427,
											"end": 8566,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8519,
											"end": 8542,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8519,
											"end": 8542,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8566,
											"name": "tag",
											"source": 7,
											"value": "897"
										},
										{
											"begin": 8427,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8728,
											"end": 8751,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8728,
											"end": 8751,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8724,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 8714,
											"end": 8724,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "898"
										},
										{
											"begin": 8696,
											"end": 8724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8696,
											"end": 8724,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8696,
											"end": 8724,
											"name": "tag",
											"source": 7,
											"value": "898"
										},
										{
											"begin": 8696,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "899"
										},
										{
											"begin": 8695,
											"end": 8751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8695,
											"end": 8751,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8751,
											"name": "tag",
											"source": 7,
											"value": "899"
										},
										{
											"begin": 8695,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8774,
											"end": 8799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "900"
										},
										{
											"begin": 8671,
											"end": 8751,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8813,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "tag",
											"source": 7,
											"value": "900"
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8802,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "901"
										},
										{
											"begin": 8802,
											"end": 8849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8802,
											"end": 8849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8802,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8802,
											"end": 8849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8802,
											"end": 8849,
											"name": "tag",
											"source": 7,
											"value": "901"
										},
										{
											"begin": 8802,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8899,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8891,
											"end": 8899,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8774,
											"end": 8849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8774,
											"end": 8849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8872,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "902"
										},
										{
											"begin": 8872,
											"end": 8919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8899,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8872,
											"end": 8877,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8899,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8774,
											"end": 8849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 8872,
											"end": 8919,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8872,
											"end": 8919,
											"name": "tag",
											"source": 7,
											"value": "902"
										},
										{
											"begin": 8872,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "903"
										},
										{
											"begin": 8959,
											"end": 8976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "tag",
											"source": 7,
											"value": "903"
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "tag",
											"source": 7,
											"value": "893"
										},
										{
											"begin": 8123,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9064,
											"end": 9076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "904"
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 9079,
											"end": 9090,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9079,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "904"
										},
										{
											"begin": 9079,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9064,
											"end": 9090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9064,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9109,
											"end": 9130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9153,
											"end": 9164,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9153,
											"end": 9164,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9168,
											"end": 9169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9153,
											"end": 9169,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "905"
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9243,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "906"
										},
										{
											"begin": 9250,
											"end": 9263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9243,
											"end": 9247,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9243,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9243,
											"end": 9263,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9243,
											"end": 9263,
											"name": "tag",
											"source": 7,
											"value": "906"
										},
										{
											"begin": 9243,
											"end": 9263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9238,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9227,
											"end": 9238,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "907"
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9224,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "tag",
											"source": 7,
											"value": "907"
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "908"
										},
										{
											"begin": 9210,
											"end": 9264,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 9210,
											"end": 9264,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9210,
											"end": 9264,
											"name": "tag",
											"source": 7,
											"value": "908"
										},
										{
											"begin": 9210,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "909"
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "tag",
											"source": 7,
											"value": "905"
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9329,
											"end": 9342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "tag",
											"source": 7,
											"value": "909"
										},
										{
											"begin": 9149,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9407,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9407,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9407,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9437,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9407,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "910"
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9407,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "tag",
											"source": 7,
											"value": "910"
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9454,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9549,
											"end": 9565,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9549,
											"end": 9565,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9549,
											"end": 9565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9549,
											"end": 9565,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9568,
											"end": 9583,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 9545,
											"end": 9913,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9545,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "911"
										},
										{
											"begin": 9545,
											"end": 9913,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9619,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9608,
											"end": 9619,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9627,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9627,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 9608,
											"end": 9627,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9608,
											"end": 9627,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9622,
											"end": 9627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9711,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9695,
											"end": 9711,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9755,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9755,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "912"
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9759,
											"end": 9776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "tag",
											"source": 7,
											"value": "912"
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9776,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9799,
											"end": 9816,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9799,
											"end": 9816,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9799,
											"end": 9816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9799,
											"end": 9820,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "PUSH",
											"source": 7,
											"value": "F7870C5B224CBC19873599E46CCFC7103934650509B1AF0C3CE90138377C2004"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "913"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9862,
											"end": 9875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9892,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "875"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "tag",
											"source": 7,
											"value": "913"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9893,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 9545,
											"end": 9913,
											"name": "tag",
											"source": 7,
											"value": "911"
										},
										{
											"begin": 9545,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "tag",
											"source": 7,
											"value": "884"
										},
										{
											"begin": 7660,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9962,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 9934,
											"end": 11158,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10089,
											"end": 10100,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10089,
											"end": 10100,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10074,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "916"
										},
										{
											"begin": 10074,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 10074,
											"end": 10085,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10074,
											"end": 10085,
											"name": "tag",
											"source": 7,
											"value": "916"
										},
										{
											"begin": 10074,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10071,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "917"
										},
										{
											"begin": 10060,
											"end": 10085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 10060,
											"end": 10085,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10060,
											"end": 10085,
											"name": "tag",
											"source": 7,
											"value": "917"
										},
										{
											"begin": 10060,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10059,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "918"
										},
										{
											"begin": 10059,
											"end": 10100,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10059,
											"end": 10100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10059,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 10059,
											"end": 10100,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10059,
											"end": 10100,
											"name": "tag",
											"source": 7,
											"value": "918"
										},
										{
											"begin": 10059,
											"end": 10100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10134,
											"end": 10138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10134,
											"end": 10145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10134,
											"end": 10145,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10130,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10119,
											"end": 10130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "919"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "tag",
											"source": 7,
											"value": "919"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10258,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10233,
											"end": 10258,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10258,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10219,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "920"
										},
										{
											"begin": 10219,
											"end": 10258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10219,
											"end": 10230,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10219,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 10219,
											"end": 10258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10219,
											"end": 10258,
											"name": "tag",
											"source": 7,
											"value": "920"
										},
										{
											"begin": 10219,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10295,
											"end": 10309,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 10295,
											"end": 10309,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "921"
										},
										{
											"begin": 10344,
											"end": 10349,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "tag",
											"source": 7,
											"value": "921"
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10427,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "922"
										},
										{
											"begin": 10328,
											"end": 10427,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10385,
											"end": 10407,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 10385,
											"end": 10407,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10427,
											"name": "tag",
											"source": 7,
											"value": "922"
										},
										{
											"begin": 10328,
											"end": 10427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10502,
											"end": 10507,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "923"
										},
										{
											"begin": 10491,
											"end": 10498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10488,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "tag",
											"source": 7,
											"value": "923"
										},
										{
											"begin": 10478,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "924"
										},
										{
											"begin": 10477,
											"end": 10507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 10477,
											"end": 10507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10477,
											"end": 10507,
											"name": "tag",
											"source": 7,
											"value": "924"
										},
										{
											"begin": 10477,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10530,
											"end": 10555,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10530,
											"end": 10555,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10526,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "925"
										},
										{
											"begin": 10526,
											"end": 10710,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10607,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 10599,
											"end": 10607,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "926"
										},
										{
											"begin": 10580,
											"end": 10631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10607,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "970"
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10630,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 10580,
											"end": 10631,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10631,
											"name": "tag",
											"source": 7,
											"value": "926"
										},
										{
											"begin": 10580,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "927"
										},
										{
											"begin": 10669,
											"end": 10690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "tag",
											"source": 7,
											"value": "927"
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10526,
											"end": 10710,
											"name": "tag",
											"source": 7,
											"value": "925"
										},
										{
											"begin": 10526,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10778,
											"end": 10790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10793,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "928"
										},
										{
											"begin": 10793,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 10793,
											"end": 10804,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10793,
											"end": 10804,
											"name": "tag",
											"source": 7,
											"value": "928"
										},
										{
											"begin": 10793,
											"end": 10804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10778,
											"end": 10804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10778,
											"end": 10804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10823,
											"end": 10840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10878,
											"end": 10879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10863,
											"end": 10879,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "929"
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "930"
										},
										{
											"begin": 10954,
											"end": 10965,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "tag",
											"source": 7,
											"value": "930"
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10931,
											"end": 10942,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10931,
											"end": 10942,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10917,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "931"
										},
										{
											"begin": 10917,
											"end": 10942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10917,
											"end": 10928,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10917,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 10917,
											"end": 10942,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10917,
											"end": 10942,
											"name": "tag",
											"source": 7,
											"value": "931"
										},
										{
											"begin": 10917,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10916,
											"end": 10966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "932"
										},
										{
											"begin": 10916,
											"end": 10966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10916,
											"end": 10966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10916,
											"end": 10966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 10916,
											"end": 10966,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10916,
											"end": 10966,
											"name": "tag",
											"source": 7,
											"value": "932"
										},
										{
											"begin": 10916,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 10966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10904,
											"end": 10966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "933"
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "tag",
											"source": 7,
											"value": "929"
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11027,
											"end": 11038,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "tag",
											"source": 7,
											"value": "933"
										},
										{
											"begin": 10859,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11099,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11099,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11129,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11076,
											"end": 11087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "934"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11099,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "tag",
											"source": 7,
											"value": "934"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7514,
											"end": 11176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 11176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 11176,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6895,
											"end": 7381,
											"name": "tag",
											"source": 7,
											"value": "758"
										},
										{
											"begin": 6895,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6980,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6967,
											"end": 6980,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6994,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6967,
											"end": 6980,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6994,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 6963,
											"end": 7374,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7011,
											"end": 7032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7043,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7104,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7088,
											"end": 7104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7104,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7011,
											"end": 7032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "937"
										},
										{
											"begin": 7088,
											"end": 7125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 7088,
											"end": 7125,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7088,
											"end": 7125,
											"name": "tag",
											"source": 7,
											"value": "937"
										},
										{
											"begin": 7088,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 7296,
											"end": 7313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7347,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7332,
											"end": 7347,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "87356EF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7125,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7125,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7186,
											"name": "PUSH",
											"source": 7,
											"value": "87356EF7"
										},
										{
											"begin": 7140,
											"end": 7186,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "938"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7210,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7210,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7125,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "939"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "tag",
											"source": 7,
											"value": "938"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "940"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "tag",
											"source": 7,
											"value": "940"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "942"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "tag",
											"source": 7,
											"value": "942"
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 7381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 7381,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 5,
											"value": "860"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "944"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "945"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 5,
											"value": "944"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 5,
											"value": "943"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 5,
											"value": "945"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "947"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "949"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 5,
											"value": "947"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "950"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "951"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "950"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "952"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "954"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 5,
											"value": "952"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "955"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "956"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 5,
											"value": "955"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "959"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "958"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 5,
											"value": "959"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 5,
											"value": "958"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "960"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "961"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "960"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 5,
											"value": "951"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 5,
											"value": "961"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "964"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "943"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 5,
											"value": "964"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "966"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "tag",
											"source": 5,
											"value": "966"
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "969"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14,
											"end": 273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "972"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 11,
											"value": "972"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "943"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "974"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 674,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 278,
											"end": 674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 278,
											"end": 674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 674,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 404,
											"end": 406,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 383,
											"end": 390,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 379,
											"end": 402,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 372,
											"end": 374,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 372,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "976"
										},
										{
											"begin": 372,
											"end": 374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 425,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 417,
											"end": 423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 410,
											"end": 432,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 372,
											"end": 374,
											"name": "tag",
											"source": 11,
											"value": "976"
										},
										{
											"begin": 372,
											"end": 374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 469,
											"end": 478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 456,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 488,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "977"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 488,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "974"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "tag",
											"source": 11,
											"value": "977"
										},
										{
											"begin": 488,
											"end": 521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 540,
											"end": 545,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 597,
											"end": 599,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 600,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 582,
											"end": 600,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 569,
											"end": 601,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 610,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "978"
										},
										{
											"begin": 569,
											"end": 601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 610,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "979"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "tag",
											"source": 11,
											"value": "978"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 661,
											"end": 668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 651,
											"end": 668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 651,
											"end": 668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 674,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 362,
											"end": 674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 674,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 362,
											"end": 674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 362,
											"end": 674,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 679,
											"end": 1006,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 679,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 679,
											"end": 1006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 1006,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 808,
											"end": 810,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 805,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 787,
											"end": 794,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 783,
											"end": 806,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 779,
											"end": 811,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 776,
											"end": 778,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "981"
										},
										{
											"begin": 776,
											"end": 778,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 814,
											"end": 836,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 776,
											"end": 778,
											"name": "tag",
											"source": 11,
											"value": "981"
										},
										{
											"begin": 776,
											"end": 778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 860,
											"end": 883,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "982"
										},
										{
											"begin": 919,
											"end": 924,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "974"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "tag",
											"source": 11,
											"value": "982"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 944,
											"end": 949,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 999,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 981,
											"end": 999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 981,
											"end": 999,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 766,
											"end": 1006,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1268,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 1011,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1117,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1102,
											"end": 1134,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "984"
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1159,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "tag",
											"source": 11,
											"value": "984"
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1183,
											"end": 1199,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1208,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "943"
										},
										{
											"begin": 1232,
											"end": 1237,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1208,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "979"
										},
										{
											"begin": 1208,
											"end": 1238,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1551,
											"end": 1741,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1661,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1666,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "990"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1690,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "tag",
											"source": 11,
											"value": "990"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1735,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1741,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1621,
											"end": 1741,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1940,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 1746,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1940,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1840,
											"end": 1872,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "992"
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "tag",
											"source": 11,
											"value": "992"
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1827,
											"end": 1940,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1945,
											"end": 2203,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 1945,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2074,
											"end": 2076,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2053,
											"end": 2060,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2077,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "994"
										},
										{
											"begin": 2042,
											"end": 2044,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2080,
											"end": 2102,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2044,
											"name": "tag",
											"source": 11,
											"value": "994"
										},
										{
											"begin": 2042,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2123,
											"end": 2146,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2146,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2146,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2197,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2197,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2203,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2208,
											"end": 2482,
											"name": "tag",
											"source": 11,
											"value": "956"
										},
										{
											"begin": 2208,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2482,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "996"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2435,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2423,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2413,
											"end": 2430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "997"
										},
										{
											"begin": 2391,
											"end": 2444,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2391,
											"end": 2444,
											"name": "tag",
											"source": 11,
											"value": "996"
										},
										{
											"begin": 2391,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2476,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2476,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2476,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2482,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2482,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2487,
											"end": 2713,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2487,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2705,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2718,
											"end": 3116,
											"name": "tag",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 2718,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2999,
											"end": 3014,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3014,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3014,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3066,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3046,
											"end": 3048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3024,
											"end": 3067,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3101,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2910,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 2911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2875,
											"end": 3116,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3121,
											"end": 3418,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3121,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3367,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3313,
											"end": 3368,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3368,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3368,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3369,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3369,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3412,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3418,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3423,
											"end": 3791,
											"name": "tag",
											"source": 11,
											"value": "780"
										},
										{
											"begin": 3423,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 3697,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3698,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3698,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3698,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3699,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3699,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3742,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3742,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3742,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3742,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3775,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3751,
											"end": 3785,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3615,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3791,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3796,
											"end": 4308,
											"name": "tag",
											"source": 11,
											"value": "939"
										},
										{
											"begin": 3796,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4085,
											"end": 4127,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4073,
											"end": 4128,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4128,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4128,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4055,
											"end": 4129,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4055,
											"end": 4129,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4172,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4172,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4172,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4181,
											"end": 4215,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4292,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4274,
											"end": 4293,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4302,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4042,
											"end": 4045,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4027,
											"end": 4046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4027,
											"end": 4046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4308,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4500,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 4313,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4492,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4493,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4494,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4500,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5003,
											"end": 5445,
											"name": "tag",
											"source": 11,
											"value": "969"
										},
										{
											"begin": 5003,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5134,
											"end": 5155,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5184,
											"end": 5190,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5191,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5227,
											"end": 5233,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5222,
											"end": 5224,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5220,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1007"
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5297,
											"end": 5299,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5265,
											"end": 5280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "997"
										},
										{
											"begin": 5243,
											"end": 5309,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5243,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "1007"
										},
										{
											"begin": 5243,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5349,
											"end": 5364,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5432,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 5345,
											"end": 5433,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5326,
											"end": 5439,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5124,
											"end": 5445,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5124,
											"end": 5445,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5450,
											"end": 5792,
											"name": "tag",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 5450,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5652,
											"end": 5654,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5655,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5634,
											"end": 5655,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5634,
											"end": 5655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5691,
											"end": 5693,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5730,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F7468696E6720746F206465706F7369740000000000000000000000000000"
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5785,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5792,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5797,
											"end": 6141,
											"name": "tag",
											"source": 11,
											"value": "842"
										},
										{
											"begin": 5797,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6002,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 6002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 6002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6011,
											"end": 6041,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 6072,
											"end": 6074,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6050,
											"end": 6100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6134,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5971,
											"end": 6141,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6146,
											"end": 6489,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 6146,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6330,
											"end": 6351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6330,
											"end": 6351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6330,
											"end": 6351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6390,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F7468696E6720746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 6421,
											"end": 6423,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6399,
											"end": 6448,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6489,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6494,
											"end": 6896,
											"name": "tag",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 6494,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6699,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6699,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6699,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6747,
											"end": 6809,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6845,
											"end": 6853,
											"name": "PUSH",
											"source": 11,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6840,
											"end": 6842,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6818,
											"end": 6854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6886,
											"end": 6889,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6871,
											"end": 6890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6871,
											"end": 6890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6668,
											"end": 6896,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6901,
											"end": 7255,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 6901,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7106,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7142,
											"end": 7144,
											"name": "PUSH",
											"source": 11,
											"value": "1E"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7115,
											"end": 7145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7181,
											"end": 7213,
											"name": "PUSH",
											"source": 11,
											"value": "4455524154494F4E5F464143544F522063616E6E6F74206265207A65726F0000"
										},
										{
											"begin": 7176,
											"end": 7178,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7214,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7246,
											"end": 7248,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7075,
											"end": 7255,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7260,
											"end": 7597,
											"name": "tag",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 7260,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7462,
											"end": 7464,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7444,
											"end": 7465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7465,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7501,
											"end": 7503,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 7481,
											"end": 7499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7481,
											"end": 7499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7481,
											"end": 7499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7474,
											"end": 7504,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7540,
											"end": 7555,
											"name": "PUSH",
											"source": 11,
											"value": "5374696C6C20696E206C6F636B00000000000000000000000000000000000000"
										},
										{
											"begin": 7535,
											"end": 7537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7520,
											"end": 7538,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7520,
											"end": 7538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7513,
											"end": 7556,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7573,
											"end": 7591,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7573,
											"end": 7591,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7597,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7602,
											"end": 8017,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 7602,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7807,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7786,
											"end": 7807,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7786,
											"end": 7807,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7843,
											"end": 7845,
											"name": "PUSH",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7816,
											"end": 7846,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 7916,
											"name": "PUSH",
											"source": 11,
											"value": "424F4F53545F5745494748542063616E6E6F74206265206D6F7265207468616E"
										},
										{
											"begin": 7877,
											"end": 7879,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7855,
											"end": 7917,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "PUSH",
											"source": 11,
											"value": "20424F4F53545F5745494748545F4C494D495400000000000000000000000000"
										},
										{
											"begin": 7948,
											"end": 7950,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 7975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8007,
											"end": 8010,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7776,
											"end": 8017,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8022,
											"end": 8367,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8022,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8236,
											"end": 8266,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8325,
											"name": "PUSH",
											"source": 11,
											"value": "42616C616E6365206D7573742065786365656420300000000000000000000000"
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8275,
											"end": 8326,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8360,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8367,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8372,
											"end": 8773,
											"name": "tag",
											"source": 11,
											"value": "644"
										},
										{
											"begin": 8372,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8574,
											"end": 8576,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8556,
											"end": 8577,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8556,
											"end": 8577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8556,
											"end": 8577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8613,
											"end": 8615,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8586,
											"end": 8616,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8652,
											"end": 8686,
											"name": "PUSH",
											"source": 11,
											"value": "546F6B656E2063616E6E6F742062652073616D65206173206465706F73697420"
										},
										{
											"begin": 8647,
											"end": 8649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8632,
											"end": 8650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8632,
											"end": 8650,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8625,
											"end": 8687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8723,
											"end": 8730,
											"name": "PUSH",
											"source": 11,
											"value": "746F6B656E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8696,
											"end": 8731,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8763,
											"end": 8766,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8748,
											"end": 8767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8748,
											"end": 8767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8546,
											"end": 8773,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8778,
											"end": 9133,
											"name": "tag",
											"source": 11,
											"value": "713"
										},
										{
											"begin": 8778,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8980,
											"end": 8982,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8962,
											"end": 8983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8962,
											"end": 8983,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9019,
											"end": 9021,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8999,
											"end": 9017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8999,
											"end": 9017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8999,
											"end": 9017,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8992,
											"end": 9022,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9058,
											"end": 9091,
											"name": "PUSH",
											"source": 11,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 9053,
											"end": 9055,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9031,
											"end": 9092,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9124,
											"end": 9126,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9133,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9138,
											"end": 9490,
											"name": "tag",
											"source": 11,
											"value": "777"
										},
										{
											"begin": 9138,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9342,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9322,
											"end": 9343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9322,
											"end": 9343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9322,
											"end": 9343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9379,
											"end": 9381,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9382,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9418,
											"end": 9448,
											"name": "PUSH",
											"source": 11,
											"value": "4D6178696D756D206C6F636B20706572696F6420657863656564656400000000"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9391,
											"end": 9449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9481,
											"end": 9483,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9466,
											"end": 9484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9466,
											"end": 9484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9312,
											"end": 9490,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9495,
											"end": 9845,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 9495,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9697,
											"end": 9699,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9738,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9709,
											"end": 9739,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9775,
											"end": 9803,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F74206F70657261746F72206F722053686477206F776E6572000000000000"
										},
										{
											"begin": 9770,
											"end": 9772,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9748,
											"end": 9804,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9836,
											"end": 9838,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9821,
											"end": 9839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9821,
											"end": 9839,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9669,
											"end": 9845,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9850,
											"end": 10205,
											"name": "tag",
											"source": 11,
											"value": "774"
										},
										{
											"begin": 9850,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10034,
											"end": 10055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10034,
											"end": 10055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10034,
											"end": 10055,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10091,
											"end": 10093,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10071,
											"end": 10089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10071,
											"end": 10089,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10071,
											"end": 10089,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10064,
											"end": 10094,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10130,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "4D696E696D756D206C6F636B20706572696F64206973206F6E65207765656B00"
										},
										{
											"begin": 10125,
											"end": 10127,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10103,
											"end": 10164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10196,
											"end": 10198,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10181,
											"end": 10199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10199,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10024,
											"end": 10205,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10210,
											"end": 10612,
											"name": "tag",
											"source": 11,
											"value": "949"
										},
										{
											"begin": 10210,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10394,
											"end": 10415,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10415,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10451,
											"end": 10453,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10424,
											"end": 10454,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10490,
											"end": 10524,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 10485,
											"end": 10487,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10463,
											"end": 10525,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10569,
											"name": "PUSH",
											"source": 11,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10556,
											"end": 10558,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10541,
											"end": 10559,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10541,
											"end": 10559,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10534,
											"end": 10570,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10602,
											"end": 10605,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10384,
											"end": 10612,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10617,
											"end": 11035,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 10617,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10801,
											"end": 10822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10801,
											"end": 10822,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10801,
											"end": 10822,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10858,
											"end": 10860,
											"name": "PUSH",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10831,
											"end": 10861,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10897,
											"end": 10931,
											"name": "PUSH",
											"source": 11,
											"value": "706572666F726D616E63654665652063616E6E6F74206265206D6F7265207468"
										},
										{
											"begin": 10892,
											"end": 10894,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10870,
											"end": 10932,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10968,
											"end": 10992,
											"name": "PUSH",
											"source": 11,
											"value": "616E204D41585F504552464F524D414E43455F46454500000000000000000000"
										},
										{
											"begin": 10963,
											"end": 10965,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10948,
											"end": 10966,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10948,
											"end": 10966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10941,
											"end": 10993,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11028,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 11010,
											"end": 11029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11010,
											"end": 11029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10791,
											"end": 11035,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11040,
											"end": 11380,
											"name": "tag",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 11040,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11242,
											"end": 11244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11224,
											"end": 11245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11224,
											"end": 11245,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11281,
											"end": 11283,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11254,
											"end": 11284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11320,
											"end": 11338,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 11315,
											"end": 11317,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11300,
											"end": 11318,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11300,
											"end": 11318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11293,
											"end": 11339,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11356,
											"end": 11374,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11356,
											"end": 11374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11214,
											"end": 11380,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11385,
											"end": 11731,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 11385,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11587,
											"end": 11589,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11569,
											"end": 11590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11628,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 11606,
											"end": 11624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11606,
											"end": 11624,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11606,
											"end": 11624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11599,
											"end": 11629,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11665,
											"end": 11689,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F74206265207A65726F206164647265737300000000000000000000"
										},
										{
											"begin": 11660,
											"end": 11662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11645,
											"end": 11663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11645,
											"end": 11663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11638,
											"end": 11690,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11722,
											"end": 11724,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11559,
											"end": 11731,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11736,
											"end": 12138,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 11736,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11938,
											"end": 11940,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11920,
											"end": 11941,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11920,
											"end": 11941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11920,
											"end": 11941,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11977,
											"end": 11979,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11950,
											"end": 11980,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12016,
											"end": 12050,
											"name": "PUSH",
											"source": 11,
											"value": "4455524154494F4E5F464143544F525F4F5645524455452063616E6E6F742062"
										},
										{
											"begin": 12011,
											"end": 12013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11989,
											"end": 12051,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12087,
											"end": 12095,
											"name": "PUSH",
											"source": 11,
											"value": "65207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12082,
											"end": 12084,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12060,
											"end": 12096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12128,
											"end": 12131,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 12113,
											"end": 12132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12132,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11910,
											"end": 12138,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12143,
											"end": 12553,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 12143,
											"end": 12553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12327,
											"end": 12348,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12327,
											"end": 12348,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12327,
											"end": 12348,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12384,
											"end": 12386,
											"name": "PUSH",
											"source": 11,
											"value": "2E"
										},
										{
											"begin": 12364,
											"end": 12382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12364,
											"end": 12382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12364,
											"end": 12382,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12357,
											"end": 12387,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12457,
											"name": "PUSH",
											"source": 11,
											"value": "6F7665726475654665652063616E6E6F74206265206D6F7265207468616E204D"
										},
										{
											"begin": 12418,
											"end": 12420,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12403,
											"end": 12421,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12403,
											"end": 12421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12396,
											"end": 12458,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12494,
											"end": 12510,
											"name": "PUSH",
											"source": 11,
											"value": "41585F4F5645524455455F464545000000000000000000000000000000000000"
										},
										{
											"begin": 12489,
											"end": 12491,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12474,
											"end": 12492,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12511,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 12528,
											"end": 12547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12528,
											"end": 12547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12317,
											"end": 12553,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12558,
											"end": 12976,
											"name": "tag",
											"source": 11,
											"value": "765"
										},
										{
											"begin": 12558,
											"end": 12976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12762,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12763,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12742,
											"end": 12763,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12742,
											"end": 12763,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12801,
											"name": "PUSH",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12772,
											"end": 12802,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12838,
											"end": 12872,
											"name": "PUSH",
											"source": 11,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 12833,
											"end": 12835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12811,
											"end": 12873,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12909,
											"end": 12933,
											"name": "PUSH",
											"source": 11,
											"value": "68616E204D494E5F4445504F5349545F414D4F554E5400000000000000000000"
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12889,
											"end": 12907,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 12907,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12882,
											"end": 12934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12966,
											"end": 12969,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 12951,
											"end": 12970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12951,
											"end": 12970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12732,
											"end": 12976,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12981,
											"end": 13406,
											"name": "tag",
											"source": 11,
											"value": "686"
										},
										{
											"begin": 12981,
											"end": 13406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13183,
											"end": 13185,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13165,
											"end": 13186,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13165,
											"end": 13186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13165,
											"end": 13186,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13222,
											"end": 13224,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 13202,
											"end": 13220,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13202,
											"end": 13220,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13202,
											"end": 13220,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13261,
											"end": 13295,
											"name": "PUSH",
											"source": 11,
											"value": "4D41585F4C4F434B5F4455524154494F4E2063616E6E6F74206265206D6F7265"
										},
										{
											"begin": 13256,
											"end": 13258,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13241,
											"end": 13259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13241,
											"end": 13259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13234,
											"end": 13296,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13332,
											"end": 13363,
											"name": "PUSH",
											"source": 11,
											"value": "207468616E204D41585F4C4F434B5F4455524154494F4E5F4C494D4954000000"
										},
										{
											"begin": 13327,
											"end": 13329,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13312,
											"end": 13330,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13312,
											"end": 13330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13364,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13396,
											"end": 13399,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13381,
											"end": 13400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13381,
											"end": 13400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13155,
											"end": 13406,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13411,
											"end": 13767,
											"name": "tag",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 13411,
											"end": 13767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13613,
											"end": 13615,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13595,
											"end": 13616,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13595,
											"end": 13616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13595,
											"end": 13616,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13632,
											"end": 13650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13632,
											"end": 13650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13632,
											"end": 13650,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13625,
											"end": 13655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 13725,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13686,
											"end": 13688,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13671,
											"end": 13689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13671,
											"end": 13689,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13664,
											"end": 13726,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13758,
											"end": 13760,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13585,
											"end": 13767,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13772,
											"end": 14107,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 13772,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13974,
											"end": 13976,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13956,
											"end": 13977,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13956,
											"end": 13977,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13956,
											"end": 13977,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14013,
											"end": 14015,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13986,
											"end": 14016,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14052,
											"end": 14065,
											"name": "PUSH",
											"source": 11,
											"value": "61646D696E3A207775743F000000000000000000000000000000000000000000"
										},
										{
											"begin": 14047,
											"end": 14049,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14025,
											"end": 14066,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14098,
											"end": 14100,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 14083,
											"end": 14101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14101,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13946,
											"end": 14107,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14112,
											"end": 14532,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 14112,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14316,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14296,
											"end": 14317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14353,
											"end": 14355,
											"name": "PUSH",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 14333,
											"end": 14351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14333,
											"end": 14351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14333,
											"end": 14351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14326,
											"end": 14356,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14426,
											"name": "PUSH",
											"source": 11,
											"value": "576974686472617720616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 14387,
											"end": 14389,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14372,
											"end": 14390,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14372,
											"end": 14390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14365,
											"end": 14427,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "PUSH",
											"source": 11,
											"value": "7468616E204D494E5F57495448445241575F414D4F554E540000000000000000"
										},
										{
											"begin": 14458,
											"end": 14460,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14436,
											"end": 14490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14522,
											"end": 14525,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 14507,
											"end": 14526,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14507,
											"end": 14526,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14286,
											"end": 14532,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14537,
											"end": 14890,
											"name": "tag",
											"source": 11,
											"value": "954"
										},
										{
											"begin": 14537,
											"end": 14890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14739,
											"end": 14741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14721,
											"end": 14742,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14721,
											"end": 14742,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14721,
											"end": 14742,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14778,
											"end": 14780,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 14758,
											"end": 14776,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14758,
											"end": 14776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14758,
											"end": 14776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14751,
											"end": 14781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14817,
											"end": 14848,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14812,
											"end": 14814,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14797,
											"end": 14815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14797,
											"end": 14815,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14790,
											"end": 14849,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14881,
											"end": 14883,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 14866,
											"end": 14884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14866,
											"end": 14884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14711,
											"end": 14890,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14895,
											"end": 15320,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 14895,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15097,
											"end": 15099,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15079,
											"end": 15100,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15079,
											"end": 15100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15079,
											"end": 15100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 15116,
											"end": 15134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15116,
											"end": 15134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15116,
											"end": 15134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15109,
											"end": 15139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15175,
											"end": 15209,
											"name": "PUSH",
											"source": 11,
											"value": "7769746864726177466565506572696F642063616E6E6F74206265206D6F7265"
										},
										{
											"begin": 15170,
											"end": 15172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15148,
											"end": 15210,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15246,
											"end": 15277,
											"name": "PUSH",
											"source": 11,
											"value": "207468616E204D41585F57495448445241575F4645455F504552494F44000000"
										},
										{
											"begin": 15241,
											"end": 15243,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15226,
											"end": 15244,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15226,
											"end": 15244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15219,
											"end": 15278,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15310,
											"end": 15313,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15295,
											"end": 15314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15295,
											"end": 15314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15320,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 15325,
											"end": 15731,
											"name": "tag",
											"source": 11,
											"value": "865"
										},
										{
											"begin": 15325,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15527,
											"end": 15529,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15509,
											"end": 15530,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15509,
											"end": 15530,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15509,
											"end": 15530,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15566,
											"end": 15568,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 15546,
											"end": 15564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15546,
											"end": 15564,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15546,
											"end": 15564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15539,
											"end": 15569,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15605,
											"end": 15639,
											"name": "PUSH",
											"source": 11,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 15600,
											"end": 15602,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15585,
											"end": 15603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15585,
											"end": 15603,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15578,
											"end": 15640,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15676,
											"end": 15688,
											"name": "PUSH",
											"source": 11,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 15671,
											"end": 15673,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15656,
											"end": 15674,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15656,
											"end": 15674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15649,
											"end": 15689,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15721,
											"end": 15724,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15706,
											"end": 15725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15706,
											"end": 15725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15499,
											"end": 15731,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 15736,
											"end": 16148,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 15736,
											"end": 16148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15920,
											"end": 15941,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15920,
											"end": 15941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15920,
											"end": 15941,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15977,
											"end": 15979,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 15957,
											"end": 15975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15957,
											"end": 15975,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15957,
											"end": 15975,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15950,
											"end": 15980,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16016,
											"end": 16050,
											"name": "PUSH",
											"source": 11,
											"value": "77697468647261774665652063616E6E6F74206265206D6F7265207468616E20"
										},
										{
											"begin": 16011,
											"end": 16013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15996,
											"end": 16014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15996,
											"end": 16014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15989,
											"end": 16051,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16087,
											"end": 16105,
											"name": "PUSH",
											"source": 11,
											"value": "4D41585F57495448445241575F46454500000000000000000000000000000000"
										},
										{
											"begin": 16082,
											"end": 16084,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16067,
											"end": 16085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16067,
											"end": 16085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16060,
											"end": 16106,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16138,
											"end": 16141,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16123,
											"end": 16142,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16123,
											"end": 16142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15910,
											"end": 16148,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16153,
											"end": 16552,
											"name": "tag",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 16153,
											"end": 16552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16355,
											"end": 16357,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16337,
											"end": 16358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16337,
											"end": 16358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16337,
											"end": 16358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16394,
											"end": 16396,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "PUSH",
											"source": 11,
											"value": "554E4C4F434B5F465245455F4455524154494F4E2063616E6E6F74206265207A"
										},
										{
											"begin": 16428,
											"end": 16430,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16413,
											"end": 16431,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16413,
											"end": 16431,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16406,
											"end": 16468,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16504,
											"end": 16509,
											"name": "PUSH",
											"source": 11,
											"value": "65726F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16499,
											"end": 16501,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16477,
											"end": 16510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16542,
											"end": 16545,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16527,
											"end": 16546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16527,
											"end": 16546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16327,
											"end": 16552,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16557,
											"end": 16898,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 16557,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16741,
											"end": 16762,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16741,
											"end": 16762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16741,
											"end": 16762,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16798,
											"end": 16800,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 16778,
											"end": 16796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16778,
											"end": 16796,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16778,
											"end": 16796,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16771,
											"end": 16801,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16837,
											"end": 16856,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F7420756E6C6F636B20796574000000000000000000000000000000"
										},
										{
											"begin": 16832,
											"end": 16834,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16810,
											"end": 16857,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16889,
											"end": 16891,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16874,
											"end": 16892,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16874,
											"end": 16892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16731,
											"end": 16898,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16903,
											"end": 17080,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 16903,
											"end": 17080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17049,
											"end": 17074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17049,
											"end": 17074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17049,
											"end": 17074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17037,
											"end": 17039,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17022,
											"end": 17040,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17022,
											"end": 17040,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17004,
											"end": 17080,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17085,
											"end": 17382,
											"name": "tag",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 17085,
											"end": 17382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17332,
											"end": 17374,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17320,
											"end": 17375,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17317,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17293,
											"end": 17376,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17247,
											"end": 17249,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17232,
											"end": 17250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17232,
											"end": 17250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17214,
											"end": 17382,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17387,
											"end": 17643,
											"name": "tag",
											"source": 11,
											"value": "875"
										},
										{
											"begin": 17387,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17594,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17625,
											"end": 17627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17603,
											"end": 17637,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17557,
											"end": 17559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17542,
											"end": 17560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17542,
											"end": 17560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17524,
											"end": 17643,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17901,
											"end": 18292,
											"name": "tag",
											"source": 11,
											"value": "826"
										},
										{
											"begin": 17901,
											"end": 18292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18132,
											"end": 18157,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 18132,
											"end": 18157,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18132,
											"end": 18157,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18188,
											"end": 18190,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18191,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18173,
											"end": 18191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18166,
											"end": 18200,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18166,
											"end": 18200,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18166,
											"end": 18200,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18166,
											"end": 18200,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18231,
											"end": 18233,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18216,
											"end": 18234,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18216,
											"end": 18234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18209,
											"end": 18243,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18274,
											"end": 18276,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18259,
											"end": 18277,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18259,
											"end": 18277,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18252,
											"end": 18286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18119,
											"end": 18122,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 18104,
											"end": 18123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18104,
											"end": 18123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18086,
											"end": 18292,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 18297,
											"end": 19058,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 18297,
											"end": 19058,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18662,
											"end": 18687,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 18662,
											"end": 18687,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 18662,
											"end": 18687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18718,
											"end": 18720,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18703,
											"end": 18721,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 18703,
											"end": 18721,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18730,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18730,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18761,
											"end": 18763,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18746,
											"end": 18764,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 18746,
											"end": 18764,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18739,
											"end": 18773,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 18739,
											"end": 18773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18739,
											"end": 18773,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 18739,
											"end": 18773,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18804,
											"end": 18806,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18789,
											"end": 18807,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 18789,
											"end": 18807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18782,
											"end": 18816,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 18782,
											"end": 18816,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18782,
											"end": 18816,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 18782,
											"end": 18816,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18847,
											"end": 18850,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 18832,
											"end": 18851,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 18832,
											"end": 18851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18825,
											"end": 18860,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18825,
											"end": 18860,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18825,
											"end": 18860,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18825,
											"end": 18860,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18891,
											"end": 18894,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 18876,
											"end": 18895,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18876,
											"end": 18895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18869,
											"end": 18904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18935,
											"end": 18938,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18913,
											"end": 18948,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18992,
											"end": 19006,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18985,
											"end": 19007,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18979,
											"end": 18982,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 18964,
											"end": 18983,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18964,
											"end": 18983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18957,
											"end": 19008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19039,
											"end": 19042,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 19024,
											"end": 19043,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19024,
											"end": 19043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19017,
											"end": 19052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18649,
											"end": 18652,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 18634,
											"end": 18653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18634,
											"end": 18653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19063,
											"end": 19191,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 19063,
											"end": 19191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19063,
											"end": 19191,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19134,
											"end": 19135,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19130,
											"end": 19136,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 19127,
											"end": 19128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19124,
											"end": 19137,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 19121,
											"end": 19123,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19121,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1046"
										},
										{
											"begin": 19121,
											"end": 19123,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19140,
											"end": 19158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1046"
										},
										{
											"begin": 19140,
											"end": 19158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1047"
										},
										{
											"begin": 19140,
											"end": 19158,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19140,
											"end": 19158,
											"name": "tag",
											"source": 11,
											"value": "1046"
										},
										{
											"begin": 19140,
											"end": 19158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19176,
											"end": 19185,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19176,
											"end": 19185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19111,
											"end": 19191,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19196,
											"end": 19470,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 19196,
											"end": 19470,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19196,
											"end": 19470,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19262,
											"end": 19263,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19252,
											"end": 19254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1049"
										},
										{
											"begin": 19252,
											"end": 19254,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19297,
											"end": 19374,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19294,
											"end": 19295,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19287,
											"end": 19375,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19398,
											"end": 19402,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 19395,
											"end": 19396,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19388,
											"end": 19403,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19426,
											"end": 19430,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 19423,
											"end": 19424,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19416,
											"end": 19431,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 19252,
											"end": 19254,
											"name": "tag",
											"source": 11,
											"value": "1049"
										},
										{
											"begin": 19252,
											"end": 19254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19455,
											"end": 19464,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 19455,
											"end": 19464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19242,
											"end": 19470,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19475,
											"end": 19703,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 19475,
											"end": 19703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19475,
											"end": 19703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19641,
											"end": 19642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19573,
											"end": 19639,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19569,
											"end": 19643,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 19566,
											"end": 19567,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19563,
											"end": 19644,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 19558,
											"end": 19559,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19551,
											"end": 19560,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19544,
											"end": 19561,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19540,
											"end": 19645,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1052"
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19648,
											"end": 19666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1052"
										},
										{
											"begin": 19648,
											"end": 19666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1047"
										},
										{
											"begin": 19648,
											"end": 19666,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19648,
											"end": 19666,
											"name": "tag",
											"source": 11,
											"value": "1052"
										},
										{
											"begin": 19648,
											"end": 19666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 19688,
											"end": 19697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19527,
											"end": 19703,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19708,
											"end": 19833,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 19708,
											"end": 19833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19708,
											"end": 19833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19776,
											"end": 19777,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19773,
											"end": 19774,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19770,
											"end": 19778,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 19767,
											"end": 19769,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19767,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1055"
										},
										{
											"begin": 19767,
											"end": 19769,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1055"
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1047"
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "tag",
											"source": 11,
											"value": "1055"
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19818,
											"end": 19827,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19818,
											"end": 19827,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19757,
											"end": 19833,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19838,
											"end": 20096,
											"name": "tag",
											"source": 11,
											"value": "997"
										},
										{
											"begin": 19838,
											"end": 20096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19910,
											"end": 19911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "tag",
											"source": 11,
											"value": "1057"
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19934,
											"end": 19940,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19931,
											"end": 19932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19928,
											"end": 19941,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1059"
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20010,
											"end": 20021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20010,
											"end": 20021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20010,
											"end": 20021,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20004,
											"end": 20022,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19991,
											"end": 20002,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19991,
											"end": 20002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19991,
											"end": 20002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19984,
											"end": 20023,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19956,
											"end": 19958,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19949,
											"end": 19959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1057"
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "tag",
											"source": 11,
											"value": "1059"
										},
										{
											"begin": 19920,
											"end": 20033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20051,
											"end": 20057,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20048,
											"end": 20049,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20045,
											"end": 20058,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 20042,
											"end": 20044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20042,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 20042,
											"end": 20044,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20086,
											"end": 20087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20068,
											"end": 20084,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20068,
											"end": 20084,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20061,
											"end": 20088,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19891,
											"end": 20096,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 20101,
											"end": 20285,
											"name": "tag",
											"source": 11,
											"value": "1047"
										},
										{
											"begin": 20101,
											"end": 20285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20153,
											"end": 20230,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20150,
											"end": 20151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20143,
											"end": 20231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20250,
											"end": 20254,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 20247,
											"end": 20248,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20274,
											"end": 20278,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 20271,
											"end": 20272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20264,
											"end": 20279,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 20290,
											"end": 20446,
											"name": "tag",
											"source": 11,
											"value": "974"
										},
										{
											"begin": 20290,
											"end": 20446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20378,
											"end": 20420,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20371,
											"end": 20376,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20367,
											"end": 20421,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 20360,
											"end": 20365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20357,
											"end": 20422,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 20347,
											"end": 20349,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 20347,
											"end": 20349,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20436,
											"end": 20437,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20433,
											"end": 20434,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20426,
											"end": 20438,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 20451,
											"end": 20571,
											"name": "tag",
											"source": 11,
											"value": "979"
										},
										{
											"begin": 20451,
											"end": 20571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20539,
											"end": 20544,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20532,
											"end": 20545,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20525,
											"end": 20546,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20518,
											"end": 20523,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20515,
											"end": 20547,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 20505,
											"end": 20507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 20505,
											"end": 20507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20561,
											"end": 20562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20558,
											"end": 20559,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20551,
											"end": 20563,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BOOST_WEIGHT()": "bc75f4b8",
							"BOOST_WEIGHT_LIMIT()": "fd253b64",
							"DURATION_FACTOR()": "e464c623",
							"DURATION_FACTOR_OVERDUE()": "acaf88cd",
							"MAX_LOCK_DURATION()": "4f1bfc9e",
							"MAX_LOCK_DURATION_LIMIT()": "01e81326",
							"MAX_OVERDUE_FEE()": "948a03f2",
							"MAX_PERFORMANCE_FEE()": "bdca9165",
							"MAX_WITHDRAW_FEE()": "d4b0de2f",
							"MAX_WITHDRAW_FEE_PERIOD()": "2cfc5f01",
							"MIN_DEPOSIT_AMOUNT()": "1ea30fef",
							"MIN_LOCK_DURATION()": "78b4330f",
							"MIN_WITHDRAW_AMOUNT()": "b6857844",
							"PRECISION_FACTOR()": "ccd34cd5",
							"PRECISION_FACTOR_SHARE()": "731ff24a",
							"UNLOCK_FREE_DURATION()": "aaada5da",
							"VShdw()": "61fa6368",
							"admin()": "f851a440",
							"available()": "48a0d754",
							"balanceOf()": "722713f7",
							"boostContract()": "dfcedeee",
							"calculateOverdueFee(address)": "95dc14e1",
							"calculatePerformanceFee(address)": "c6ed51be",
							"calculateTotalpendingShdwRewards()": "cc9cfba1",
							"calculateWithdrawFee(address,uint256)": "29a5cfd6",
							"deposit(uint256,uint256)": "e2bbb158",
							"freeOverdueFeeUsers(address)": "668679ba",
							"freePerformanceFeeUsers(address)": "3fec4e32",
							"freeWithdrawFeeUsers(address)": "87d4bda9",
							"getPricePerFullShare()": "77c7b8fc",
							"inCaseTokensGetStuck(address)": "def68a9c",
							"init(address)": "19ab453c",
							"operator()": "570ca735",
							"overdueFee()": "a5834e06",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"performanceFee()": "87788782",
							"performanceFeeContract()": "3eb78874",
							"renounceOwnership()": "715018a6",
							"setAdmin(address)": "704b6c02",
							"setBoostContract(address)": "def7869d",
							"setBoostWeight(uint256)": "93c99e6a",
							"setDurationFactor(uint256)": "a3639b39",
							"setDurationFactorOverdue(uint256)": "35981921",
							"setFreePerformanceFeeUser(address,bool)": "423b93ed",
							"setMaxLockDuration(uint256)": "f786b958",
							"setOperator(address)": "b3ab15fb",
							"setOverdueFee(uint256)": "0c59696b",
							"setOverdueFeeUser(address,bool)": "4e4de1e9",
							"setPerformanceFee(uint256)": "70897b23",
							"setPerformanceFeeContract(uint256)": "bb9f408d",
							"setTreasury(address)": "f0f44260",
							"setUnlockFreeDuration(uint256)": "c54d349c",
							"setVShdwContract(address)": "62122f5a",
							"setWithdrawFee(uint256)": "b6ac642a",
							"setWithdrawFeeContract(uint256)": "14ff3039",
							"setWithdrawFeePeriod(uint256)": "1efac1b8",
							"setWithdrawFeeUser(address,bool)": "beba0fa0",
							"shadowchefV2()": "bc3d652a",
							"shdwPoolPID()": "51fb26df",
							"token()": "fc0c546a",
							"totalBoostDebt()": "e73008bc",
							"totalLockedAmount()": "05a9f274",
							"totalShares()": "3a98ef39",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"unlock(address)": "2f6c493c",
							"unpause()": "3f4ba83a",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawAll()": "853828b6",
							"withdrawByAmount(uint256)": "5521e9bf",
							"withdrawFee()": "e941fa78",
							"withdrawFeeContract()": "e4b37ef5",
							"withdrawFeePeriod()": "df10b4e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IShadowChefV2\",\"name\":\"_shadowchefV2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"}],\"name\":\"FreeFeeUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Init\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"boostContract\",\"type\":\"address\"}],\"name\":\"NewBoostContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"boostWeight\",\"type\":\"uint256\"}],\"name\":\"NewBoostWeight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"durationFactor\",\"type\":\"uint256\"}],\"name\":\"NewDurationFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"durationFactorOverdue\",\"type\":\"uint256\"}],\"name\":\"NewDurationFactorOverdue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLockDuration\",\"type\":\"uint256\"}],\"name\":\"NewMaxLockDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"NewOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"overdueFee\",\"type\":\"uint256\"}],\"name\":\"NewOverdueFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performanceFee\",\"type\":\"uint256\"}],\"name\":\"NewPerformanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performanceFeeContract\",\"type\":\"uint256\"}],\"name\":\"NewPerformanceFeeContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"NewTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockFreeDuration\",\"type\":\"uint256\"}],\"name\":\"NewUnlockFreeDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"VShdw\",\"type\":\"address\"}],\"name\":\"NewVShdwContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawFee\",\"type\":\"uint256\"}],\"name\":\"NewWithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawFeeContract\",\"type\":\"uint256\"}],\"name\":\"NewWithdrawFeeContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawFeePeriod\",\"type\":\"uint256\"}],\"name\":\"NewWithdrawFeePeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"Unlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BOOST_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOOST_WEIGHT_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DURATION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DURATION_FACTOR_OVERDUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LOCK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LOCK_DURATION_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OVERDUE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERFORMANCE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_DEPOSIT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LOCK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WITHDRAW_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR_SHARE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNLOCK_FREE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VShdw\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateOverdueFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculatePerformanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateTotalpendingShdwRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"calculateWithdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockDuration\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freeOverdueFeeUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freePerformanceFeeUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freeWithdrawFeeUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"dummyToken\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"overdueFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceFeeContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_boostContract\",\"type\":\"address\"}],\"name\":\"setBoostContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boostWeight\",\"type\":\"uint256\"}],\"name\":\"setBoostWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationFactor\",\"type\":\"uint256\"}],\"name\":\"setDurationFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationFactorOverdue\",\"type\":\"uint256\"}],\"name\":\"setDurationFactorOverdue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_free\",\"type\":\"bool\"}],\"name\":\"setFreePerformanceFeeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxLockDuration\",\"type\":\"uint256\"}],\"name\":\"setMaxLockDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_overdueFee\",\"type\":\"uint256\"}],\"name\":\"setOverdueFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_free\",\"type\":\"bool\"}],\"name\":\"setOverdueFeeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_performanceFee\",\"type\":\"uint256\"}],\"name\":\"setPerformanceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_performanceFeeContract\",\"type\":\"uint256\"}],\"name\":\"setPerformanceFeeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockFreeDuration\",\"type\":\"uint256\"}],\"name\":\"setUnlockFreeDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_VShdw\",\"type\":\"address\"}],\"name\":\"setVShdwContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFeeContract\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFeeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFeePeriod\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFeePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_free\",\"type\":\"bool\"}],\"name\":\"setWithdrawFeeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shadowchefV2\",\"outputs\":[{\"internalType\":\"contract IShadowChefV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwPoolPID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBoostDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shdwAtLastUserAction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUserActionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBoostedShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawByAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"available()\":{\"details\":\"The contract puts 100% of the tokens to work.\"},\"balanceOf()\":{\"details\":\"It includes tokens held by the contract and the boost debt amount.\"},\"calculateOverdueFee(address)\":{\"params\":{\"_user\":\": User address\"},\"returns\":{\"_0\":\"Returns Overdue fee.\"}},\"calculatePerformanceFee(address)\":{\"params\":{\"_user\":\": User address\"},\"returns\":{\"_0\":\"Returns Performance fee.\"}},\"calculateTotalpendingShdwRewards()\":{\"returns\":{\"_0\":\"Returns total pending Shdw rewards\"}},\"calculateWithdrawFee(address,uint256)\":{\"params\":{\"_shares\":\": Number of shares to withdraw\",\"_user\":\": User address\"},\"returns\":{\"_0\":\"Returns Withdraw fee.\"}},\"constructor\":{\"params\":{\"_admin\":\": address of the admin\",\"_operator\":\": address of operator\",\"_pid\":\": Shdw pool ID in ShadowChefV2\",\"_shadowchefV2\":\": ShadowChefV2 contract\",\"_token\":\": Shdw token contract\",\"_treasury\":\": address of the treasury (collects fees)\"}},\"deposit(uint256,uint256)\":{\"details\":\"Only possible when contract not paused.\",\"params\":{\"_amount\":\": number of tokens to deposit (in Shdw)\",\"_lockDuration\":\": Token lock duration\"}},\"init(address)\":{\"params\":{\"dummyToken\":\"The address of the token to be deposited into MCV2.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only possible when contract not paused.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setBoostContract(address)\":{\"details\":\"Callable by the contract admin.\"},\"setBoostWeight(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setDurationFactor(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setDurationFactorOverdue(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setFreePerformanceFeeUser(address,bool)\":{\"details\":\"Only callable by the contract admin.\",\"params\":{\"_free\":\": true:free false:not free\",\"_user\":\": User address\"}},\"setMaxLockDuration(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setOperator(address)\":{\"details\":\"Callable by the contract owner.\"},\"setOverdueFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setOverdueFeeUser(address,bool)\":{\"details\":\"Only callable by the contract admin.\",\"params\":{\"_free\":\": true:free false:not free\",\"_user\":\": User address\"}},\"setPerformanceFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setPerformanceFeeContract(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setTreasury(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setUnlockFreeDuration(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setVShdwContract(address)\":{\"details\":\"Callable by the contract admin.\"},\"setWithdrawFee(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setWithdrawFeeContract(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setWithdrawFeePeriod(uint256)\":{\"details\":\"Only callable by the contract admin.\"},\"setWithdrawFeeUser(address,bool)\":{\"details\":\"Only callable by the contract admin.\",\"params\":{\"_free\":\": true:free false:not free\",\"_user\":\": User address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlock(address)\":{\"details\":\"Only possible when contract not paused.\",\"params\":{\"_user\":\": User address\"}},\"unpause()\":{\"details\":\"Only possible when contract is paused.\"},\"withdraw(uint256)\":{\"params\":{\"_shares\":\": Number of shares to withdraw\"}},\"withdrawByAmount(uint256)\":{\"params\":{\"_amount\":\": Number of amount to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"available()\":{\"notice\":\"Current pool available balance\"},\"balanceOf()\":{\"notice\":\"Calculates the total underlying tokens\"},\"calculateOverdueFee(address)\":{\"notice\":\"Calculate overdue fee.\"},\"calculatePerformanceFee(address)\":{\"notice\":\"Calculate Performance fee.\"},\"calculateTotalpendingShdwRewards()\":{\"notice\":\"Calculates the total pending rewards that can be harvested\"},\"calculateWithdrawFee(address,uint256)\":{\"notice\":\"Calculate withdraw fee.\"},\"constructor\":{\"notice\":\"Constructor\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposit funds into the Shdw Pool.\"},\"inCaseTokensGetStuck(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the Shdw Pool\"},\"init(address)\":{\"notice\":\"Deposits a dummy token to `MASTER_CHEF` MCV2. It will transfer all the `dummyToken` in the tx sender address.\"},\"pause()\":{\"notice\":\"Trigger stopped state\"},\"setAdmin(address)\":{\"notice\":\"Set admin address\"},\"setBoostContract(address)\":{\"notice\":\"Set Boost Contract address\"},\"setBoostWeight(uint256)\":{\"notice\":\"Set BOOST_WEIGHT\"},\"setDurationFactor(uint256)\":{\"notice\":\"Set DURATION_FACTOR\"},\"setDurationFactorOverdue(uint256)\":{\"notice\":\"Set DURATION_FACTOR_OVERDUE\"},\"setFreePerformanceFeeUser(address,bool)\":{\"notice\":\"Set free performance fee address\"},\"setMaxLockDuration(uint256)\":{\"notice\":\"Set MAX_LOCK_DURATION\"},\"setOperator(address)\":{\"notice\":\"Set operator address\"},\"setOverdueFee(uint256)\":{\"notice\":\"Set overdue fee\"},\"setOverdueFeeUser(address,bool)\":{\"notice\":\"Set free overdue fee address\"},\"setPerformanceFee(uint256)\":{\"notice\":\"Set performance fee\"},\"setPerformanceFeeContract(uint256)\":{\"notice\":\"Set performance fee for contract\"},\"setTreasury(address)\":{\"notice\":\"Set treasury address\"},\"setUnlockFreeDuration(uint256)\":{\"notice\":\"Set UNLOCK_FREE_DURATION\"},\"setVShdwContract(address)\":{\"notice\":\"Set VShdw Contract address\"},\"setWithdrawFee(uint256)\":{\"notice\":\"Set withdraw fee\"},\"setWithdrawFeeContract(uint256)\":{\"notice\":\"Set withdraw fee for contract\"},\"setWithdrawFeePeriod(uint256)\":{\"notice\":\"Set withdraw fee period\"},\"setWithdrawFeeUser(address,bool)\":{\"notice\":\"Set free withdraw fee address\"},\"unlock(address)\":{\"notice\":\"Unlock user Shdw funds.\"},\"unpause()\":{\"notice\":\"Return to normal state\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw funds from the Shdw Pool.\"},\"withdrawAll()\":{\"notice\":\"Withdraw all funds for a user\"},\"withdrawByAmount(uint256)\":{\"notice\":\"Withdraw funds from the Shdw Pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ShadowPool.sol\":\"ShadowPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ShadowPool.sol\":{\"keccak256\":\"0x612235ace8b4337cf8b0754739e9d81c3d0a6b5398a50495bbb5138dde79e8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40ace0a9aa70b4847529b4ea8ad93ccaf85a74a06ceeb57e9ae56e7605ef7588\",\"dweb:/ipfs/QmbmL8xqsG63kSrakQE6sN7BfL7rt1AAbRa5om4aoieudW\"]},\"contracts/interfaces/IBoostContract.sol\":{\"keccak256\":\"0xf658b4b89261acc9db882be140d3448ab09a52197c58ad167c2b8f8bdd4800e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfeaffe6e8075707340f568009893c998a4e92f80079e70fe88b49feae64ba27\",\"dweb:/ipfs/QmaaEhjRVza8Vgi1J61r1zR2aVCcbrhmtmEfRyhQjqVjVN\"]},\"contracts/interfaces/IShadowChefV2.sol\":{\"keccak256\":\"0xec64a630131d5df33db1930aadc951ed5811f8fee6af63ff5ff6a1b18edbf342\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c6afcb7c73fecaa1ca06d0c73794ab82a66994db2a104bc4fd05cc4007a32f\",\"dweb:/ipfs/QmUfA55zk3aVi6NUs2JdtAEDLeyFzKLGrhZYUTJSrkWqL2\"]},\"contracts/interfaces/IVShdw.sol\":{\"keccak256\":\"0xb9abcbaf9bc9683eec775faca3c7dbac37552e2ffab20012d3ff9da46c0e7f95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://541afb5764a1bba04242e912db9fda14d41029a5773ee730cd8c497520fe5c7a\",\"dweb:/ipfs/QmVh7ucjL77oF4XS4k3qpRnRuBX5ZqSBDBadGfpimuoe76\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 975,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "boostContract",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 977,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "VShdw",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 982,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(UserInfo)967_storage)"
							},
							{
								"astId": 986,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "freePerformanceFeeUsers",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 990,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "freeWithdrawFeeUsers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 994,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "freeOverdueFeeUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 996,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "totalShares",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 998,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "admin",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1000,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "treasury",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "operator",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1004,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "shdwPoolPID",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1006,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "totalBoostDebt",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1008,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "totalLockedAmount",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1048,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "UNLOCK_FREE_DURATION",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1051,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "MAX_LOCK_DURATION",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1054,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "DURATION_FACTOR",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "DURATION_FACTOR_OVERDUE",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 1062,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "BOOST_WEIGHT",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 1065,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "performanceFee",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 1068,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "performanceFeeContract",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 1071,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "withdrawFee",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 1074,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "withdrawFeeContract",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 1079,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "overdueFee",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 1082,
								"contract": "contracts/ShadowPool.sol:ShadowPool",
								"label": "withdrawFeePeriod",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)967_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ShadowPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)967_storage"
							},
							"t_struct(UserInfo)967_storage": {
								"encoding": "inplace",
								"label": "struct ShadowPool.UserInfo",
								"members": [
									{
										"astId": 950,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "shares",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 952,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "lastDepositedTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 954,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "shdwAtLastUserAction",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 956,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "lastUserActionTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 958,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "lockStartTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 960,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "lockEndTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 962,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "userBoostedShare",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 964,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "locked",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 966,
										"contract": "contracts/ShadowPool.sol:ShadowPool",
										"label": "lockedAmount",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"available()": {
								"notice": "Current pool available balance"
							},
							"balanceOf()": {
								"notice": "Calculates the total underlying tokens"
							},
							"calculateOverdueFee(address)": {
								"notice": "Calculate overdue fee."
							},
							"calculatePerformanceFee(address)": {
								"notice": "Calculate Performance fee."
							},
							"calculateTotalpendingShdwRewards()": {
								"notice": "Calculates the total pending rewards that can be harvested"
							},
							"calculateWithdrawFee(address,uint256)": {
								"notice": "Calculate withdraw fee."
							},
							"constructor": {
								"notice": "Constructor"
							},
							"deposit(uint256,uint256)": {
								"notice": "Deposit funds into the Shdw Pool."
							},
							"inCaseTokensGetStuck(address)": {
								"notice": "Withdraw unexpected tokens sent to the Shdw Pool"
							},
							"init(address)": {
								"notice": "Deposits a dummy token to `MASTER_CHEF` MCV2. It will transfer all the `dummyToken` in the tx sender address."
							},
							"pause()": {
								"notice": "Trigger stopped state"
							},
							"setAdmin(address)": {
								"notice": "Set admin address"
							},
							"setBoostContract(address)": {
								"notice": "Set Boost Contract address"
							},
							"setBoostWeight(uint256)": {
								"notice": "Set BOOST_WEIGHT"
							},
							"setDurationFactor(uint256)": {
								"notice": "Set DURATION_FACTOR"
							},
							"setDurationFactorOverdue(uint256)": {
								"notice": "Set DURATION_FACTOR_OVERDUE"
							},
							"setFreePerformanceFeeUser(address,bool)": {
								"notice": "Set free performance fee address"
							},
							"setMaxLockDuration(uint256)": {
								"notice": "Set MAX_LOCK_DURATION"
							},
							"setOperator(address)": {
								"notice": "Set operator address"
							},
							"setOverdueFee(uint256)": {
								"notice": "Set overdue fee"
							},
							"setOverdueFeeUser(address,bool)": {
								"notice": "Set free overdue fee address"
							},
							"setPerformanceFee(uint256)": {
								"notice": "Set performance fee"
							},
							"setPerformanceFeeContract(uint256)": {
								"notice": "Set performance fee for contract"
							},
							"setTreasury(address)": {
								"notice": "Set treasury address"
							},
							"setUnlockFreeDuration(uint256)": {
								"notice": "Set UNLOCK_FREE_DURATION"
							},
							"setVShdwContract(address)": {
								"notice": "Set VShdw Contract address"
							},
							"setWithdrawFee(uint256)": {
								"notice": "Set withdraw fee"
							},
							"setWithdrawFeeContract(uint256)": {
								"notice": "Set withdraw fee for contract"
							},
							"setWithdrawFeePeriod(uint256)": {
								"notice": "Set withdraw fee period"
							},
							"setWithdrawFeeUser(address,bool)": {
								"notice": "Set free withdraw fee address"
							},
							"unlock(address)": {
								"notice": "Unlock user Shdw funds."
							},
							"unpause()": {
								"notice": "Return to normal state"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw funds from the Shdw Pool."
							},
							"withdrawAll()": {
								"notice": "Withdraw all funds for a user"
							},
							"withdrawByAmount(uint256)": {
								"notice": "Withdraw funds from the Shdw Pool."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IBoostContract.sol": {
				"IBoostContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_lockedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockedDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalLockedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxLockDuration",
									"type": "uint256"
								}
							],
							"name": "onShdwPoolUpdate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onShdwPoolUpdate(address,uint256,uint256,uint256,uint256)": "87356ef7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockedDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalLockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxLockDuration\",\"type\":\"uint256\"}],\"name\":\"onShdwPoolUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBoostContract.sol\":\"IBoostContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBoostContract.sol\":{\"keccak256\":\"0xf658b4b89261acc9db882be140d3448ab09a52197c58ad167c2b8f8bdd4800e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfeaffe6e8075707340f568009893c998a4e92f80079e70fe88b49feae64ba27\",\"dweb:/ipfs/QmaaEhjRVza8Vgi1J61r1zR2aVCcbrhmtmEfRyhQjqVjVN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IShadowChefV2.sol": {
				"IShadowChefV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingShdw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"pendingShdw(uint256,address)": "c799b59d",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingShdw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IShadowChefV2.sol\":\"IShadowChefV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IShadowChefV2.sol\":{\"keccak256\":\"0xec64a630131d5df33db1930aadc951ed5811f8fee6af63ff5ff6a1b18edbf342\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c6afcb7c73fecaa1ca06d0c73794ab82a66994db2a104bc4fd05cc4007a32f\",\"dweb:/ipfs/QmUfA55zk3aVi6NUs2JdtAEDLeyFzKLGrhZYUTJSrkWqL2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IVShdw.sol": {
				"IVShdw": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockDuration",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address,uint256,uint256)": "0efe6a8b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockDuration\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVShdw.sol\":\"IVShdw\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IVShdw.sol\":{\"keccak256\":\"0xb9abcbaf9bc9683eec775faca3c7dbac37552e2ffab20012d3ff9da46c0e7f95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://541afb5764a1bba04242e912db9fda14d41029a5773ee730cd8c497520fe5c7a\",\"dweb:/ipfs/QmVh7ucjL77oF4XS4k3qpRnRuBX5ZqSBDBadGfpimuoe76\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							932
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 933,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 932,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [
								932
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								932
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0"
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							932
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 933,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 932,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"contractDependencies": [
								932
							],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								932
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 123,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 128,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1"
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							298
						]
					},
					"id": 299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 232,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 241,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 298,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 298,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 298,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 298,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 298,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 298,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 299,
							"src": "202:2564:2"
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							334
						]
					},
					"id": 335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 334,
							"linearizedBaseContracts": [
								334
							],
							"name": "IERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1494:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1519:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1542:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1568:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1585:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1604:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:3"
									},
									"scope": 334,
									"src": "1446:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1950:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1988:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:3"
									},
									"scope": 334,
									"src": "1934:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "2240:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 330,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:3"
									},
									"scope": 334,
									"src": "2189:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 335,
							"src": "620:1631:3"
						}
					],
					"src": "114:2138:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							910
						],
						"IERC20": [
							298
						],
						"IERC20Permit": [
							334
						],
						"SafeERC20": [
							615
						]
					},
					"id": 616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 337,
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 299,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 338,
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 335,
							"src": "164:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 339,
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 911,
							"src": "211:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 340,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 615,
							"linearizedBaseContracts": [
								615
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 343,
									"libraryName": {
										"id": 341,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 910,
										"src": "737:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:4",
									"typeName": {
										"id": 342,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "865:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 354,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "895:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 357,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$298",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 265,
																		"src": "925:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 360,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "950:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 361,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "954:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 355,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 353,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "875:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "875:86:4"
											}
										]
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 344,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "794:6:4"
													},
													"referencedDeclaration": 298,
													"src": "794:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "816:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "836:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:4"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:4"
									},
									"scope": 615,
									"src": "763:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1102:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "1132:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 382,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "1162:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$298",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 297,
																		"src": "1162:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 385,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "1191:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "1197:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 387,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "1201:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 380,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 378,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "1112:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:4"
											}
										]
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1009:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 367,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "1009:6:4"
													},
													"referencedDeclaration": 298,
													"src": "1009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1031:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1053:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1073:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:4"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:4"
									},
									"scope": 615,
									"src": "974:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "1581:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 404,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "1830:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 412,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$615",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$615",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 411,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 410,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 414,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 398,
																					"src": "1877:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 408,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "1846:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$298",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 275,
																				"src": "1846:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 418,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2001:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 427,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "2031:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$298",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 285,
																		"src": "2031:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 430,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2055:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "2064:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 425,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 423,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "1981:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1505:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 394,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "1505:6:4"
													},
													"referencedDeclaration": 298,
													"src": "1505:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1527:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1552:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:4"
									},
									"scope": 615,
									"src": "1475:603:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "2200:194:4",
										"statements": [
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "2210:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 452,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$615",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$615",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 450,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 454,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "2264:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "2233:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$298",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 275,
															"src": "2233:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 456,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2275:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2310:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 463,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "2340:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$298",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 285,
																		"src": "2340:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 466,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "2364:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 467,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "2373:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 461,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 459,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "2290:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:4"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2124:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 438,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 437,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "2124:6:4"
													},
													"referencedDeclaration": 298,
													"src": "2124:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2146:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:4"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:4"
									},
									"scope": 615,
									"src": "2084:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2516:370:4",
										"statements": [
											{
												"id": 518,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:4",
												"statements": [
													{
														"assignments": [
															483
														],
														"declarations": [
															{
																"constant": false,
																"id": 483,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 518,
																"src": "2550:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 482,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 492,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 488,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$615",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$615",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 486,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "2604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 484,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$298",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 275,
																"src": "2573:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 494,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "2634:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 495,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2650:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 493,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 499,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:4"
													},
													{
														"assignments": [
															501
														],
														"declarations": [
															{
																"constant": false,
																"id": 501,
																"mutability": "mutable",
																"name": "newAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 518,
																"src": "2715:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 500,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 505,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "2738:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 503,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "2753:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2792:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$298",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 510,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 475,
																					"src": "2822:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$298",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 285,
																				"src": "2822:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 513,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "2846:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 514,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "2855:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 508,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$298",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 506,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "2772:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 517,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:4"
													}
												]
											}
										]
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "2440:6:4"
													},
													"referencedDeclaration": 298,
													"src": "2440:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2462:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2487:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:4"
									},
									"scope": 615,
									"src": "2400:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "3107:257:4",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "3117:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"arguments": [
														{
															"id": 544,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3152:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 542,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3139:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$334",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 327,
														"src": "3139:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3181:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3188:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3197:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 553,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3204:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 554,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3214:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 555,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3217:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 556,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3220:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 547,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$334",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "3168:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:4"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "3232:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"arguments": [
														{
															"id": 563,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 561,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3253:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$334",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 327,
														"src": "3253:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "3290:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 568,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "3304:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:4"
											}
										]
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2921:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$334",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 521,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 334,
														"src": "2921:12:4"
													},
													"referencedDeclaration": 334,
													"src": "2921:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$334",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2949:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2972:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2997:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3020:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3082:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:4"
									},
									"scope": 615,
									"src": "2892:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "3817:636:4",
										"statements": [
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "4166:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 585,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 592,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4220:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 589,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "4200:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$298",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$298",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 704,
														"src": "4192:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 596,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "4275:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 612,
												"nodeType": "IfStatement",
												"src": "4271:176:4",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "4298:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 603,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 586,
																				"src": "4370:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 605,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 604,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 606,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 601,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 600,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 610,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 578,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "3776:6:4"
													},
													"referencedDeclaration": 298,
													"src": "3776:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3790:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:4"
									},
									"scope": 615,
									"src": "3747:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 616,
							"src": "707:3748:4"
						}
					],
					"src": "115:4341:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							910
						]
					},
					"id": 911,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 618,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 910,
							"linearizedBaseContracts": [
								910
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 626,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 625,
												"id": 631,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 910,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 644,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$910",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$910",
																				"typeString": "library Address"
																			}
																		],
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 642,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 647,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													653,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 652,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 660,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 654,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 656,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 910,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 677,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															684,
															704
														],
														"referencedDeclaration": 704,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 676,
												"id": 682,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 910,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 700,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 696,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															724,
															774
														],
														"referencedDeclaration": 774,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 695,
												"id": 702,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 910,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 719,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 716,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															724,
															774
														],
														"referencedDeclaration": 774,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 715,
												"id": 722,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 910,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 741,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$910",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$910",
																				"typeString": "library Address"
																			}
																		],
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 739,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 744,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 751,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 750,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													757,
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 756,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 758,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 764,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 760,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 769,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 770,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 767,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 737,
												"id": 772,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 910,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 784,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															791,
															826
														],
														"referencedDeclaration": 826,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 783,
												"id": 789,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 781,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 910,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 805,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 804,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													811,
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 810,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 812,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"initialValue": {
													"arguments": [
														{
															"id": 816,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 820,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 821,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 822,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 819,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 802,
												"id": 824,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 795,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 910,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 836,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															878
														],
														"referencedDeclaration": 878,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 835,
												"id": 841,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 910,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 857,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 856,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													863,
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 862,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 864,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 866,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 873,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 874,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 871,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 854,
												"id": 876,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 910,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "7721:582:5",
										"statements": [
											{
												"condition": {
													"id": 890,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 881,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "7792:505:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 894,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 904,
																"nodeType": "Block",
																"src": "8234:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 901,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 885,
																					"src": "8259:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 900,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 903,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:5"
																	}
																]
															},
															"id": 905,
															"nodeType": "IfStatement",
															"src": "7872:415:5",
															"trueBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "7899:329:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 883,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 883,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 898,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "7731:566:5",
												"trueBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 891,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 889,
															"id": 892,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 880,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 887,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 910,
									"src": "7561:742:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 911,
							"src": "194:8111:5"
						}
					],
					"src": "101:8205:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							932
						]
					},
					"id": 933,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 932,
							"linearizedBaseContracts": [
								932
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 918,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 917,
												"id": 920,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 932,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 927,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 926,
												"id": 929,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 932,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 933,
							"src": "608:235:6"
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"contracts/ShadowPool.sol": {
				"ast": {
					"absolutePath": "contracts/ShadowPool.sol",
					"exportedSymbols": {
						"Address": [
							910
						],
						"Context": [
							932
						],
						"IBoostContract": [
							3544
						],
						"IERC20": [
							298
						],
						"IERC20Permit": [
							334
						],
						"IShadowChefV2": [
							3586
						],
						"IVShdw": [
							3603
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						],
						"SafeERC20": [
							615
						],
						"ShadowPool": [
							3528
						]
					},
					"id": 3529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 934,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 935,
							"nodeType": "ImportDirective",
							"scope": 3529,
							"sourceUnit": 113,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 936,
							"nodeType": "ImportDirective",
							"scope": 3529,
							"sourceUnit": 616,
							"src": "114:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 937,
							"nodeType": "ImportDirective",
							"scope": 3529,
							"sourceUnit": 221,
							"src": "181:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IShadowChefV2.sol",
							"file": "./interfaces/IShadowChefV2.sol",
							"id": 938,
							"nodeType": "ImportDirective",
							"scope": 3529,
							"sourceUnit": 3587,
							"src": "238:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IBoostContract.sol",
							"file": "./interfaces/IBoostContract.sol",
							"id": 939,
							"nodeType": "ImportDirective",
							"scope": 3529,
							"sourceUnit": 3545,
							"src": "280:41:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IVShdw.sol",
							"file": "./interfaces/IVShdw.sol",
							"id": 940,
							"nodeType": "ImportDirective",
							"scope": 3529,
							"sourceUnit": 3604,
							"src": "323:33:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "383:7:7"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "383:7:7"
								},
								{
									"baseName": {
										"id": 943,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "392:8:7"
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "392:8:7"
								}
							],
							"contractDependencies": [
								112,
								220,
								932
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3528,
							"linearizedBaseContracts": [
								3528,
								220,
								112,
								932
							],
							"name": "ShadowPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 948,
									"libraryName": {
										"id": 945,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 615,
										"src": "414:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "408:27:7",
									"typeName": {
										"id": 947,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 946,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 298,
											"src": "428:6:7"
										},
										"referencedDeclaration": 298,
										"src": "428:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$298",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "ShadowPool.UserInfo",
									"id": 967,
									"members": [
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "shares",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "470:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 949,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "470:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "lastDepositedTime",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "527:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "527:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "shdwAtLastUserAction",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "618:28:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "lastUserActionTime",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "714:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "714:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 958,
											"mutability": "mutable",
											"name": "lockStartTime",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "795:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 957,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "795:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "lockEndTime",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "847:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 959,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "847:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "userBoostedShare",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "895:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "895:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 964,
											"mutability": "mutable",
											"name": "locked",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "1069:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 963,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1069:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "lockedAmount",
											"nodeType": "VariableDeclaration",
											"scope": 967,
											"src": "1106:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 965,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1106:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 3528,
									"src": "443:731:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 970,
									"mutability": "immutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1182:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$298",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 969,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 968,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 298,
											"src": "1182:6:7"
										},
										"referencedDeclaration": 298,
										"src": "1182:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$298",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bc3d652a",
									"id": 973,
									"mutability": "immutable",
									"name": "shadowchefV2",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1235:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
										"typeString": "contract IShadowChefV2"
									},
									"typeName": {
										"id": 972,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 971,
											"name": "IShadowChefV2",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3586,
											"src": "1235:13:7"
										},
										"referencedDeclaration": 3586,
										"src": "1235:13:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
											"typeString": "contract IShadowChefV2"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dfcedeee",
									"id": 975,
									"mutability": "mutable",
									"name": "boostContract",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1287:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 974,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1287:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61fa6368",
									"id": 977,
									"mutability": "mutable",
									"name": "VShdw",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1360:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 976,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1360:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 982,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1389:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
										"typeString": "mapping(address => struct ShadowPool.UserInfo)"
									},
									"typeName": {
										"id": 981,
										"keyType": {
											"id": 978,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1397:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1389:28:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
											"typeString": "mapping(address => struct ShadowPool.UserInfo)"
										},
										"valueType": {
											"id": 980,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 979,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "1408:8:7"
											},
											"referencedDeclaration": 967,
											"src": "1408:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
												"typeString": "struct ShadowPool.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fec4e32",
									"id": 986,
									"mutability": "mutable",
									"name": "freePerformanceFeeUsers",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1440:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 985,
										"keyType": {
											"id": 983,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1448:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1440:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 984,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1459:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87d4bda9",
									"id": 990,
									"mutability": "mutable",
									"name": "freeWithdrawFeeUsers",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1533:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 989,
										"keyType": {
											"id": 987,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1541:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1533:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 988,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1552:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "668679ba",
									"id": 994,
									"mutability": "mutable",
									"name": "freeOverdueFeeUsers",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1620:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 993,
										"keyType": {
											"id": 991,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1628:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1620:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 992,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1639:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a98ef39",
									"id": 996,
									"mutability": "mutable",
									"name": "totalShares",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1707:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1707:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 998,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1740:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 997,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1740:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 1000,
									"mutability": "mutable",
									"name": "treasury",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1767:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 999,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 1002,
									"mutability": "mutable",
									"name": "operator",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1797:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1001,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1797:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "51fb26df",
									"id": 1004,
									"mutability": "mutable",
									"name": "shdwPoolPID",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1827:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1003,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1827:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e73008bc",
									"id": 1006,
									"mutability": "mutable",
									"name": "totalBoostDebt",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1860:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1005,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1860:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05a9f274",
									"id": 1008,
									"mutability": "mutable",
									"name": "totalLockedAmount",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1917:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1007,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1917:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bdca9165",
									"id": 1011,
									"mutability": "constant",
									"name": "MAX_PERFORMANCE_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "1980:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1009,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1980:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32303030",
										"id": 1010,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2026:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000_by_1",
											"typeString": "int_const 2000"
										},
										"value": "2000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d4b0de2f",
									"id": 1014,
									"mutability": "constant",
									"name": "MAX_WITHDRAW_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2044:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1012,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2044:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 1013,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2087:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "948a03f2",
									"id": 1019,
									"mutability": "constant",
									"name": "MAX_OVERDUE_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2103:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2103:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"id": 1018,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1016,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2145:3:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653130",
											"id": 1017,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2151:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "2145:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2cfc5f01",
									"id": 1022,
									"mutability": "constant",
									"name": "MAX_WITHDRAW_FEE_PERIOD",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2170:57:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2170:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1021,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2220:7:7",
										"subdenomination": "weeks",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "78b4330f",
									"id": 1025,
									"mutability": "constant",
									"name": "MIN_LOCK_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2244:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1023,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2244:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1024,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2288:7:7",
										"subdenomination": "weeks",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "01e81326",
									"id": 1028,
									"mutability": "constant",
									"name": "MAX_LOCK_DURATION_LIMIT",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2312:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1026,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2312:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1027,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:9:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400000_by_1",
											"typeString": "int_const 86400000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fd253b64",
									"id": 1033,
									"mutability": "constant",
									"name": "BOOST_WEIGHT_LIMIT",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2391:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1029,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2391:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000_by_1",
											"typeString": "int_const 50000000000000"
										},
										"id": 1032,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35303030",
											"id": 1030,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2436:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000_by_1",
												"typeString": "int_const 5000"
											},
											"value": "5000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653130",
											"id": 1031,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2443:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "2436:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000_by_1",
											"typeString": "int_const 50000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ccd34cd5",
									"id": 1036,
									"mutability": "constant",
									"name": "PRECISION_FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2463:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1034,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2463:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653132",
										"id": 1035,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2506:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"value": "1e12"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "731ff24a",
									"id": 1039,
									"mutability": "constant",
									"name": "PRECISION_FACTOR_SHARE",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2538:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1037,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2538:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653238",
										"id": 1038,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2587:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										},
										"value": "1e28"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1ea30fef",
									"id": 1042,
									"mutability": "constant",
									"name": "MIN_DEPOSIT_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2629:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1040,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2629:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3030303031",
										"id": 1041,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2674:13:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000_by_1",
											"typeString": "int_const 10000000000000"
										},
										"value": "0.00001"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b6857844",
									"id": 1045,
									"mutability": "constant",
									"name": "MIN_WITHDRAW_AMOUNT",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2694:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1043,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2694:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3030303031",
										"id": 1044,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2740:13:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000_by_1",
											"typeString": "int_const 10000000000000"
										},
										"value": "0.00001"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaada5da",
									"id": 1048,
									"mutability": "mutable",
									"name": "UNLOCK_FREE_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2760:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1046,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2760:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1047,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2798:7:7",
										"subdenomination": "weeks",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f1bfc9e",
									"id": 1051,
									"mutability": "mutable",
									"name": "MAX_LOCK_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2822:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1049,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2822:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1050,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2857:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e464c623",
									"id": 1054,
									"mutability": "mutable",
									"name": "DURATION_FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2884:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1052,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2884:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1053,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2917:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acaf88cd",
									"id": 1057,
									"mutability": "mutable",
									"name": "DURATION_FACTOR_OVERDUE",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "2990:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1055,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2990:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1056,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3031:8:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bc75f4b8",
									"id": 1062,
									"mutability": "mutable",
									"name": "BOOST_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "3094:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1058,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3094:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"id": 1061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1059,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3124:3:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653130",
											"id": 1060,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3130:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "3124:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87788782",
									"id": 1065,
									"mutability": "mutable",
									"name": "performanceFee",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "3151:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1063,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3151:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 1064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3183:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3eb78874",
									"id": 1068,
									"mutability": "mutable",
									"name": "performanceFeeContract",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "3199:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1066,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3199:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 1067,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3239:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e941fa78",
									"id": 1071,
									"mutability": "mutable",
									"name": "withdrawFee",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "3255:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1069,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3255:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1070,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3284:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e4b37ef5",
									"id": 1074,
									"mutability": "mutable",
									"name": "withdrawFeeContract",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "3301:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1072,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3301:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3338:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5834e06",
									"id": 1079,
									"mutability": "mutable",
									"name": "overdueFee",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "3355:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1075,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3355:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"id": 1078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1076,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3383:3:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653130",
											"id": 1077,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3389:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "3383:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df10b4e6",
									"id": 1082,
									"mutability": "mutable",
									"name": "withdrawFeePeriod",
									"nodeType": "VariableDeclaration",
									"scope": 3528,
									"src": "3408:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3408:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3732",
										"id": 1081,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3443:8:7",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "72"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1094,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "3484:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3484:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "3508:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "3524:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "3540:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastDepositedTime",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "3558:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3558:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:101:7"
									},
									"src": "3470:115:7"
								},
								{
									"anonymous": false,
									"id": 1102,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "3606:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "3630:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "3646:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3605:56:7"
									},
									"src": "3591:71:7"
								},
								{
									"anonymous": false,
									"id": 1108,
									"name": "Harvest",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3682:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3706:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3706:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:40:7"
									},
									"src": "3668:54:7"
								},
								{
									"anonymous": false,
									"id": 1110,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3739:2:7"
									},
									"src": "3728:14:7"
								},
								{
									"anonymous": false,
									"id": 1112,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3761:2:7"
									},
									"src": "3748:16:7"
								},
								{
									"anonymous": false,
									"id": 1114,
									"name": "Init",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3780:2:7"
									},
									"src": "3770:13:7"
								},
								{
									"anonymous": false,
									"id": 1126,
									"name": "Lock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3810:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3810:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3843:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3874:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3899:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3932:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:162:7"
									},
									"src": "3789:173:7"
								},
								{
									"anonymous": false,
									"id": 1134,
									"name": "Unlock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3981:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "4005:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "4021:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:64:7"
									},
									"src": "3968:77:7"
								},
								{
									"anonymous": false,
									"id": 1138,
									"name": "NewAdmin",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "4066:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4066:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4065:15:7"
									},
									"src": "4051:30:7"
								},
								{
									"anonymous": false,
									"id": 1142,
									"name": "NewTreasury",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"indexed": false,
												"mutability": "mutable",
												"name": "treasury",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "4105:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:18:7"
									},
									"src": "4087:36:7"
								},
								{
									"anonymous": false,
									"id": 1146,
									"name": "NewOperator",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": false,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4147:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4146:18:7"
									},
									"src": "4129:36:7"
								},
								{
									"anonymous": false,
									"id": 1150,
									"name": "NewBoostContract",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"indexed": false,
												"mutability": "mutable",
												"name": "boostContract",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4194:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4193:23:7"
									},
									"src": "4171:46:7"
								},
								{
									"anonymous": false,
									"id": 1154,
									"name": "NewVShdwContract",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "VShdw",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4246:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4245:15:7"
									},
									"src": "4223:38:7"
								},
								{
									"anonymous": false,
									"id": 1160,
									"name": "FreeFeeUser",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "4285:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "free",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "4307:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4307:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:41:7"
									},
									"src": "4267:59:7"
								},
								{
									"anonymous": false,
									"id": 1164,
									"name": "NewPerformanceFee",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "performanceFee",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4356:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4356:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4355:24:7"
									},
									"src": "4332:48:7"
								},
								{
									"anonymous": false,
									"id": 1168,
									"name": "NewPerformanceFeeContract",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"indexed": false,
												"mutability": "mutable",
												"name": "performanceFeeContract",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4418:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:32:7"
									},
									"src": "4386:64:7"
								},
								{
									"anonymous": false,
									"id": 1172,
									"name": "NewWithdrawFee",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawFee",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4477:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:21:7"
									},
									"src": "4456:42:7"
								},
								{
									"anonymous": false,
									"id": 1176,
									"name": "NewOverdueFee",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": false,
												"mutability": "mutable",
												"name": "overdueFee",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "4524:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4523:20:7"
									},
									"src": "4504:40:7"
								},
								{
									"anonymous": false,
									"id": 1180,
									"name": "NewWithdrawFeeContract",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawFeeContract",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "4579:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:29:7"
									},
									"src": "4550:58:7"
								},
								{
									"anonymous": false,
									"id": 1184,
									"name": "NewWithdrawFeePeriod",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawFeePeriod",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "4641:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4640:27:7"
									},
									"src": "4614:54:7"
								},
								{
									"anonymous": false,
									"id": 1188,
									"name": "NewMaxLockDuration",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxLockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4699:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4698:25:7"
									},
									"src": "4674:50:7"
								},
								{
									"anonymous": false,
									"id": 1192,
									"name": "NewDurationFactor",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "durationFactor",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4754:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:24:7"
									},
									"src": "4730:48:7"
								},
								{
									"anonymous": false,
									"id": 1196,
									"name": "NewDurationFactorOverdue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "durationFactorOverdue",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "4815:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4815:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4814:31:7"
									},
									"src": "4784:62:7"
								},
								{
									"anonymous": false,
									"id": 1200,
									"name": "NewUnlockFreeDuration",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockFreeDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4880:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4880:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4879:28:7"
									},
									"src": "4852:56:7"
								},
								{
									"anonymous": false,
									"id": 1204,
									"name": "NewBoostWeight",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"indexed": false,
												"mutability": "mutable",
												"name": "boostWeight",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4935:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:21:7"
									},
									"src": "4914:42:7"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "5496:188:7",
										"statements": [
											{
												"expression": {
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1222,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "5507:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$298",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "5515:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$298",
															"typeString": "contract IERC20"
														}
													},
													"src": "5507:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "5507:14:7"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1226,
														"name": "shadowchefV2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "5532:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
															"typeString": "contract IShadowChefV2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1227,
														"name": "_shadowchefV2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "5547:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
															"typeString": "contract IShadowChefV2"
														}
													},
													"src": "5532:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
														"typeString": "contract IShadowChefV2"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "5532:28:7"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1230,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "5571:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1231,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "5579:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "5571:14:7"
											},
											{
												"expression": {
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1234,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "5596:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1235,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "5607:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5596:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "5596:20:7"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "5627:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1239,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "5638:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5627:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "5627:20:7"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "shdwPoolPID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5658:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1243,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "5672:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5658:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "5658:18:7"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "4964:341:7",
										"text": " @notice Constructor\n @param _token: Shdw token contract\n @param _shadowchefV2: ShadowChefV2 contract\n @param _admin: address of the admin\n @param _treasury: address of the treasury (collects fees)\n @param _operator: address of operator\n @param _pid: Shdw pool ID in ShadowChefV2"
									},
									"id": 1247,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5333:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1206,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "5333:6:7"
													},
													"referencedDeclaration": 298,
													"src": "5333:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "_shadowchefV2",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5357:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
													"typeString": "contract IShadowChefV2"
												},
												"typeName": {
													"id": 1210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1209,
														"name": "IShadowChefV2",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3586,
														"src": "5357:13:7"
													},
													"referencedDeclaration": 3586,
													"src": "5357:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
														"typeString": "contract IShadowChefV2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5395:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5395:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5420:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5448:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "5476:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5322:173:7"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5496:0:7"
									},
									"scope": 3528,
									"src": "5311:373:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "5974:336:7",
										"statements": [
											{
												"assignments": [
													1257
												],
												"declarations": [
													{
														"constant": false,
														"id": 1257,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "5985:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5985:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1260,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6024:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6024:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1258,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6003:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "6003:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6003:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5985:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1265,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "6054:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6065:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6054:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616c616e6365206d757374206578636565642030",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6068:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b838860d699c47ba608155cae8e0b922267380a0c086049df111458f89a4642",
																"typeString": "literal_string \"Balance must exceed 0\""
															},
															"value": "Balance must exceed 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b838860d699c47ba608155cae8e0b922267380a0c086049df111458f89a4642",
																"typeString": "literal_string \"Balance must exceed 0\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6046:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "6046:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6131:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6131:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1278,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6151:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6143:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1276,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6143:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6143:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "6158:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1271,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6103:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "6103:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6103:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "6103:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1288,
																	"name": "shadowchefV2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "6204:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
																		"typeString": "contract IShadowChefV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
																		"typeString": "contract IShadowChefV2"
																	}
																],
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6196:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6196:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6196:21:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "6219:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1283,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6177:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "6177:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6177:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "6177:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1296,
															"name": "shdwPoolPID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "6259:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1297,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "6272:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1293,
															"name": "shadowchefV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "6238:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
																"typeString": "contract IShadowChefV2"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3553,
														"src": "6238:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6238:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "6238:42:7"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1300,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "6296:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6296:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "EmitStatement",
												"src": "6291:11:7"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "5692:224:7",
										"text": " @notice Deposits a dummy token to `MASTER_CHEF` MCV2.\n It will transfer all the `dummyToken` in the tx sender address.\n @param dummyToken The address of the token to be deposited into MCV2."
									},
									"functionSelector": "19ab453c",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1254,
											"modifierName": {
												"id": 1253,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5964:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5964:9:7"
										}
									],
									"name": "init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "dummyToken",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "5936:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$298",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1249,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 298,
														"src": "5936:6:7"
													},
													"referencedDeclaration": 298,
													"src": "5936:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$298",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5935:19:7"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5974:0:7"
									},
									"scope": 3528,
									"src": "5922:388:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "6420:74:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1308,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6439:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6439:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1310,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "6453:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6439:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646d696e3a207775743f",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6460:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
																"typeString": "literal_string \"admin: wut?\""
															},
															"value": "admin: wut?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
																"typeString": "literal_string \"admin: wut?\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "6431:43:7"
											},
											{
												"id": 1315,
												"nodeType": "PlaceholderStatement",
												"src": "6485:1:7"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "6318:75:7",
										"text": " @notice Checks if the msg.sender is the admin address."
									},
									"id": 1317,
									"name": "onlyAdmin",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6417:2:7"
									},
									"src": "6399:95:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "6667:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1323,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6686:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6686:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1325,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "6700:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6686:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1327,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6709:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6709:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1329,
																	"name": "operator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "6723:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6709:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6686:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f70657261746f72206f722053686477206f776e6572",
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6733:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ed317ec37625583b076c69411cb03eb9dc395dd6067b84031e30305b72e49c",
																"typeString": "literal_string \"Not operator or Shdw owner\""
															},
															"value": "Not operator or Shdw owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ed317ec37625583b076c69411cb03eb9dc395dd6067b84031e30305b72e49c",
																"typeString": "literal_string \"Not operator or Shdw owner\""
															}
														],
														"id": 1322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6678:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6678:84:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "6678:84:7"
											},
											{
												"id": 1335,
												"nodeType": "PlaceholderStatement",
												"src": "6773:1:7"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "6502:111:7",
										"text": " @notice Checks if the msg.sender is either the Shdw owner address or the operator address."
									},
									"id": 1337,
									"name": "onlyOperatorOrShdwOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "6652:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:15:7"
									},
									"src": "6619:163:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "6952:429:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "boostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "6967:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6992:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6984:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1344,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6984:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6984:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6967:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1377,
												"nodeType": "IfStatement",
												"src": "6963:411:7",
												"trueBody": {
													"id": 1376,
													"nodeType": "Block",
													"src": "6996:378:7",
													"statements": [
														{
															"assignments": [
																1351
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1351,
																	"mutability": "mutable",
																	"name": "user",
																	"nodeType": "VariableDeclaration",
																	"scope": 1376,
																	"src": "7011:21:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo"
																	},
																	"typeName": {
																		"id": 1350,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1349,
																			"name": "UserInfo",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 967,
																			"src": "7011:8:7"
																		},
																		"referencedDeclaration": 967,
																		"src": "7011:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1355,
															"initialValue": {
																"baseExpression": {
																	"id": 1352,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "7035:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
																		"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
																	}
																},
																"id": 1354,
																"indexExpression": {
																	"id": 1353,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "7044:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7035:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$967_storage",
																	"typeString": "struct ShadowPool.UserInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7011:39:7"
														},
														{
															"assignments": [
																1357
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1357,
																	"mutability": "mutable",
																	"name": "lockDuration",
																	"nodeType": "VariableDeclaration",
																	"scope": 1376,
																	"src": "7065:20:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1356,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7065:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1363,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1358,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1351,
																		"src": "7088:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockEndTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 960,
																	"src": "7088:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1360,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1351,
																		"src": "7107:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 958,
																	"src": "7107:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7088:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7065:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1368,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "7205:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1369,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1351,
																			"src": "7229:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 966,
																		"src": "7229:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1371,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1357,
																		"src": "7265:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1372,
																		"name": "totalLockedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "7296:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1373,
																		"name": "DURATION_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7332:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1365,
																				"name": "boostContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 975,
																				"src": "7155:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1364,
																			"name": "IBoostContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3544,
																			"src": "7140:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBoostContract_$3544_$",
																				"typeString": "type(contract IBoostContract)"
																			}
																		},
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7140:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBoostContract_$3544",
																			"typeString": "contract IBoostContract"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onShdwPoolUpdate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3543,
																	"src": "7140:46:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256,uint256) external"
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7140:222:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1375,
															"nodeType": "ExpressionStatement",
															"src": "7140:222:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "6790:99:7",
										"text": " @notice Update user info in Boost Contract.\n @param _user: User address"
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateBoostContractInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "6928:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:15:7"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6952:0:7"
									},
									"scope": 3528,
									"src": "6895:486:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "7563:3613:7",
										"statements": [
											{
												"assignments": [
													1387
												],
												"declarations": [
													{
														"constant": false,
														"id": 1387,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1700,
														"src": "7574:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
															"typeString": "struct ShadowPool.UserInfo"
														},
														"typeName": {
															"id": 1386,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1385,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "7574:8:7"
															},
															"referencedDeclaration": 967,
															"src": "7574:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"baseExpression": {
														"id": 1388,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "7598:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
															"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
														}
													},
													"id": 1390,
													"indexExpression": {
														"id": 1389,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "7607:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7598:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$967_storage",
														"typeString": "struct ShadowPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7574:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1392,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "7628:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "7628:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7642:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7628:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1699,
												"nodeType": "IfStatement",
												"src": "7624:3545:7",
												"trueBody": {
													"id": 1698,
													"nodeType": "Block",
													"src": "7645:3524:7",
													"statements": [
														{
															"condition": {
																"expression": {
																	"id": 1396,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "7664:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo storage pointer"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "locked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 964,
																"src": "7664:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "9938:31:7",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1584,
																			"name": "freePerformanceFeeUsers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "9939:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1586,
																		"indexExpression": {
																			"id": 1585,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "9963:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9939:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1696,
																"nodeType": "IfStatement",
																"src": "9934:1224:7",
																"trueBody": {
																	"id": 1695,
																	"nodeType": "Block",
																	"src": "9971:1187:7",
																	"statements": [
																		{
																			"assignments": [
																				1589
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1589,
																					"mutability": "mutable",
																					"name": "totalAmount",
																					"nodeType": "VariableDeclaration",
																					"scope": 1695,
																					"src": "10037:19:7",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1588,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "10037:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1598,
																			"initialValue": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1594,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1590,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1387,
																									"src": "10060:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																										"typeString": "struct ShadowPool.UserInfo storage pointer"
																									}
																								},
																								"id": 1591,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "shares",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 950,
																								"src": "10060:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1592,
																									"name": "balanceOf",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3510,
																									"src": "10074:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 1593,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10074:11:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10060:25:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1595,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "10059:27:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1596,
																					"name": "totalShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "10089:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10059:41:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10037:63:7"
																		},
																		{
																			"expression": {
																				"id": 1602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1599,
																					"name": "totalShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "10119:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"expression": {
																						"id": 1600,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1387,
																						"src": "10134:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 950,
																					"src": "10134:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10119:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1603,
																			"nodeType": "ExpressionStatement",
																			"src": "10119:26:7"
																		},
																		{
																			"expression": {
																				"id": 1608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 1604,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1387,
																						"src": "10164:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 1606,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 950,
																					"src": "10164:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "30",
																					"id": 1607,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10178:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "10164:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1609,
																			"nodeType": "ExpressionStatement",
																			"src": "10164:15:7"
																		},
																		{
																			"assignments": [
																				1611
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1611,
																					"mutability": "mutable",
																					"name": "earnAmount",
																					"nodeType": "VariableDeclaration",
																					"scope": 1695,
																					"src": "10198:18:7",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1610,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "10198:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1616,
																			"initialValue": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1612,
																					"name": "totalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1589,
																					"src": "10219:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"expression": {
																						"id": 1613,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1387,
																						"src": "10233:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 1614,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "shdwAtLastUserAction",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 954,
																					"src": "10233:25:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10219:39:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10198:60:7"
																		},
																		{
																			"assignments": [
																				1618
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1618,
																					"mutability": "mutable",
																					"name": "feeRate",
																					"nodeType": "VariableDeclaration",
																					"scope": 1695,
																					"src": "10277:15:7",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1617,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "10277:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1620,
																			"initialValue": {
																				"id": 1619,
																				"name": "performanceFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1065,
																				"src": "10295:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10277:32:7"
																		},
																		{
																			"condition": {
																				"arguments": [
																					{
																						"id": 1622,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1382,
																						"src": "10344:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1621,
																					"name": "_isContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3527,
																					"src": "10332:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10332:18:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1629,
																			"nodeType": "IfStatement",
																			"src": "10328:99:7",
																			"trueBody": {
																				"id": 1628,
																				"nodeType": "Block",
																				"src": "10352:75:7",
																				"statements": [
																					{
																						"expression": {
																							"id": 1626,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1624,
																								"name": "feeRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1618,
																								"src": "10375:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"id": 1625,
																								"name": "performanceFeeContract",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1068,
																								"src": "10385:22:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10375:32:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1627,
																						"nodeType": "ExpressionStatement",
																						"src": "10375:32:7"
																					}
																				]
																			}
																		},
																		{
																			"assignments": [
																				1631
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1631,
																					"mutability": "mutable",
																					"name": "currentPerformanceFee",
																					"nodeType": "VariableDeclaration",
																					"scope": 1695,
																					"src": "10445:29:7",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1630,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "10445:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1638,
																			"initialValue": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1634,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1632,
																								"name": "earnAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "10478:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1633,
																								"name": "feeRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1618,
																								"src": "10491:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10478:20:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1635,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "10477:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "3130303030",
																					"id": 1636,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10502:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"src": "10477:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10445:62:7"
																		},
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1639,
																					"name": "currentPerformanceFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1631,
																					"src": "10530:21:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10554:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "10530:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1654,
																			"nodeType": "IfStatement",
																			"src": "10526:184:7",
																			"trueBody": {
																				"id": 1653,
																				"nodeType": "Block",
																				"src": "10557:153:7",
																				"statements": [
																					{
																						"expression": {
																							"arguments": [
																								{
																									"id": 1645,
																									"name": "treasury",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1000,
																									"src": "10599:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1646,
																									"name": "currentPerformanceFee",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1631,
																									"src": "10609:21:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 1642,
																									"name": "token",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 970,
																									"src": "10580:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IERC20_$298",
																										"typeString": "contract IERC20"
																									}
																								},
																								"id": 1644,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "safeTransfer",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 366,
																								"src": "10580:18:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
																									"typeString": "function (contract IERC20,address,uint256)"
																								}
																							},
																							"id": 1647,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10580:51:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 1648,
																						"nodeType": "ExpressionStatement",
																						"src": "10580:51:7"
																					},
																					{
																						"expression": {
																							"id": 1651,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1649,
																								"name": "totalAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1589,
																								"src": "10654:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "-=",
																							"rightHandSide": {
																								"id": 1650,
																								"name": "currentPerformanceFee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1631,
																								"src": "10669:21:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10654:36:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1652,
																						"nodeType": "ExpressionStatement",
																						"src": "10654:36:7"
																					}
																				]
																			}
																		},
																		{
																			"assignments": [
																				1656
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1656,
																					"mutability": "mutable",
																					"name": "pool",
																					"nodeType": "VariableDeclaration",
																					"scope": 1695,
																					"src": "10778:12:7",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1655,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "10778:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1659,
																			"initialValue": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1657,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3510,
																					"src": "10793:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 1658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10793:11:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10778:26:7"
																		},
																		{
																			"assignments": [
																				1661
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1661,
																					"mutability": "mutable",
																					"name": "newShares",
																					"nodeType": "VariableDeclaration",
																					"scope": 1695,
																					"src": "10823:17:7",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1660,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "10823:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1662,
																			"nodeType": "VariableDeclarationStatement",
																			"src": "10823:17:7"
																		},
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1663,
																					"name": "totalShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "10863:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1664,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10878:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "10863:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 1683,
																				"nodeType": "Block",
																				"src": "10992:66:7",
																				"statements": [
																					{
																						"expression": {
																							"id": 1681,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1679,
																								"name": "newShares",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1661,
																								"src": "11015:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"id": 1680,
																								"name": "totalAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1589,
																								"src": "11027:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "11015:23:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1682,
																						"nodeType": "ExpressionStatement",
																						"src": "11015:23:7"
																					}
																				]
																			},
																			"id": 1684,
																			"nodeType": "IfStatement",
																			"src": "10859:199:7",
																			"trueBody": {
																				"id": 1678,
																				"nodeType": "Block",
																				"src": "10881:105:7",
																				"statements": [
																					{
																						"expression": {
																							"id": 1676,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1666,
																								"name": "newShares",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1661,
																								"src": "10904:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1675,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 1669,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 1667,
																												"name": "totalAmount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1589,
																												"src": "10917:11:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"id": 1668,
																												"name": "totalShares",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 996,
																												"src": "10931:11:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "10917:25:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 1670,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "10916:27:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 1673,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 1671,
																												"name": "pool",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1656,
																												"src": "10947:4:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "-",
																											"rightExpression": {
																												"id": 1672,
																												"name": "totalAmount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1589,
																												"src": "10954:11:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "10947:18:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 1674,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "10946:20:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "10916:50:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "10904:62:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1677,
																						"nodeType": "ExpressionStatement",
																						"src": "10904:62:7"
																					}
																				]
																			}
																		},
																		{
																			"expression": {
																				"id": 1689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 1685,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1387,
																						"src": "11076:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 1687,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 950,
																					"src": "11076:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 1688,
																					"name": "newShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "11090:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11076:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1690,
																			"nodeType": "ExpressionStatement",
																			"src": "11076:23:7"
																		},
																		{
																			"expression": {
																				"id": 1693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1691,
																					"name": "totalShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "11118:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"id": 1692,
																					"name": "newShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "11133:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11118:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1694,
																			"nodeType": "ExpressionStatement",
																			"src": "11118:24:7"
																		}
																	]
																}
															},
															"id": 1697,
															"nodeType": "IfStatement",
															"src": "7660:3498:7",
															"trueBody": {
																"id": 1583,
																"nodeType": "Block",
																"src": "7677:2251:7",
																"statements": [
																	{
																		"assignments": [
																			1399
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1399,
																				"mutability": "mutable",
																				"name": "currentAmount",
																				"nodeType": "VariableDeclaration",
																				"scope": 1583,
																				"src": "7789:21:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1398,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7789:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1412,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1405,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1400,
																									"name": "balanceOf",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3510,
																									"src": "7814:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 1401,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "7814:11:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"components": [
																									{
																										"expression": {
																											"id": 1402,
																											"name": "user",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1387,
																											"src": "7829:4:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																												"typeString": "struct ShadowPool.UserInfo storage pointer"
																											}
																										},
																										"id": 1403,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "shares",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 950,
																										"src": "7829:11:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1404,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "7828:13:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7814:27:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1406,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7813:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1407,
																					"name": "totalShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7845:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7813:43:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 1409,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "7859:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1410,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "userBoostedShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 962,
																				"src": "7859:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7813:67:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7789:91:7"
																	},
																	{
																		"expression": {
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1413,
																				"name": "totalBoostDebt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1006,
																				"src": "7899:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1414,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "7917:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1415,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "userBoostedShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 962,
																				"src": "7917:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7899:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1417,
																		"nodeType": "ExpressionStatement",
																		"src": "7899:39:7"
																	},
																	{
																		"expression": {
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1418,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "7957:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "userBoostedShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 962,
																				"src": "7957:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7981:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7957:25:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1423,
																		"nodeType": "ExpressionStatement",
																		"src": "7957:25:7"
																	},
																	{
																		"expression": {
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1424,
																				"name": "totalShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "8001:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1425,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "8016:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1426,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "shares",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 950,
																				"src": "8016:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8001:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1428,
																		"nodeType": "ExpressionStatement",
																		"src": "8001:26:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "!",
																				"prefix": true,
																				"src": "8127:27:7",
																				"subExpression": {
																					"baseExpression": {
																						"id": 1429,
																						"name": "freeOverdueFeeUsers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 994,
																						"src": "8128:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																							"typeString": "mapping(address => bool)"
																						}
																					},
																					"id": 1431,
																					"indexExpression": {
																						"id": 1430,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1382,
																						"src": "8148:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8128:26:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1440,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1436,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1433,
																											"name": "user",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1387,
																											"src": "8160:4:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																												"typeString": "struct ShadowPool.UserInfo storage pointer"
																											}
																										},
																										"id": 1434,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "lockEndTime",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 960,
																										"src": "8160:16:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"id": 1435,
																										"name": "UNLOCK_FREE_DURATION",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1048,
																										"src": "8179:20:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8160:39:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1437,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "8159:41:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"expression": {
																								"id": 1438,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "8203:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1439,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "8203:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8159:59:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 1441,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8158:61:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8127:92:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1499,
																		"nodeType": "IfStatement",
																		"src": "8123:873:7",
																		"trueBody": {
																			"id": 1498,
																			"nodeType": "Block",
																			"src": "8221:775:7",
																			"statements": [
																				{
																					"assignments": [
																						1444
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1444,
																							"mutability": "mutable",
																							"name": "earnAmount",
																							"nodeType": "VariableDeclaration",
																							"scope": 1498,
																							"src": "8244:18:7",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1443,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "8244:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1449,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1448,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1445,
																							"name": "currentAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1399,
																							"src": "8265:13:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"id": 1446,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1387,
																								"src": "8281:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 1447,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lockedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 966,
																							"src": "8281:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8265:33:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8244:54:7"
																				},
																				{
																					"assignments": [
																						1451
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1451,
																							"mutability": "mutable",
																							"name": "overdueDuration",
																							"nodeType": "VariableDeclaration",
																							"scope": 1498,
																							"src": "8321:23:7",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1450,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "8321:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1459,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1456,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1452,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "8347:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1453,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "8347:15:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"expression": {
																									"id": 1454,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1387,
																									"src": "8365:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																										"typeString": "struct ShadowPool.UserInfo storage pointer"
																									}
																								},
																								"id": 1455,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "lockEndTime",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 960,
																								"src": "8365:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "8347:34:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1457,
																							"name": "UNLOCK_FREE_DURATION",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "8384:20:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8347:57:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8321:83:7"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1460,
																							"name": "overdueDuration",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1451,
																							"src": "8431:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"id": 1461,
																							"name": "DURATION_FACTOR_OVERDUE",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1057,
																							"src": "8449:23:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8431:41:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1468,
																					"nodeType": "IfStatement",
																					"src": "8427:139:7",
																					"trueBody": {
																						"id": 1467,
																						"nodeType": "Block",
																						"src": "8474:92:7",
																						"statements": [
																							{
																								"expression": {
																									"id": 1465,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1463,
																										"name": "overdueDuration",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1451,
																										"src": "8501:15:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"id": 1464,
																										"name": "DURATION_FACTOR_OVERDUE",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1057,
																										"src": "8519:23:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8501:41:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1466,
																								"nodeType": "ExpressionStatement",
																								"src": "8501:41:7"
																							}
																						]
																					}
																				},
																				{
																					"assignments": [
																						1470
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1470,
																							"mutability": "mutable",
																							"name": "overdueWeight",
																							"nodeType": "VariableDeclaration",
																							"scope": 1498,
																							"src": "8671:21:7",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1469,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "8671:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1477,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1476,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1473,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 1471,
																										"name": "overdueDuration",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1451,
																										"src": "8696:15:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"id": 1472,
																										"name": "overdueFee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1079,
																										"src": "8714:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8696:28:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1474,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "8695:30:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"id": 1475,
																							"name": "DURATION_FACTOR_OVERDUE",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1057,
																							"src": "8728:23:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8695:56:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8671:80:7"
																				},
																				{
																					"assignments": [
																						1479
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1479,
																							"mutability": "mutable",
																							"name": "currentOverdueFee",
																							"nodeType": "VariableDeclaration",
																							"scope": 1498,
																							"src": "8774:25:7",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1478,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "8774:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1486,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1485,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1482,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 1480,
																										"name": "earnAmount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1444,
																										"src": "8803:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"id": 1481,
																										"name": "overdueWeight",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1470,
																										"src": "8816:13:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8803:26:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1483,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "8802:28:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"id": 1484,
																							"name": "PRECISION_FACTOR",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1036,
																							"src": "8833:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8802:47:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "8774:75:7"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1490,
																								"name": "treasury",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1000,
																								"src": "8891:8:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1491,
																								"name": "currentOverdueFee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1479,
																								"src": "8901:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1487,
																								"name": "token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 970,
																								"src": "8872:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$298",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 1489,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "safeTransfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 366,
																							"src": "8872:18:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
																								"typeString": "function (contract IERC20,address,uint256)"
																							}
																						},
																						"id": 1492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8872:47:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1493,
																					"nodeType": "ExpressionStatement",
																					"src": "8872:47:7"
																				},
																				{
																					"expression": {
																						"id": 1496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1494,
																							"name": "currentAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1399,
																							"src": "8942:13:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"id": 1495,
																							"name": "currentOverdueFee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1479,
																							"src": "8959:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8942:34:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1497,
																					"nodeType": "ExpressionStatement",
																					"src": "8942:34:7"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1501
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1501,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"scope": 1583,
																				"src": "9064:12:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1500,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9064:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1504,
																		"initialValue": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1502,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3510,
																				"src": "9079:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9079:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9064:26:7"
																	},
																	{
																		"assignments": [
																			1506
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1506,
																				"mutability": "mutable",
																				"name": "currentShares",
																				"nodeType": "VariableDeclaration",
																				"scope": 1583,
																				"src": "9109:21:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1505,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9109:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1507,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9109:21:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1508,
																				"name": "totalShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "9153:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9168:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9153:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1528,
																			"nodeType": "Block",
																			"src": "9290:72:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1526,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1524,
																							"name": "currentShares",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1506,
																							"src": "9313:13:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1525,
																							"name": "currentAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1399,
																							"src": "9329:13:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9313:29:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1527,
																					"nodeType": "ExpressionStatement",
																					"src": "9313:29:7"
																				}
																			]
																		},
																		"id": 1529,
																		"nodeType": "IfStatement",
																		"src": "9149:213:7",
																		"trueBody": {
																			"id": 1523,
																			"nodeType": "Block",
																			"src": "9171:113:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1521,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1511,
																							"name": "currentShares",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1506,
																							"src": "9194:13:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1520,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1514,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 1512,
																											"name": "currentAmount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1399,
																											"src": "9211:13:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"id": 1513,
																											"name": "totalShares",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 996,
																											"src": "9227:11:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "9211:27:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1515,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "9210:29:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1518,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 1516,
																											"name": "pool",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1501,
																											"src": "9243:4:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"id": 1517,
																											"name": "currentAmount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1399,
																											"src": "9250:13:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "9243:20:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1519,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "9242:22:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9210:54:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9194:70:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1522,
																					"nodeType": "ExpressionStatement",
																					"src": "9194:70:7"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1530,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "9380:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1532,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "shares",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 950,
																				"src": "9380:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1533,
																				"name": "currentShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1506,
																				"src": "9394:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9380:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1535,
																		"nodeType": "ExpressionStatement",
																		"src": "9380:27:7"
																	},
																	{
																		"expression": {
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1536,
																				"name": "totalShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "9426:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1537,
																				"name": "currentShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1506,
																				"src": "9441:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9426:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1539,
																		"nodeType": "ExpressionStatement",
																		"src": "9426:28:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1540,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "9549:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "lockEndTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 960,
																				"src": "9549:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"id": 1542,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "9568:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "9568:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9549:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1582,
																		"nodeType": "IfStatement",
																		"src": "9545:368:7",
																		"trueBody": {
																			"id": 1581,
																			"nodeType": "Block",
																			"src": "9585:328:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1549,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 1545,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1387,
																								"src": "9608:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 1547,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "locked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 964,
																							"src": "9608:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "66616c7365",
																							"id": 1548,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9622:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "false"
																						},
																						"src": "9608:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1550,
																					"nodeType": "ExpressionStatement",
																					"src": "9608:19:7"
																				},
																				{
																					"expression": {
																						"id": 1555,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 1551,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1387,
																								"src": "9650:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 1553,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "lockStartTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 958,
																							"src": "9650:18:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 1554,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9671:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9650:22:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1556,
																					"nodeType": "ExpressionStatement",
																					"src": "9650:22:7"
																				},
																				{
																					"expression": {
																						"id": 1561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 1557,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1387,
																								"src": "9695:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 1559,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "lockEndTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 960,
																							"src": "9695:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 1560,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9714:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9695:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1562,
																					"nodeType": "ExpressionStatement",
																					"src": "9695:20:7"
																				},
																				{
																					"expression": {
																						"id": 1566,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1563,
																							"name": "totalLockedAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1008,
																							"src": "9738:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"expression": {
																								"id": 1564,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1387,
																								"src": "9759:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 1565,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lockedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 966,
																							"src": "9759:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9738:38:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1567,
																					"nodeType": "ExpressionStatement",
																					"src": "9738:38:7"
																				},
																				{
																					"expression": {
																						"id": 1572,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 1568,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1387,
																								"src": "9799:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 1570,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "lockedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 966,
																							"src": "9799:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 1571,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9819:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9799:21:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1573,
																					"nodeType": "ExpressionStatement",
																					"src": "9799:21:7"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 1575,
																								"name": "_user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1382,
																								"src": "9855:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1576,
																								"name": "currentAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1399,
																								"src": "9862:13:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 1577,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "9877:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1578,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "9877:15:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1574,
																							"name": "Unlock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1134,
																							"src": "9848:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256)"
																							}
																						},
																						"id": 1579,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9848:45:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1580,
																					"nodeType": "EmitStatement",
																					"src": "9843:50:7"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "7389:119:7",
										"text": " @notice Update user share When need to unlock or charges a fee.\n @param _user: User address"
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateUserShare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "7539:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7538:15:7"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7563:0:7"
									},
									"scope": 3528,
									"src": "7514:3662:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "11415:188:7",
										"statements": [
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "11426:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
															"typeString": "struct ShadowPool.UserInfo"
														},
														"typeName": {
															"id": 1713,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1712,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "11426:8:7"
															},
															"referencedDeclaration": 967,
															"src": "11426:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1718,
												"initialValue": {
													"baseExpression": {
														"id": 1715,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "11450:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
															"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
														}
													},
													"id": 1717,
													"indexExpression": {
														"id": 1716,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "11459:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11450:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$967_storage",
														"typeString": "struct ShadowPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11426:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1720,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "11484:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo storage pointer"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "locked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 964,
																"src": "11484:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1722,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "11499:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockEndTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 960,
																	"src": "11499:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1724,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11518:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11518:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11499:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11484:49:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420756e6c6f636b20796574",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11535:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb8b6a34be55e366d93331203617938f2f166352c2d5a75dbfa7ec7bd7a79007",
																"typeString": "literal_string \"Cannot unlock yet\""
															},
															"value": "Cannot unlock yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb8b6a34be55e366d93331203617938f2f166352c2d5a75dbfa7ec7bd7a79007",
																"typeString": "literal_string \"Cannot unlock yet\""
															}
														],
														"id": 1719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11476:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11476:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "11476:79:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11583:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11586:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1734,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "11589:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1731,
														"name": "depositOperation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "11566:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11566:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "11566:29:7"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "11184:140:7",
										"text": " @notice Unlock user Shdw funds.\n @dev Only possible when contract not paused.\n @param _user: User address"
									},
									"functionSelector": "2f6c493c",
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1707,
													"name": "_user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1704,
													"src": "11394:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1708,
											"modifierName": {
												"id": 1706,
												"name": "onlyOperatorOrShdwOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1337,
												"src": "11370:23:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "11370:30:7"
										},
										{
											"id": 1710,
											"modifierName": {
												"id": 1709,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "11401:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "11401:13:7"
										}
									],
									"name": "unlock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "11346:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11345:15:7"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11415:0:7"
									},
									"scope": 3528,
									"src": "11330:273:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "11924:145:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1749,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "11943:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11953:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11943:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1752,
																	"name": "_lockDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "11958:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11974:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11958:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11943:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f206465706f736974",
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11977:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															},
															"value": "Nothing to deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															}
														],
														"id": 1748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11935:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11935:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "11935:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1760,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "12026:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1761,
															"name": "_lockDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "12035:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1762,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12050:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12050:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1759,
														"name": "depositOperation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "12009:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12009:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "12009:52:7"
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "11611:227:7",
										"text": " @notice Deposit funds into the Shdw Pool.\n @dev Only possible when contract not paused.\n @param _amount: number of tokens to deposit (in Shdw)\n @param _lockDuration: Token lock duration"
									},
									"functionSelector": "e2bbb158",
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1746,
											"modifierName": {
												"id": 1745,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "11910:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "11910:13:7"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "11861:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11861:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "11878:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11860:40:7"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11924:0:7"
									},
									"scope": 3528,
									"src": "11844:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "12409:4434:7",
										"statements": [
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "12420:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
															"typeString": "struct ShadowPool.UserInfo"
														},
														"typeName": {
															"id": 1778,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1777,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "12420:8:7"
															},
															"referencedDeclaration": 967,
															"src": "12420:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1783,
												"initialValue": {
													"baseExpression": {
														"id": 1780,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "12444:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
															"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
														}
													},
													"id": 1782,
													"indexExpression": {
														"id": 1781,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "12453:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12444:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$967_storage",
														"typeString": "struct ShadowPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12420:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1784,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "12474:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																	"typeString": "struct ShadowPool.UserInfo storage pointer"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "12474:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12489:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12474:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1788,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "12494:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12504:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12494:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12474:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1800,
												"nodeType": "IfStatement",
												"src": "12470:159:7",
												"trueBody": {
													"id": 1799,
													"nodeType": "Block",
													"src": "12507:122:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1793,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "12530:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 1794,
																			"name": "MIN_DEPOSIT_AMOUNT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "12540:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12530:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e204d494e5f4445504f5349545f414d4f554e54",
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12560:56:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4",
																			"typeString": "literal_string \"Deposit amount must be greater than MIN_DEPOSIT_AMOUNT\""
																		},
																		"value": "Deposit amount must be greater than MIN_DEPOSIT_AMOUNT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_83154039a634b124bba68b99876328e44211f83ee05a7c9c81da77a2d3756ab4",
																			"typeString": "literal_string \"Deposit amount must be greater than MIN_DEPOSIT_AMOUNT\""
																		}
																	],
																	"id": 1792,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12522:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12522:95:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1798,
															"nodeType": "ExpressionStatement",
															"src": "12522:95:7"
														}
													]
												}
											},
											{
												"assignments": [
													1802
												],
												"declarations": [
													{
														"constant": false,
														"id": 1802,
														"mutability": "mutable",
														"name": "totalLockDuration",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "12743:25:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1801,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12743:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1804,
												"initialValue": {
													"id": 1803,
													"name": "_lockDuration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1772,
													"src": "12771:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12743:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1805,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "12799:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lockEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "12799:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1807,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12819:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12819:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12799:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "12795:453:7",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "12836:412:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1810,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "12983:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12993:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12983:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1832,
															"nodeType": "IfStatement",
															"src": "12979:185:7",
															"trueBody": {
																"id": 1831,
																"nodeType": "Block",
																"src": "12996:168:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1813,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "13015:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lockStartTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 958,
																				"src": "13015:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1816,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "13036:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "13036:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13015:36:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1819,
																		"nodeType": "ExpressionStatement",
																		"src": "13015:36:7"
																	},
																	{
																		"expression": {
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1820,
																				"name": "totalLockedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "13070:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1821,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "13091:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1822,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "lockedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 966,
																				"src": "13091:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13070:38:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1824,
																		"nodeType": "ExpressionStatement",
																		"src": "13070:38:7"
																	},
																	{
																		"expression": {
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1825,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "13127:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1827,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lockedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 966,
																				"src": "13127:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13147:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13127:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1830,
																		"nodeType": "ExpressionStatement",
																		"src": "13127:21:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1833,
																	"name": "totalLockDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "13178:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1834,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "13199:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockEndTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 960,
																		"src": "13199:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1836,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "13218:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockStartTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 958,
																		"src": "13218:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13199:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13178:58:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1840,
															"nodeType": "ExpressionStatement",
															"src": "13178:58:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1844,
																	"name": "_lockDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "13266:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13283:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13266:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1847,
																	"name": "totalLockDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "13288:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1848,
																	"name": "MIN_LOCK_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "13309:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13288:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13266:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d206c6f636b20706572696f64206973206f6e65207765656b",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13328:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5395d0e79b5fe321e02a944456c705009d074a4a152ef1b6119b4bfa5d6044fa",
																"typeString": "literal_string \"Minimum lock period is one week\""
															},
															"value": "Minimum lock period is one week"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5395d0e79b5fe321e02a944456c705009d074a4a152ef1b6119b4bfa5d6044fa",
																"typeString": "literal_string \"Minimum lock period is one week\""
															}
														],
														"id": 1843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13258:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13258:104:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "13258:104:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1855,
																"name": "totalLockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "13381:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1856,
																"name": "MAX_LOCK_DURATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "13402:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13381:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d206c6f636b20706572696f64206578636565646564",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13421:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f9a81cbfca3a725fc52efdf7a411f037786a7ea2243778c8f3608eb63c701fe",
																"typeString": "literal_string \"Maximum lock period exceeded\""
															},
															"value": "Maximum lock period exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f9a81cbfca3a725fc52efdf7a411f037786a7ea2243778c8f3608eb63c701fe",
																"typeString": "literal_string \"Maximum lock period exceeded\""
															}
														],
														"id": 1854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13373:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13373:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "13373:79:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1861,
														"name": "VShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "13469:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13486:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1862,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13478:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13478:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13469:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1877,
												"nodeType": "IfStatement",
												"src": "13465:104:7",
												"trueBody": {
													"id": 1876,
													"nodeType": "Block",
													"src": "13490:79:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1871,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1774,
																		"src": "13527:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1872,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "13534:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1873,
																		"name": "_lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1772,
																		"src": "13543:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1868,
																				"name": "VShdw",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 977,
																				"src": "13512:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1867,
																			"name": "IVShdw",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3603,
																			"src": "13505:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IVShdw_$3603_$",
																				"typeString": "type(contract IVShdw)"
																			}
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13505:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVShdw_$3603",
																			"typeString": "contract IVShdw"
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3597,
																	"src": "13505:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) external"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13505:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1875,
															"nodeType": "ExpressionStatement",
															"src": "13505:52:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1878,
														"name": "harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "13625:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13625:9:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "13625:9:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1881,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "13683:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13698:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13683:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1897,
												"nodeType": "IfStatement",
												"src": "13679:138:7",
												"trueBody": {
													"id": 1896,
													"nodeType": "Block",
													"src": "13701:116:7",
													"statements": [
														{
															"assignments": [
																1885
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1885,
																	"mutability": "mutable",
																	"name": "stockAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 1896,
																	"src": "13716:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1884,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13716:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1888,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1886,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3493,
																	"src": "13738:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13738:11:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13716:33:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1892,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "13783:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1893,
																		"name": "stockAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1885,
																		"src": "13793:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1889,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "13764:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$298",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 366,
																	"src": "13764:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13764:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1895,
															"nodeType": "ExpressionStatement",
															"src": "13764:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1899,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "13874:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1898,
														"name": "updateUserShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "13858:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13858:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "13858:22:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1902,
														"name": "_lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "13931:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13947:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13931:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1942,
												"nodeType": "IfStatement",
												"src": "13927:336:7",
												"trueBody": {
													"id": 1941,
													"nodeType": "Block",
													"src": "13950:313:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1905,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "13969:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockEndTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 960,
																	"src": "13969:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1907,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "13988:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "13988:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13969:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1933,
																"nodeType": "Block",
																"src": "14151:68:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1927,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "14170:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lockEndTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 960,
																				"src": "14170:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1930,
																				"name": "_lockDuration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1772,
																				"src": "14190:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14170:33:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1932,
																		"nodeType": "ExpressionStatement",
																		"src": "14170:33:7"
																	}
																]
															},
															"id": 1934,
															"nodeType": "IfStatement",
															"src": "13965:254:7",
															"trueBody": {
																"id": 1926,
																"nodeType": "Block",
																"src": "14005:140:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1910,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "14024:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1912,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lockStartTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 958,
																				"src": "14024:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1913,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "14045:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "14045:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14024:36:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1916,
																		"nodeType": "ExpressionStatement",
																		"src": "14024:36:7"
																	},
																	{
																		"expression": {
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1917,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "14079:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 1919,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lockEndTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 960,
																				"src": "14079:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1920,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "14098:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "14098:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1922,
																					"name": "_lockDuration",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1772,
																					"src": "14116:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14098:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14079:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1925,
																		"nodeType": "ExpressionStatement",
																		"src": "14079:50:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1935,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "14233:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "locked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 964,
																	"src": "14233:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14247:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "14233:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1940,
															"nodeType": "ExpressionStatement",
															"src": "14233:18:7"
														}
													]
												}
											},
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "currentShares",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "14275:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14275:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1945,
												"nodeType": "VariableDeclarationStatement",
												"src": "14275:21:7"
											},
											{
												"assignments": [
													1947
												],
												"declarations": [
													{
														"constant": false,
														"id": 1947,
														"mutability": "mutable",
														"name": "currentAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "14307:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14307:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1948,
												"nodeType": "VariableDeclarationStatement",
												"src": "14307:21:7"
											},
											{
												"assignments": [
													1950
												],
												"declarations": [
													{
														"constant": false,
														"id": 1950,
														"mutability": "mutable",
														"name": "userCurrentLockedBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "14339:32:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14339:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1951,
												"nodeType": "VariableDeclarationStatement",
												"src": "14339:32:7"
											},
											{
												"assignments": [
													1953
												],
												"declarations": [
													{
														"constant": false,
														"id": 1953,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "14382:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14382:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1956,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1954,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3510,
														"src": "14397:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14397:11:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14382:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1957,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "14423:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14433:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14423:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"nodeType": "IfStatement",
												"src": "14419:135:7",
												"trueBody": {
													"id": 1975,
													"nodeType": "Block",
													"src": "14436:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1963,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1774,
																		"src": "14474:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1966,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "14489:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ShadowPool_$3528",
																					"typeString": "contract ShadowPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ShadowPool_$3528",
																					"typeString": "contract ShadowPool"
																				}
																			],
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14481:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1964,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14481:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14481:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1968,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "14496:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1960,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "14451:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$298",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 392,
																	"src": "14451:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14451:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1970,
															"nodeType": "ExpressionStatement",
															"src": "14451:53:7"
														},
														{
															"expression": {
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1971,
																	"name": "currentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "14519:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1972,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "14535:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14519:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "14519:23:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1977,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "14603:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																	"typeString": "struct ShadowPool.UserInfo storage pointer"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "14603:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14617:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14603:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"expression": {
															"id": 1981,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "14622:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "locked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 964,
														"src": "14622:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14603:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "IfStatement",
												"src": "14599:481:7",
												"trueBody": {
													"id": 2027,
													"nodeType": "Block",
													"src": "14635:445:7",
													"statements": [
														{
															"expression": {
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1984,
																	"name": "userCurrentLockedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "14650:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1985,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1953,
																					"src": "14678:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 1986,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1779,
																						"src": "14685:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 1987,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 950,
																					"src": "14685:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14678:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1989,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14677:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1990,
																		"name": "totalShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "14700:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14677:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14650:61:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "14650:61:7"
														},
														{
															"expression": {
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1994,
																	"name": "currentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "14726:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1995,
																	"name": "userCurrentLockedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "14743:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14726:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1997,
															"nodeType": "ExpressionStatement",
															"src": "14726:41:7"
														},
														{
															"expression": {
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1998,
																	"name": "totalShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "14782:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 1999,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "14797:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "14797:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14782:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2002,
															"nodeType": "ExpressionStatement",
															"src": "14782:26:7"
														},
														{
															"expression": {
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2003,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "14823:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2005,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "14823:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14837:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14823:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2008,
															"nodeType": "ExpressionStatement",
															"src": "14823:15:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2009,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "14894:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 958,
																	"src": "14894:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2011,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "14916:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "14916:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14894:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2026,
															"nodeType": "IfStatement",
															"src": "14890:179:7",
															"trueBody": {
																"id": 2025,
																"nodeType": "Block",
																"src": "14933:136:7",
																"statements": [
																	{
																		"expression": {
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2014,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "14952:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 2016,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "lockedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 966,
																				"src": "14952:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2017,
																				"name": "userCurrentLockedBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "14972:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14952:44:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2019,
																		"nodeType": "ExpressionStatement",
																		"src": "14952:44:7"
																	},
																	{
																		"expression": {
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2020,
																				"name": "totalLockedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "15015:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2021,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1779,
																					"src": "15036:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "lockedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 966,
																				"src": "15036:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15015:38:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2024,
																		"nodeType": "ExpressionStatement",
																		"src": "15015:38:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2029,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "15094:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15109:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15094:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2049,
													"nodeType": "Block",
													"src": "15226:56:7",
													"statements": [
														{
															"expression": {
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2045,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "15241:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2046,
																	"name": "currentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "15257:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15241:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2048,
															"nodeType": "ExpressionStatement",
															"src": "15241:29:7"
														}
													]
												},
												"id": 2050,
												"nodeType": "IfStatement",
												"src": "15090:192:7",
												"trueBody": {
													"id": 2044,
													"nodeType": "Block",
													"src": "15112:108:7",
													"statements": [
														{
															"expression": {
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2032,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "15127:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2033,
																					"name": "currentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "15144:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2034,
																					"name": "totalShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "15160:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15144:27:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2036,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "15143:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2037,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1953,
																					"src": "15176:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2038,
																					"name": "userCurrentLockedBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1950,
																					"src": "15183:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15176:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2040,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "15175:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15143:65:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15127:81:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2043,
															"nodeType": "ExpressionStatement",
															"src": "15127:81:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2051,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "15344:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lockEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "15344:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2053,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "15363:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lockStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 958,
														"src": "15363:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15344:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2141,
													"nodeType": "Block",
													"src": "16288:55:7",
													"statements": [
														{
															"expression": {
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2135,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "16303:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "16303:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2138,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "16318:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16303:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2140,
															"nodeType": "ExpressionStatement",
															"src": "16303:28:7"
														}
													]
												},
												"id": 2142,
												"nodeType": "IfStatement",
												"src": "15340:1003:7",
												"trueBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "15383:899:7",
													"statements": [
														{
															"assignments": [
																2057
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2057,
																	"mutability": "mutable",
																	"name": "boostWeight",
																	"nodeType": "VariableDeclaration",
																	"scope": 2134,
																	"src": "15437:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2056,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15437:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2069,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2062,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 2058,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1779,
																								"src": "15461:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 2059,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lockEndTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 960,
																							"src": "15461:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"id": 2060,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1779,
																								"src": "15480:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 2061,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lockStartTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 958,
																							"src": "15480:18:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "15461:37:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2063,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "15460:39:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2064,
																				"name": "BOOST_WEIGHT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1062,
																				"src": "15502:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15460:54:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2066,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15459:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2067,
																	"name": "DURATION_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "15518:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15459:74:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15437:96:7"
														},
														{
															"assignments": [
																2071
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2071,
																	"mutability": "mutable",
																	"name": "boostShares",
																	"nodeType": "VariableDeclaration",
																	"scope": 2134,
																	"src": "15548:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2070,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15548:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2078,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2072,
																				"name": "boostWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "15571:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2073,
																				"name": "currentShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1944,
																				"src": "15585:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15571:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2075,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15570:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2076,
																	"name": "PRECISION_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "15602:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15570:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15548:70:7"
														},
														{
															"expression": {
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2079,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "15633:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2080,
																	"name": "boostShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "15650:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15633:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2082,
															"nodeType": "ExpressionStatement",
															"src": "15633:28:7"
														},
														{
															"expression": {
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2083,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "15676:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "15676:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2086,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "15691:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15676:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2088,
															"nodeType": "ExpressionStatement",
															"src": "15676:28:7"
														},
														{
															"assignments": [
																2090
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2090,
																	"mutability": "mutable",
																	"name": "userBoostedShare",
																	"nodeType": "VariableDeclaration",
																	"scope": 2134,
																	"src": "15843:24:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2089,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15843:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2097,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2091,
																				"name": "boostWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2057,
																				"src": "15871:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2092,
																				"name": "currentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "15885:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15871:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15870:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2095,
																	"name": "PRECISION_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "15902:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15870:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15843:75:7"
														},
														{
															"expression": {
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2098,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "15933:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "userBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 962,
																	"src": "15933:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2101,
																	"name": "userBoostedShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "15958:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15933:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2103,
															"nodeType": "ExpressionStatement",
															"src": "15933:41:7"
														},
														{
															"expression": {
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2104,
																	"name": "totalBoostDebt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "15989:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2105,
																	"name": "userBoostedShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "16007:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15989:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2107,
															"nodeType": "ExpressionStatement",
															"src": "15989:34:7"
														},
														{
															"expression": {
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2108,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "16076:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lockedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 966,
																	"src": "16076:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2111,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "16097:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16076:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2113,
															"nodeType": "ExpressionStatement",
															"src": "16076:28:7"
														},
														{
															"expression": {
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2114,
																	"name": "totalLockedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "16119:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2115,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "16140:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16119:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2117,
															"nodeType": "ExpressionStatement",
															"src": "16119:28:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2119,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1774,
																		"src": "16174:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2120,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "16181:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 966,
																		"src": "16181:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2122,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "16200:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "shares",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "16200:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2124,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1779,
																						"src": "16214:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 2125,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lockEndTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 960,
																					"src": "16214:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"expression": {
																						"id": 2126,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1779,
																						"src": "16233:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 2127,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lockStartTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 958,
																					"src": "16233:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16214:37:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2129,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "16213:39:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2130,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "16254:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "16254:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2118,
																	"name": "Lock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "16169:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16169:101:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2133,
															"nodeType": "EmitStatement",
															"src": "16164:106:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2143,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "16359:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16369:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16359:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2146,
															"name": "_lockDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "16374:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16390:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16374:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16359:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2158,
												"nodeType": "IfStatement",
												"src": "16355:105:7",
												"trueBody": {
													"id": 2157,
													"nodeType": "Block",
													"src": "16393:67:7",
													"statements": [
														{
															"expression": {
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2150,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "16408:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastDepositedTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "16408:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2153,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "16433:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "16433:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16408:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2156,
															"nodeType": "ExpressionStatement",
															"src": "16408:40:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2159,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "16470:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2160,
														"name": "currentShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "16485:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16470:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "16470:28:7"
											},
											{
												"expression": {
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2163,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "16511:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2165,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shdwAtLastUserAction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "16511:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2166,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1779,
																				"src": "16540:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																					"typeString": "struct ShadowPool.UserInfo storage pointer"
																				}
																			},
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "shares",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 950,
																			"src": "16540:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2168,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3510,
																				"src": "16554:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16554:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16540:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2171,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16539:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2172,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "16569:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16539:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2174,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "16583:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																	"typeString": "struct ShadowPool.UserInfo storage pointer"
																}
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "userBoostedShare",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 962,
															"src": "16583:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16539:65:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16511:93:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "16511:93:7"
											},
											{
												"expression": {
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2179,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "16615:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "16615:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2182,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16641:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "16641:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16615:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "16615:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2187,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "16741:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2186,
														"name": "updateBoostContractInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "16717:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16717:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "16717:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2191,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "16773:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2192,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "16780:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2193,
															"name": "currentShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "16789:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2194,
															"name": "_lockDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "16804:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2195,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "16819:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "16819:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2190,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "16765:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16765:70:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2198,
												"nodeType": "EmitStatement",
												"src": "16760:75:7"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "12077:202:7",
										"text": " @notice The operation of deposite.\n @param _amount: number of tokens to deposit (in Shdw)\n @param _lockDuration: Token lock duration\n @param _user: User address"
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositOperation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "12321:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12321:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "12347:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12347:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "12379:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12379:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12310:89:7"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12409:0:7"
									},
									"scope": 3528,
									"src": "12285:4558:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "17037:157:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2209,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "17056:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2210,
																"name": "MIN_WITHDRAW_AMOUNT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "17066:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17056:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576974686472617720616d6f756e74206d7573742062652067726561746572207468616e204d494e5f57495448445241575f414d4f554e54",
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17087:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c43d6a685c0672f27d6b004d2a2a91af0473e9cda90215ed97c8e5a61cd2deee",
																"typeString": "literal_string \"Withdraw amount must be greater than MIN_WITHDRAW_AMOUNT\""
															},
															"value": "Withdraw amount must be greater than MIN_WITHDRAW_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c43d6a685c0672f27d6b004d2a2a91af0473e9cda90215ed97c8e5a61cd2deee",
																"typeString": "literal_string \"Withdraw amount must be greater than MIN_WITHDRAW_AMOUNT\""
															}
														],
														"id": 2208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17048:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17048:98:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2214,
												"nodeType": "ExpressionStatement",
												"src": "17048:98:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17175:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2217,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "17178:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2215,
														"name": "withdrawOperation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2482,
														"src": "17157:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17157:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2219,
												"nodeType": "ExpressionStatement",
												"src": "17157:29:7"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "16851:116:7",
										"text": " @notice Withdraw funds from the Shdw Pool.\n @param _amount: Number of amount to withdraw"
									},
									"functionSelector": "5521e9bf",
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2206,
											"modifierName": {
												"id": 2205,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "17023:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "17023:13:7"
										}
									],
									"name": "withdrawByAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "16999:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16999:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16998:17:7"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17037:0:7"
									},
									"scope": 3528,
									"src": "16973:221:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "17380:102:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2230,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "17399:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17409:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17399:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17412:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 2229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17391:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17391:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "17391:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2237,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "17463:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17472:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2236,
														"name": "withdrawOperation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2482,
														"src": "17445:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17445:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "17445:29:7"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "17202:116:7",
										"text": " @notice Withdraw funds from the Shdw Pool.\n @param _shares: Number of shares to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2227,
											"modifierName": {
												"id": 2226,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "17366:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "17366:13:7"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "17342:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17341:17:7"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17380:0:7"
									},
									"scope": 3528,
									"src": "17324:158:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "17727:2228:7",
										"statements": [
											{
												"assignments": [
													2252
												],
												"declarations": [
													{
														"constant": false,
														"id": 2252,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "17738:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
															"typeString": "struct ShadowPool.UserInfo"
														},
														"typeName": {
															"id": 2251,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2250,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "17738:8:7"
															},
															"referencedDeclaration": 967,
															"src": "17738:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2257,
												"initialValue": {
													"baseExpression": {
														"id": 2253,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "17762:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
															"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
														}
													},
													"id": 2256,
													"indexExpression": {
														"expression": {
															"id": 2254,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "17771:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "17771:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17762:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$967_storage",
														"typeString": "struct ShadowPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17738:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2259,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "17801:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 2260,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "17812:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo storage pointer"
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 950,
																"src": "17812:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17801:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17825:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 2258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17793:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17793:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "17793:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2267,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "17878:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo storage pointer"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lockEndTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 960,
																"src": "17878:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 2269,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "17897:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "17897:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17878:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374696c6c20696e206c6f636b",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17914:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29d27746870030af2e78977aa435ecab484940719b10b267e22948038aa00957",
																"typeString": "literal_string \"Still in lock\""
															},
															"value": "Still in lock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29d27746870030af2e78977aa435ecab484940719b10b267e22948038aa00957",
																"typeString": "literal_string \"Still in lock\""
															}
														],
														"id": 2266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17870:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17870:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "17870:60:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2275,
														"name": "VShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "17947:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17964:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17956:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2276,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17956:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17956:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17947:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2290,
												"nodeType": "IfStatement",
												"src": "17943:86:7",
												"trueBody": {
													"id": 2289,
													"nodeType": "Block",
													"src": "17968:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18006:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18006:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2282,
																				"name": "VShdw",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 977,
																				"src": "17990:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2281,
																			"name": "IVShdw",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3603,
																			"src": "17983:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IVShdw_$3603_$",
																				"typeString": "type(contract IVShdw)"
																			}
																		},
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17983:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVShdw_$3603",
																			"typeString": "contract IVShdw"
																		}
																	},
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3602,
																	"src": "17983:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address) external"
																	}
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17983:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2288,
															"nodeType": "ExpressionStatement",
															"src": "17983:34:7"
														}
													]
												}
											},
											{
												"assignments": [
													2292
												],
												"declarations": [
													{
														"constant": false,
														"id": 2292,
														"mutability": "mutable",
														"name": "currentShare",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "18174:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18174:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2294,
												"initialValue": {
													"id": 2293,
													"name": "_shares",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2245,
													"src": "18197:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18174:30:7"
											},
											{
												"assignments": [
													2296
												],
												"declarations": [
													{
														"constant": false,
														"id": 2296,
														"mutability": "mutable",
														"name": "sharesPercent",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "18215:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18215:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2304,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2297,
																	"name": "_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2245,
																	"src": "18240:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2298,
																	"name": "PRECISION_FACTOR_SHARE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "18250:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18240:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2300,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18239:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 2301,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "18276:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "18276:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18239:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18215:72:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2305,
														"name": "harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "18345:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18345:9:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "18345:9:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2309,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18414:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18414:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2308,
														"name": "updateUserShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "18398:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18398:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "18398:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2313,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "18442:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18453:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18442:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2316,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "18458:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18468:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18458:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18442:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2356,
													"nodeType": "Block",
													"src": "18728:96:7",
													"statements": [
														{
															"expression": {
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2346,
																	"name": "currentShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "18743:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2347,
																					"name": "sharesPercent",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2296,
																					"src": "18759:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 2348,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2252,
																						"src": "18775:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 2349,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 950,
																					"src": "18775:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18759:27:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2351,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "18758:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2352,
																		"name": "PRECISION_FACTOR_SHARE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "18790:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18758:54:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18743:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2355,
															"nodeType": "ExpressionStatement",
															"src": "18743:69:7"
														}
													]
												},
												"id": 2357,
												"nodeType": "IfStatement",
												"src": "18438:386:7",
												"trueBody": {
													"id": 2345,
													"nodeType": "Block",
													"src": "18471:251:7",
													"statements": [
														{
															"assignments": [
																2321
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2321,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 2345,
																	"src": "18486:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2320,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "18486:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2324,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2322,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3510,
																	"src": "18501:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18501:11:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "18486:26:7"
														},
														{
															"expression": {
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2325,
																	"name": "currentShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "18527:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2326,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2247,
																					"src": "18543:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2327,
																					"name": "totalShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "18553:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18543:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2329,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "18542:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2330,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "18568:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18542:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18527:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2333,
															"nodeType": "ExpressionStatement",
															"src": "18527:45:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2334,
																	"name": "currentShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "18622:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 2335,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2252,
																		"src": "18637:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "18637:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18622:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2344,
															"nodeType": "IfStatement",
															"src": "18618:93:7",
															"trueBody": {
																"id": 2343,
																"nodeType": "Block",
																"src": "18650:61:7",
																"statements": [
																	{
																		"expression": {
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2338,
																				"name": "currentShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2292,
																				"src": "18669:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2339,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2252,
																					"src": "18684:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "shares",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 950,
																				"src": "18684:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18669:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2342,
																		"nodeType": "ExpressionStatement",
																		"src": "18669:26:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													2359
												],
												"declarations": [
													{
														"constant": false,
														"id": 2359,
														"mutability": "mutable",
														"name": "currentAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "18834:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18834:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2367,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2360,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "18859:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18859:11:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2362,
																	"name": "currentShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2292,
																	"src": "18873:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18859:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2364,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18858:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2365,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "18889:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18858:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18834:66:7"
											},
											{
												"expression": {
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2368,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "18911:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "18911:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2371,
														"name": "currentShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2292,
														"src": "18926:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18911:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2373,
												"nodeType": "ExpressionStatement",
												"src": "18911:27:7"
											},
											{
												"expression": {
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2374,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "18949:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2375,
														"name": "currentShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2292,
														"src": "18964:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18949:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2377,
												"nodeType": "ExpressionStatement",
												"src": "18949:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "19028:33:7",
														"subExpression": {
															"baseExpression": {
																"id": 2378,
																"name": "freeWithdrawFeeUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "19029:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2381,
															"indexExpression": {
																"expression": {
																	"id": 2379,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19050:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19050:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19029:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2383,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "19066:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "19066:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2385,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2252,
																			"src": "19084:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2386,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastDepositedTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "19084:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2387,
																		"name": "withdrawFeePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "19109:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19084:42:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19066:60:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2390,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19065:62:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19028:99:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2427,
												"nodeType": "IfStatement",
												"src": "19024:458:7",
												"trueBody": {
													"id": 2426,
													"nodeType": "Block",
													"src": "19129:353:7",
													"statements": [
														{
															"assignments": [
																2393
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2393,
																	"mutability": "mutable",
																	"name": "feeRate",
																	"nodeType": "VariableDeclaration",
																	"scope": 2426,
																	"src": "19144:15:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2392,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "19144:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2395,
															"initialValue": {
																"id": 2394,
																"name": "withdrawFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "19162:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19144:29:7"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2397,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "19204:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "19204:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2396,
																	"name": "_isContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3527,
																	"src": "19192:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19192:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2405,
															"nodeType": "IfStatement",
															"src": "19188:93:7",
															"trueBody": {
																"id": 2404,
																"nodeType": "Block",
																"src": "19217:64:7",
																"statements": [
																	{
																		"expression": {
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2400,
																				"name": "feeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2393,
																				"src": "19236:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2401,
																				"name": "withdrawFeeContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1074,
																				"src": "19246:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19236:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2403,
																		"nodeType": "ExpressionStatement",
																		"src": "19236:29:7"
																	}
																]
															}
														},
														{
															"assignments": [
																2407
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2407,
																	"mutability": "mutable",
																	"name": "currentWithdrawFee",
																	"nodeType": "VariableDeclaration",
																	"scope": 2426,
																	"src": "19295:26:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2406,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "19295:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2414,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2408,
																				"name": "currentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2359,
																				"src": "19325:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2409,
																				"name": "feeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2393,
																				"src": "19341:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19325:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2411,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19324:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19352:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "19324:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19295:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2418,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "19391:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2419,
																		"name": "currentWithdrawFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2407,
																		"src": "19401:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2415,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "19372:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$298",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 366,
																	"src": "19372:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19372:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2421,
															"nodeType": "ExpressionStatement",
															"src": "19372:48:7"
														},
														{
															"expression": {
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2422,
																	"name": "currentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2359,
																	"src": "19435:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2423,
																	"name": "currentWithdrawFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "19452:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19435:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2425,
															"nodeType": "ExpressionStatement",
															"src": "19435:35:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2431,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19513:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19513:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2433,
															"name": "currentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "19525:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2428,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "19494:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														"id": 2430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "19494:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19494:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2435,
												"nodeType": "ExpressionStatement",
												"src": "19494:45:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2436,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "19556:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "19556:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19570:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19556:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2460,
													"nodeType": "Block",
													"src": "19675:56:7",
													"statements": [
														{
															"expression": {
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2454,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2252,
																		"src": "19690:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "shdwAtLastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "19690:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19718:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "19690:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2459,
															"nodeType": "ExpressionStatement",
															"src": "19690:29:7"
														}
													]
												},
												"id": 2461,
												"nodeType": "IfStatement",
												"src": "19552:179:7",
												"trueBody": {
													"id": 2453,
													"nodeType": "Block",
													"src": "19573:96:7",
													"statements": [
														{
															"expression": {
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2440,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2252,
																		"src": "19588:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "shdwAtLastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "19588:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2443,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2252,
																						"src": "19617:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																							"typeString": "struct ShadowPool.UserInfo storage pointer"
																						}
																					},
																					"id": 2444,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "shares",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 950,
																					"src": "19617:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2445,
																						"name": "balanceOf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3510,
																						"src": "19631:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 2446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19631:11:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19617:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2448,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "19616:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2449,
																		"name": "totalShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "19646:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19616:41:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19588:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2452,
															"nodeType": "ExpressionStatement",
															"src": "19588:69:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2462,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "19743:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "19743:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2465,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "19769:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "19769:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19743:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "19743:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19869:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19869:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2469,
														"name": "updateBoostContractInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "19845:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19845:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2473,
												"nodeType": "ExpressionStatement",
												"src": "19845:35:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2475,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19907:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19907:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2477,
															"name": "currentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "19919:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2478,
															"name": "currentShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "19934:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2474,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "19898:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19898:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2480,
												"nodeType": "EmitStatement",
												"src": "19893:54:7"
											}
										]
									},
									"documentation": {
										"id": 2243,
										"nodeType": "StructuredDocumentation",
										"src": "17490:161:7",
										"text": " @notice The operation of withdraw.\n @param _shares: Number of shares to withdraw\n @param _amount: Number of amount to withdraw"
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawOperation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "17684:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "17701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17683:34:7"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17727:0:7"
									},
									"scope": 3528,
									"src": "17657:2298:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "20059:56:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2487,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "20079:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
																		"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
																	}
																},
																"id": 2490,
																"indexExpression": {
																	"expression": {
																		"id": 2488,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "20088:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "20088:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20079:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$967_storage",
																	"typeString": "struct ShadowPool.UserInfo storage ref"
																}
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "20079:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2486,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "20070:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20070:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "20070:37:7"
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "19963:58:7",
										"text": " @notice Withdraw all funds for a user"
									},
									"functionSelector": "853828b6",
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20047:2:7"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20059:0:7"
									},
									"scope": 3528,
									"src": "20027:88:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2541,
										"nodeType": "Block",
										"src": "20229:342:7",
										"statements": [
											{
												"assignments": [
													2500
												],
												"declarations": [
													{
														"constant": false,
														"id": 2500,
														"mutability": "mutable",
														"name": "pendingShdw",
														"nodeType": "VariableDeclaration",
														"scope": 2541,
														"src": "20240:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20240:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"arguments": [
														{
															"id": 2503,
															"name": "shdwPoolPID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "20287:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2506,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20308:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																],
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20300:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20300:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20300:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2501,
															"name": "shadowchefV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "20262:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
																"typeString": "contract IShadowChefV2"
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pendingShdw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3569,
														"src": "20262:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) view external returns (uint256)"
														}
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20262:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20240:74:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2510,
														"name": "pendingShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2500,
														"src": "20329:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20343:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20329:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2540,
												"nodeType": "IfStatement",
												"src": "20325:239:7",
												"trueBody": {
													"id": 2539,
													"nodeType": "Block",
													"src": "20346:218:7",
													"statements": [
														{
															"assignments": [
																2514
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2514,
																	"mutability": "mutable",
																	"name": "balBefore",
																	"nodeType": "VariableDeclaration",
																	"scope": 2539,
																	"src": "20361:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2513,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20361:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2517,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2515,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3493,
																	"src": "20381:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20381:11:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20361:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2521,
																		"name": "shdwPoolPID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "20429:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20442:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2518,
																		"name": "shadowchefV2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "20407:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
																			"typeString": "contract IShadowChefV2"
																		}
																	},
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3560,
																	"src": "20407:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) external"
																	}
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20407:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2524,
															"nodeType": "ExpressionStatement",
															"src": "20407:37:7"
														},
														{
															"assignments": [
																2526
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2526,
																	"mutability": "mutable",
																	"name": "balAfter",
																	"nodeType": "VariableDeclaration",
																	"scope": 2539,
																	"src": "20459:16:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2525,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20459:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2529,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2527,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3493,
																	"src": "20478:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20478:11:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20459:30:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2531,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "20517:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "20517:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2533,
																					"name": "balAfter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2526,
																					"src": "20530:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2534,
																					"name": "balBefore",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2514,
																					"src": "20541:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20530:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2536,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "20529:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2530,
																	"name": "Harvest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "20509:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20509:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2538,
															"nodeType": "EmitStatement",
															"src": "20504:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "20123:72:7",
										"text": " @notice Harvest pending Shdw tokens from MasterChef"
									},
									"id": 2542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20217:2:7"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20229:0:7"
									},
									"scope": 3528,
									"src": "20201:370:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2568,
										"nodeType": "Block",
										"src": "20734:130:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "20753:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20771:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20763:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2552,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20763:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20763:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20753:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20775:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20745:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20745:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "20745:55:7"
											},
											{
												"expression": {
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2560,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "20811:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2561,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2545,
														"src": "20819:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20811:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2563,
												"nodeType": "ExpressionStatement",
												"src": "20811:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2565,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "20850:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2564,
														"name": "NewAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "20841:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20841:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2567,
												"nodeType": "EmitStatement",
												"src": "20836:20:7"
											}
										]
									},
									"documentation": {
										"id": 2543,
										"nodeType": "StructuredDocumentation",
										"src": "20579:96:7",
										"text": " @notice Set admin address\n @dev Only callable by the contract owner."
									},
									"functionSelector": "704b6c02",
									"id": 2569,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2548,
											"modifierName": {
												"id": 2547,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "20724:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "20724:9:7"
										}
									],
									"name": "setAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "20699:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20699:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20698:16:7"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20734:0:7"
									},
									"scope": 3528,
									"src": "20681:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "21036:145:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "21055:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21076:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21068:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2579,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21068:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21068:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21055:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21080:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21047:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21047:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2586,
												"nodeType": "ExpressionStatement",
												"src": "21047:58:7"
											},
											{
												"expression": {
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2587,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "21116:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2588,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2572,
														"src": "21127:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21116:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2590,
												"nodeType": "ExpressionStatement",
												"src": "21116:20:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2592,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "21164:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2591,
														"name": "NewTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "21152:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21152:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2594,
												"nodeType": "EmitStatement",
												"src": "21147:26:7"
											}
										]
									},
									"documentation": {
										"id": 2570,
										"nodeType": "StructuredDocumentation",
										"src": "20872:99:7",
										"text": " @notice Set treasury address\n @dev Only callable by the contract owner."
									},
									"functionSelector": "f0f44260",
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2575,
											"modifierName": {
												"id": 2574,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "21026:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "21026:9:7"
										}
									],
									"name": "setTreasury",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "20998:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20998:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20997:19:7"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21036:0:7"
									},
									"scope": 3528,
									"src": "20977:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "21348:145:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2605,
																"name": "_operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2599,
																"src": "21367:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21388:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21380:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2606,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21380:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21380:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21367:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21392:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21359:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21359:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2613,
												"nodeType": "ExpressionStatement",
												"src": "21359:58:7"
											},
											{
												"expression": {
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2614,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "21428:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2615,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2599,
														"src": "21439:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21428:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2617,
												"nodeType": "ExpressionStatement",
												"src": "21428:20:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2619,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "21476:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2618,
														"name": "NewOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "21464:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21464:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2621,
												"nodeType": "EmitStatement",
												"src": "21459:26:7"
											}
										]
									},
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "21189:94:7",
										"text": " @notice Set operator address\n @dev Callable by the contract owner."
									},
									"functionSelector": "b3ab15fb",
									"id": 2623,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2602,
											"modifierName": {
												"id": 2601,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "21338:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "21338:9:7"
										}
									],
									"name": "setOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "21310:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21310:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21309:19:7"
									},
									"returnParameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21348:0:7"
									},
									"scope": 3528,
									"src": "21289:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "21676:170:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2632,
																"name": "_boostContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2626,
																"src": "21695:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21721:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21713:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21713:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21713:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21695:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21725:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21687:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21687:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "21687:63:7"
											},
											{
												"expression": {
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2641,
														"name": "boostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "21761:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2642,
														"name": "_boostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "21777:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21761:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2644,
												"nodeType": "ExpressionStatement",
												"src": "21761:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2646,
															"name": "boostContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "21824:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2645,
														"name": "NewBoostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "21807:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21807:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2648,
												"nodeType": "EmitStatement",
												"src": "21802:36:7"
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "21501:100:7",
										"text": " @notice Set Boost Contract address\n @dev Callable by the contract admin."
									},
									"functionSelector": "def7869d",
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2629,
											"modifierName": {
												"id": 2628,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "21666:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "21666:9:7"
										}
									],
									"name": "setBoostContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "_boostContract",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "21633:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21633:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21632:24:7"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21676:0:7"
									},
									"scope": 3528,
									"src": "21607:239:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "22021:138:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2659,
																"name": "_VShdw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2653,
																"src": "22040:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22058:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22050:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2660,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22050:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22050:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22040:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22062:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22032:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22032:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2667,
												"nodeType": "ExpressionStatement",
												"src": "22032:55:7"
											},
											{
												"expression": {
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2668,
														"name": "VShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "22098:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2669,
														"name": "_VShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "22106:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22098:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "22098:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2673,
															"name": "VShdw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "22145:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2672,
														"name": "NewVShdwContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "22128:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22128:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2675,
												"nodeType": "EmitStatement",
												"src": "22123:28:7"
											}
										]
									},
									"documentation": {
										"id": 2651,
										"nodeType": "StructuredDocumentation",
										"src": "21854:100:7",
										"text": " @notice Set VShdw Contract address\n @dev Callable by the contract admin."
									},
									"functionSelector": "62122f5a",
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2656,
											"modifierName": {
												"id": 2655,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "22011:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "22011:9:7"
										}
									],
									"name": "setVShdwContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "_VShdw",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "21986:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21986:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21985:16:7"
									},
									"returnParameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22021:0:7"
									},
									"scope": 3528,
									"src": "21960:199:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2708,
										"nodeType": "Block",
										"src": "22447:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2688,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "22466:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22483:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22475:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22475:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22475:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22466:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22487:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22458:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22458:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2696,
												"nodeType": "ExpressionStatement",
												"src": "22458:54:7"
											},
											{
												"expression": {
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2697,
															"name": "freePerformanceFeeUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "22523:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2699,
														"indexExpression": {
															"id": 2698,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "22547:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22523:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2700,
														"name": "_free",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "22556:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22523:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2702,
												"nodeType": "ExpressionStatement",
												"src": "22523:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2704,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "22589:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2705,
															"name": "_free",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "22596:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2703,
														"name": "FreeFeeUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "22577:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22577:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2707,
												"nodeType": "EmitStatement",
												"src": "22572:30:7"
											}
										]
									},
									"documentation": {
										"id": 2678,
										"nodeType": "StructuredDocumentation",
										"src": "22167:193:7",
										"text": " @notice Set free performance fee address\n @dev Only callable by the contract admin.\n @param _user: User address\n @param _free: true:free false:not free"
									},
									"functionSelector": "423b93ed",
									"id": 2709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2685,
											"modifierName": {
												"id": 2684,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "22437:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "22437:9:7"
										}
									],
									"name": "setFreePerformanceFeeUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "22401:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22401:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "_free",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "22416:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22416:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22400:27:7"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22447:0:7"
									},
									"scope": 3528,
									"src": "22366:244:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2740,
										"nodeType": "Block",
										"src": "22886:159:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2720,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2712,
																"src": "22905:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22922:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22914:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2721,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22914:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22914:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22905:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22926:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22897:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22897:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "22897:54:7"
											},
											{
												"expression": {
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2729,
															"name": "freeOverdueFeeUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "22962:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2731,
														"indexExpression": {
															"id": 2730,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2712,
															"src": "22982:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22962:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2732,
														"name": "_free",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2714,
														"src": "22991:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22962:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2734,
												"nodeType": "ExpressionStatement",
												"src": "22962:34:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2736,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2712,
															"src": "23024:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2737,
															"name": "_free",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2714,
															"src": "23031:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2735,
														"name": "FreeFeeUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "23012:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23012:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2739,
												"nodeType": "EmitStatement",
												"src": "23007:30:7"
											}
										]
									},
									"documentation": {
										"id": 2710,
										"nodeType": "StructuredDocumentation",
										"src": "22618:189:7",
										"text": " @notice Set free overdue fee address\n @dev Only callable by the contract admin.\n @param _user: User address\n @param _free: true:free false:not free"
									},
									"functionSelector": "4e4de1e9",
									"id": 2741,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2717,
											"modifierName": {
												"id": 2716,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "22876:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "22876:9:7"
										}
									],
									"name": "setOverdueFeeUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "22840:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22840:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "_free",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "22855:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22855:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22839:27:7"
									},
									"returnParameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22886:0:7"
									},
									"scope": 3528,
									"src": "22813:232:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "23323:160:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2752,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2744,
																"src": "23342:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23359:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23351:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23351:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23351:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23342:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23363:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 2751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23334:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23334:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2760,
												"nodeType": "ExpressionStatement",
												"src": "23334:54:7"
											},
											{
												"expression": {
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2761,
															"name": "freeWithdrawFeeUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "23399:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2763,
														"indexExpression": {
															"id": 2762,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "23420:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23399:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2764,
														"name": "_free",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2746,
														"src": "23429:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23399:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2766,
												"nodeType": "ExpressionStatement",
												"src": "23399:35:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2768,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "23462:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2769,
															"name": "_free",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "23469:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2767,
														"name": "FreeFeeUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "23450:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23450:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2771,
												"nodeType": "EmitStatement",
												"src": "23445:30:7"
											}
										]
									},
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "23053:190:7",
										"text": " @notice Set free withdraw fee address\n @dev Only callable by the contract admin.\n @param _user: User address\n @param _free: true:free false:not free"
									},
									"functionSelector": "beba0fa0",
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2749,
											"modifierName": {
												"id": 2748,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "23313:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "23313:9:7"
										}
									],
									"name": "setWithdrawFeeUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "23277:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23277:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "_free",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "23292:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23292:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23276:27:7"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23323:0:7"
									},
									"scope": 3528,
									"src": "23249:234:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "23666:216:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2782,
																"name": "_performanceFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2776,
																"src": "23685:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2783,
																"name": "MAX_PERFORMANCE_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "23704:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23685:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468616e204d41585f504552464f524d414e43455f464545",
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23725:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
																"typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
															},
															"value": "performanceFee cannot be more than MAX_PERFORMANCE_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
																"typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
															}
														],
														"id": 2781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23677:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23677:105:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2787,
												"nodeType": "ExpressionStatement",
												"src": "23677:105:7"
											},
											{
												"expression": {
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2788,
														"name": "performanceFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "23793:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2789,
														"name": "_performanceFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2776,
														"src": "23810:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23793:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "23793:32:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2793,
															"name": "performanceFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "23859:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2792,
														"name": "NewPerformanceFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "23841:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23841:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2795,
												"nodeType": "EmitStatement",
												"src": "23836:38:7"
											}
										]
									},
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "23491:98:7",
										"text": " @notice Set performance fee\n @dev Only callable by the contract admin."
									},
									"functionSelector": "70897b23",
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2779,
											"modifierName": {
												"id": 2778,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "23656:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "23656:9:7"
										}
									],
									"name": "setPerformanceFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "_performanceFee",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "23622:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23621:25:7"
									},
									"returnParameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23666:0:7"
									},
									"scope": 3528,
									"src": "23595:287:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "24094:293:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2806,
																"name": "_performanceFeeContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2800,
																"src": "24127:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2807,
																"name": "MAX_PERFORMANCE_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "24154:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24127:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706572666f726d616e63654665652063616e6e6f74206265206d6f7265207468616e204d41585f504552464f524d414e43455f464545",
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24188:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
																"typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
															},
															"value": "performanceFee cannot be more than MAX_PERFORMANCE_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6432039cf9ff586e7b7914864ffeeb65018de8382b891f7abea9a0fa0a0eeba5",
																"typeString": "literal_string \"performanceFee cannot be more than MAX_PERFORMANCE_FEE\""
															}
														],
														"id": 2805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24105:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24105:150:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2811,
												"nodeType": "ExpressionStatement",
												"src": "24105:150:7"
											},
											{
												"expression": {
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2812,
														"name": "performanceFeeContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "24266:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2813,
														"name": "_performanceFeeContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2800,
														"src": "24291:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24266:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2815,
												"nodeType": "ExpressionStatement",
												"src": "24266:48:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2817,
															"name": "performanceFeeContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "24356:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2816,
														"name": "NewPerformanceFeeContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "24330:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24330:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2819,
												"nodeType": "EmitStatement",
												"src": "24325:54:7"
											}
										]
									},
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "23890:111:7",
										"text": " @notice Set performance fee for contract\n @dev Only callable by the contract admin."
									},
									"functionSelector": "bb9f408d",
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2803,
											"modifierName": {
												"id": 2802,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "24084:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "24084:9:7"
										}
									],
									"name": "setPerformanceFeeContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "_performanceFeeContract",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "24042:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24042:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24041:33:7"
									},
									"returnParameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24094:0:7"
									},
									"scope": 3528,
									"src": "24007:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "24561:192:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2830,
																"name": "_withdrawFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2824,
																"src": "24580:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2831,
																"name": "MAX_WITHDRAW_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "24596:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24580:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261774665652063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f464545",
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24614:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
																"typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
															},
															"value": "withdrawFee cannot be more than MAX_WITHDRAW_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
																"typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
															}
														],
														"id": 2829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24572:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24572:93:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2835,
												"nodeType": "ExpressionStatement",
												"src": "24572:93:7"
											},
											{
												"expression": {
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2836,
														"name": "withdrawFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "24676:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2837,
														"name": "_withdrawFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "24690:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24676:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2839,
												"nodeType": "ExpressionStatement",
												"src": "24676:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2841,
															"name": "withdrawFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "24733:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2840,
														"name": "NewWithdrawFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "24718:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24718:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2843,
												"nodeType": "EmitStatement",
												"src": "24713:32:7"
											}
										]
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "24395:95:7",
										"text": " @notice Set withdraw fee\n @dev Only callable by the contract admin."
									},
									"functionSelector": "b6ac642a",
									"id": 2845,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2827,
											"modifierName": {
												"id": 2826,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "24551:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "24551:9:7"
										}
									],
									"name": "setWithdrawFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "_withdrawFee",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "24520:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24519:22:7"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24561:0:7"
									},
									"scope": 3528,
									"src": "24496:257:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2868,
										"nodeType": "Block",
										"src": "24924:185:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2854,
																"name": "_overdueFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "24943:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2855,
																"name": "MAX_OVERDUE_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "24958:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24943:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f7665726475654665652063616e6e6f74206265206d6f7265207468616e204d41585f4f5645524455455f464545",
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24975:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7444f8aec3a1112aed3b0b68aa294562ece2ae020ce7917040293e4bd9eec93f",
																"typeString": "literal_string \"overdueFee cannot be more than MAX_OVERDUE_FEE\""
															},
															"value": "overdueFee cannot be more than MAX_OVERDUE_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7444f8aec3a1112aed3b0b68aa294562ece2ae020ce7917040293e4bd9eec93f",
																"typeString": "literal_string \"overdueFee cannot be more than MAX_OVERDUE_FEE\""
															}
														],
														"id": 2853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24935:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24935:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2859,
												"nodeType": "ExpressionStatement",
												"src": "24935:89:7"
											},
											{
												"expression": {
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2860,
														"name": "overdueFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "25035:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2861,
														"name": "_overdueFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2848,
														"src": "25048:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25035:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2863,
												"nodeType": "ExpressionStatement",
												"src": "25035:24:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2865,
															"name": "_overdueFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2848,
															"src": "25089:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2864,
														"name": "NewOverdueFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "25075:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25075:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2867,
												"nodeType": "EmitStatement",
												"src": "25070:31:7"
											}
										]
									},
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "24761:94:7",
										"text": " @notice Set overdue fee\n @dev Only callable by the contract admin."
									},
									"functionSelector": "0c59696b",
									"id": 2869,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2851,
											"modifierName": {
												"id": 2850,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "24914:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "24914:9:7"
										}
									],
									"name": "setOverdueFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "_overdueFee",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "24884:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24884:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24883:21:7"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24924:0:7"
									},
									"scope": 3528,
									"src": "24861:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2892,
										"nodeType": "Block",
										"src": "25312:232:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "_withdrawFeeContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "25331:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2879,
																"name": "MAX_WITHDRAW_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "25355:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25331:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261774665652063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f464545",
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25373:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
																"typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
															},
															"value": "withdrawFee cannot be more than MAX_WITHDRAW_FEE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7bb9c347f949e24da350c193cc8369c19aa7e8a530aba25a3447a9658c66f18",
																"typeString": "literal_string \"withdrawFee cannot be more than MAX_WITHDRAW_FEE\""
															}
														],
														"id": 2877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25323:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25323:101:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2883,
												"nodeType": "ExpressionStatement",
												"src": "25323:101:7"
											},
											{
												"expression": {
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2884,
														"name": "withdrawFeeContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "25435:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2885,
														"name": "_withdrawFeeContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2872,
														"src": "25457:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25435:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2887,
												"nodeType": "ExpressionStatement",
												"src": "25435:42:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2889,
															"name": "withdrawFeeContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "25516:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2888,
														"name": "NewWithdrawFeeContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "25493:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25493:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2891,
												"nodeType": "EmitStatement",
												"src": "25488:48:7"
											}
										]
									},
									"documentation": {
										"id": 2870,
										"nodeType": "StructuredDocumentation",
										"src": "25117:108:7",
										"text": " @notice Set withdraw fee for contract\n @dev Only callable by the contract admin."
									},
									"functionSelector": "14ff3039",
									"id": 2893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2875,
											"modifierName": {
												"id": 2874,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "25302:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "25302:9:7"
										}
									],
									"name": "setWithdrawFeeContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "_withdrawFeeContract",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "25263:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25262:30:7"
									},
									"returnParameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25312:0:7"
									},
									"scope": 3528,
									"src": "25231:313:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2916,
										"nodeType": "Block",
										"src": "25737:279:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2902,
																"name": "_withdrawFeePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2896,
																"src": "25770:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2903,
																"name": "MAX_WITHDRAW_FEE_PERIOD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "25792:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25770:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7769746864726177466565506572696f642063616e6e6f74206265206d6f7265207468616e204d41585f57495448445241575f4645455f504552494f44",
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25830:63:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850",
																"typeString": "literal_string \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\""
															},
															"value": "withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfca239801295453e18a917561471428326355dcfd35c2679d3e455f8ddb6850",
																"typeString": "literal_string \"withdrawFeePeriod cannot be more than MAX_WITHDRAW_FEE_PERIOD\""
															}
														],
														"id": 2901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25748:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25748:156:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2907,
												"nodeType": "ExpressionStatement",
												"src": "25748:156:7"
											},
											{
												"expression": {
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2908,
														"name": "withdrawFeePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "25915:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2909,
														"name": "_withdrawFeePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2896,
														"src": "25935:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25915:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "25915:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2913,
															"name": "withdrawFeePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "25990:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2912,
														"name": "NewWithdrawFeePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "25969:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25969:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2915,
												"nodeType": "EmitStatement",
												"src": "25964:44:7"
											}
										]
									},
									"documentation": {
										"id": 2894,
										"nodeType": "StructuredDocumentation",
										"src": "25552:102:7",
										"text": " @notice Set withdraw fee period\n @dev Only callable by the contract admin."
									},
									"functionSelector": "1efac1b8",
									"id": 2917,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2899,
											"modifierName": {
												"id": 2898,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "25727:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "25727:9:7"
										}
									],
									"name": "setWithdrawFeePeriod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "_withdrawFeePeriod",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "25690:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25690:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25689:28:7"
									},
									"returnParameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25737:0:7"
									},
									"scope": 3528,
									"src": "25660:356:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2940,
										"nodeType": "Block",
										"src": "26203:272:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2926,
																"name": "_maxLockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "26236:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2927,
																"name": "MAX_LOCK_DURATION_LIMIT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "26256:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26236:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d41585f4c4f434b5f4455524154494f4e2063616e6e6f74206265206d6f7265207468616e204d41585f4c4f434b5f4455524154494f4e5f4c494d4954",
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26294:63:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ce64d2b78e772fd03ab4b249ad40764f5663f940bce3610710f57f4f06d907d",
																"typeString": "literal_string \"MAX_LOCK_DURATION cannot be more than MAX_LOCK_DURATION_LIMIT\""
															},
															"value": "MAX_LOCK_DURATION cannot be more than MAX_LOCK_DURATION_LIMIT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ce64d2b78e772fd03ab4b249ad40764f5663f940bce3610710f57f4f06d907d",
																"typeString": "literal_string \"MAX_LOCK_DURATION cannot be more than MAX_LOCK_DURATION_LIMIT\""
															}
														],
														"id": 2925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26214:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26214:154:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2931,
												"nodeType": "ExpressionStatement",
												"src": "26214:154:7"
											},
											{
												"expression": {
													"id": 2934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2932,
														"name": "MAX_LOCK_DURATION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "26379:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2933,
														"name": "_maxLockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2920,
														"src": "26399:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26379:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2935,
												"nodeType": "ExpressionStatement",
												"src": "26379:36:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2937,
															"name": "_maxLockDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "26450:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2936,
														"name": "NewMaxLockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "26431:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26431:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2939,
												"nodeType": "EmitStatement",
												"src": "26426:41:7"
											}
										]
									},
									"documentation": {
										"id": 2918,
										"nodeType": "StructuredDocumentation",
										"src": "26024:100:7",
										"text": " @notice Set MAX_LOCK_DURATION\n @dev Only callable by the contract admin."
									},
									"functionSelector": "f786b958",
									"id": 2941,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2923,
											"modifierName": {
												"id": 2922,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "26193:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "26193:9:7"
										}
									],
									"name": "setMaxLockDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "_maxLockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "26158:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26158:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26157:26:7"
									},
									"returnParameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26203:0:7"
									},
									"scope": 3528,
									"src": "26130:345:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "26658:175:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2950,
																"name": "_durationFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2944,
																"src": "26677:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26695:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26677:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4455524154494f4e5f464143544f522063616e6e6f74206265207a65726f",
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26698:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29c3dda5238886c0c2b0c920ff04c8c094d90964430542d409c152ec9508c598",
																"typeString": "literal_string \"DURATION_FACTOR cannot be zero\""
															},
															"value": "DURATION_FACTOR cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29c3dda5238886c0c2b0c920ff04c8c094d90964430542d409c152ec9508c598",
																"typeString": "literal_string \"DURATION_FACTOR cannot be zero\""
															}
														],
														"id": 2949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26669:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26669:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2955,
												"nodeType": "ExpressionStatement",
												"src": "26669:62:7"
											},
											{
												"expression": {
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2956,
														"name": "DURATION_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "26742:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2957,
														"name": "_durationFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "26760:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26742:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2959,
												"nodeType": "ExpressionStatement",
												"src": "26742:33:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2961,
															"name": "_durationFactor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "26809:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2960,
														"name": "NewDurationFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "26791:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26791:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2963,
												"nodeType": "EmitStatement",
												"src": "26786:39:7"
											}
										]
									},
									"documentation": {
										"id": 2942,
										"nodeType": "StructuredDocumentation",
										"src": "26483:98:7",
										"text": " @notice Set DURATION_FACTOR\n @dev Only callable by the contract admin."
									},
									"functionSelector": "a3639b39",
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2947,
											"modifierName": {
												"id": 2946,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "26648:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "26648:9:7"
										}
									],
									"name": "setDurationFactor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "_durationFactor",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "26614:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26614:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26613:25:7"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26658:0:7"
									},
									"scope": 3528,
									"src": "26587:246:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2988,
										"nodeType": "Block",
										"src": "27038:219:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2974,
																"name": "_durationFactorOverdue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2968,
																"src": "27057:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27082:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27057:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4455524154494f4e5f464143544f525f4f5645524455452063616e6e6f74206265207a65726f",
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27085:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71c64dcd9910993c4406a203e7eeb1a8bd40bb350e3ff095a417b8236fbf716d",
																"typeString": "literal_string \"DURATION_FACTOR_OVERDUE cannot be zero\""
															},
															"value": "DURATION_FACTOR_OVERDUE cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71c64dcd9910993c4406a203e7eeb1a8bd40bb350e3ff095a417b8236fbf716d",
																"typeString": "literal_string \"DURATION_FACTOR_OVERDUE cannot be zero\""
															}
														],
														"id": 2973,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27049:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27049:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2979,
												"nodeType": "ExpressionStatement",
												"src": "27049:77:7"
											},
											{
												"expression": {
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2980,
														"name": "DURATION_FACTOR_OVERDUE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "27137:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2981,
														"name": "_durationFactorOverdue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "27163:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27137:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2983,
												"nodeType": "ExpressionStatement",
												"src": "27137:48:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2985,
															"name": "_durationFactorOverdue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2968,
															"src": "27226:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2984,
														"name": "NewDurationFactorOverdue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "27201:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27201:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2987,
												"nodeType": "EmitStatement",
												"src": "27196:53:7"
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "26841:106:7",
										"text": " @notice Set DURATION_FACTOR_OVERDUE\n @dev Only callable by the contract admin."
									},
									"functionSelector": "35981921",
									"id": 2989,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2971,
											"modifierName": {
												"id": 2970,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "27028:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "27028:9:7"
										}
									],
									"name": "setDurationFactorOverdue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "_durationFactorOverdue",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "26987:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26987:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26986:32:7"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27038:0:7"
									},
									"scope": 3528,
									"src": "26953:304:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3012,
										"nodeType": "Block",
										"src": "27453:201:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2998,
																"name": "_unlockFreeDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2992,
																"src": "27472:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27494:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27472:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e4c4f434b5f465245455f4455524154494f4e2063616e6e6f74206265207a65726f",
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27497:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efe7ff328c30df05a818fd689e8dfc735e13c3b6ee781869dfe88f3867bf2df1",
																"typeString": "literal_string \"UNLOCK_FREE_DURATION cannot be zero\""
															},
															"value": "UNLOCK_FREE_DURATION cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efe7ff328c30df05a818fd689e8dfc735e13c3b6ee781869dfe88f3867bf2df1",
																"typeString": "literal_string \"UNLOCK_FREE_DURATION cannot be zero\""
															}
														],
														"id": 2997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27464:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27464:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3003,
												"nodeType": "ExpressionStatement",
												"src": "27464:71:7"
											},
											{
												"expression": {
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3004,
														"name": "UNLOCK_FREE_DURATION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "27546:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3005,
														"name": "_unlockFreeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2992,
														"src": "27569:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27546:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3007,
												"nodeType": "ExpressionStatement",
												"src": "27546:42:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3009,
															"name": "_unlockFreeDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2992,
															"src": "27626:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3008,
														"name": "NewUnlockFreeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "27604:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27604:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3011,
												"nodeType": "EmitStatement",
												"src": "27599:47:7"
											}
										]
									},
									"documentation": {
										"id": 2990,
										"nodeType": "StructuredDocumentation",
										"src": "27265:103:7",
										"text": " @notice Set UNLOCK_FREE_DURATION\n @dev Only callable by the contract admin."
									},
									"functionSelector": "c54d349c",
									"id": 3013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2995,
											"modifierName": {
												"id": 2994,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "27443:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "27443:9:7"
										}
									],
									"name": "setUnlockFreeDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "_unlockFreeDuration",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "27405:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27405:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27404:29:7"
									},
									"returnParameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27453:0:7"
									},
									"scope": 3528,
									"src": "27374:280:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3036,
										"nodeType": "Block",
										"src": "27828:199:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3022,
																"name": "_boostWeight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3016,
																"src": "27847:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3023,
																"name": "BOOST_WEIGHT_LIMIT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "27863:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27847:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "424f4f53545f5745494748542063616e6e6f74206265206d6f7265207468616e20424f4f53545f5745494748545f4c494d4954",
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27883:53:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b575fa66b8451a79394d49306a8697c34d0aae2614b1db0b1eae983133b5a92",
																"typeString": "literal_string \"BOOST_WEIGHT cannot be more than BOOST_WEIGHT_LIMIT\""
															},
															"value": "BOOST_WEIGHT cannot be more than BOOST_WEIGHT_LIMIT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b575fa66b8451a79394d49306a8697c34d0aae2614b1db0b1eae983133b5a92",
																"typeString": "literal_string \"BOOST_WEIGHT cannot be more than BOOST_WEIGHT_LIMIT\""
															}
														],
														"id": 3021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27839:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27839:98:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "27839:98:7"
											},
											{
												"expression": {
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3028,
														"name": "BOOST_WEIGHT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "27948:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3029,
														"name": "_boostWeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3016,
														"src": "27963:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27948:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3031,
												"nodeType": "ExpressionStatement",
												"src": "27948:27:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3033,
															"name": "_boostWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3016,
															"src": "28006:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3032,
														"name": "NewBoostWeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "27991:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27991:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3035,
												"nodeType": "EmitStatement",
												"src": "27986:33:7"
											}
										]
									},
									"documentation": {
										"id": 3014,
										"nodeType": "StructuredDocumentation",
										"src": "27662:95:7",
										"text": " @notice Set BOOST_WEIGHT\n @dev Only callable by the contract admin."
									},
									"functionSelector": "93c99e6a",
									"id": 3037,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3019,
											"modifierName": {
												"id": 3018,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "27818:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "27818:9:7"
										}
									],
									"name": "setBoostWeight",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "_boostWeight",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "27787:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27787:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27786:22:7"
									},
									"returnParameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27828:0:7"
									},
									"scope": 3528,
									"src": "27763:264:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3076,
										"nodeType": "Block",
										"src": "28183:220:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3046,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3040,
																"src": "28202:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3049,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "28220:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$298",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$298",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28212:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3047,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28212:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28212:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28202:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2063616e6e6f742062652073616d65206173206465706f73697420746f6b656e",
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28228:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19",
																"typeString": "literal_string \"Token cannot be same as deposit token\""
															},
															"value": "Token cannot be same as deposit token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ea9d2748b0a4cf4d9041ea5447cc8d433bce6ae4e36584bac37b5bb6ca2fc19",
																"typeString": "literal_string \"Token cannot be same as deposit token\""
															}
														],
														"id": 3045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28194:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28194:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3054,
												"nodeType": "ExpressionStatement",
												"src": "28194:74:7"
											},
											{
												"assignments": [
													3056
												],
												"declarations": [
													{
														"constant": false,
														"id": 3056,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 3076,
														"src": "28281:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28281:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3066,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3063,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "28331:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																],
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28323:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3061,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28323:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28323:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3058,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3040,
																	"src": "28305:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3057,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "28298:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$298_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28298:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														"id": 3060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "28298:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28298:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28281:56:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3071,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28376:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28376:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3073,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3056,
															"src": "28388:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3068,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3040,
																	"src": "28355:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3067,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "28348:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$298_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28348:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														"id": 3070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "28348:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$298_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$298_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28348:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3075,
												"nodeType": "ExpressionStatement",
												"src": "28348:47:7"
											}
										]
									},
									"documentation": {
										"id": 3038,
										"nodeType": "StructuredDocumentation",
										"src": "28035:77:7",
										"text": " @notice Withdraw unexpected tokens sent to the Shdw Pool"
									},
									"functionSelector": "def68a9c",
									"id": 3077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3043,
											"modifierName": {
												"id": 3042,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "28173:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "28173:9:7"
										}
									],
									"name": "inCaseTokensGetStuck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "28148:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28148:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28147:16:7"
									},
									"returnParameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28183:0:7"
									},
									"scope": 3528,
									"src": "28118:285:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3091,
										"nodeType": "Block",
										"src": "28570:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3085,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "28581:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28581:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3087,
												"nodeType": "ExpressionStatement",
												"src": "28581:8:7"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3088,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "28605:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28605:7:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3090,
												"nodeType": "EmitStatement",
												"src": "28600:12:7"
											}
										]
									},
									"documentation": {
										"id": 3078,
										"nodeType": "StructuredDocumentation",
										"src": "28411:103:7",
										"text": " @notice Trigger stopped state\n @dev Only possible when contract not paused."
									},
									"functionSelector": "8456cb59",
									"id": 3092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3081,
											"modifierName": {
												"id": 3080,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "28546:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "28546:9:7"
										},
										{
											"id": 3083,
											"modifierName": {
												"id": 3082,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "28556:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "28556:13:7"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28534:2:7"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28570:0:7"
									},
									"scope": 3528,
									"src": "28520:100:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3106,
										"nodeType": "Block",
										"src": "28786:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3100,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "28797:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28797:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3102,
												"nodeType": "ExpressionStatement",
												"src": "28797:10:7"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3103,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "28823:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28823:9:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3105,
												"nodeType": "EmitStatement",
												"src": "28818:14:7"
											}
										]
									},
									"documentation": {
										"id": 3093,
										"nodeType": "StructuredDocumentation",
										"src": "28628:103:7",
										"text": " @notice Return to normal state\n @dev Only possible when contract is paused."
									},
									"functionSelector": "3f4ba83a",
									"id": 3107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3096,
											"modifierName": {
												"id": 3095,
												"name": "onlyAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "28765:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "28765:9:7"
										},
										{
											"id": 3098,
											"modifierName": {
												"id": 3097,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "28775:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "28775:10:7"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28753:2:7"
									},
									"returnParameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28786:0:7"
									},
									"scope": 3528,
									"src": "28737:103:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3188,
										"nodeType": "Block",
										"src": "29063:667:7",
										"statements": [
											{
												"assignments": [
													3117
												],
												"declarations": [
													{
														"constant": false,
														"id": 3117,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "29074:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
															"typeString": "struct ShadowPool.UserInfo"
														},
														"typeName": {
															"id": 3116,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3115,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "29074:8:7"
															},
															"referencedDeclaration": 967,
															"src": "29074:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3121,
												"initialValue": {
													"baseExpression": {
														"id": 3118,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29098:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
															"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
														}
													},
													"id": 3120,
													"indexExpression": {
														"id": 3119,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3110,
														"src": "29107:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29098:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$967_storage",
														"typeString": "struct ShadowPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29074:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3122,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3117,
																	"src": "29128:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo storage pointer"
																	}
																},
																"id": 3123,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 950,
																"src": "29128:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29128:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 3128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "29147:12:7",
															"subExpression": {
																"expression": {
																	"id": 3126,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3117,
																	"src": "29148:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo storage pointer"
																	}
																},
																"id": 3127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "locked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 964,
																"src": "29148:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "29128:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 3133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "29163:31:7",
														"subExpression": {
															"baseExpression": {
																"id": 3130,
																"name": "freePerformanceFeeUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "29164:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3132,
															"indexExpression": {
																"id": 3131,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3110,
																"src": "29188:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29164:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29128:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3185,
												"nodeType": "IfStatement",
												"src": "29124:580:7",
												"trueBody": {
													"id": 3184,
													"nodeType": "Block",
													"src": "29196:508:7",
													"statements": [
														{
															"assignments": [
																3136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3136,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 3184,
																	"src": "29211:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3135,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29211:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3142,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3137,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "29226:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 3138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29226:11:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3139,
																		"name": "calculateTotalpendingShdwRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3453,
																		"src": "29240:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 3140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29240:34:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29226:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29211:63:7"
														},
														{
															"assignments": [
																3144
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3144,
																	"mutability": "mutable",
																	"name": "totalAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 3184,
																	"src": "29289:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3143,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29289:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3152,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3145,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3117,
																					"src": "29312:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 3146,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "shares",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 950,
																				"src": "29312:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3147,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3136,
																				"src": "29326:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29312:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3149,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29311:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3150,
																	"name": "totalShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "29334:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29311:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29289:56:7"
														},
														{
															"assignments": [
																3154
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3154,
																	"mutability": "mutable",
																	"name": "earnAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 3184,
																	"src": "29360:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3153,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29360:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3159,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3155,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3144,
																	"src": "29381:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 3156,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3117,
																		"src": "29395:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 3157,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "shdwAtLastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "29395:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29381:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29360:60:7"
														},
														{
															"assignments": [
																3161
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3161,
																	"mutability": "mutable",
																	"name": "feeRate",
																	"nodeType": "VariableDeclaration",
																	"scope": 3184,
																	"src": "29435:15:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3160,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29435:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3163,
															"initialValue": {
																"id": 3162,
																"name": "performanceFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "29453:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29435:32:7"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"id": 3165,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3110,
																		"src": "29498:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3164,
																	"name": "_isContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3527,
																	"src": "29486:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 3166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29486:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3172,
															"nodeType": "IfStatement",
															"src": "29482:91:7",
															"trueBody": {
																"id": 3171,
																"nodeType": "Block",
																"src": "29506:67:7",
																"statements": [
																	{
																		"expression": {
																			"id": 3169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3167,
																				"name": "feeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3161,
																				"src": "29525:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3168,
																				"name": "performanceFeeContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1068,
																				"src": "29535:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29525:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3170,
																		"nodeType": "ExpressionStatement",
																		"src": "29525:32:7"
																	}
																]
															}
														},
														{
															"assignments": [
																3174
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3174,
																	"mutability": "mutable",
																	"name": "currentPerformanceFee",
																	"nodeType": "VariableDeclaration",
																	"scope": 3184,
																	"src": "29587:29:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3173,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29587:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3181,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3175,
																				"name": "earnAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3154,
																				"src": "29620:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3176,
																				"name": "feeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3161,
																				"src": "29633:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29620:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3178,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29619:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 3179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29644:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "29619:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29587:62:7"
														},
														{
															"expression": {
																"id": 3182,
																"name": "currentPerformanceFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3174,
																"src": "29671:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3114,
															"id": 3183,
															"nodeType": "Return",
															"src": "29664:28:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29721:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 3114,
												"id": 3187,
												"nodeType": "Return",
												"src": "29714:8:7"
											}
										]
									},
									"documentation": {
										"id": 3108,
										"nodeType": "StructuredDocumentation",
										"src": "28848:131:7",
										"text": " @notice Calculate Performance fee.\n @param _user: User address\n @return Returns Performance fee."
									},
									"functionSelector": "c6ed51be",
									"id": 3189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePerformanceFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "29018:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29018:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29017:15:7"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "29054:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29053:9:7"
									},
									"scope": 3528,
									"src": "28985:745:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3298,
										"nodeType": "Block",
										"src": "29941:1074:7",
										"statements": [
											{
												"assignments": [
													3199
												],
												"declarations": [
													{
														"constant": false,
														"id": 3199,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 3298,
														"src": "29952:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
															"typeString": "struct ShadowPool.UserInfo"
														},
														"typeName": {
															"id": 3198,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3197,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "29952:8:7"
															},
															"referencedDeclaration": 967,
															"src": "29952:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3203,
												"initialValue": {
													"baseExpression": {
														"id": 3200,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29976:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
															"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
														}
													},
													"id": 3202,
													"indexExpression": {
														"id": 3201,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3192,
														"src": "29985:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29976:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$967_storage",
														"typeString": "struct ShadowPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29952:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3204,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3199,
																		"src": "30020:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 3205,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "30020:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30034:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "30020:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"expression": {
																	"id": 3208,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3199,
																	"src": "30052:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																		"typeString": "struct ShadowPool.UserInfo storage pointer"
																	}
																},
																"id": 3209,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "locked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 964,
																"src": "30052:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "30020:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "30080:27:7",
															"subExpression": {
																"baseExpression": {
																	"id": 3211,
																	"name": "freeOverdueFeeUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "30081:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3213,
																"indexExpression": {
																	"id": 3212,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3192,
																	"src": "30101:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30081:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "30020:87:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3216,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "30126:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																						"typeString": "struct ShadowPool.UserInfo storage pointer"
																					}
																				},
																				"id": 3217,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "lockEndTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 960,
																				"src": "30126:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 3218,
																				"name": "UNLOCK_FREE_DURATION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1048,
																				"src": "30145:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30126:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3220,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30125:41:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 3221,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "30169:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "30169:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30125:59:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 3224,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "30124:61:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30020:165:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3295,
												"nodeType": "IfStatement",
												"src": "30002:987:7",
												"trueBody": {
													"id": 3294,
													"nodeType": "Block",
													"src": "30197:792:7",
													"statements": [
														{
															"assignments": [
																3227
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3227,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 3294,
																	"src": "30212:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3226,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30212:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3233,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3228,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "30227:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 3229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30227:11:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3230,
																		"name": "calculateTotalpendingShdwRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3453,
																		"src": "30241:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 3231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30241:34:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30227:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30212:63:7"
														},
														{
															"assignments": [
																3235
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3235,
																	"mutability": "mutable",
																	"name": "currentAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 3294,
																	"src": "30290:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3234,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30290:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3247,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3236,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3227,
																					"src": "30315:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"expression": {
																								"id": 3237,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3199,
																								"src": "30323:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																									"typeString": "struct ShadowPool.UserInfo storage pointer"
																								}
																							},
																							"id": 3238,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "shares",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 950,
																							"src": "30323:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3239,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "30322:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30315:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3241,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "30314:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3242,
																		"name": "totalShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "30339:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30314:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 3244,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3199,
																		"src": "30353:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 3245,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "userBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 962,
																	"src": "30353:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30314:60:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30290:84:7"
														},
														{
															"assignments": [
																3249
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3249,
																	"mutability": "mutable",
																	"name": "earnAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 3294,
																	"src": "30389:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3248,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30389:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3254,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3250,
																	"name": "currentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3235,
																	"src": "30410:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 3251,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3199,
																		"src": "30426:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 3252,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 966,
																	"src": "30426:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30410:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30389:54:7"
														},
														{
															"assignments": [
																3256
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3256,
																	"mutability": "mutable",
																	"name": "overdueDuration",
																	"nodeType": "VariableDeclaration",
																	"scope": 3294,
																	"src": "30458:23:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3255,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30458:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3264,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3257,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "30484:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "30484:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3259,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3199,
																			"src": "30502:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 3260,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockEndTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 960,
																		"src": "30502:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30484:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3262,
																	"name": "UNLOCK_FREE_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "30521:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30484:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30458:83:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3265,
																	"name": "overdueDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3256,
																	"src": "30560:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 3266,
																	"name": "DURATION_FACTOR_OVERDUE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "30578:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30560:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3273,
															"nodeType": "IfStatement",
															"src": "30556:123:7",
															"trueBody": {
																"id": 3272,
																"nodeType": "Block",
																"src": "30603:76:7",
																"statements": [
																	{
																		"expression": {
																			"id": 3270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3268,
																				"name": "overdueDuration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3256,
																				"src": "30622:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3269,
																				"name": "DURATION_FACTOR_OVERDUE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "30640:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30622:41:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3271,
																		"nodeType": "ExpressionStatement",
																		"src": "30622:41:7"
																	}
																]
															}
														},
														{
															"assignments": [
																3275
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3275,
																	"mutability": "mutable",
																	"name": "overdueWeight",
																	"nodeType": "VariableDeclaration",
																	"scope": 3294,
																	"src": "30768:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3274,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30768:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3282,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3276,
																				"name": "overdueDuration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3256,
																				"src": "30793:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3277,
																				"name": "overdueFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "30811:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30793:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3279,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30792:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3280,
																	"name": "DURATION_FACTOR_OVERDUE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "30825:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30792:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30768:80:7"
														},
														{
															"assignments": [
																3284
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3284,
																	"mutability": "mutable",
																	"name": "currentOverdueFee",
																	"nodeType": "VariableDeclaration",
																	"scope": 3294,
																	"src": "30863:25:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3283,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30863:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3291,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3285,
																				"name": "earnAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3249,
																				"src": "30892:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3286,
																				"name": "overdueWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3275,
																				"src": "30905:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30892:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3288,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30891:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3289,
																	"name": "PRECISION_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "30922:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30891:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30863:75:7"
														},
														{
															"expression": {
																"id": 3292,
																"name": "currentOverdueFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3284,
																"src": "30960:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3196,
															"id": 3293,
															"nodeType": "Return",
															"src": "30953:24:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 3296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31006:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 3196,
												"id": 3297,
												"nodeType": "Return",
												"src": "30999:8:7"
											}
										]
									},
									"documentation": {
										"id": 3190,
										"nodeType": "StructuredDocumentation",
										"src": "29738:123:7",
										"text": " @notice Calculate overdue fee.\n @param _user: User address\n @return Returns Overdue fee."
									},
									"functionSelector": "95dc14e1",
									"id": 3299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateOverdueFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "29896:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29896:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29895:15:7"
									},
									"returnParameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "29932:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29932:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29931:9:7"
									},
									"scope": 3528,
									"src": "29867:1148:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3315,
										"nodeType": "Block",
										"src": "31282:85:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3308,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3302,
																"src": "31324:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3307,
															"name": "calculatePerformanceFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3189,
															"src": "31300:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31300:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 3311,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3302,
																"src": "31353:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3310,
															"name": "calculateOverdueFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "31333:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31333:26:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31300:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3306,
												"id": 3314,
												"nodeType": "Return",
												"src": "31293:66:7"
											}
										]
									},
									"documentation": {
										"id": 3300,
										"nodeType": "StructuredDocumentation",
										"src": "31023:161:7",
										"text": " @notice Calculate Performance Fee Or Overdue Fee\n @param _user: User address\n @return Returns  Performance Fee Or Overdue Fee."
									},
									"id": 3316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePerformanceFeeOrOverdueFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3302,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "31235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31235:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31234:15:7"
									},
									"returnParameters": {
										"id": 3306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "31273:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31273:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31272:9:7"
									},
									"scope": 3528,
									"src": "31190:177:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3432,
										"nodeType": "Block",
										"src": "31651:1010:7",
										"statements": [
											{
												"assignments": [
													3328
												],
												"declarations": [
													{
														"constant": false,
														"id": 3328,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 3432,
														"src": "31662:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
															"typeString": "struct ShadowPool.UserInfo"
														},
														"typeName": {
															"id": 3327,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3326,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "31662:8:7"
															},
															"referencedDeclaration": 967,
															"src": "31662:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3332,
												"initialValue": {
													"baseExpression": {
														"id": 3329,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "31686:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$967_storage_$",
															"typeString": "mapping(address => struct ShadowPool.UserInfo storage ref)"
														}
													},
													"id": 3331,
													"indexExpression": {
														"id": 3330,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3319,
														"src": "31695:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31686:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$967_storage",
														"typeString": "struct ShadowPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31662:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3333,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "31716:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																"typeString": "struct ShadowPool.UserInfo storage pointer"
															}
														},
														"id": 3334,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "31716:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3335,
														"name": "_shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3321,
														"src": "31730:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31716:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3343,
												"nodeType": "IfStatement",
												"src": "31712:75:7",
												"trueBody": {
													"id": 3342,
													"nodeType": "Block",
													"src": "31739:48:7",
													"statements": [
														{
															"expression": {
																"id": 3340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3337,
																	"name": "_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3321,
																	"src": "31754:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3338,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3328,
																		"src": "31764:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 3339,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "31764:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31754:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3341,
															"nodeType": "ExpressionStatement",
															"src": "31754:21:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "31801:33:7",
														"subExpression": {
															"baseExpression": {
																"id": 3344,
																"name": "freeWithdrawFeeUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "31802:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3347,
															"indexExpression": {
																"expression": {
																	"id": 3345,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31823:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31823:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31802:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3349,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "31839:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "31839:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3351,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3328,
																			"src": "31857:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastDepositedTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "31857:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3353,
																		"name": "withdrawFeePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "31882:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "31857:42:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31839:60:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 3356,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31838:62:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "31801:99:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3429,
												"nodeType": "IfStatement",
												"src": "31797:838:7",
												"trueBody": {
													"id": 3428,
													"nodeType": "Block",
													"src": "31902:733:7",
													"statements": [
														{
															"assignments": [
																3359
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3359,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 3428,
																	"src": "31917:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3358,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31917:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3365,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3360,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "31932:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 3361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31932:11:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3362,
																		"name": "calculateTotalpendingShdwRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3453,
																		"src": "31946:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 3363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31946:34:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31932:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31917:63:7"
														},
														{
															"assignments": [
																3367
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3367,
																	"mutability": "mutable",
																	"name": "sharesPercent",
																	"nodeType": "VariableDeclaration",
																	"scope": 3428,
																	"src": "31995:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3366,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31995:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3375,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3368,
																				"name": "_shares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3321,
																				"src": "32020:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3369,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1036,
																				"src": "32030:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32020:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3371,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32019:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 3372,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3328,
																		"src": "32050:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																			"typeString": "struct ShadowPool.UserInfo storage pointer"
																		}
																	},
																	"id": 3373,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 950,
																	"src": "32050:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32019:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31995:66:7"
														},
														{
															"assignments": [
																3377
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3377,
																	"mutability": "mutable",
																	"name": "currentTotalAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 3428,
																	"src": "32076:26:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3376,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32076:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3393,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3378,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3359,
																						"src": "32106:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"expression": {
																									"id": 3379,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3328,
																									"src": "32114:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																										"typeString": "struct ShadowPool.UserInfo storage pointer"
																									}
																								},
																								"id": 3380,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "shares",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 950,
																								"src": "32114:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3381,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "32113:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "32106:20:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3383,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "32105:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 3384,
																			"name": "totalShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "32147:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32105:53:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3386,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3328,
																			"src": "32178:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$967_storage_ptr",
																				"typeString": "struct ShadowPool.UserInfo storage pointer"
																			}
																		},
																		"id": 3387,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "userBoostedShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 962,
																		"src": "32178:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32105:94:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 3390,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "32255:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3389,
																		"name": "calculatePerformanceFeeOrOverdueFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3316,
																		"src": "32219:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 3391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32219:42:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32105:156:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32076:185:7"
														},
														{
															"assignments": [
																3395
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3395,
																	"mutability": "mutable",
																	"name": "currentAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 3428,
																	"src": "32276:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3394,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32276:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3402,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3396,
																				"name": "currentTotalAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3377,
																				"src": "32301:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3397,
																				"name": "sharesPercent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3367,
																				"src": "32322:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32301:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3399,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32300:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3400,
																	"name": "PRECISION_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "32339:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32300:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32276:79:7"
														},
														{
															"assignments": [
																3404
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3404,
																	"mutability": "mutable",
																	"name": "feeRate",
																	"nodeType": "VariableDeclaration",
																	"scope": 3428,
																	"src": "32370:15:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3403,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32370:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3406,
															"initialValue": {
																"id": 3405,
																"name": "withdrawFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "32388:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32370:29:7"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3408,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32430:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32430:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3407,
																	"name": "_isContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3527,
																	"src": "32418:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 3410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32418:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3416,
															"nodeType": "IfStatement",
															"src": "32414:93:7",
															"trueBody": {
																"id": 3415,
																"nodeType": "Block",
																"src": "32443:64:7",
																"statements": [
																	{
																		"expression": {
																			"id": 3413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3411,
																				"name": "feeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3404,
																				"src": "32462:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3412,
																				"name": "withdrawFeeContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1074,
																				"src": "32472:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32462:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3414,
																		"nodeType": "ExpressionStatement",
																		"src": "32462:29:7"
																	}
																]
															}
														},
														{
															"assignments": [
																3418
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3418,
																	"mutability": "mutable",
																	"name": "currentWithdrawFee",
																	"nodeType": "VariableDeclaration",
																	"scope": 3428,
																	"src": "32521:26:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3417,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32521:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3425,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3419,
																				"name": "currentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3395,
																				"src": "32551:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3420,
																				"name": "feeRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3404,
																				"src": "32567:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32551:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3422,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32550:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 3423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32578:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "32550:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32521:62:7"
														},
														{
															"expression": {
																"id": 3426,
																"name": "currentWithdrawFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3418,
																"src": "32605:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3325,
															"id": 3427,
															"nodeType": "Return",
															"src": "32598:25:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 3430,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32652:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 3325,
												"id": 3431,
												"nodeType": "Return",
												"src": "32645:8:7"
											}
										]
									},
									"documentation": {
										"id": 3317,
										"nodeType": "StructuredDocumentation",
										"src": "31375:178:7",
										"text": " @notice Calculate withdraw fee.\n @param _user: User address\n @param _shares: Number of shares to withdraw\n @return Returns Withdraw fee."
									},
									"functionSelector": "29a5cfd6",
									"id": 3433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateWithdrawFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3319,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3433,
												"src": "31589:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31589:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"scope": 3433,
												"src": "31604:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31604:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31588:32:7"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3433,
												"src": "31642:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31641:9:7"
									},
									"scope": 3528,
									"src": "31559:1102:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3452,
										"nodeType": "Block",
										"src": "32887:112:7",
										"statements": [
											{
												"assignments": [
													3440
												],
												"declarations": [
													{
														"constant": false,
														"id": 3440,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 3452,
														"src": "32898:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32898:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3449,
												"initialValue": {
													"arguments": [
														{
															"id": 3443,
															"name": "shdwPoolPID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "32940:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3446,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32961:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																],
																"id": 3445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32953:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32953:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 3447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32953:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3441,
															"name": "shadowchefV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "32915:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IShadowChefV2_$3586",
																"typeString": "contract IShadowChefV2"
															}
														},
														"id": 3442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pendingShdw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3569,
														"src": "32915:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) view external returns (uint256)"
														}
													},
													"id": 3448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32915:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32898:69:7"
											},
											{
												"expression": {
													"id": 3450,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3440,
													"src": "32985:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3438,
												"id": 3451,
												"nodeType": "Return",
												"src": "32978:13:7"
											}
										]
									},
									"documentation": {
										"id": 3434,
										"nodeType": "StructuredDocumentation",
										"src": "32669:138:7",
										"text": " @notice Calculates the total pending rewards that can be harvested\n @return Returns total pending Shdw rewards"
									},
									"functionSelector": "cc9cfba1",
									"id": 3453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTotalpendingShdwRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32854:2:7"
									},
									"returnParameters": {
										"id": 3438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "32878:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32877:9:7"
									},
									"scope": 3528,
									"src": "32813:186:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3477,
										"nodeType": "Block",
										"src": "33071:129:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3458,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "33089:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33104:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "33089:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3466,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 3462,
																								"name": "balanceOf",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3510,
																								"src": "33118:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 3463,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33118:11:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 3464,
																								"name": "calculateTotalpendingShdwRewards",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3453,
																								"src": "33132:32:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 3465,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33132:34:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "33118:48:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3467,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "33117:50:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"hexValue": "31653138",
																						"id": 3468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "33171:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1e18"
																					}
																				],
																				"id": 3469,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "33170:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			},
																			"src": "33117:59:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3471,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "33116:61:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3472,
																	"name": "totalShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "33180:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33116:75:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "33115:77:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "33089:103:7",
													"trueExpression": {
														"hexValue": "31653138",
														"id": 3461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33108:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3457,
												"id": 3476,
												"nodeType": "Return",
												"src": "33082:110:7"
											}
										]
									},
									"functionSelector": "77c7b8fc",
									"id": 3478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPricePerFullShare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33036:2:7"
									},
									"returnParameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3478,
												"src": "33062:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33062:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33061:9:7"
									},
									"scope": 3528,
									"src": "33007:193:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3492,
										"nodeType": "Block",
										"src": "33383:56:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3488,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "33425:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ShadowPool_$3528",
																		"typeString": "contract ShadowPool"
																	}
																],
																"id": 3487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33417:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33417:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 3489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33417:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3484,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "33401:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$298",
																"typeString": "contract IERC20"
															}
														},
														"id": 3485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "33401:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33401:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3483,
												"id": 3491,
												"nodeType": "Return",
												"src": "33394:37:7"
											}
										]
									},
									"documentation": {
										"id": 3479,
										"nodeType": "StructuredDocumentation",
										"src": "33208:118:7",
										"text": " @notice Current pool available balance\n @dev The contract puts 100% of the tokens to work."
									},
									"functionSelector": "48a0d754",
									"id": 3493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "available",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33350:2:7"
									},
									"returnParameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3482,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "33374:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33374:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33373:9:7"
									},
									"scope": 3528,
									"src": "33332:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3509,
										"nodeType": "Block",
										"src": "33651:73:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3503,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "33693:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ShadowPool_$3528",
																			"typeString": "contract ShadowPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ShadowPool_$3528",
																			"typeString": "contract ShadowPool"
																		}
																	],
																	"id": 3502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33685:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3501,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "33685:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 3504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33685:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 3499,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "33669:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$298",
																	"typeString": "contract IERC20"
																}
															},
															"id": 3500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 255,
															"src": "33669:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 3505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33669:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3506,
														"name": "totalBoostDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "33702:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33669:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3498,
												"id": 3508,
												"nodeType": "Return",
												"src": "33662:54:7"
											}
										]
									},
									"documentation": {
										"id": 3494,
										"nodeType": "StructuredDocumentation",
										"src": "33447:147:7",
										"text": " @notice Calculates the total underlying tokens\n @dev It includes tokens held by the contract and the boost debt amount."
									},
									"functionSelector": "722713f7",
									"id": 3510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33618:2:7"
									},
									"returnParameters": {
										"id": 3498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "33642:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33641:9:7"
									},
									"scope": 3528,
									"src": "33600:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3526,
										"nodeType": "Block",
										"src": "33862:127:7",
										"statements": [
											{
												"assignments": [
													3519
												],
												"declarations": [
													{
														"constant": false,
														"id": 3519,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 3526,
														"src": "33873:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33873:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3520,
												"nodeType": "VariableDeclarationStatement",
												"src": "33873:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "33905:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33920:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "33940:4:7"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "33928:11:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "33928:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "33920:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3513,
														"isOffset": false,
														"isSlot": false,
														"src": "33940:4:7",
														"valueSize": 1
													},
													{
														"declaration": 3519,
														"isOffset": false,
														"isSlot": false,
														"src": "33920:4:7",
														"valueSize": 1
													}
												],
												"id": 3521,
												"nodeType": "InlineAssembly",
												"src": "33896:60:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3522,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3519,
														"src": "33973:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33980:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33973:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3517,
												"id": 3525,
												"nodeType": "Return",
												"src": "33966:15:7"
											}
										]
									},
									"documentation": {
										"id": 3511,
										"nodeType": "StructuredDocumentation",
										"src": "33732:60:7",
										"text": " @notice Checks if address is a contract"
									},
									"id": 3527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 3527,
												"src": "33819:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33818:14:7"
									},
									"returnParameters": {
										"id": 3517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3527,
												"src": "33856:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33856:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33855:6:7"
									},
									"scope": 3528,
									"src": "33798:191:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3529,
							"src": "360:33632:7"
						}
					],
					"src": "33:33959:7"
				},
				"id": 7
			},
			"contracts/interfaces/IBoostContract.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IBoostContract.sol",
					"exportedSymbols": {
						"IBoostContract": [
							3544
						]
					},
					"id": 3545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3544,
							"linearizedBaseContracts": [
								3544
							],
							"name": "IBoostContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "87356ef7",
									"id": 3543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onShdwPoolUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3532,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "128:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3534,
												"mutability": "mutable",
												"name": "_lockedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "152:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "_lockedDuration",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "184:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3538,
												"mutability": "mutable",
												"name": "_totalLockedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "218:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "_maxLockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "255:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "117:169:8"
									},
									"returnParameters": {
										"id": 3542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:0:8"
									},
									"scope": 3544,
									"src": "92:204:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3545,
							"src": "60:239:8"
						}
					],
					"src": "33:266:8"
				},
				"id": 8
			},
			"contracts/interfaces/IShadowChefV2.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IShadowChefV2.sol",
					"exportedSymbols": {
						"IShadowChefV2": [
							3586
						]
					},
					"id": 3587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3546,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3586,
							"linearizedBaseContracts": [
								3586
							],
							"name": "IShadowChefV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e2bbb158",
									"id": 3553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3548,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "108:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3550,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "122:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:31:9"
									},
									"returnParameters": {
										"id": 3552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "147:0:9"
									},
									"scope": 3586,
									"src": "91:57:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "441a3e70",
									"id": 3560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3555,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "174:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3557,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "188:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:31:9"
									},
									"returnParameters": {
										"id": 3559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "213:0:9"
									},
									"scope": 3586,
									"src": "156:58:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c799b59d",
									"id": 3569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingShdw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "243:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3564,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "257:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:29:9"
									},
									"returnParameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "295:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:9:9"
									},
									"scope": 3586,
									"src": "222:82:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "93f1a40b",
									"id": 3580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3571,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3580,
												"src": "330:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3580,
												"src": "344:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:29:9"
									},
									"returnParameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3580,
												"src": "382:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3580,
												"src": "391:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:18:9"
									},
									"scope": 3586,
									"src": "312:88:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5312ea8e",
									"id": 3585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3582,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "435:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:14:9"
									},
									"returnParameters": {
										"id": 3584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "457:0:9"
									},
									"scope": 3586,
									"src": "408:50:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3587,
							"src": "60:401:9"
						}
					],
					"src": "33:428:9"
				},
				"id": 9
			},
			"contracts/interfaces/IVShdw.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IVShdw.sol",
					"exportedSymbols": {
						"IVShdw": [
							3603
						]
					},
					"id": 3604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3603,
							"linearizedBaseContracts": [
								3603
							],
							"name": "IVShdw",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0efe6a8b",
									"id": 3597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "111:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "111:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3592,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "135:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3594,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "161:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "161:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:89:10"
									},
									"returnParameters": {
										"id": 3596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:0:10"
									},
									"scope": 3603,
									"src": "84:115:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "51cff8d9",
									"id": 3602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "225:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:15:10"
									},
									"returnParameters": {
										"id": 3601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:0:10"
									},
									"scope": 3603,
									"src": "207:42:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "60:192:10"
						}
					],
					"src": "33:219:10"
				},
				"id": 10
			}
		}
	}
}