{
	"id": "4f4257bbaec42cebac935275fbf33704",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sMasterChef.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.6.0;\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\ncontract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor () internal {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\n\r\npragma solidity >=0.4.0;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the token name.\r\n   */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @title SafeBEP20\r\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeBEP20 {\r\n  using SafeMath for uint256;\r\n  using Address for address;\r\n\r\n  function safeTransfer(\r\n    IBEP20 token,\r\n    address to,\r\n    uint256 value\r\n  ) internal {\r\n    _callOptionalReturn(\r\n      token,\r\n      abi.encodeWithSelector(token.transfer.selector, to, value)\r\n    );\r\n  }\r\n\r\n  function safeTransferFrom(\r\n    IBEP20 token,\r\n    address from,\r\n    address to,\r\n    uint256 value\r\n  ) internal {\r\n    _callOptionalReturn(\r\n      token,\r\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @dev Deprecated. This function has issues similar to the ones found in\r\n   * {IBEP20-approve}, and its usage is discouraged.\r\n   *\r\n   * Whenever possible, use {safeIncreaseAllowance} and\r\n   * {safeDecreaseAllowance} instead.\r\n   */\r\n  function safeApprove(\r\n    IBEP20 token,\r\n    address spender,\r\n    uint256 value\r\n  ) internal {\r\n    // safeApprove should only be called when setting an initial allowance,\r\n    // or when resetting it to zero. To increase and decrease it, use\r\n    // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n    // solhint-disable-next-line max-line-length\r\n    require(\r\n      (value == 0) || (token.allowance(address(this), spender) == 0),\r\n      \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n    );\r\n    _callOptionalReturn(\r\n      token,\r\n      abi.encodeWithSelector(token.approve.selector, spender, value)\r\n    );\r\n  }\r\n\r\n  function safeIncreaseAllowance(\r\n    IBEP20 token,\r\n    address spender,\r\n    uint256 value\r\n  ) internal {\r\n    uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n    _callOptionalReturn(\r\n      token,\r\n      abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\r\n    );\r\n  }\r\n\r\n  function safeDecreaseAllowance(\r\n    IBEP20 token,\r\n    address spender,\r\n    uint256 value\r\n  ) internal {\r\n    uint256 newAllowance =\r\n      token.allowance(address(this), spender).sub(\r\n        value,\r\n        \"SafeBEP20: decreased allowance below zero\"\r\n      );\r\n    _callOptionalReturn(\r\n      token,\r\n      abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n   * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n   * @param token The token targeted by the call.\r\n   * @param data The call data (encoded using abi.encode or one of its variants).\r\n   */\r\n  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n    // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n    // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n    // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n    bytes memory returndata =\r\n      address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n    if (returndata.length > 0) {\r\n      // Return data is optional\r\n      // solhint-disable-next-line max-line-length\r\n      require(\r\n        abi.decode(returndata, (bool)),\r\n        \"SafeBEP20: BEP20 operation did not succeed\"\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\npragma solidity 0.6.12;\r\n\r\ninterface IMasterChef {\r\n    function deposit(uint256 _pid, uint256 _amount) external;\r\n\r\n    function withdraw(uint256 _pid, uint256 _amount) external;\r\n\r\n    function enterStaking(uint256 _amount) external;\r\n\r\n    function leaveStaking(uint256 _amount) external;\r\n\r\n    function pendingShdw(uint256 _pid, address _user) external view returns (uint256);\r\n\r\n    function userInfo(uint256 _pid, address _user) external view returns (uint256, uint256);\r\n\r\n    function emergencyWithdraw(uint256 _pid) external;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/// @notice The (older) MasterChef contract gives out a constant number of Shdw tokens per block.\r\n/// It is the only address with minting rights for Shdw.\r\n/// The idea for this sMasterChef  (sMCV) contract is therefore to be the owner of a dummy token\r\n/// that is deposited into the MasterChef V1 (MCV1) contract.\r\n/// The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives.\r\ncontract sMasterChef is Ownable, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    /// @notice Info of each MCV2 user.\r\n    /// `amount` LP token amount the user has provided.\r\n    /// `rewardDebt` Used to calculate the correct amount of rewards. See explanation below.\r\n    ///\r\n    /// We do some fancy math here. Basically, any point in time, the amount of Shdws\r\n    /// entitled to a user but is pending to be distributed is:\r\n    ///\r\n    ///   pending reward = (user share * pool.accShdwPerShare) - user.rewardDebt\r\n    ///\r\n    ///   Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n    ///   1. The pool's `accShdwPerShare` (and `lastRewardBlock`) gets updated.\r\n    ///   2. User receives the pending reward sent to his/her address.\r\n    ///   3. User's `amount` gets updated. Pool's `totalBoostedShare` gets updated.\r\n    ///   4. User's `rewardDebt` gets updated.\r\n    struct UserInfo {\r\n        uint256 amount;\r\n        uint256 rewardDebt;\r\n        uint256 boostMultiplier;\r\n    }\r\n\r\n    /// @notice Info of each MCV2 pool.\r\n    /// `allocPoint` The amount of allocation points assigned to the pool.\r\n    ///     Also known as the amount of \"multipliers\". Combined with `totalXAllocPoint`, it defines the % of\r\n    ///     Shdw rewards each pool gets.\r\n    /// `accShdwPerShare` Accumulated Shdws per share, times 1e12.\r\n    /// `lastRewardBlock` Last block number that pool update action is executed.\r\n    /// `isRegular` The flag to set pool is regular or special. See below:\r\n    ///     In sMasterChef farms are \"regular pools\". \"special pools\", which use a different sets of\r\n    ///     `allocPoint` and their own `totalSpecialAllocPoint` are designed to handle the distribution of\r\n    ///     the Shdw rewards to all the ShadowSwap products.\r\n    /// `totalBoostedShare` The total amount of user shares in each pool. After considering the share boosts.\r\n    struct PoolInfo {\r\n        uint256 accShdwPerShare;\r\n        uint256 lastRewardBlock;\r\n        uint256 allocPoint;\r\n        uint256 totalBoostedShare;\r\n        bool isRegular;\r\n    }\r\n\r\n    /// @notice Address of MCV1 contract.\r\n    IMasterChef public immutable DARK_CHEF;\r\n    /// @notice Address of Shdw contract.\r\n    IBEP20 public immutable SHDW;\r\n\r\n    /// @notice The only address can withdraw all the burn SHDW.\r\n    address public burnAdmin;\r\n    /// @notice The contract handles the share boosts.\r\n    address public boostContract;\r\n\r\n    /// @notice Info of each MCV2 pool.\r\n    PoolInfo[] public poolInfo;\r\n    /// @notice Address of the LP token for each MCV2 pool.\r\n    IBEP20[] public lpToken;\r\n\r\n    /// @notice Info of each pool user.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    /// @notice The whitelist of addresses allowed to deposit in special pools.\r\n    mapping(address => bool) public whiteList;\r\n\r\n    /// @notice The pool id of the MCV2 mock token pool in MCV1.\r\n    uint256 public immutable MASTER_PID;\r\n    /// @notice Total regular allocation points. Must be the sum of all regular pools' allocation points.\r\n    uint256 public totalRegularAllocPoint;\r\n    /// @notice Total special allocation points. Must be the sum of all special pools' allocation points.\r\n    uint256 public totalSpecialAllocPoint;\r\n    ///  @notice 40 Shdws per block in MCV1\r\n    uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 40 * 1e18;\r\n    uint256 public constant ACC_SHDW_PRECISION = 1e18;\r\n\r\n    /// @notice Basic boost factor, none boosted user's boost factor\r\n    uint256 public constant BOOST_PRECISION = 100 * 1e10;\r\n    /// @notice Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION\r\n    uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10;\r\n    /// @notice total Shdw rate = toBurn + toRegular + toSpecial\r\n    uint256 public constant SHDW_RATE_TOTAL_PRECISION = 1e12;\r\n    /// @notice The last block number of Shdw burn action being executed.\r\n    /// @notice Shdw distribute % for burn\r\n    uint256 public shdwRateToBurn = 643750000000;\r\n    /// @notice Shdw distribute % for regular farm pool\r\n    uint256 public shdwRateToRegularFarm = 62847222222;\r\n    /// @notice Shdw distribute % for special pools\r\n    uint256 public shdwRateToSpecialFarm = 293402777778;\r\n\r\n    uint256 public lastBurnedBlock;\r\n\r\n    event Init();\r\n    event AddPool(uint256 indexed pid, uint256 allocPoint, IBEP20 indexed lpToken, bool isRegular);\r\n    event SetPool(uint256 indexed pid, uint256 allocPoint);\r\n    event UpdatePool(uint256 indexed pid, uint256 lastRewardBlock, uint256 lpSupply, uint256 accShdwPerShare);\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n\r\n    event UpdateShdwRate(uint256 burnRate, uint256 regularFarmRate, uint256 specialFarmRate);\r\n    event UpdateBurnAdmin(address indexed oldAdmin, address indexed newAdmin);\r\n    event UpdateWhiteList(address indexed user, bool isValid);\r\n    event UpdateBoostContract(address indexed boostContract);\r\n    event UpdateBoostMultiplier(address indexed user, uint256 pid, uint256 oldMultiplier, uint256 newMultiplier);\r\n\r\n    ///  _DARK_CHEF The ShadowSwap MCV1 contract address.\r\n    ///  _Shdw The Shadow token contract address.\r\n    ///  _MASTER_PID The pool id of the dummy pool on the MCV1.\r\n    ///  _burnAdmin The address of burn admin.\r\n    constructor(\r\n        IMasterChef _DARK_CHEF,\r\n        IBEP20 _SHDW,\r\n        uint256 _MASTER_PID,\r\n        address _burnAdmin\r\n    ) public {\r\n        DARK_CHEF = _DARK_CHEF;\r\n        SHDW = _SHDW;\r\n        MASTER_PID = _MASTER_PID;\r\n        burnAdmin = _burnAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if caller is not the boost contract.\r\n     */\r\n    modifier onlyBoostContract() {\r\n        require(boostContract == msg.sender, \"Ownable: caller is not the boost contract\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Deposits a dummy token to `DARK_CHEF` MCV1. This is required because MCV1 holds the minting permission of Shdw.\r\n    /// It will transfer all the `dummyToken` in the tx sender address.\r\n    /// The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint.\r\n    /// @param dummyToken The address of the BEP-20 token to be deposited into MCV1.\r\n    function init(IBEP20 dummyToken) external onlyOwner {\r\n        uint256 balance = dummyToken.balanceOf(msg.sender);\r\n        require(balance != 0, \"sMasterChef: Balance must exceed 0\");\r\n        dummyToken.safeTransferFrom(msg.sender, address(this), balance);\r\n        dummyToken.approve(address(DARK_CHEF), balance);\r\n        DARK_CHEF.deposit(MASTER_PID, balance);\r\n        // MCV2 start to earn Shdw reward from current block in MCV1 pool\r\n        lastBurnedBlock = block.number;\r\n        emit Init();\r\n    }\r\n\r\n    /// @notice Returns the number of MCV2 pools.\r\n    function poolLength() public view returns (uint256 pools) {\r\n        pools = poolInfo.length;\r\n    }\r\n\r\n    /// @notice Add a new pool. Can only be called by the owner.\r\n    /// DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    /// @param _allocPoint Number of allocation points for the new pool.\r\n    /// @param _lpToken Address of the LP BEP-20 token.\r\n    /// @param _isRegular Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    /// only for Shdw distributions within ShadowSwap products.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IBEP20 _lpToken,\r\n        bool _isRegular,\r\n        bool _withUpdate\r\n    ) external onlyOwner {\r\n        require(_lpToken.balanceOf(address(this)) >= 0, \"None BEP20 tokens\");\r\n        // stake Shdw token will cause staked token and reward token mixed up,\r\n        // may cause staked tokens withdraw as reward token,never do it.\r\n        require(_lpToken != SHDW, \"SHDW token can't be added to farm pools\");\r\n\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n\r\n        if (_isRegular) {\r\n            totalRegularAllocPoint = totalRegularAllocPoint.add(_allocPoint);\r\n        } else {\r\n            totalSpecialAllocPoint = totalSpecialAllocPoint.add(_allocPoint);\r\n        }\r\n        lpToken.push(_lpToken);\r\n\r\n        poolInfo.push(\r\n            PoolInfo({\r\n        allocPoint: _allocPoint,\r\n        lastRewardBlock: block.number,\r\n        accShdwPerShare: 0,\r\n        isRegular: _isRegular,\r\n        totalBoostedShare: 0\r\n        })\r\n        );\r\n        emit AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular);\r\n    }\r\n\r\n    /// @notice Update the given pool's Shdw allocation point. Can only be called by the owner.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _allocPoint New number of allocation points for the pool.\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    function set(\r\n        uint256 _pid,\r\n        uint256 _allocPoint,\r\n        bool _withUpdate\r\n    ) external onlyOwner {\r\n        // No matter _withUpdate is true or false, we need to execute updatePool once before set the pool parameters.\r\n        updatePool(_pid);\r\n\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n\r\n        if (poolInfo[_pid].isRegular) {\r\n            totalRegularAllocPoint = totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        } else {\r\n            totalSpecialAllocPoint = totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        }\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n        emit SetPool(_pid, _allocPoint);\r\n    }\r\n\r\n    /// @notice View function for checking pending Shdw rewards.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _user Address of the user.\r\n    function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo memory pool = poolInfo[_pid];\r\n        UserInfo memory user = userInfo[_pid][_user];\r\n        uint256 accShdwPerShare = pool.accShdwPerShare;\r\n        uint256 lpSupply = pool.totalBoostedShare;\r\n\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = block.number.sub(pool.lastRewardBlock);\r\n\r\n            uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r\n                (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint)\r\n            );\r\n            accShdwPerShare = accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply));\r\n        }\r\n\r\n        uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION);\r\n        return boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt);\r\n    }\r\n\r\n    /// @notice Update Shdw reward for all the active pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            PoolInfo memory pool = poolInfo[pid];\r\n            if (pool.allocPoint != 0) {\r\n                updatePool(pid);\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @notice Calculates and returns the `amount` of Shdw per block.\r\n    /// @param _isRegular If the pool belongs to regular or special.\r\n    function shdwPerBlock(bool _isRegular) public view returns (uint256 amount) {\r\n        if (_isRegular) {\r\n            amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION);\r\n        } else {\r\n            amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm).div(SHDW_RATE_TOTAL_PRECISION);\r\n        }\r\n    }\r\n\r\n    /// @notice Calculates and returns the `amount` of Shdw per block to burn.\r\n    function shdwPerBlockToBurn() public view returns (uint256 amount) {\r\n        amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION);\r\n    }\r\n\r\n    /// @notice Update reward variables for the given pool.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @return pool Returns the pool that was updated.\r\n    function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r\n        pool = poolInfo[_pid];\r\n        if (block.number > pool.lastRewardBlock) {\r\n            uint256 lpSupply = pool.totalBoostedShare;\r\n            uint256 totalAllocPoint = (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint);\r\n\r\n            if (lpSupply > 0 && totalAllocPoint > 0) {\r\n                uint256 multiplier = block.number.sub(pool.lastRewardBlock);\r\n                uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r\n                    totalAllocPoint\r\n                );\r\n                pool.accShdwPerShare = pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)));\r\n            }\r\n            pool.lastRewardBlock = block.number;\r\n            poolInfo[_pid] = pool;\r\n            emit UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare);\r\n        }\r\n    }\r\n\r\n    /// @notice Deposit LP tokens to pool.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _amount Amount of LP tokens to deposit.\r\n    function deposit(uint256 _pid, uint256 _amount) external nonReentrant {\r\n        PoolInfo memory pool = updatePool(_pid);\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        require(\r\n            pool.isRegular || whiteList[msg.sender],\r\n            \"sMasterChef: The address is not available to deposit in this pool\"\r\n        );\r\n\r\n        uint256 multiplier = getBoostMultiplier(msg.sender, _pid);\r\n\r\n        if (user.amount > 0) {\r\n            settlePendingShdw(msg.sender, _pid, multiplier);\r\n        }\r\n\r\n        if (_amount > 0) {\r\n            uint256 before = lpToken[_pid].balanceOf(address(this));\r\n            lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount);\r\n            _amount = lpToken[_pid].balanceOf(address(this)).sub(before);\r\n            user.amount = user.amount.add(_amount);\r\n\r\n            // Update total boosted share.\r\n            pool.totalBoostedShare = pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION));\r\n        }\r\n\r\n        user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r\n            ACC_SHDW_PRECISION\r\n        );\r\n        poolInfo[_pid] = pool;\r\n\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    /// @notice Withdraw LP tokens from pool.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    /// @param _amount Amount of LP tokens to withdraw.\r\n    function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r\n        PoolInfo memory pool = updatePool(_pid);\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        require(user.amount >= _amount, \"withdraw: Insufficient\");\r\n\r\n        uint256 multiplier = getBoostMultiplier(msg.sender, _pid);\r\n\r\n        settlePendingShdw(msg.sender, _pid, multiplier);\r\n\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            lpToken[_pid].safeTransfer(msg.sender, _amount);\r\n        }\r\n\r\n        user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r\n            ACC_SHDW_PRECISION\r\n        );\r\n        poolInfo[_pid].totalBoostedShare = poolInfo[_pid].totalBoostedShare.sub(\r\n            _amount.mul(multiplier).div(BOOST_PRECISION)\r\n        );\r\n\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    /// @notice Harvests Shdw from `DARK_CHEF` MCV1 and pool `MASTER_PID` to MCV2.\r\n    function harvestFromMasterChef() public {\r\n        DARK_CHEF.deposit(MASTER_PID, 0);\r\n    }\r\n\r\n    /// @notice Withdraw without caring about the rewards. EMERGENCY ONLY.\r\n    /// @param _pid The id of the pool. See `poolInfo`.\r\n    function emergencyWithdraw(uint256 _pid) external nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        uint256 amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        uint256 boostedAmount = amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION);\r\n        pool.totalBoostedShare = pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0;\r\n\r\n        // Note: transfer can fail or succeed if `amount` is zero.\r\n        lpToken[_pid].safeTransfer(msg.sender, amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\r\n    }\r\n\r\n    /// @notice Send Shdw pending for burn to `burnAdmin`.\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    function burnShdw(bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n\r\n        uint256 multiplier = block.number.sub(lastBurnedBlock);\r\n        uint256 pendingShdwToBurn = multiplier.mul(shdwPerBlockToBurn());\r\n\r\n        // SafeTransfer Shdw\r\n        _safeTransfer(burnAdmin, pendingShdwToBurn);\r\n        lastBurnedBlock = block.number;\r\n    }\r\n\r\n    /// @notice Update the % of Shdw distributions for burn, regular pools and special pools.\r\n    /// @param _burnRate The % of Shdw to burn each block.\r\n    /// @param _regularFarmRate The % of Shdw to regular pools each block.\r\n    /// @param _specialFarmRate The % of Shdw to special pools each block.\r\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\r\n    function updateShdwRate(\r\n        uint256 _burnRate,\r\n        uint256 _regularFarmRate,\r\n        uint256 _specialFarmRate,\r\n        bool _withUpdate\r\n    ) external onlyOwner {\r\n        require(\r\n            _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0,\r\n            \"sMasterChef: Shdw rate must be greater than 0\"\r\n        );\r\n        require(\r\n            _burnRate.add(_regularFarmRate).add(_specialFarmRate) == SHDW_RATE_TOTAL_PRECISION,\r\n            \"sMasterChef: Total rate must be 1e12\"\r\n        );\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        // burn Shdw base on old burn Shdw rate\r\n        burnShdw(false);\r\n\r\n        shdwRateToBurn = _burnRate;\r\n        shdwRateToRegularFarm = _regularFarmRate;\r\n        shdwRateToSpecialFarm = _specialFarmRate;\r\n\r\n        emit UpdateShdwRate(_burnRate, _regularFarmRate, _specialFarmRate);\r\n    }\r\n\r\n    /// @notice Update burn admin address.\r\n    /// @param _newAdmin The new burn admin address.\r\n    function updateBurnAdmin(address _newAdmin) external onlyOwner {\r\n        require(_newAdmin != address(0), \"sMasterChef: Burn admin address must be valid\");\r\n        require(_newAdmin != burnAdmin, \"sMasterChef: Burn admin address is the same with current address\");\r\n        address _oldAdmin = burnAdmin;\r\n        burnAdmin = _newAdmin;\r\n        emit UpdateBurnAdmin(_oldAdmin, _newAdmin);\r\n    }\r\n\r\n    /// @notice Update whitelisted addresses for special pools.\r\n    /// @param _user The address to be updated.\r\n    /// @param _isValid The flag for valid or invalid.\r\n    function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r\n        require(_user != address(0), \"sMasterChef: The white list address must be valid\");\r\n\r\n        whiteList[_user] = _isValid;\r\n        emit UpdateWhiteList(_user, _isValid);\r\n    }\r\n\r\n    /// @notice Update boost contract address and max boost factor.\r\n    /// @param _newBoostContract The new address for handling all the share boosts.\r\n    function updateBoostContract(address _newBoostContract) external onlyOwner {\r\n        require(\r\n            _newBoostContract != address(0) && _newBoostContract != boostContract,\r\n            \"sMasterChef: New boost contract address must be valid\"\r\n        );\r\n\r\n        boostContract = _newBoostContract;\r\n        emit UpdateBoostContract(_newBoostContract);\r\n    }\r\n\r\n    /// @notice Update user boost factor.\r\n    /// @param _user The user address for boost factor updates.\r\n    /// @param _pid The pool id for the boost factor updates.\r\n    /// @param _newMultiplier New boost multiplier.\r\n    function updateBoostMultiplier(\r\n        address _user,\r\n        uint256 _pid,\r\n        uint256 _newMultiplier\r\n    ) external onlyBoostContract nonReentrant {\r\n        require(_user != address(0), \"sMasterChef: The user address must be valid\");\r\n        require(poolInfo[_pid].isRegular, \"sMasterChef: Only regular farm could be boosted\");\r\n        require(\r\n            _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION,\r\n            \"sMasterChef: Invalid new boost multiplier\"\r\n        );\r\n\r\n        PoolInfo memory pool = updatePool(_pid);\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n\r\n        uint256 prevMultiplier = getBoostMultiplier(_user, _pid);\r\n        settlePendingShdw(_user, _pid, prevMultiplier);\r\n\r\n        user.rewardDebt = user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r\n            ACC_SHDW_PRECISION\r\n        );\r\n        pool.totalBoostedShare = pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r\n            user.amount.mul(_newMultiplier).div(BOOST_PRECISION)\r\n        );\r\n        poolInfo[_pid] = pool;\r\n        userInfo[_pid][_user].boostMultiplier = _newMultiplier;\r\n\r\n        emit UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier);\r\n    }\r\n\r\n    /// @notice Get user boost multiplier for specific pool id.\r\n    /// @param _user The user address.\r\n    /// @param _pid The pool id.\r\n    function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r\n        uint256 multiplier = userInfo[_pid][_user].boostMultiplier;\r\n        return multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION;\r\n    }\r\n\r\n    /// @notice Settles, distribute the pending Shdw rewards for given user.\r\n    /// @param _user The user address for settling rewards.\r\n    /// @param _pid The pool id.\r\n    /// @param _boostMultiplier The user boost multiplier in specific pool id.\r\n    function settlePendingShdw(\r\n        address _user,\r\n        uint256 _pid,\r\n        uint256 _boostMultiplier\r\n    ) internal {\r\n        UserInfo memory user = userInfo[_pid][_user];\r\n\r\n        uint256 boostedAmount = user.amount.mul(_boostMultiplier).div(BOOST_PRECISION);\r\n        uint256 accShdw = boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION);\r\n        uint256 pending = accShdw.sub(user.rewardDebt);\r\n        // SafeTransfer Shdw\r\n        _safeTransfer(_user, pending);\r\n    }\r\n\r\n    /// @notice Safe Transfer Shdw.\r\n    /// @param _to The Shdw receiver address.\r\n    /// @param _amount transfer Shdw amounts.\r\n    function _safeTransfer(address _to, uint256 _amount) internal {\r\n        if (_amount > 0) {\r\n            // Check whether MCV2 has enough Shdw. If not, harvest from MCV1.\r\n            if (SHDW.balanceOf(address(this)) < _amount) {\r\n                harvestFromMasterChef();\r\n            }\r\n            uint256 balance = SHDW.balanceOf(address(this));\r\n            if (balance < _amount) {\r\n                _amount = balance;\r\n            }\r\n            SHDW.safeTransfer(_to, _amount);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/sMasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sMasterChef.sol\":14337:20224  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sMasterChef.sol\":14337:20224  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220be9be6a4a585813604f72164d75f6bad79ab5b6142acbb8644c0049da0af59e564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be9be6a4a585813604f72164d75f6bad79ab5b6142acbb8644c0049da0af59e564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SWAP12 0xE6 LOG4 0xA5 DUP6 DUP2 CALLDATASIZE DIV 0xF7 0x21 PUSH5 0xD75F6BAD79 0xAB JUMPDEST PUSH2 0x42AC 0xBB DUP7 DIFFICULTY 0xC0 DIV SWAP14 LOG0 0xAF MSIZE 0xE5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14337:5887:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be9be6a4a585813604f72164d75f6bad79ab5b6142acbb8644c0049da0af59e564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SWAP12 0xE6 LOG4 0xA5 DUP6 DUP2 CALLDATASIZE DIV 0xF7 0x21 PUSH5 0xD75F6BAD79 0xAB JUMPDEST PUSH2 0x42AC 0xBB DUP7 DIFFICULTY 0xC0 DIV SWAP14 LOG0 0xAF MSIZE 0xE5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14337:5887:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14337,
									"end": 20224,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be9be6a4a585813604f72164d75f6bad79ab5b6142acbb8644c0049da0af59e564736f6c634300060c0033",
									".code": [
										{
											"begin": 14337,
											"end": 20224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 20224,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingShdw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"leaveStaking(uint256)": "1058d281",
							"pendingShdw(uint256,address)": "c799b59d",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingShdw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"IMasterChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "contracts/sMasterChef.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 336,
								"contract": "contracts/sMasterChef.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sMasterChef.sol\":20722:24028  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sMasterChef.sol\":20722:24028  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f481954ef9cb620b33eb01cac3b89d0ea20796749a09fdcd086f1a42ee8b0e6a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f481954ef9cb620b33eb01cac3b89d0ea20796749a09fdcd086f1a42ee8b0e6a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP2 SWAP6 0x4E 0xF9 0xCB PUSH3 0xB33EB ADD 0xCA 0xC3 0xB8 SWAP14 0xE LOG2 SMOD SWAP7 PUSH21 0x9A09FDCD086F1A42EE8B0E6A64736F6C634300060C STOP CALLER ",
							"sourceMap": "20722:3306:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f481954ef9cb620b33eb01cac3b89d0ea20796749a09fdcd086f1a42ee8b0e6a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP2 SWAP6 0x4E 0xF9 0xCB PUSH3 0xB33EB ADD 0xCA 0xC3 0xB8 SWAP14 0xE LOG2 SMOD SWAP7 PUSH21 0x9A09FDCD086F1A42EE8B0E6A64736F6C634300060C STOP CALLER ",
							"sourceMap": "20722:3306:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20722,
									"end": 24028,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f481954ef9cb620b33eb01cac3b89d0ea20796749a09fdcd086f1a42ee8b0e6a64736f6c634300060c0033",
									".code": [
										{
											"begin": 20722,
											"end": 24028,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20722,
											"end": 24028,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sMasterChef.sol\":3858:8577  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sMasterChef.sol\":3858:8577  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b59946034ce07ccaa27e8f590e0ca36bed395dcbbd9b77456061686cbd3061f964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b59946034ce07ccaa27e8f590e0ca36bed395dcbbd9b77456061686cbd3061f964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP10 CHAINID SUB 0x4C 0xE0 PUSH29 0xCAA27E8F590E0CA36BED395DCBBD9B77456061686CBD3061F964736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3858:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b59946034ce07ccaa27e8f590e0ca36bed395dcbbd9b77456061686cbd3061f964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP10 CHAINID SUB 0x4C 0xE0 PUSH29 0xCAA27E8F590E0CA36BED395DCBBD9B77456061686CBD3061F964736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3858:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3858,
									"end": 8577,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b59946034ce07ccaa27e8f590e0ca36bed395dcbbd9b77456061686cbd3061f964736f6c634300060c0033",
									".code": [
										{
											"begin": 3858,
											"end": 8577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 8577,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"sMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IMasterChef",
									"name": "_DARK_CHEF",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_SHDW",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_MASTER_PID",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_burnAdmin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "contract IBEP20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isRegular",
									"type": "bool"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Init",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								}
							],
							"name": "SetPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "boostContract",
									"type": "address"
								}
							],
							"name": "UpdateBoostContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldMultiplier",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMultiplier",
									"type": "uint256"
								}
							],
							"name": "UpdateBoostMultiplier",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAdmin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "UpdateBurnAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lpSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "accShdwPerShare",
									"type": "uint256"
								}
							],
							"name": "UpdatePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "regularFarmRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "specialFarmRate",
									"type": "uint256"
								}
							],
							"name": "UpdateShdwRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"name": "UpdateWhiteList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_SHDW_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BOOST_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DARK_CHEF",
							"outputs": [
								{
									"internalType": "contract IMasterChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MASTERCHEF_SHDW_PER_BLOCK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MASTER_PID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_BOOST_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHDW",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHDW_RATE_TOTAL_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isRegular",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "boostContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "burnShdw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getBoostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvestFromMasterChef",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "dummyToken",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastBurnedBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingShdw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "accShdwPerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBoostedShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRegular",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "pools",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isRegular",
									"type": "bool"
								}
							],
							"name": "shdwPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwPerBlockToBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwRateToBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwRateToRegularFarm",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shdwRateToSpecialFarm",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRegularAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSpecialAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newBoostContract",
									"type": "address"
								}
							],
							"name": "updateBoostContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newMultiplier",
									"type": "uint256"
								}
							],
							"name": "updateBoostMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAdmin",
									"type": "address"
								}
							],
							"name": "updateBurnAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "accShdwPerShare",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastRewardBlock",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "allocPoint",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalBoostedShare",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isRegular",
											"type": "bool"
										}
									],
									"internalType": "struct sMasterChef.PoolInfo",
									"name": "pool",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_burnRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_regularFarmRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_specialFarmRate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "updateShdwRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isValid",
									"type": "bool"
								}
							],
							"name": "updateWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "boostMultiplier",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"add(uint256,address,bool,bool)": {
								"params": {
									"_allocPoint": "Number of allocation points for the new pool.",
									"_isRegular": "Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are",
									"_lpToken": "Address of the LP BEP-20 token.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation. only for Shdw distributions within ShadowSwap products."
								}
							},
							"burnShdw(bool)": {
								"params": {
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"deposit(uint256,uint256)": {
								"params": {
									"_amount": "Amount of LP tokens to deposit.",
									"_pid": "The id of the pool. See `poolInfo`."
								}
							},
							"emergencyWithdraw(uint256)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`."
								}
							},
							"getBoostMultiplier(address,uint256)": {
								"params": {
									"_pid": "The pool id.",
									"_user": "The user address."
								}
							},
							"init(address)": {
								"params": {
									"dummyToken": "The address of the BEP-20 token to be deposited into MCV1."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingShdw(uint256,address)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`.",
									"_user": "Address of the user."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"set(uint256,uint256,bool)": {
								"params": {
									"_allocPoint": "New number of allocation points for the pool.",
									"_pid": "The id of the pool. See `poolInfo`.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"shdwPerBlock(bool)": {
								"params": {
									"_isRegular": "If the pool belongs to regular or special."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateBoostContract(address)": {
								"params": {
									"_newBoostContract": "The new address for handling all the share boosts."
								}
							},
							"updateBoostMultiplier(address,uint256,uint256)": {
								"params": {
									"_newMultiplier": "New boost multiplier.",
									"_pid": "The pool id for the boost factor updates.",
									"_user": "The user address for boost factor updates."
								}
							},
							"updateBurnAdmin(address)": {
								"params": {
									"_newAdmin": "The new burn admin address."
								}
							},
							"updatePool(uint256)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`."
								},
								"returns": {
									"pool": "Returns the pool that was updated."
								}
							},
							"updateShdwRate(uint256,uint256,uint256,bool)": {
								"params": {
									"_burnRate": "The % of Shdw to burn each block.",
									"_regularFarmRate": "The % of Shdw to regular pools each block.",
									"_specialFarmRate": "The % of Shdw to special pools each block.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"updateWhiteList(address,bool)": {
								"params": {
									"_isValid": "The flag for valid or invalid.",
									"_user": "The address to be updated."
								}
							},
							"withdraw(uint256,uint256)": {
								"params": {
									"_amount": "Amount of LP tokens to withdraw.",
									"_pid": "The id of the pool. See `poolInfo`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sMasterChef.sol\":25023:48357  contract sMasterChef is Ownable, ReentrancyGuard {\r... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/sMasterChef.sol\":29077:29089  643750000000 */\n  0x95e27d7580\n    /* \"contracts/sMasterChef.sol\":29045:29089  uint256 public shdwRateToBurn = 643750000000 */\n  0x0a\n  sstore\n    /* \"contracts/sMasterChef.sol\":29192:29203  62847222222 */\n  0x0ea1fc81ce\n    /* \"contracts/sMasterChef.sol\":29153:29203  uint256 public shdwRateToRegularFarm = 62847222222 */\n  0x0b\n  sstore\n    /* \"contracts/sMasterChef.sol\":29302:29314  293402777778 */\n  0x44502b18b2\n    /* \"contracts/sMasterChef.sol\":29263:29314  uint256 public shdwRateToSpecialFarm = 293402777778 */\n  0x0c\n  sstore\n    /* \"contracts/sMasterChef.sol\":30547:30820  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/sMasterChef.sol\":1847:1864  address msgSender */\n  0x00\n    /* \"contracts/sMasterChef.sol\":1867:1879  _msgSender() */\n  tag_8\n    /* \"contracts/sMasterChef.sol\":1867:1877  _msgSender */\n  tag_9\n    /* \"contracts/sMasterChef.sol\":1867:1879  _msgSender() */\n  jump\t// in\ntag_8:\n    /* \"contracts/sMasterChef.sol\":1890:1896  _owner */\n  0x00\n    /* \"contracts/sMasterChef.sol\":1890:1908  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/sMasterChef.sol\":1924:1967  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/sMasterChef.sol\":1890:1908  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/sMasterChef.sol\":1924:1967  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/sMasterChef.sol\":1890:1896  _owner */\n  dup3\n  swap1\n    /* \"contracts/sMasterChef.sol\":1924:1967  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/sMasterChef.sol\":10208:10209  1 */\n  0x01\n    /* \"contracts/sMasterChef.sol\":10329:10351  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/sMasterChef.sol\":30699:30721  DARK_CHEF = _DARK_CHEF */\n  0x60\n  swap4\n  dup5\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  0x80\n  mstore\n    /* \"contracts/sMasterChef.sol\":30732:30744  SHDW = _SHDW */\n  swap3\n  swap1\n  swap4\n  shl\n  swap1\n  swap2\n  and\n  0xa0\n  mstore\n    /* \"contracts/sMasterChef.sol\":30755:30779  MASTER_PID = _MASTER_PID */\n  0xc0\n  mstore\n    /* \"contracts/sMasterChef.sol\":30790:30799  burnAdmin */\n  0x02\n    /* \"contracts/sMasterChef.sol\":30790:30812  burnAdmin = _burnAdmin */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/sMasterChef.sol\":25023:48357  contract sMasterChef is Ownable, ReentrancyGuard {\r... */\n  jump(tag_14)\n    /* \"contracts/sMasterChef.sol\":669:775  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_9:\n    /* \"contracts/sMasterChef.sol\":757:767  msg.sender */\n  caller\n    /* \"contracts/sMasterChef.sol\":669:775  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"--CODEGEN--\":635:1373   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n    /* \"--CODEGEN--\":834:837   */\n  0x80\n    /* \"--CODEGEN--\":822:831   */\n  dup6\n    /* \"--CODEGEN--\":813:820   */\n  dup8\n    /* \"--CODEGEN--\":809:832   */\n  sub\n    /* \"--CODEGEN--\":805:838   */\n  slt\n    /* \"--CODEGEN--\":802:804   */\n  iszero\n  tag_16\n  jumpi\n  dup4\n  dup5\n    /* \"--CODEGEN--\":841:853   */\n  revert\n    /* \"--CODEGEN--\":802:804   */\ntag_16:\n    /* \"--CODEGEN--\":418:424   */\n  dup5\n    /* \"--CODEGEN--\":412:425   */\n  mload\n    /* \"--CODEGEN--\":430:482   */\n  tag_17\n    /* \"--CODEGEN--\":476:481   */\n  dup2\n    /* \"--CODEGEN--\":430:482   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"--CODEGEN--\":1023:1025   */\n  0x20\n    /* \"--CODEGEN--\":1087:1109   */\n  dup7\n  add\n    /* \"--CODEGEN--\":238:251   */\n  mload\n    /* \"--CODEGEN--\":893:986   */\n  swap1\n  swap5\n  pop\n    /* \"--CODEGEN--\":256:303   */\n  tag_19\n    /* \"--CODEGEN--\":238:251   */\n  dup2\n    /* \"--CODEGEN--\":256:303   */\n  tag_18\n  jump\t// in\ntag_19:\n    /* \"--CODEGEN--\":1156:1158   */\n  0x40\n    /* \"--CODEGEN--\":1206:1228   */\n  dup7\n  add\n    /* \"--CODEGEN--\":572:585   */\n  mload\n    /* \"--CODEGEN--\":1275:1277   */\n  0x60\n    /* \"--CODEGEN--\":1325:1347   */\n  dup8\n  add\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":1031:1119   */\n  swap2\n  swap5\n  pop\n    /* \"--CODEGEN--\":572:585   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":101:134   */\n  tag_20\n    /* \"--CODEGEN--\":83:96   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  tag_18\n  jump\t// in\ntag_20:\n    /* \"--CODEGEN--\":796:1373   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1914:2031   */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"--CODEGEN--\":1769:1823   */\n  dup2\n  and\n    /* \"--CODEGEN--\":1973:2008   */\n  dup2\n  eq\n    /* \"--CODEGEN--\":1963:1965   */\n  tag_22\n  jumpi\n    /* \"--CODEGEN--\":2022:2023   */\n  0x00\n  dup1\n    /* \"--CODEGEN--\":2012:2024   */\n  revert\n    /* \"--CODEGEN--\":1963:1965   */\ntag_22:\n    /* \"--CODEGEN--\":1957:2031   */\n  pop\n  jump\t// out\ntag_14:\n    /* \"contracts/sMasterChef.sol\":25023:48357  contract sMasterChef is Ownable, ReentrancyGuard {\r... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n  assignImmutable(\"0xad6001c41f5480e3ca6168a06649b3a3f0b7288943b7fbc0eb5698ed5504137a\")\n  assignImmutable(\"0x523002c9adf4540d1913fbcc02308745afe7fe46bf4736ab566dafa3acaa32ea\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/sMasterChef.sol\":25023:48357  contract sMasterChef is Ownable, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xc40d337b\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xdfcedeee\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xf474309e\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xf474309e\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf5a26f40\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf5b91cd3\n      eq\n      tag_45\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0xdfcedeee\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_42\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0xc799b59d\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xc799b59d\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xcc6db2da\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd2ce6ae8\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0xc40d337b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc507aeaa\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x9dd2fcc3\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x9dd2fcc3\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xac1d0609\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc3083016\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x99d7e84a\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x78ed5d1f\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x78ed5d1f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x815d087f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x81bdf98c\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_53:\n      dup1\n      0x715018a6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x78db4c34\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x372c12b1\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x61621aaa\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x6661100f\n      gt\n      tag_56\n      jumpi\n      dup1\n      0x6661100f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x69b02128\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x6fda08c3\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_56:\n      dup1\n      0x61621aaa\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_55:\n      dup1\n      0x4f70b15a\n      gt\n      tag_57\n      jumpi\n      dup1\n      0x4f70b15a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_57:\n      dup1\n      0x372c12b1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_54:\n      dup1\n      0x1526fe27\n      gt\n      tag_58\n      jumpi\n      dup1\n      0x19ab453c\n      gt\n      tag_59\n      jumpi\n      dup1\n      0x19ab453c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x19f95e2e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36183ed6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_59:\n      dup1\n      0x1526fe27\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x16e80f4d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_58:\n      dup1\n      0x041a84c9\n      gt\n      tag_60\n      jumpi\n      dup1\n      0x041a84c9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081e3eda\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0bb844bc\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_60:\n      dup1\n      0x033186e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x03dcff74\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sMasterChef.sol\":46703:46944  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r... */\n    tag_3:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sMasterChef.sol\":27296:27324  IBEP20 public immutable SHDW */\n    tag_4:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":45263:46556  function updateBoostMultiplier(\r... */\n    tag_5:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/sMasterChef.sol\":32017:32117  function poolLength() public view returns (uint256 pools) {\r... */\n    tag_6:\n      tag_61\n      tag_76\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":43665:44063  function updateBurnAdmin(address _newAdmin) external onlyOwner {\r... */\n    tag_7:\n      tag_71\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27564:27590  PoolInfo[] public poolInfo */\n    tag_8:\n      tag_82\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_65\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":28456:28505  uint256 public constant ACC_SHDW_PRECISION = 1e18 */\n    tag_9:\n      tag_61\n      tag_89\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":31448:31958  function init(IBEP20 dummyToken) external onlyOwner {\r... */\n    tag_10:\n      tag_71\n      tag_92\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":36937:37108  function shdwPerBlockToBurn() public view returns (uint256 amount) {\r... */\n    tag_11:\n      tag_61\n      tag_96\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":41878:42279  function burnShdw(bool _withUpdate) public onlyOwner {\r... */\n    tag_12:\n      tag_71\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27883:27924  mapping(address => bool) public whiteList */\n    tag_13:\n      tag_102\n      tag_103\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":39822:40726  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_14:\n      tag_71\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":40818:40909  function harvestFromMasterChef() public {\r... */\n    tag_15:\n      tag_71\n      tag_112\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":37291:38240  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r... */\n    tag_16:\n      tag_113\n      tag_114\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":41050:41740  function emergencyWithdraw(uint256 _pid) external nonReentrant {\r... */\n    tag_17:\n      tag_71\n      tag_119\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27999:28034  uint256 public immutable MASTER_PID */\n    tag_18:\n      tag_61\n      tag_122\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":36054:36345  function massUpdatePools() public {\r... */\n    tag_19:\n      tag_71\n      tag_125\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":34082:34812  function set(\r... */\n    tag_20:\n      tag_71\n      tag_127\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":29045:29089  uint256 public shdwRateToBurn = 643750000000 */\n    tag_21:\n      tag_61\n      tag_131\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":28734:28790  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n    tag_22:\n      tag_61\n      tag_134\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":29263:29314  uint256 public shdwRateToSpecialFarm = 293402777778 */\n    tag_23:\n      tag_61\n      tag_137\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":2698:2846  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_24:\n      tag_71\n      tag_140\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":29323:29353  uint256 public lastBurnedBlock */\n    tag_25:\n      tag_61\n      tag_142\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27658:27681  IBEP20[] public lpToken */\n    tag_26:\n      tag_67\n      tag_145\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":42664:43559  function updateShdwRate(\r... */\n    tag_27:\n      tag_71\n      tag_149\n      calldatasize\n      0x04\n      tag_150\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27399:27423  address public burnAdmin */\n    tag_28:\n      tag_67\n      tag_153\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":2056:2135  function owner() public view returns (address) {\r... */\n    tag_29:\n      tag_67\n      tag_157\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27731:27795  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_30:\n      tag_159\n      tag_160\n      calldatasize\n      0x04\n      tag_161\n      jump\t// in\n    tag_160:\n      tag_162\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      tag_65\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":28299:28336  uint256 public totalSpecialAllocPoint */\n    tag_31:\n      tag_61\n      tag_166\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":44665:45031  function updateBoostContract(address _newBoostContract) external onlyOwner {\r... */\n    tag_32:\n      tag_71\n      tag_169\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":44241:44503  function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r... */\n    tag_33:\n      tag_71\n      tag_172\n      calldatasize\n      0x04\n      tag_173\n      jump\t// in\n    tag_172:\n      tag_174\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27208:27246  IMasterChef public immutable DARK_CHEF */\n    tag_34:\n      tag_67\n      tag_176\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":28148:28185  uint256 public totalRegularAllocPoint */\n    tag_35:\n      tag_61\n      tag_180\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":32666:33776  function add(\r... */\n    tag_36:\n      tag_71\n      tag_183\n      calldatasize\n      0x04\n      tag_184\n      jump\t// in\n    tag_183:\n      tag_185\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":34986:35956  function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_37:\n      tag_61\n      tag_187\n      calldatasize\n      0x04\n      tag_161\n      jump\t// in\n    tag_187:\n      tag_188\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":28584:28636  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n    tag_38:\n      tag_61\n      tag_191\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27486:27514  address public boostContract */\n    tag_40:\n      tag_67\n      tag_197\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":38405:39653  function deposit(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_41:\n      tag_71\n      tag_200\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_200:\n      tag_201\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":3001:3245  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_42:\n      tag_71\n      tag_203\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_203:\n      tag_204\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":36495:36849  function shdwPerBlock(bool _isRegular) public view returns (uint256 amount) {\r... */\n    tag_43:\n      tag_61\n      tag_206\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_206:\n      tag_207\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":29153:29203  uint256 public shdwRateToRegularFarm = 62847222222 */\n    tag_44:\n      tag_61\n      tag_210\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":28388:28449  uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 40 * 1e18 */\n    tag_45:\n      tag_61\n      tag_213\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":46703:46944  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r... */\n    tag_64:\n        /* \"contracts/sMasterChef.sol\":46781:46788  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":46822:46836  userInfo[_pid] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":46822:46830  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":46822:46836  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":46822:46843  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/sMasterChef.sol\":46822:46859  userInfo[_pid][_user].boostMultiplier */\n      0x02\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":46877:46905  multiplier > BOOST_PRECISION */\n      dup2\n      gt\n        /* \"contracts/sMasterChef.sol\":46877:46936  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      tag_216\n      jumpi\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":46877:46936  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      jump(tag_217)\n    tag_216:\n        /* \"contracts/sMasterChef.sol\":46908:46918  multiplier */\n      dup1\n        /* \"contracts/sMasterChef.sol\":46877:46936  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n    tag_217:\n        /* \"contracts/sMasterChef.sol\":46870:46936  return multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      swap2\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":46703:46944  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\r... */\n    tag_215:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27296:27324  IBEP20 public immutable SHDW */\n    tag_68:\n      immutable(\"0xad6001c41f5480e3ca6168a06649b3a3f0b7288943b7fbc0eb5698ed5504137a\")\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":45263:46556  function updateBoostMultiplier(\r... */\n    tag_74:\n        /* \"contracts/sMasterChef.sol\":30951:30964  boostContract */\n      sload(0x03)\n        /* \"contracts/sMasterChef.sol\":30951:30978  boostContract == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":30951:30964  boostContract */\n      and\n        /* \"contracts/sMasterChef.sol\":30968:30978  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":30951:30978  boostContract == msg.sender */\n      eq\n        /* \"contracts/sMasterChef.sol\":30943:31024  require(boostContract == msg.sender, \"Ownable: caller is not the boost contract\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10858:10865  _status */\n      sload(0x01)\n        /* \"contracts/sMasterChef.sol\":10858:10877  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/sMasterChef.sol\":10850:10913  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_225\n      jump\t// in\n    tag_223:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10991:10998  _status */\n      0x01\n        /* \"contracts/sMasterChef.sol\":10991:11009  _status = _ENTERED */\n      sstore\n        /* \"contracts/sMasterChef.sol\":45440:45459  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"contracts/sMasterChef.sol\":45432:45507  require(_user != address(0), \"sMasterChef: The user address must be valid\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_229\n      jump\t// in\n    tag_227:\n        /* \"contracts/sMasterChef.sol\":45526:45534  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":45535:45539  _pid */\n      dup3\n        /* \"contracts/sMasterChef.sol\":45526:45540  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_230\n      jumpi\n      invalid\n    tag_230:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/sMasterChef.sol\":45526:45550  poolInfo[_pid].isRegular */\n      0x04\n        /* \"contracts/sMasterChef.sol\":45526:45540  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":45526:45550  poolInfo[_pid].isRegular */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/sMasterChef.sol\":45518:45602  require(poolInfo[_pid].isRegular, \"sMasterChef: Only regular farm could be boosted\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_234\n      jump\t// in\n    tag_232:\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":45635:45649  _newMultiplier */\n      dup2\n        /* \"contracts/sMasterChef.sol\":45635:45668  _newMultiplier >= BOOST_PRECISION */\n      lt\n      iszero\n        /* \"contracts/sMasterChef.sol\":45635:45709  _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":28780:28790  200 * 1e10 */\n      0x01d1a94a2000\n        /* \"contracts/sMasterChef.sol\":45672:45686  _newMultiplier */\n      dup2\n        /* \"contracts/sMasterChef.sol\":45672:45709  _newMultiplier <= MAX_BOOST_PRECISION */\n      gt\n      iszero\n        /* \"contracts/sMasterChef.sol\":45635:45709  _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION */\n    tag_235:\n        /* \"contracts/sMasterChef.sol\":45613:45778  require(\r... */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_238\n      jump\t// in\n    tag_236:\n        /* \"contracts/sMasterChef.sol\":45791:45811  PoolInfo memory pool */\n      tag_239\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/sMasterChef.sol\":45814:45830  updatePool(_pid) */\n      tag_241\n        /* \"contracts/sMasterChef.sol\":45825:45829  _pid */\n      dup4\n        /* \"contracts/sMasterChef.sol\":45814:45824  updatePool */\n      tag_115\n        /* \"contracts/sMasterChef.sol\":45814:45830  updatePool(_pid) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/sMasterChef.sol\":45841:45862  UserInfo storage user */\n      0x00\n        /* \"contracts/sMasterChef.sol\":45865:45879  userInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":45865:45873  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":45865:45879  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":45865:45886  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/sMasterChef.sol\":45791:45830  PoolInfo memory pool = updatePool(_pid) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/sMasterChef.sol\":45924:45955  getBoostMultiplier(_user, _pid) */\n      tag_242\n        /* \"contracts/sMasterChef.sol\":45880:45885  _user */\n      dup7\n        /* \"contracts/sMasterChef.sol\":45874:45878  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":45924:45942  getBoostMultiplier */\n      tag_64\n        /* \"contracts/sMasterChef.sol\":45924:45955  getBoostMultiplier(_user, _pid) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/sMasterChef.sol\":45899:45955  uint256 prevMultiplier = getBoostMultiplier(_user, _pid) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":45966:46012  settlePendingShdw(_user, _pid, prevMultiplier) */\n      tag_243\n        /* \"contracts/sMasterChef.sol\":45984:45989  _user */\n      dup7\n        /* \"contracts/sMasterChef.sol\":45991:45995  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":45997:46011  prevMultiplier */\n      dup4\n        /* \"contracts/sMasterChef.sol\":45966:45983  settlePendingShdw */\n      tag_244\n        /* \"contracts/sMasterChef.sol\":45966:46012  settlePendingShdw(_user, _pid, prevMultiplier) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/sMasterChef.sol\":46043:46169  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      tag_245\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":46043:46121  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":46100:46104  pool */\n      dup6\n        /* \"contracts/sMasterChef.sol\":46100:46120  pool.accShdwPerShare */\n      0x00\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":46043:46095  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      tag_247\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":46043:46074  user.amount.mul(_newMultiplier) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":46059:46073  _newMultiplier */\n      dup11\n        /* \"contracts/sMasterChef.sol\":46043:46047  user */\n      dup10\n        /* \"contracts/sMasterChef.sol\":46043:46054  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":46043:46058  user.amount.mul */\n      tag_249\n      swap1\n        /* \"contracts/sMasterChef.sol\":46043:46074  user.amount.mul(_newMultiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/sMasterChef.sol\":46043:46078  user.amount.mul(_newMultiplier).div */\n      swap1\n      tag_250\n        /* \"contracts/sMasterChef.sol\":46043:46095  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/sMasterChef.sol\":46043:46099  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul */\n      swap1\n      tag_249\n        /* \"contracts/sMasterChef.sol\":46043:46121  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":46043:46169  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n    tag_245:\n        /* \"contracts/sMasterChef.sol\":46025:46040  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/sMasterChef.sol\":46025:46169  user.rewardDebt = user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      sstore\n        /* \"contracts/sMasterChef.sol\":46304:46315  user.amount */\n      dup2\n      sload\n        /* \"contracts/sMasterChef.sol\":46205:46367  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r... */\n      tag_251\n      swap1\n        /* \"contracts/sMasterChef.sol\":46304:46356  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      tag_252\n      swap1\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/sMasterChef.sol\":46304:46335  user.amount.mul(_newMultiplier) */\n      tag_248\n      swap1\n        /* \"contracts/sMasterChef.sol\":46320:46334  _newMultiplier */\n      dup9\n        /* \"contracts/sMasterChef.sol\":46304:46319  user.amount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":46304:46335  user.amount.mul(_newMultiplier) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":46304:46356  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n    tag_252:\n        /* \"contracts/sMasterChef.sol\":46232:46243  user.amount */\n      dup4\n      sload\n        /* \"contracts/sMasterChef.sol\":46205:46285  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)) */\n      tag_254\n      swap1\n        /* \"contracts/sMasterChef.sol\":46232:46284  user.amount.mul(prevMultiplier).div(BOOST_PRECISION) */\n      tag_255\n      swap1\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/sMasterChef.sol\":46232:46263  user.amount.mul(prevMultiplier) */\n      tag_248\n      swap1\n        /* \"contracts/sMasterChef.sol\":46248:46262  prevMultiplier */\n      dup8\n        /* \"contracts/sMasterChef.sol\":46232:46247  user.amount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":46232:46263  user.amount.mul(prevMultiplier) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":46232:46284  user.amount.mul(prevMultiplier).div(BOOST_PRECISION) */\n    tag_255:\n        /* \"contracts/sMasterChef.sol\":46205:46227  pool.totalBoostedShare */\n      0x60\n      dup8\n      add\n      mload\n      swap1\n        /* \"contracts/sMasterChef.sol\":46205:46231  pool.totalBoostedShare.sub */\n      tag_257\n        /* \"contracts/sMasterChef.sol\":46205:46285  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/sMasterChef.sol\":46205:46289  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add */\n      swap1\n      tag_258\n        /* \"contracts/sMasterChef.sol\":46205:46367  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r... */\n      jump\t// in\n    tag_251:\n        /* \"contracts/sMasterChef.sol\":46180:46202  pool.totalBoostedShare */\n      0x60\n      dup5\n      add\n        /* \"contracts/sMasterChef.sol\":46180:46367  pool.totalBoostedShare = pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\r... */\n      mstore\n        /* \"contracts/sMasterChef.sol\":46378:46386  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":46378:46392  poolInfo[_pid] */\n      dup1\n      sload\n        /* \"contracts/sMasterChef.sol\":46180:46184  pool */\n      dup5\n      swap2\n        /* \"contracts/sMasterChef.sol\":46378:46386  poolInfo */\n      swap1\n        /* \"contracts/sMasterChef.sol\":46387:46391  _pid */\n      dup8\n      swap1\n        /* \"contracts/sMasterChef.sol\":46378:46392  poolInfo[_pid] */\n      dup2\n      lt\n      tag_259\n      jumpi\n      invalid\n    tag_259:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":46378:46399  poolInfo[_pid] = pool */\n      dup5\n      mload\n        /* \"contracts/sMasterChef.sol\":46378:46392  poolInfo[_pid] */\n      0x05\n      swap4\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":46378:46399  poolInfo[_pid] = pool */\n      swap2\n      dup3\n      sstore\n      dup4\n      dup2\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      0x40\n      dup1\n      dup6\n      add\n      mload\n      0x02\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0x60\n      dup7\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      0x80\n      swap1\n      swap6\n      add\n      mload\n      0x04\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap4\n      iszero\n      iszero\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/sMasterChef.sol\":46410:46424  userInfo[_pid] */\n      dup9\n      dup4\n      mstore\n        /* \"contracts/sMasterChef.sol\":46410:46418  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":46410:46424  userInfo[_pid] */\n      dup2\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":46410:46431  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      and\n      dup1\n      dup6\n      mstore\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":46410:46447  userInfo[_pid][_user].boostMultiplier */\n      swap1\n      swap3\n      add\n        /* \"contracts/sMasterChef.sol\":46410:46464  userInfo[_pid][_user].boostMultiplier = _newMultiplier */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":46482:46548  UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier) */\n      swap1\n      mload\n      0x01abd62439b64f6c5dab6f94d56099495bd0c094f9c21f98f4d3562a21edb4ba\n      swap1\n      tag_261\n      swap1\n        /* \"contracts/sMasterChef.sol\":46410:46424  userInfo[_pid] */\n      dup9\n      swap1\n        /* \"contracts/sMasterChef.sol\":46517:46531  prevMultiplier */\n      dup6\n      swap1\n        /* \"contracts/sMasterChef.sol\":46410:46464  userInfo[_pid][_user].boostMultiplier = _newMultiplier */\n      dup10\n      swap1\n        /* \"contracts/sMasterChef.sol\":46482:46548  UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier) */\n      tag_164\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":10208:10209  1 */\n      0x01\n        /* \"contracts/sMasterChef.sol\":11170:11192  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":45263:46556  function updateBoostMultiplier(\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":32017:32117  function poolLength() public view returns (uint256 pools) {\r... */\n    tag_76:\n        /* \"contracts/sMasterChef.sol\":32094:32102  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":32094:32109  poolInfo.length */\n      sload\n      swap1\n        /* \"contracts/sMasterChef.sol\":32017:32117  function poolLength() public view returns (uint256 pools) {\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":43665:44063  function updateBurnAdmin(address _newAdmin) external onlyOwner {\r... */\n    tag_81:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_264\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_266:\n        /* \"contracts/sMasterChef.sol\":43747:43770  _newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":43739:43820  require(_newAdmin != address(0), \"sMasterChef: Burn admin address must be valid\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_272\n      jump\t// in\n    tag_270:\n        /* \"contracts/sMasterChef.sol\":43852:43861  burnAdmin */\n      sload(0x02)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":43839:43861  _newAdmin != burnAdmin */\n      dup3\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":43852:43861  burnAdmin */\n      swap2\n      and\n        /* \"contracts/sMasterChef.sol\":43839:43861  _newAdmin != burnAdmin */\n      eq\n      iszero\n        /* \"contracts/sMasterChef.sol\":43831:43930  require(_newAdmin != burnAdmin, \"sMasterChef: Burn admin address is the same with current address\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_275\n      jump\t// in\n    tag_273:\n        /* \"contracts/sMasterChef.sol\":43961:43970  burnAdmin */\n      0x02\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":43981:44002  burnAdmin = _newAdmin */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/sMasterChef.sol\":44018:44055  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      mload(0x40)\n        /* \"contracts/sMasterChef.sol\":43961:43970  burnAdmin */\n      swap2\n      and\n      swap2\n        /* \"contracts/sMasterChef.sol\":43981:44002  burnAdmin = _newAdmin */\n      swap1\n        /* \"contracts/sMasterChef.sol\":43961:43970  burnAdmin */\n      dup3\n      swap1\n        /* \"contracts/sMasterChef.sol\":44018:44055  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      0xd146fe330fdddf682413850a35b28edfccd4c4b53cfee802fd24950de5be1dbe\n      swap1\n        /* \"contracts/sMasterChef.sol\":43941:43958  address _oldAdmin */\n      0x00\n      swap1\n        /* \"contracts/sMasterChef.sol\":44018:44055  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      log3\n        /* \"contracts/sMasterChef.sol\":2338:2339  _ */\n      pop\n        /* \"contracts/sMasterChef.sol\":43665:44063  function updateBurnAdmin(address _newAdmin) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27564:27590  PoolInfo[] public poolInfo */\n    tag_85:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_276\n      jumpi\n      invalid\n    tag_276:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap5\n      pop\n      swap1\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup6\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":28456:28505  uint256 public constant ACC_SHDW_PRECISION = 1e18 */\n    tag_89:\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":28456:28505  uint256 public constant ACC_SHDW_PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":31448:31958  function init(IBEP20 dummyToken) external onlyOwner {\r... */\n    tag_94:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_279\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_280:\n        /* \"contracts/sMasterChef.sol\":31529:31561  dummyToken.balanceOf(msg.sender) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":31511:31526  uint256 balance */\n      0x00\n      swap1\n        /* \"contracts/sMasterChef.sol\":31529:31549  dummyToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/sMasterChef.sol\":31529:31561  dummyToken.balanceOf(msg.sender) */\n      tag_283\n      swap1\n        /* \"contracts/sMasterChef.sol\":31550:31560  msg.sender */\n      caller\n      swap1\n        /* \"contracts/sMasterChef.sol\":31529:31561  dummyToken.balanceOf(msg.sender) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_283:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_285:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"contracts/sMasterChef.sol\":31511:31561  uint256 balance = dummyToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":31580:31592  balance != 0 */\n      dup1\n        /* \"contracts/sMasterChef.sol\":31572:31631  require(balance != 0, \"sMasterChef: Balance must exceed 0\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_292\n      jump\t// in\n    tag_290:\n        /* \"contracts/sMasterChef.sol\":31642:31705  dummyToken.safeTransferFrom(msg.sender, address(this), balance) */\n      tag_293\n        /* \"contracts/sMasterChef.sol\":31642:31669  dummyToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"contracts/sMasterChef.sol\":31670:31680  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":31690:31694  this */\n      address\n        /* \"contracts/sMasterChef.sol\":31697:31704  balance */\n      dup5\n        /* \"contracts/sMasterChef.sol\":31642:31669  dummyToken.safeTransferFrom */\n      tag_294\n        /* \"contracts/sMasterChef.sol\":31642:31705  dummyToken.safeTransferFrom(msg.sender, address(this), balance) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/sMasterChef.sol\":31716:31763  dummyToken.approve(address(DARK_CHEF), balance) */\n      mload(0x40)\n      0x095ea7b300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":31716:31734  dummyToken.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"contracts/sMasterChef.sol\":31716:31763  dummyToken.approve(address(DARK_CHEF), balance) */\n      tag_295\n      swap1\n        /* \"contracts/sMasterChef.sol\":31743:31752  DARK_CHEF */\n      immutable(\"0x523002c9adf4540d1913fbcc02308745afe7fe46bf4736ab566dafa3acaa32ea\")\n      swap1\n        /* \"contracts/sMasterChef.sol\":31755:31762  balance */\n      dup6\n      swap1\n        /* \"contracts/sMasterChef.sol\":31716:31763  dummyToken.approve(address(DARK_CHEF), balance) */\n      0x04\n      add\n      tag_296\n      jump\t// in\n    tag_295:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_297:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_299:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      pop\n        /* \"contracts/sMasterChef.sol\":31774:31812  DARK_CHEF.deposit(MASTER_PID, balance) */\n      mload(0x40)\n      0xe2bbb15800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":31774:31791  DARK_CHEF.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":31774:31783  DARK_CHEF */\n      immutable(\"0x523002c9adf4540d1913fbcc02308745afe7fe46bf4736ab566dafa3acaa32ea\")\n        /* \"contracts/sMasterChef.sol\":31774:31791  DARK_CHEF.deposit */\n      and\n      swap1\n      0xe2bbb158\n      swap1\n        /* \"contracts/sMasterChef.sol\":31774:31812  DARK_CHEF.deposit(MASTER_PID, balance) */\n      tag_302\n      swap1\n        /* \"contracts/sMasterChef.sol\":31792:31802  MASTER_PID */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      swap1\n        /* \"contracts/sMasterChef.sol\":31804:31811  balance */\n      dup6\n      swap1\n        /* \"contracts/sMasterChef.sol\":31774:31812  DARK_CHEF.deposit(MASTER_PID, balance) */\n      0x04\n      add\n      tag_353\n      jump\t// in\n    tag_302:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":31916:31928  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":31898:31913  lastBurnedBlock */\n      0x0d\n        /* \"contracts/sMasterChef.sol\":31898:31928  lastBurnedBlock = block.number */\n      sstore\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":31944:31950  Init() */\n      mload(0x40)\n      0x57a86f7d14ccde89e22870afe839e3011216827daa9b24e18629f0a1e9d6cc14\n      swap1\n      0x00\n      swap1\n      log1\n        /* \"contracts/sMasterChef.sol\":2338:2339  _ */\n      pop\n        /* \"contracts/sMasterChef.sol\":31448:31958  function init(IBEP20 dummyToken) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":36937:37108  function shdwPerBlockToBurn() public view returns (uint256 amount) {\r... */\n    tag_96:\n        /* \"contracts/sMasterChef.sol\":36988:37002  uint256 amount */\n      0x00\n        /* \"contracts/sMasterChef.sol\":37024:37100  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION) */\n      tag_308\n        /* \"contracts/sMasterChef.sol\":28915:28919  1e12 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":37024:37069  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":37054:37068  shdwRateToBurn */\n      sload(0x0a)\n        /* \"contracts/sMasterChef.sol\":28440:28449  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"contracts/sMasterChef.sol\":37024:37053  MASTERCHEF_SHDW_PER_BLOCK.mul */\n      tag_249\n      swap1\n        /* \"contracts/sMasterChef.sol\":37024:37069  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":37024:37100  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION) */\n    tag_308:\n        /* \"contracts/sMasterChef.sol\":37015:37100  amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToBurn).div(SHDW_RATE_TOTAL_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":36937:37108  function shdwPerBlockToBurn() public view returns (uint256 amount) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":41878:42279  function burnShdw(bool _withUpdate) public onlyOwner {\r... */\n    tag_101:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_311\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_311:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_312:\n        /* \"contracts/sMasterChef.sol\":41946:41957  _withUpdate */\n      dup1\n        /* \"contracts/sMasterChef.sol\":41942:42003  if (_withUpdate) {\r... */\n      iszero\n      tag_316\n      jumpi\n        /* \"contracts/sMasterChef.sol\":41974:41991  massUpdatePools() */\n      tag_316\n        /* \"contracts/sMasterChef.sol\":41974:41989  massUpdatePools */\n      tag_125\n        /* \"contracts/sMasterChef.sol\":41974:41991  massUpdatePools() */\n      jump\t// in\n    tag_316:\n        /* \"contracts/sMasterChef.sol\":42015:42033  uint256 multiplier */\n      0x00\n        /* \"contracts/sMasterChef.sol\":42036:42069  block.number.sub(lastBurnedBlock) */\n      tag_317\n        /* \"contracts/sMasterChef.sol\":42053:42068  lastBurnedBlock */\n      sload(0x0d)\n        /* \"contracts/sMasterChef.sol\":42036:42048  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":42036:42052  block.number.sub */\n      tag_257\n      swap1\n        /* \"contracts/sMasterChef.sol\":42036:42069  block.number.sub(lastBurnedBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/sMasterChef.sol\":42015:42069  uint256 multiplier = block.number.sub(lastBurnedBlock) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":42080:42105  uint256 pendingShdwToBurn */\n      0x00\n        /* \"contracts/sMasterChef.sol\":42108:42144  multiplier.mul(shdwPerBlockToBurn()) */\n      tag_318\n        /* \"contracts/sMasterChef.sol\":42123:42143  shdwPerBlockToBurn() */\n      tag_319\n        /* \"contracts/sMasterChef.sol\":42123:42141  shdwPerBlockToBurn */\n      tag_96\n        /* \"contracts/sMasterChef.sol\":42123:42143  shdwPerBlockToBurn() */\n      jump\t// in\n    tag_319:\n        /* \"contracts/sMasterChef.sol\":42108:42118  multiplier */\n      dup4\n      swap1\n        /* \"contracts/sMasterChef.sol\":42108:42122  multiplier.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":42108:42144  multiplier.mul(shdwPerBlockToBurn()) */\n      jump\t// in\n    tag_318:\n        /* \"contracts/sMasterChef.sol\":42201:42210  burnAdmin */\n      sload(0x02)\n        /* \"contracts/sMasterChef.sol\":42080:42144  uint256 pendingShdwToBurn = multiplier.mul(shdwPerBlockToBurn()) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":42187:42230  _safeTransfer(burnAdmin, pendingShdwToBurn) */\n      tag_320\n      swap1\n        /* \"contracts/sMasterChef.sol\":42201:42210  burnAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sMasterChef.sol\":42080:42144  uint256 pendingShdwToBurn = multiplier.mul(shdwPerBlockToBurn()) */\n      dup3\n        /* \"contracts/sMasterChef.sol\":42187:42200  _safeTransfer */\n      tag_321\n        /* \"contracts/sMasterChef.sol\":42187:42230  _safeTransfer(burnAdmin, pendingShdwToBurn) */\n      jump\t// in\n    tag_320:\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":42259:42271  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":42241:42256  lastBurnedBlock */\n      0x0d\n        /* \"contracts/sMasterChef.sol\":42241:42271  lastBurnedBlock = block.number */\n      sstore\n      pop\n        /* \"contracts/sMasterChef.sol\":41878:42279  function burnShdw(bool _withUpdate) public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27883:27924  mapping(address => bool) public whiteList */\n    tag_104:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":39822:40726  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_110:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10858:10865  _status */\n      sload(0x01)\n        /* \"contracts/sMasterChef.sol\":10858:10877  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/sMasterChef.sol\":10850:10913  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_225\n      jump\t// in\n    tag_323:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10991:10998  _status */\n      0x01\n        /* \"contracts/sMasterChef.sol\":10991:11009  _status = _ENTERED */\n      sstore\n        /* \"contracts/sMasterChef.sol\":39904:39924  PoolInfo memory pool */\n      tag_326\n      tag_240\n      jump\t// in\n    tag_326:\n        /* \"contracts/sMasterChef.sol\":39927:39943  updatePool(_pid) */\n      tag_327\n        /* \"contracts/sMasterChef.sol\":39938:39942  _pid */\n      dup4\n        /* \"contracts/sMasterChef.sol\":39927:39937  updatePool */\n      tag_115\n        /* \"contracts/sMasterChef.sol\":39927:39943  updatePool(_pid) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/sMasterChef.sol\":39954:39975  UserInfo storage user */\n      0x00\n        /* \"contracts/sMasterChef.sol\":39978:39992  userInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":39978:39986  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":39978:39992  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":39993:40003  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":39978:40004  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":40025:40036  user.amount */\n      dup1\n      sload\n        /* \"contracts/sMasterChef.sol\":39904:39943  PoolInfo memory pool = updatePool(_pid) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/sMasterChef.sol\":39978:40004  userInfo[_pid][msg.sender] */\n      swap1\n        /* \"contracts/sMasterChef.sol\":40025:40047  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"contracts/sMasterChef.sol\":40017:40074  require(user.amount >= _amount, \"withdraw: Insufficient\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_330\n      jump\t// in\n    tag_328:\n        /* \"contracts/sMasterChef.sol\":40087:40105  uint256 multiplier */\n      0x00\n        /* \"contracts/sMasterChef.sol\":40108:40144  getBoostMultiplier(msg.sender, _pid) */\n      tag_331\n        /* \"contracts/sMasterChef.sol\":40127:40137  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":40139:40143  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":40108:40126  getBoostMultiplier */\n      tag_64\n        /* \"contracts/sMasterChef.sol\":40108:40144  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_331:\n        /* \"contracts/sMasterChef.sol\":40087:40144  uint256 multiplier = getBoostMultiplier(msg.sender, _pid) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":40157:40204  settlePendingShdw(msg.sender, _pid, multiplier) */\n      tag_332\n        /* \"contracts/sMasterChef.sol\":40175:40185  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":40187:40191  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":40193:40203  multiplier */\n      dup4\n        /* \"contracts/sMasterChef.sol\":40157:40174  settlePendingShdw */\n      tag_244\n        /* \"contracts/sMasterChef.sol\":40157:40204  settlePendingShdw(msg.sender, _pid, multiplier) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/sMasterChef.sol\":40221:40232  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/sMasterChef.sol\":40217:40361  if (_amount > 0) {\r... */\n      tag_335\n      jumpi\n        /* \"contracts/sMasterChef.sol\":40263:40274  user.amount */\n      dup2\n      sload\n        /* \"contracts/sMasterChef.sol\":40263:40287  user.amount.sub(_amount) */\n      tag_334\n      swap1\n        /* \"contracts/sMasterChef.sol\":40279:40286  _amount */\n      dup6\n        /* \"contracts/sMasterChef.sol\":40263:40278  user.amount.sub */\n      tag_257\n        /* \"contracts/sMasterChef.sol\":40263:40287  user.amount.sub(_amount) */\n      jump\t// in\n    tag_334:\n        /* \"contracts/sMasterChef.sol\":40249:40253  user */\n      dup3\n        /* \"contracts/sMasterChef.sol\":40249:40260  user.amount */\n      0x00\n      add\n        /* \"contracts/sMasterChef.sol\":40249:40287  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sMasterChef.sol\":40302:40349  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      tag_335\n        /* \"contracts/sMasterChef.sol\":40329:40339  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":40341:40348  _amount */\n      dup6\n        /* \"contracts/sMasterChef.sol\":40302:40309  lpToken */\n      0x05\n        /* \"contracts/sMasterChef.sol\":40310:40314  _pid */\n      dup9\n        /* \"contracts/sMasterChef.sol\":40302:40315  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_336\n      jumpi\n      invalid\n    tag_336:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap2\n        /* \"contracts/sMasterChef.sol\":40302:40349  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      swap1\n        /* \"contracts/sMasterChef.sol\":40302:40328  lpToken[_pid].safeTransfer */\n      tag_338\n        /* \"contracts/sMasterChef.sol\":40302:40349  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/sMasterChef.sol\":40391:40513  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      tag_339\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":40391:40465  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":40444:40448  pool */\n      dup6\n        /* \"contracts/sMasterChef.sol\":40444:40464  pool.accShdwPerShare */\n      0x00\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":40391:40439  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_247\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":40391:40418  user.amount.mul(multiplier) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":40407:40417  multiplier */\n      dup8\n        /* \"contracts/sMasterChef.sol\":40391:40395  user */\n      dup10\n        /* \"contracts/sMasterChef.sol\":40391:40402  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":40391:40406  user.amount.mul */\n      tag_249\n      swap1\n        /* \"contracts/sMasterChef.sol\":40391:40418  user.amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":40391:40513  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n    tag_339:\n        /* \"contracts/sMasterChef.sol\":40373:40388  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/sMasterChef.sol\":40373:40513  user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      sstore\n        /* \"contracts/sMasterChef.sol\":40559:40665  poolInfo[_pid].totalBoostedShare.sub(\r... */\n      tag_343\n        /* \"contracts/sMasterChef.sol\":40610:40654  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_344\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":40610:40633  _amount.mul(multiplier) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":40610:40617  _amount */\n      dup8\n        /* \"contracts/sMasterChef.sol\":40622:40632  multiplier */\n      dup6\n        /* \"contracts/sMasterChef.sol\":40610:40621  _amount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":40610:40633  _amount.mul(multiplier) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":40610:40654  _amount.mul(multiplier).div(BOOST_PRECISION) */\n    tag_344:\n        /* \"contracts/sMasterChef.sol\":40559:40567  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":40568:40572  _pid */\n      dup8\n        /* \"contracts/sMasterChef.sol\":40559:40573  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_346\n      jumpi\n      invalid\n    tag_346:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":40559:40591  poolInfo[_pid].totalBoostedShare */\n      0x03\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":40559:40595  poolInfo[_pid].totalBoostedShare.sub */\n      tag_257\n      swap1\n        /* \"contracts/sMasterChef.sol\":40559:40665  poolInfo[_pid].totalBoostedShare.sub(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_343:\n        /* \"contracts/sMasterChef.sol\":40524:40532  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":40533:40537  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":40524:40538  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_348\n      jumpi\n      invalid\n    tag_348:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":40524:40556  poolInfo[_pid].totalBoostedShare */\n      0x03\n      add\n        /* \"contracts/sMasterChef.sol\":40524:40665  poolInfo[_pid].totalBoostedShare = poolInfo[_pid].totalBoostedShare.sub(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sMasterChef.sol\":40704:40708  _pid */\n      dup5\n        /* \"contracts/sMasterChef.sol\":40692:40702  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":40683:40718  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/sMasterChef.sol\":40710:40717  _amount */\n      dup7\n        /* \"contracts/sMasterChef.sol\":40683:40718  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_350\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":10208:10209  1 */\n      0x01\n        /* \"contracts/sMasterChef.sol\":11170:11192  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":39822:40726  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":40818:40909  function harvestFromMasterChef() public {\r... */\n    tag_112:\n        /* \"contracts/sMasterChef.sol\":40869:40901  DARK_CHEF.deposit(MASTER_PID, 0) */\n      mload(0x40)\n      0xe2bbb15800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":40869:40886  DARK_CHEF.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":40869:40878  DARK_CHEF */\n      immutable(\"0x523002c9adf4540d1913fbcc02308745afe7fe46bf4736ab566dafa3acaa32ea\")\n        /* \"contracts/sMasterChef.sol\":40869:40886  DARK_CHEF.deposit */\n      and\n      swap1\n      0xe2bbb158\n      swap1\n        /* \"contracts/sMasterChef.sol\":40869:40901  DARK_CHEF.deposit(MASTER_PID, 0) */\n      tag_352\n      swap1\n        /* \"contracts/sMasterChef.sol\":40887:40897  MASTER_PID */\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      swap1\n        /* \"contracts/sMasterChef.sol\":40899:40900  0 */\n      0x00\n      swap1\n        /* \"contracts/sMasterChef.sol\":40869:40901  DARK_CHEF.deposit(MASTER_PID, 0) */\n      0x04\n      add\n      tag_353\n      jump\t// in\n    tag_352:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_354\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_354:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_356:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":40818:40909  function harvestFromMasterChef() public {\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":37291:38240  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r... */\n    tag_115:\n        /* \"contracts/sMasterChef.sol\":37341:37361  PoolInfo memory pool */\n      tag_357\n      tag_240\n      jump\t// in\n    tag_357:\n        /* \"contracts/sMasterChef.sol\":37381:37389  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":37390:37394  _pid */\n      dup3\n        /* \"contracts/sMasterChef.sol\":37381:37395  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_359\n      jumpi\n      invalid\n    tag_359:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":37374:37395  pool = poolInfo[_pid] */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/sMasterChef.sol\":37381:37395  poolInfo[_pid] */\n      0x05\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/sMasterChef.sol\":37374:37395  pool = poolInfo[_pid] */\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":37410:37422  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":37410:37445  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/sMasterChef.sol\":37406:38233  if (block.number > pool.lastRewardBlock) {\r... */\n      iszero\n      tag_361\n      jumpi\n        /* \"contracts/sMasterChef.sol\":37481:37503  pool.totalBoostedShare */\n      0x60\n      dup2\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":37545:37559  pool.isRegular */\n      0x80\n      dup3\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":37462:37478  uint256 lpSupply */\n      0x00\n      swap1\n        /* \"contracts/sMasterChef.sol\":37545:37609  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      tag_362\n      jumpi\n        /* \"contracts/sMasterChef.sol\":37587:37609  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/sMasterChef.sol\":37545:37609  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      jump(tag_363)\n    tag_362:\n        /* \"contracts/sMasterChef.sol\":37562:37584  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/sMasterChef.sol\":37545:37609  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n    tag_363:\n        /* \"contracts/sMasterChef.sol\":37518:37610  uint256 totalAllocPoint = (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":37642:37643  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":37631:37639  lpSupply */\n      dup3\n        /* \"contracts/sMasterChef.sol\":37631:37643  lpSupply > 0 */\n      gt\n        /* \"contracts/sMasterChef.sol\":37631:37666  lpSupply > 0 && totalAllocPoint > 0 */\n      dup1\n      iszero\n      tag_364\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":37665:37666  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":37647:37662  totalAllocPoint */\n      dup2\n        /* \"contracts/sMasterChef.sol\":37647:37666  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/sMasterChef.sol\":37631:37666  lpSupply > 0 && totalAllocPoint > 0 */\n    tag_364:\n        /* \"contracts/sMasterChef.sol\":37627:38046  if (lpSupply > 0 && totalAllocPoint > 0) {\r... */\n      iszero\n      tag_365\n      jumpi\n        /* \"contracts/sMasterChef.sol\":37687:37705  uint256 multiplier */\n      0x00\n        /* \"contracts/sMasterChef.sol\":37708:37746  block.number.sub(pool.lastRewardBlock) */\n      tag_366\n        /* \"contracts/sMasterChef.sol\":37725:37729  pool */\n      dup5\n        /* \"contracts/sMasterChef.sol\":37725:37745  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":37708:37720  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":37708:37724  block.number.sub */\n      tag_257\n      swap1\n        /* \"contracts/sMasterChef.sol\":37708:37746  block.number.sub(pool.lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"contracts/sMasterChef.sol\":37687:37746  uint256 multiplier = block.number.sub(pool.lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":37765:37783  uint256 shdwReward */\n      0x00\n        /* \"contracts/sMasterChef.sol\":37786:37912  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      tag_367\n        /* \"contracts/sMasterChef.sol\":37878:37893  totalAllocPoint */\n      dup4\n        /* \"contracts/sMasterChef.sol\":37786:37851  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":37835:37839  pool */\n      dup8\n        /* \"contracts/sMasterChef.sol\":37835:37850  pool.allocPoint */\n      0x40\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":37786:37830  multiplier.mul(shdwPerBlock(pool.isRegular)) */\n      tag_247\n        /* \"contracts/sMasterChef.sol\":37801:37829  shdwPerBlock(pool.isRegular) */\n      tag_370\n        /* \"contracts/sMasterChef.sol\":37814:37818  pool */\n      dup11\n        /* \"contracts/sMasterChef.sol\":37814:37828  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":37801:37813  shdwPerBlock */\n      tag_207\n        /* \"contracts/sMasterChef.sol\":37801:37829  shdwPerBlock(pool.isRegular) */\n      jump\t// in\n    tag_370:\n        /* \"contracts/sMasterChef.sol\":37786:37796  multiplier */\n      dup8\n      swap1\n        /* \"contracts/sMasterChef.sol\":37786:37800  multiplier.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":37786:37830  multiplier.mul(shdwPerBlock(pool.isRegular)) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":37786:37912  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n    tag_367:\n        /* \"contracts/sMasterChef.sol\":37765:37912  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":37954:38030  pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply))) */\n      tag_371\n        /* \"contracts/sMasterChef.sol\":37980:38028  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n      tag_372\n        /* \"contracts/sMasterChef.sol\":38019:38027  lpSupply */\n      dup6\n        /* \"contracts/sMasterChef.sol\":37980:38014  shdwReward.mul(ACC_SHDW_PRECISION) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":37765:37912  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      dup5\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":37980:37994  shdwReward.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":37980:38014  shdwReward.mul(ACC_SHDW_PRECISION) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":37980:38028  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n    tag_372:\n        /* \"contracts/sMasterChef.sol\":37954:37974  pool.accShdwPerShare */\n      dup7\n      mload\n      swap1\n        /* \"contracts/sMasterChef.sol\":37954:37978  pool.accShdwPerShare.add */\n      tag_258\n        /* \"contracts/sMasterChef.sol\":37954:38030  pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply))) */\n      jump\t// in\n    tag_371:\n        /* \"contracts/sMasterChef.sol\":37931:38030  pool.accShdwPerShare = pool.accShdwPerShare.add((shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply))) */\n      dup6\n      mstore\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":37627:38046  if (lpSupply > 0 && totalAllocPoint > 0) {\r... */\n    tag_365:\n        /* \"contracts/sMasterChef.sol\":38083:38095  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":38060:38080  pool.lastRewardBlock */\n      0x20\n      dup5\n      add\n        /* \"contracts/sMasterChef.sol\":38060:38095  pool.lastRewardBlock = block.number */\n      mstore\n        /* \"contracts/sMasterChef.sol\":38110:38118  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":38110:38124  poolInfo[_pid] */\n      dup1\n      sload\n        /* \"contracts/sMasterChef.sol\":38060:38064  pool */\n      dup5\n      swap2\n        /* \"contracts/sMasterChef.sol\":38110:38118  poolInfo */\n      swap1\n        /* \"contracts/sMasterChef.sol\":38119:38123  _pid */\n      dup7\n      swap1\n        /* \"contracts/sMasterChef.sol\":38110:38124  poolInfo[_pid] */\n      dup2\n      lt\n      tag_374\n      jumpi\n      invalid\n    tag_374:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":38110:38131  poolInfo[_pid] = pool */\n      dup4\n      mload\n        /* \"contracts/sMasterChef.sol\":38110:38124  poolInfo[_pid] */\n      0x05\n      swap3\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":38110:38131  poolInfo[_pid] = pool */\n      swap1\n      dup2\n      sstore\n      dup3\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      dup1\n      dup5\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup5\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      swap1\n      swap4\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":38168:38188  pool.lastRewardBlock */\n      dup5\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":38200:38220  pool.accShdwPerShare */\n      dup5\n      mload\n        /* \"contracts/sMasterChef.sol\":38151:38221  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare) */\n      swap2\n      mload\n        /* \"contracts/sMasterChef.sol\":38162:38166  _pid */\n      dup7\n      swap3\n        /* \"contracts/sMasterChef.sol\":38151:38221  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare) */\n      0x3be3541fc42237d611b30329040bfa4569541d156560acdbbae57640d20b8f46\n      swap3\n      tag_376\n      swap3\n        /* \"contracts/sMasterChef.sol\":38168:38188  pool.lastRewardBlock */\n      swap1\n      swap2\n        /* \"contracts/sMasterChef.sol\":38190:38198  lpSupply */\n      dup8\n      swap2\n        /* \"contracts/sMasterChef.sol\":38151:38221  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accShdwPerShare) */\n      tag_164\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sMasterChef.sol\":37406:38233  if (block.number > pool.lastRewardBlock) {\r... */\n      pop\n      pop\n    tag_361:\n        /* \"contracts/sMasterChef.sol\":37291:38240  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":41050:41740  function emergencyWithdraw(uint256 _pid) external nonReentrant {\r... */\n    tag_120:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10858:10865  _status */\n      sload(0x01)\n        /* \"contracts/sMasterChef.sol\":10858:10877  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/sMasterChef.sol\":10850:10913  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_225\n      jump\t// in\n    tag_378:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10991:10998  _status */\n      0x01\n        /* \"contracts/sMasterChef.sol\":10991:11009  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sMasterChef.sol\":41124:41145  PoolInfo storage pool */\n      0x00\n        /* \"contracts/sMasterChef.sol\":41148:41156  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":41157:41161  _pid */\n      dup3\n        /* \"contracts/sMasterChef.sol\":41148:41162  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_381\n      jumpi\n      invalid\n    tag_381:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":41197:41211  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/sMasterChef.sol\":41197:41205  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":41197:41211  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/sMasterChef.sol\":41212:41222  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":41197:41223  userInfo[_pid][msg.sender] */\n      dup1\n      dup8\n      mstore\n      swap4\n      mstore\n      dup5\n      keccak256\n        /* \"contracts/sMasterChef.sol\":41253:41264  user.amount */\n      dup1\n      sload\n        /* \"contracts/sMasterChef.sol\":41275:41290  user.amount = 0 */\n      dup6\n      dup3\n      sstore\n      0x01\n        /* \"contracts/sMasterChef.sol\":41301:41316  user.rewardDebt */\n      dup3\n      add\n        /* \"contracts/sMasterChef.sol\":41301:41320  user.rewardDebt = 0 */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":41148:41162  poolInfo[_pid] */\n      0x05\n      swap1\n      swap5\n      mul\n      swap1\n      swap2\n      add\n      swap5\n      pop\n        /* \"contracts/sMasterChef.sol\":41197:41223  userInfo[_pid][msg.sender] */\n      swap3\n        /* \"contracts/sMasterChef.sol\":41148:41162  poolInfo[_pid] */\n      swap1\n        /* \"contracts/sMasterChef.sol\":41355:41424  amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n      tag_383\n      swap1\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/sMasterChef.sol\":41355:41403  amount.mul(getBoostMultiplier(msg.sender, _pid)) */\n      tag_248\n      swap1\n        /* \"contracts/sMasterChef.sol\":41366:41402  getBoostMultiplier(msg.sender, _pid) */\n      tag_385\n      swap1\n        /* \"contracts/sMasterChef.sol\":41206:41210  _pid */\n      dup10\n        /* \"contracts/sMasterChef.sol\":41366:41384  getBoostMultiplier */\n      tag_64\n        /* \"contracts/sMasterChef.sol\":41366:41402  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/sMasterChef.sol\":41355:41361  amount */\n      dup6\n      swap1\n        /* \"contracts/sMasterChef.sol\":41355:41365  amount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":41355:41403  amount.mul(getBoostMultiplier(msg.sender, _pid)) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":41355:41424  amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n    tag_383:\n        /* \"contracts/sMasterChef.sol\":41331:41424  uint256 boostedAmount = amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":41485:41498  boostedAmount */\n      dup1\n        /* \"contracts/sMasterChef.sol\":41460:41464  pool */\n      dup5\n        /* \"contracts/sMasterChef.sol\":41460:41482  pool.totalBoostedShare */\n      0x03\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":41460:41498  pool.totalBoostedShare > boostedAmount */\n      gt\n        /* \"contracts/sMasterChef.sol\":41460:41546  pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      tag_386\n      jumpi\n        /* \"contracts/sMasterChef.sol\":41545:41546  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":41460:41546  pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      jump(tag_388)\n    tag_386:\n        /* \"contracts/sMasterChef.sol\":41501:41523  pool.totalBoostedShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":41501:41542  pool.totalBoostedShare.sub(boostedAmount) */\n      tag_388\n      swap1\n        /* \"contracts/sMasterChef.sol\":41528:41541  boostedAmount */\n      dup3\n        /* \"contracts/sMasterChef.sol\":41501:41527  pool.totalBoostedShare.sub */\n      tag_257\n        /* \"contracts/sMasterChef.sol\":41501:41542  pool.totalBoostedShare.sub(boostedAmount) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/sMasterChef.sol\":41435:41439  pool */\n      dup5\n        /* \"contracts/sMasterChef.sol\":41435:41457  pool.totalBoostedShare */\n      0x03\n      add\n        /* \"contracts/sMasterChef.sol\":41435:41546  pool.totalBoostedShare = pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sMasterChef.sol\":41627:41673  lpToken[_pid].safeTransfer(msg.sender, amount) */\n      tag_389\n        /* \"contracts/sMasterChef.sol\":41654:41664  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":41666:41672  amount */\n      dup4\n        /* \"contracts/sMasterChef.sol\":41627:41634  lpToken */\n      0x05\n        /* \"contracts/sMasterChef.sol\":41635:41639  _pid */\n      dup9\n        /* \"contracts/sMasterChef.sol\":41627:41640  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_336\n      jumpi\n      invalid\n        /* \"contracts/sMasterChef.sol\":41627:41673  lpToken[_pid].safeTransfer(msg.sender, amount) */\n    tag_389:\n        /* \"contracts/sMasterChef.sol\":41719:41723  _pid */\n      dup5\n        /* \"contracts/sMasterChef.sol\":41707:41717  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":41689:41732  EmergencyWithdraw(msg.sender, _pid, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/sMasterChef.sol\":41725:41731  amount */\n      dup5\n        /* \"contracts/sMasterChef.sol\":41689:41732  EmergencyWithdraw(msg.sender, _pid, amount) */\n      mload(0x40)\n      tag_350\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":27999:28034  uint256 public immutable MASTER_PID */\n    tag_122:\n      immutable(\"0x9d86ea630c09ef2f1acbc248368c7b7030882e2a5db3011ef0f1f27cf79c9d56\")\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":36054:36345  function massUpdatePools() public {\r... */\n    tag_125:\n        /* \"contracts/sMasterChef.sol\":36116:36124  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":36116:36131  poolInfo.length */\n      sload\n        /* \"contracts/sMasterChef.sol\":36099:36113  uint256 length */\n      0x00\n        /* \"contracts/sMasterChef.sol\":36142:36338  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_394:\n        /* \"contracts/sMasterChef.sol\":36170:36176  length */\n      dup2\n        /* \"contracts/sMasterChef.sol\":36164:36167  pid */\n      dup2\n        /* \"contracts/sMasterChef.sol\":36164:36176  pid < length */\n      lt\n        /* \"contracts/sMasterChef.sol\":36142:36338  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_395\n      jumpi\n        /* \"contracts/sMasterChef.sol\":36200:36220  PoolInfo memory pool */\n      tag_397\n      tag_240\n      jump\t// in\n    tag_397:\n        /* \"contracts/sMasterChef.sol\":36223:36231  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":36232:36235  pid */\n      dup3\n        /* \"contracts/sMasterChef.sol\":36223:36236  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_398\n      jumpi\n      invalid\n    tag_398:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":36200:36236  PoolInfo memory pool = poolInfo[pid] */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/sMasterChef.sol\":36223:36236  poolInfo[pid] */\n      0x05\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/sMasterChef.sol\":36200:36236  PoolInfo memory pool = poolInfo[pid] */\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      swap1\n      swap3\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":36255:36275  pool.allocPoint != 0 */\n      iszero\n        /* \"contracts/sMasterChef.sol\":36251:36327  if (pool.allocPoint != 0) {\r... */\n      tag_400\n      jumpi\n        /* \"contracts/sMasterChef.sol\":36296:36311  updatePool(pid) */\n      tag_401\n        /* \"contracts/sMasterChef.sol\":36307:36310  pid */\n      dup3\n        /* \"contracts/sMasterChef.sol\":36296:36306  updatePool */\n      tag_115\n        /* \"contracts/sMasterChef.sol\":36296:36311  updatePool(pid) */\n      jump\t// in\n    tag_401:\n      pop\n        /* \"contracts/sMasterChef.sol\":36251:36327  if (pool.allocPoint != 0) {\r... */\n    tag_400:\n      pop\n        /* \"contracts/sMasterChef.sol\":36178:36183  ++pid */\n      0x01\n      add\n        /* \"contracts/sMasterChef.sol\":36142:36338  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_394)\n    tag_395:\n      pop\n        /* \"contracts/sMasterChef.sol\":36054:36345  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":34082:34812  function set(\r... */\n    tag_129:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_403\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_403:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_404:\n        /* \"contracts/sMasterChef.sol\":34331:34347  updatePool(_pid) */\n      tag_407\n        /* \"contracts/sMasterChef.sol\":34342:34346  _pid */\n      dup4\n        /* \"contracts/sMasterChef.sol\":34331:34341  updatePool */\n      tag_115\n        /* \"contracts/sMasterChef.sol\":34331:34347  updatePool(_pid) */\n      jump\t// in\n    tag_407:\n      pop\n        /* \"contracts/sMasterChef.sol\":34364:34375  _withUpdate */\n      dup1\n        /* \"contracts/sMasterChef.sol\":34360:34421  if (_withUpdate) {\r... */\n      iszero\n      tag_409\n      jumpi\n        /* \"contracts/sMasterChef.sol\":34392:34409  massUpdatePools() */\n      tag_409\n        /* \"contracts/sMasterChef.sol\":34392:34407  massUpdatePools */\n      tag_125\n        /* \"contracts/sMasterChef.sol\":34392:34409  massUpdatePools() */\n      jump\t// in\n    tag_409:\n        /* \"contracts/sMasterChef.sol\":34437:34445  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":34446:34450  _pid */\n      dup4\n        /* \"contracts/sMasterChef.sol\":34437:34451  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_410\n      jumpi\n      invalid\n    tag_410:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/sMasterChef.sol\":34437:34461  poolInfo[_pid].isRegular */\n      0x04\n        /* \"contracts/sMasterChef.sol\":34437:34451  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":34437:34461  poolInfo[_pid].isRegular */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/sMasterChef.sol\":34433:34713  if (poolInfo[_pid].isRegular) {\r... */\n      iszero\n      tag_412\n      jumpi\n        /* \"contracts/sMasterChef.sol\":34503:34573  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_413\n        /* \"contracts/sMasterChef.sol\":34561:34572  _allocPoint */\n      dup3\n        /* \"contracts/sMasterChef.sol\":34503:34556  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_254\n        /* \"contracts/sMasterChef.sol\":34530:34538  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":34539:34543  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":34530:34544  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_415\n      jumpi\n      invalid\n    tag_415:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":34530:34555  poolInfo[_pid].allocPoint */\n      0x02\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":34503:34525  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/sMasterChef.sol\":34503:34529  totalRegularAllocPoint.sub */\n      tag_257\n      swap1\n        /* \"contracts/sMasterChef.sol\":34503:34556  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":34503:34573  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n    tag_413:\n        /* \"contracts/sMasterChef.sol\":34478:34500  totalRegularAllocPoint */\n      0x08\n        /* \"contracts/sMasterChef.sol\":34478:34573  totalRegularAllocPoint = totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      sstore\n        /* \"contracts/sMasterChef.sol\":34433:34713  if (poolInfo[_pid].isRegular) {\r... */\n      jump(tag_417)\n    tag_412:\n        /* \"contracts/sMasterChef.sol\":34631:34701  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_418\n        /* \"contracts/sMasterChef.sol\":34689:34700  _allocPoint */\n      dup3\n        /* \"contracts/sMasterChef.sol\":34631:34684  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_254\n        /* \"contracts/sMasterChef.sol\":34658:34666  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":34667:34671  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":34658:34672  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_420\n      jumpi\n      invalid\n    tag_420:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":34658:34683  poolInfo[_pid].allocPoint */\n      0x02\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":34631:34653  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/sMasterChef.sol\":34631:34657  totalSpecialAllocPoint.sub */\n      tag_257\n      swap1\n        /* \"contracts/sMasterChef.sol\":34631:34684  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":34631:34701  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n    tag_418:\n        /* \"contracts/sMasterChef.sol\":34606:34628  totalSpecialAllocPoint */\n      0x09\n        /* \"contracts/sMasterChef.sol\":34606:34701  totalSpecialAllocPoint = totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      sstore\n        /* \"contracts/sMasterChef.sol\":34433:34713  if (poolInfo[_pid].isRegular) {\r... */\n    tag_417:\n        /* \"contracts/sMasterChef.sol\":34751:34762  _allocPoint */\n      dup2\n        /* \"contracts/sMasterChef.sol\":34723:34731  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":34732:34736  _pid */\n      dup5\n        /* \"contracts/sMasterChef.sol\":34723:34737  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_422\n      jumpi\n      invalid\n    tag_422:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":34723:34748  poolInfo[_pid].allocPoint */\n      0x02\n      add\n        /* \"contracts/sMasterChef.sol\":34723:34762  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sMasterChef.sol\":34786:34790  _pid */\n      dup3\n        /* \"contracts/sMasterChef.sol\":34778:34804  SetPool(_pid, _allocPoint) */\n      0xc0cfd54d2de2b55f1e6e108d3ec53ff0a1abe6055401d32c61e9433b747ef9f8\n        /* \"contracts/sMasterChef.sol\":34792:34803  _allocPoint */\n      dup4\n        /* \"contracts/sMasterChef.sol\":34778:34804  SetPool(_pid, _allocPoint) */\n      mload(0x40)\n      tag_424\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sMasterChef.sol\":34082:34812  function set(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":29045:29089  uint256 public shdwRateToBurn = 643750000000 */\n    tag_131:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":28734:28790  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n    tag_134:\n        /* \"contracts/sMasterChef.sol\":28780:28790  200 * 1e10 */\n      0x01d1a94a2000\n        /* \"contracts/sMasterChef.sol\":28734:28790  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":29263:29314  uint256 public shdwRateToSpecialFarm = 293402777778 */\n    tag_137:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":2698:2846  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_140:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_426\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_426:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_427\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_427:\n        /* \"contracts/sMasterChef.sol\":2805:2806  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":2789:2795  _owner */\n      dup1\n      sload\n        /* \"contracts/sMasterChef.sol\":2768:2808  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2789:2795  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/sMasterChef.sol\":2768:2808  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/sMasterChef.sol\":2805:2806  0 */\n      dup4\n      swap1\n        /* \"contracts/sMasterChef.sol\":2768:2808  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/sMasterChef.sol\":2836:2837  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":2819:2838  _owner = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":2698:2846  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":29323:29353  uint256 public lastBurnedBlock */\n    tag_142:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27658:27681  IBEP20[] public lpToken */\n    tag_146:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_430\n      jumpi\n      invalid\n    tag_430:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":42664:43559  function updateShdwRate(\r... */\n    tag_151:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_433\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_433:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_434\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_434:\n        /* \"contracts/sMasterChef.sol\":42884:42885  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":42872:42881  _burnRate */\n      dup5\n        /* \"contracts/sMasterChef.sol\":42872:42885  _burnRate > 0 */\n      gt\n        /* \"contracts/sMasterChef.sol\":42872:42909  _burnRate > 0 && _regularFarmRate > 0 */\n      dup1\n      iszero\n      tag_437\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":42908:42909  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":42889:42905  _regularFarmRate */\n      dup4\n        /* \"contracts/sMasterChef.sol\":42889:42909  _regularFarmRate > 0 */\n      gt\n        /* \"contracts/sMasterChef.sol\":42872:42909  _burnRate > 0 && _regularFarmRate > 0 */\n    tag_437:\n        /* \"contracts/sMasterChef.sol\":42872:42933  _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0 */\n      dup1\n      iszero\n      tag_438\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":42932:42933  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":42913:42929  _specialFarmRate */\n      dup3\n        /* \"contracts/sMasterChef.sol\":42913:42933  _specialFarmRate > 0 */\n      gt\n        /* \"contracts/sMasterChef.sol\":42872:42933  _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0 */\n    tag_438:\n        /* \"contracts/sMasterChef.sol\":42850:43006  require(\r... */\n      tag_439\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_441\n      jump\t// in\n    tag_439:\n        /* \"contracts/sMasterChef.sol\":28915:28919  1e12 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":43039:43092  _burnRate.add(_regularFarmRate).add(_specialFarmRate) */\n      tag_442\n        /* \"contracts/sMasterChef.sol\":43075:43091  _specialFarmRate */\n      dup4\n        /* \"contracts/sMasterChef.sol\":43039:43070  _burnRate.add(_regularFarmRate) */\n      tag_254\n        /* \"contracts/sMasterChef.sol\":43039:43048  _burnRate */\n      dup8\n        /* \"contracts/sMasterChef.sol\":43053:43069  _regularFarmRate */\n      dup8\n        /* \"contracts/sMasterChef.sol\":43039:43052  _burnRate.add */\n      tag_258\n        /* \"contracts/sMasterChef.sol\":43039:43070  _burnRate.add(_regularFarmRate) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":43039:43092  _burnRate.add(_regularFarmRate).add(_specialFarmRate) */\n    tag_442:\n        /* \"contracts/sMasterChef.sol\":43039:43121  _burnRate.add(_regularFarmRate).add(_specialFarmRate) == SHDW_RATE_TOTAL_PRECISION */\n      eq\n        /* \"contracts/sMasterChef.sol\":43017:43185  require(\r... */\n      tag_444\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_446\n      jump\t// in\n    tag_444:\n        /* \"contracts/sMasterChef.sol\":43200:43211  _withUpdate */\n      dup1\n        /* \"contracts/sMasterChef.sol\":43196:43257  if (_withUpdate) {\r... */\n      iszero\n      tag_448\n      jumpi\n        /* \"contracts/sMasterChef.sol\":43228:43245  massUpdatePools() */\n      tag_448\n        /* \"contracts/sMasterChef.sol\":43228:43243  massUpdatePools */\n      tag_125\n        /* \"contracts/sMasterChef.sol\":43228:43245  massUpdatePools() */\n      jump\t// in\n    tag_448:\n        /* \"contracts/sMasterChef.sol\":43316:43331  burnShdw(false) */\n      tag_449\n        /* \"contracts/sMasterChef.sol\":43325:43330  false */\n      0x00\n        /* \"contracts/sMasterChef.sol\":43316:43324  burnShdw */\n      tag_101\n        /* \"contracts/sMasterChef.sol\":43316:43331  burnShdw(false) */\n      jump\t// in\n    tag_449:\n        /* \"contracts/sMasterChef.sol\":43344:43358  shdwRateToBurn */\n      0x0a\n        /* \"contracts/sMasterChef.sol\":43344:43370  shdwRateToBurn = _burnRate */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":43381:43402  shdwRateToRegularFarm */\n      0x0b\n        /* \"contracts/sMasterChef.sol\":43381:43421  shdwRateToRegularFarm = _regularFarmRate */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":43432:43453  shdwRateToSpecialFarm */\n      0x0c\n        /* \"contracts/sMasterChef.sol\":43432:43472  shdwRateToSpecialFarm = _specialFarmRate */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":43490:43551  UpdateShdwRate(_burnRate, _regularFarmRate, _specialFarmRate) */\n      mload(0x40)\n      0x2882b55ee231404a42d7d813dad9cfe57d65e1992a6d165a6e29466a8d1b7499\n      swap1\n      tag_450\n      swap1\n        /* \"contracts/sMasterChef.sol\":43361:43370  _burnRate */\n      dup7\n      swap1\n        /* \"contracts/sMasterChef.sol\":43405:43421  _regularFarmRate */\n      dup7\n      swap1\n        /* \"contracts/sMasterChef.sol\":43456:43472  _specialFarmRate */\n      dup7\n      swap1\n        /* \"contracts/sMasterChef.sol\":43490:43551  UpdateShdwRate(_burnRate, _regularFarmRate, _specialFarmRate) */\n      tag_164\n      jump\t// in\n    tag_450:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sMasterChef.sol\":42664:43559  function updateShdwRate(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27399:27423  address public burnAdmin */\n    tag_153:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":2056:2135  function owner() public view returns (address) {\r... */\n    tag_157:\n        /* \"contracts/sMasterChef.sol\":2094:2101  address */\n      0x00\n        /* \"contracts/sMasterChef.sol\":2121:2127  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sMasterChef.sol\":2056:2135  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27731:27795  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_162:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":28299:28336  uint256 public totalSpecialAllocPoint */\n    tag_166:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":44665:45031  function updateBoostContract(address _newBoostContract) external onlyOwner {\r... */\n    tag_170:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_453\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_453:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_454\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_454:\n        /* \"contracts/sMasterChef.sol\":44773:44804  _newBoostContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/sMasterChef.sol\":44773:44842  _newBoostContract != address(0) && _newBoostContract != boostContract */\n      tag_457\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":44829:44842  boostContract */\n      sload(0x03)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":44808:44842  _newBoostContract != boostContract */\n      dup3\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":44829:44842  boostContract */\n      swap2\n      and\n        /* \"contracts/sMasterChef.sol\":44808:44842  _newBoostContract != boostContract */\n      eq\n      iszero\n        /* \"contracts/sMasterChef.sol\":44773:44842  _newBoostContract != address(0) && _newBoostContract != boostContract */\n    tag_457:\n        /* \"contracts/sMasterChef.sol\":44751:44923  require(\r... */\n      tag_458\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_460\n      jump\t// in\n    tag_458:\n        /* \"contracts/sMasterChef.sol\":44936:44949  boostContract */\n      0x03\n        /* \"contracts/sMasterChef.sol\":44936:44969  boostContract = _newBoostContract */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/sMasterChef.sol\":44985:45023  UpdateBoostContract(_newBoostContract) */\n      mload(0x40)\n      0x4c0c07d0b548b824a1b998eb4d11fccf1cfbc1e47edcdb309970ba88315eb303\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/sMasterChef.sol\":44665:45031  function updateBoostContract(address _newBoostContract) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":44241:44503  function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r... */\n    tag_174:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_462\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_462:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_463\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_463:\n        /* \"contracts/sMasterChef.sol\":44334:44353  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/sMasterChef.sol\":44326:44407  require(_user != address(0), \"sMasterChef: The white list address must be valid\") */\n      tag_466\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_468\n      jump\t// in\n    tag_466:\n        /* \"contracts/sMasterChef.sol\":44420:44436  whiteList[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":44420:44429  whiteList */\n      0x07\n        /* \"contracts/sMasterChef.sol\":44420:44436  whiteList[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":44420:44447  whiteList[_user] = _isValid */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup5\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":44463:44495  UpdateWhiteList(_user, _isValid) */\n      mload\n      0xc551bbb22d0406dbfb8b6b7740cc521bcf44e1106029cf899c19b6a8e4c99d51\n      swap1\n      tag_469\n      swap1\n        /* \"contracts/sMasterChef.sol\":44420:44447  whiteList[_user] = _isValid */\n      dup5\n      swap1\n        /* \"contracts/sMasterChef.sol\":44463:44495  UpdateWhiteList(_user, _isValid) */\n      tag_106\n      jump\t// in\n    tag_469:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sMasterChef.sol\":44241:44503  function updateWhiteList(address _user, bool _isValid) external onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27208:27246  IMasterChef public immutable DARK_CHEF */\n    tag_176:\n      immutable(\"0x523002c9adf4540d1913fbcc02308745afe7fe46bf4736ab566dafa3acaa32ea\")\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":28148:28185  uint256 public totalRegularAllocPoint */\n    tag_180:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":32666:33776  function add(\r... */\n    tag_185:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_471\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_471:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_472\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_472:\n        /* \"contracts/sMasterChef.sol\":32833:32866  _lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":32870:32871  0 */\n      0x00\n      swap1\n        /* \"contracts/sMasterChef.sol\":32833:32851  _lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/sMasterChef.sol\":32833:32866  _lpToken.balanceOf(address(this)) */\n      tag_475\n      swap1\n        /* \"contracts/sMasterChef.sol\":32860:32864  this */\n      address\n      swap1\n        /* \"contracts/sMasterChef.sol\":32833:32866  _lpToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_475:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_476\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_476:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_478\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_478:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_479\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_479:\n        /* \"contracts/sMasterChef.sol\":32833:32871  _lpToken.balanceOf(address(this)) >= 0 */\n      lt\n      iszero\n        /* \"contracts/sMasterChef.sol\":32825:32893  require(_lpToken.balanceOf(address(this)) >= 0, \"None BEP20 tokens\") */\n      tag_480\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_482\n      jump\t// in\n    tag_480:\n        /* \"contracts/sMasterChef.sol\":33078:33082  SHDW */\n      immutable(\"0xad6001c41f5480e3ca6168a06649b3a3f0b7288943b7fbc0eb5698ed5504137a\")\n        /* \"contracts/sMasterChef.sol\":33066:33082  _lpToken != SHDW */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sMasterChef.sol\":33066:33074  _lpToken */\n      dup4\n        /* \"contracts/sMasterChef.sol\":33066:33082  _lpToken != SHDW */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sMasterChef.sol\":33058:33126  require(_lpToken != SHDW, \"SHDW token can't be added to farm pools\") */\n      tag_483\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_485\n      jump\t// in\n    tag_483:\n        /* \"contracts/sMasterChef.sol\":33143:33154  _withUpdate */\n      dup1\n        /* \"contracts/sMasterChef.sol\":33139:33200  if (_withUpdate) {\r... */\n      iszero\n      tag_487\n      jumpi\n        /* \"contracts/sMasterChef.sol\":33171:33188  massUpdatePools() */\n      tag_487\n        /* \"contracts/sMasterChef.sol\":33171:33186  massUpdatePools */\n      tag_125\n        /* \"contracts/sMasterChef.sol\":33171:33188  massUpdatePools() */\n      jump\t// in\n    tag_487:\n        /* \"contracts/sMasterChef.sol\":33216:33226  _isRegular */\n      dup2\n        /* \"contracts/sMasterChef.sol\":33212:33416  if (_isRegular) {\r... */\n      iszero\n      tag_488\n      jumpi\n        /* \"contracts/sMasterChef.sol\":33268:33290  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/sMasterChef.sol\":33268:33307  totalRegularAllocPoint.add(_allocPoint) */\n      tag_489\n      swap1\n        /* \"contracts/sMasterChef.sol\":33295:33306  _allocPoint */\n      dup6\n        /* \"contracts/sMasterChef.sol\":33268:33294  totalRegularAllocPoint.add */\n      tag_258\n        /* \"contracts/sMasterChef.sol\":33268:33307  totalRegularAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_489:\n        /* \"contracts/sMasterChef.sol\":33243:33265  totalRegularAllocPoint */\n      0x08\n        /* \"contracts/sMasterChef.sol\":33243:33307  totalRegularAllocPoint = totalRegularAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/sMasterChef.sol\":33212:33416  if (_isRegular) {\r... */\n      jump(tag_490)\n    tag_488:\n        /* \"contracts/sMasterChef.sol\":33365:33387  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/sMasterChef.sol\":33365:33404  totalSpecialAllocPoint.add(_allocPoint) */\n      tag_491\n      swap1\n        /* \"contracts/sMasterChef.sol\":33392:33403  _allocPoint */\n      dup6\n        /* \"contracts/sMasterChef.sol\":33365:33391  totalSpecialAllocPoint.add */\n      tag_258\n        /* \"contracts/sMasterChef.sol\":33365:33404  totalSpecialAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_491:\n        /* \"contracts/sMasterChef.sol\":33340:33362  totalSpecialAllocPoint */\n      0x09\n        /* \"contracts/sMasterChef.sol\":33340:33404  totalSpecialAllocPoint = totalSpecialAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/sMasterChef.sol\":33212:33416  if (_isRegular) {\r... */\n    tag_490:\n        /* \"contracts/sMasterChef.sol\":33426:33433  lpToken */\n      0x05\n        /* \"contracts/sMasterChef.sol\":33426:33448  lpToken.push(_lpToken) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/sMasterChef.sol\":33489:33676  PoolInfo({\r... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n        /* \"contracts/sMasterChef.sol\":33560:33572  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":33426:33448  lpToken.push(_lpToken) */\n      0x20\n        /* \"contracts/sMasterChef.sol\":33489:33676  PoolInfo({\r... */\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup11\n      dup2\n      mstore\n      0x60\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      dup10\n      iszero\n      iszero\n      0x80\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":33461:33469  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":33461:33687  poolInfo.push(\r... */\n      dup1\n      sload\n      dup1\n      dup11\n      add\n      dup3\n      sstore\n      swap5\n      mstore\n      swap4\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      swap4\n      dup10\n      mul\n      swap4\n      dup5\n      add\n      sstore\n      swap4\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c\n      dup4\n      add\n      sstore\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d\n      dup3\n      add\n      sstore\n      swap2\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e\n      dup4\n      add\n      sstore\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":33711:33725  lpToken.length */\n      swap2\n      sload\n        /* \"contracts/sMasterChef.sol\":33711:33732  lpToken.length.sub(1) */\n      tag_494\n      swap2\n        /* \"contracts/sMasterChef.sol\":33711:33729  lpToken.length.sub */\n      tag_257\n        /* \"contracts/sMasterChef.sol\":33711:33732  lpToken.length.sub(1) */\n      jump\t// in\n    tag_494:\n        /* \"contracts/sMasterChef.sol\":33703:33768  AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular) */\n      0x18caa0724a26384928efe604ae6ddc99c242548876259770fc88fcb7e719d8fa\n        /* \"contracts/sMasterChef.sol\":33734:33745  _allocPoint */\n      dup7\n        /* \"contracts/sMasterChef.sol\":33757:33767  _isRegular */\n      dup6\n        /* \"contracts/sMasterChef.sol\":33703:33768  AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular) */\n      mload(0x40)\n      tag_495\n      swap3\n      swap2\n      swap1\n      tag_496\n      jump\t// in\n    tag_495:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sMasterChef.sol\":32666:33776  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":34986:35956  function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_188:\n        /* \"contracts/sMasterChef.sol\":35059:35066  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":35079:35099  PoolInfo memory pool */\n      tag_498\n      tag_240\n      jump\t// in\n    tag_498:\n        /* \"contracts/sMasterChef.sol\":35102:35110  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":35111:35115  _pid */\n      dup5\n        /* \"contracts/sMasterChef.sol\":35102:35116  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_499\n      jumpi\n      invalid\n    tag_499:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":35079:35116  PoolInfo memory pool = poolInfo[_pid] */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/sMasterChef.sol\":35102:35116  poolInfo[_pid] */\n      0x05\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/sMasterChef.sol\":35079:35116  PoolInfo memory pool = poolInfo[_pid] */\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":35127:35147  UserInfo memory user */\n      tag_501\n      tag_502\n      jump\t// in\n    tag_501:\n      pop\n        /* \"contracts/sMasterChef.sol\":35150:35164  userInfo[_pid] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":35150:35158  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":35150:35164  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":35150:35171  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":35127:35171  UserInfo memory user = userInfo[_pid][_user] */\n      dup3\n      mload\n      0x60\n      dup1\n      dup3\n      add\n      dup6\n      mstore\n      dup3\n      sload\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      dup3\n      dup6\n      add\n      mstore\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/sMasterChef.sol\":35208:35228  pool.accShdwPerShare */\n      dup4\n      mload\n        /* \"contracts/sMasterChef.sol\":35258:35280  pool.totalBoostedShare */\n      swap1\n      dup5\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":35312:35332  pool.lastRewardBlock */\n      swap2\n      dup5\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":35208:35228  pool.accShdwPerShare */\n      swap1\n      swap2\n        /* \"contracts/sMasterChef.sol\":35258:35280  pool.totalBoostedShare */\n      swap1\n        /* \"contracts/sMasterChef.sol\":35297:35309  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":35297:35332  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/sMasterChef.sol\":35297:35349  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_503\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":35336:35349  lpSupply != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/sMasterChef.sol\":35297:35349  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_503:\n        /* \"contracts/sMasterChef.sol\":35293:35746  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_504\n      jumpi\n        /* \"contracts/sMasterChef.sol\":35366:35384  uint256 multiplier */\n      0x00\n        /* \"contracts/sMasterChef.sol\":35387:35425  block.number.sub(pool.lastRewardBlock) */\n      tag_505\n        /* \"contracts/sMasterChef.sol\":35404:35408  pool */\n      dup6\n        /* \"contracts/sMasterChef.sol\":35404:35424  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":35387:35399  block.number */\n      number\n        /* \"contracts/sMasterChef.sol\":35387:35403  block.number.sub */\n      tag_257\n      swap1\n        /* \"contracts/sMasterChef.sol\":35387:35425  block.number.sub(pool.lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_505:\n        /* \"contracts/sMasterChef.sol\":35366:35425  uint256 multiplier = block.number.sub(pool.lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":35442:35460  uint256 shdwReward */\n      0x00\n        /* \"contracts/sMasterChef.sol\":35463:35632  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      tag_506\n        /* \"contracts/sMasterChef.sol\":35552:35556  pool */\n      dup7\n        /* \"contracts/sMasterChef.sol\":35552:35566  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":35552:35616  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      tag_507\n      jumpi\n        /* \"contracts/sMasterChef.sol\":35594:35616  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"contracts/sMasterChef.sol\":35552:35616  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      jump(tag_508)\n    tag_507:\n        /* \"contracts/sMasterChef.sol\":35569:35591  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"contracts/sMasterChef.sol\":35552:35616  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n    tag_508:\n        /* \"contracts/sMasterChef.sol\":35463:35528  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":35512:35516  pool */\n      dup9\n        /* \"contracts/sMasterChef.sol\":35512:35527  pool.allocPoint */\n      0x40\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":35463:35507  multiplier.mul(shdwPerBlock(pool.isRegular)) */\n      tag_247\n        /* \"contracts/sMasterChef.sol\":35478:35506  shdwPerBlock(pool.isRegular) */\n      tag_370\n        /* \"contracts/sMasterChef.sol\":35491:35495  pool */\n      dup12\n        /* \"contracts/sMasterChef.sol\":35491:35505  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":35478:35490  shdwPerBlock */\n      tag_207\n        /* \"contracts/sMasterChef.sol\":35478:35506  shdwPerBlock(pool.isRegular) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":35463:35632  multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n    tag_506:\n        /* \"contracts/sMasterChef.sol\":35442:35632  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":35665:35734  accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)) */\n      tag_512\n        /* \"contracts/sMasterChef.sol\":35685:35733  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n      tag_513\n        /* \"contracts/sMasterChef.sol\":35724:35732  lpSupply */\n      dup5\n        /* \"contracts/sMasterChef.sol\":35685:35719  shdwReward.mul(ACC_SHDW_PRECISION) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":35442:35632  uint256 shdwReward = multiplier.mul(shdwPerBlock(pool.isRegular)).mul(pool.allocPoint).div(\r... */\n      dup5\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":35685:35699  shdwReward.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":35685:35719  shdwReward.mul(ACC_SHDW_PRECISION) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":35685:35733  shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply) */\n    tag_513:\n        /* \"contracts/sMasterChef.sol\":35665:35680  accShdwPerShare */\n      dup6\n      swap1\n        /* \"contracts/sMasterChef.sol\":35665:35684  accShdwPerShare.add */\n      tag_258\n        /* \"contracts/sMasterChef.sol\":35665:35734  accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)) */\n      jump\t// in\n    tag_512:\n        /* \"contracts/sMasterChef.sol\":35647:35734  accShdwPerShare = accShdwPerShare.add(shdwReward.mul(ACC_SHDW_PRECISION).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/sMasterChef.sol\":35293:35746  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      pop\n      pop\n    tag_504:\n        /* \"contracts/sMasterChef.sol\":35758:35779  uint256 boostedAmount */\n      0x00\n        /* \"contracts/sMasterChef.sol\":35782:35851  user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      tag_515\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":35782:35830  user.amount.mul(getBoostMultiplier(_user, _pid)) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":35798:35829  getBoostMultiplier(_user, _pid) */\n      tag_517\n        /* \"contracts/sMasterChef.sol\":35817:35822  _user */\n      dup11\n        /* \"contracts/sMasterChef.sol\":35824:35828  _pid */\n      dup13\n        /* \"contracts/sMasterChef.sol\":35798:35816  getBoostMultiplier */\n      tag_64\n        /* \"contracts/sMasterChef.sol\":35798:35829  getBoostMultiplier(_user, _pid) */\n      jump\t// in\n    tag_517:\n        /* \"contracts/sMasterChef.sol\":35782:35793  user.amount */\n      dup8\n      mload\n      swap1\n        /* \"contracts/sMasterChef.sol\":35782:35797  user.amount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":35782:35830  user.amount.mul(getBoostMultiplier(_user, _pid)) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":35782:35851  user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n    tag_515:\n        /* \"contracts/sMasterChef.sol\":35932:35947  user.rewardDebt */\n      0x20\n      dup6\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":35758:35851  uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":35869:35948  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt) */\n      tag_518\n      swap1\n        /* \"contracts/sMasterChef.sol\":35869:35927  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION) */\n      tag_519\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":35869:35903  boostedAmount.mul(accShdwPerShare) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":35758:35851  uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      dup6\n        /* \"contracts/sMasterChef.sol\":35887:35902  accShdwPerShare */\n      dup9\n        /* \"contracts/sMasterChef.sol\":35869:35886  boostedAmount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":35869:35903  boostedAmount.mul(accShdwPerShare) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":35869:35927  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION) */\n    tag_519:\n        /* \"contracts/sMasterChef.sol\":35869:35931  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub */\n      swap1\n      tag_257\n        /* \"contracts/sMasterChef.sol\":35869:35948  boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt) */\n      jump\t// in\n    tag_518:\n        /* \"contracts/sMasterChef.sol\":35862:35948  return boostedAmount.mul(accShdwPerShare).div(ACC_SHDW_PRECISION).sub(user.rewardDebt) */\n      swap9\n        /* \"contracts/sMasterChef.sol\":34986:35956  function pendingShdw(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":28584:28636  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n    tag_191:\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":28584:28636  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":27486:27514  address public boostContract */\n    tag_197:\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x03))\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":38405:39653  function deposit(uint256 _pid, uint256 _amount) external nonReentrant {\r... */\n    tag_201:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10858:10865  _status */\n      sload(0x01)\n        /* \"contracts/sMasterChef.sol\":10858:10877  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/sMasterChef.sol\":10850:10913  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_522\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_225\n      jump\t// in\n    tag_522:\n        /* \"contracts/sMasterChef.sol\":10252:10253  2 */\n      0x02\n        /* \"contracts/sMasterChef.sol\":10991:10998  _status */\n      0x01\n        /* \"contracts/sMasterChef.sol\":10991:11009  _status = _ENTERED */\n      sstore\n        /* \"contracts/sMasterChef.sol\":38486:38506  PoolInfo memory pool */\n      tag_525\n      tag_240\n      jump\t// in\n    tag_525:\n        /* \"contracts/sMasterChef.sol\":38509:38525  updatePool(_pid) */\n      tag_526\n        /* \"contracts/sMasterChef.sol\":38520:38524  _pid */\n      dup4\n        /* \"contracts/sMasterChef.sol\":38509:38519  updatePool */\n      tag_115\n        /* \"contracts/sMasterChef.sol\":38509:38525  updatePool(_pid) */\n      jump\t// in\n    tag_526:\n        /* \"contracts/sMasterChef.sol\":38536:38557  UserInfo storage user */\n      0x00\n        /* \"contracts/sMasterChef.sol\":38560:38574  userInfo[_pid] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":38560:38568  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":38560:38574  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":38575:38585  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":38560:38586  userInfo[_pid][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":38621:38635  pool.isRegular */\n      0x80\n      dup3\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":38486:38525  PoolInfo memory pool = updatePool(_pid) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/sMasterChef.sol\":38560:38586  userInfo[_pid][msg.sender] */\n      swap1\n        /* \"contracts/sMasterChef.sol\":38621:38635  pool.isRegular */\n      dup1\n        /* \"contracts/sMasterChef.sol\":38621:38660  pool.isRegular || whiteList[msg.sender] */\n      tag_527\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":38649:38659  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":38639:38660  whiteList[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":38639:38648  whiteList */\n      0x07\n        /* \"contracts/sMasterChef.sol\":38639:38660  whiteList[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/sMasterChef.sol\":38621:38660  pool.isRegular || whiteList[msg.sender] */\n    tag_527:\n        /* \"contracts/sMasterChef.sol\":38599:38753  require(\r... */\n      tag_528\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_530\n      jump\t// in\n    tag_528:\n        /* \"contracts/sMasterChef.sol\":38766:38784  uint256 multiplier */\n      0x00\n        /* \"contracts/sMasterChef.sol\":38787:38823  getBoostMultiplier(msg.sender, _pid) */\n      tag_531\n        /* \"contracts/sMasterChef.sol\":38806:38816  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":38818:38822  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":38787:38805  getBoostMultiplier */\n      tag_64\n        /* \"contracts/sMasterChef.sol\":38787:38823  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_531:\n        /* \"contracts/sMasterChef.sol\":38840:38851  user.amount */\n      dup3\n      sload\n        /* \"contracts/sMasterChef.sol\":38766:38823  uint256 multiplier = getBoostMultiplier(msg.sender, _pid) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":38840:38855  user.amount > 0 */\n      iszero\n        /* \"contracts/sMasterChef.sol\":38836:38931  if (user.amount > 0) {\r... */\n      tag_533\n      jumpi\n        /* \"contracts/sMasterChef.sol\":38872:38919  settlePendingShdw(msg.sender, _pid, multiplier) */\n      tag_533\n        /* \"contracts/sMasterChef.sol\":38890:38900  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":38902:38906  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":38908:38918  multiplier */\n      dup4\n        /* \"contracts/sMasterChef.sol\":38872:38889  settlePendingShdw */\n      tag_244\n        /* \"contracts/sMasterChef.sol\":38872:38919  settlePendingShdw(msg.sender, _pid, multiplier) */\n      jump\t// in\n    tag_533:\n        /* \"contracts/sMasterChef.sol\":38947:38958  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/sMasterChef.sol\":38943:39409  if (_amount > 0) {\r... */\n      tag_534\n      jumpi\n        /* \"contracts/sMasterChef.sol\":38975:38989  uint256 before */\n      0x00\n        /* \"contracts/sMasterChef.sol\":38992:38999  lpToken */\n      0x05\n        /* \"contracts/sMasterChef.sol\":39000:39004  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":38992:39005  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_535\n      jumpi\n      invalid\n    tag_535:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":38992:39030  lpToken[_pid].balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":38992:39005  lpToken[_pid] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/sMasterChef.sol\":38992:39015  lpToken[_pid].balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/sMasterChef.sol\":38992:39030  lpToken[_pid].balanceOf(address(this)) */\n      tag_537\n      swap1\n        /* \"contracts/sMasterChef.sol\":39024:39028  this */\n      address\n      swap1\n        /* \"contracts/sMasterChef.sol\":38992:39030  lpToken[_pid].balanceOf(address(this)) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_537:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_538\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_538:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_540\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_540:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_541\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_541:\n        /* \"contracts/sMasterChef.sol\":38975:39030  uint256 before = lpToken[_pid].balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":39045:39111  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_542\n        /* \"contracts/sMasterChef.sol\":39076:39086  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":39096:39100  this */\n      address\n        /* \"contracts/sMasterChef.sol\":39103:39110  _amount */\n      dup8\n        /* \"contracts/sMasterChef.sol\":39045:39052  lpToken */\n      0x05\n        /* \"contracts/sMasterChef.sol\":39053:39057  _pid */\n      dup11\n        /* \"contracts/sMasterChef.sol\":39045:39058  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_543\n      jumpi\n      invalid\n    tag_543:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap3\n        /* \"contracts/sMasterChef.sol\":39045:39111  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      swap2\n      swap1\n        /* \"contracts/sMasterChef.sol\":39045:39075  lpToken[_pid].safeTransferFrom */\n      tag_294\n        /* \"contracts/sMasterChef.sol\":39045:39111  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_542:\n        /* \"contracts/sMasterChef.sol\":39136:39186  lpToken[_pid].balanceOf(address(this)).sub(before) */\n      tag_545\n        /* \"contracts/sMasterChef.sol\":39179:39185  before */\n      dup2\n        /* \"contracts/sMasterChef.sol\":39136:39143  lpToken */\n      0x05\n        /* \"contracts/sMasterChef.sol\":39144:39148  _pid */\n      dup9\n        /* \"contracts/sMasterChef.sol\":39136:39149  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_546\n      jumpi\n      invalid\n    tag_546:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":39136:39174  lpToken[_pid].balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":39136:39149  lpToken[_pid] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/sMasterChef.sol\":39136:39159  lpToken[_pid].balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/sMasterChef.sol\":39136:39174  lpToken[_pid].balanceOf(address(this)) */\n      tag_548\n      swap1\n        /* \"contracts/sMasterChef.sol\":39168:39172  this */\n      address\n      swap1\n        /* \"contracts/sMasterChef.sol\":39136:39174  lpToken[_pid].balanceOf(address(this)) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_548:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_549\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_549:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_551\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_551:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_519\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":39136:39186  lpToken[_pid].balanceOf(address(this)).sub(before) */\n    tag_545:\n        /* \"contracts/sMasterChef.sol\":39215:39226  user.amount */\n      dup4\n      sload\n        /* \"contracts/sMasterChef.sol\":39126:39186  _amount = lpToken[_pid].balanceOf(address(this)).sub(before) */\n      swap1\n      swap6\n      pop\n        /* \"contracts/sMasterChef.sol\":39215:39239  user.amount.add(_amount) */\n      tag_553\n      swap1\n        /* \"contracts/sMasterChef.sol\":39126:39186  _amount = lpToken[_pid].balanceOf(address(this)).sub(before) */\n      dup7\n        /* \"contracts/sMasterChef.sol\":39215:39230  user.amount.add */\n      tag_258\n        /* \"contracts/sMasterChef.sol\":39215:39239  user.amount.add(_amount) */\n      jump\t// in\n    tag_553:\n        /* \"contracts/sMasterChef.sol\":39201:39239  user.amount = user.amount.add(_amount) */\n      dup4\n      sstore\n        /* \"contracts/sMasterChef.sol\":39325:39397  pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      tag_554\n        /* \"contracts/sMasterChef.sol\":39352:39396  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_555\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":39352:39375  _amount.mul(multiplier) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":39352:39359  _amount */\n      dup9\n        /* \"contracts/sMasterChef.sol\":39364:39374  multiplier */\n      dup7\n        /* \"contracts/sMasterChef.sol\":39352:39363  _amount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":39352:39375  _amount.mul(multiplier) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":39352:39396  _amount.mul(multiplier).div(BOOST_PRECISION) */\n    tag_555:\n        /* \"contracts/sMasterChef.sol\":39325:39347  pool.totalBoostedShare */\n      0x60\n      dup7\n      add\n      mload\n      swap1\n        /* \"contracts/sMasterChef.sol\":39325:39351  pool.totalBoostedShare.add */\n      tag_258\n        /* \"contracts/sMasterChef.sol\":39325:39397  pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      jump\t// in\n    tag_554:\n        /* \"contracts/sMasterChef.sol\":39300:39322  pool.totalBoostedShare */\n      0x60\n      dup6\n      add\n        /* \"contracts/sMasterChef.sol\":39300:39397  pool.totalBoostedShare = pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      mstore\n      pop\n        /* \"contracts/sMasterChef.sol\":38943:39409  if (_amount > 0) {\r... */\n    tag_534:\n        /* \"contracts/sMasterChef.sol\":39439:39561  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      tag_557\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":39439:39513  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":39492:39496  pool */\n      dup6\n        /* \"contracts/sMasterChef.sol\":39492:39512  pool.accShdwPerShare */\n      0x00\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":39439:39487  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_247\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":39439:39466  user.amount.mul(multiplier) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":39455:39465  multiplier */\n      dup8\n        /* \"contracts/sMasterChef.sol\":39439:39443  user */\n      dup10\n        /* \"contracts/sMasterChef.sol\":39439:39450  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/sMasterChef.sol\":39439:39454  user.amount.mul */\n      tag_249\n      swap1\n        /* \"contracts/sMasterChef.sol\":39439:39466  user.amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":39439:39561  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n    tag_557:\n        /* \"contracts/sMasterChef.sol\":39421:39425  user */\n      dup3\n        /* \"contracts/sMasterChef.sol\":39421:39436  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/sMasterChef.sol\":39421:39561  user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accShdwPerShare).div(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sMasterChef.sol\":39589:39593  pool */\n      dup3\n        /* \"contracts/sMasterChef.sol\":39572:39580  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":39581:39585  _pid */\n      dup7\n        /* \"contracts/sMasterChef.sol\":39572:39586  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_561\n      jumpi\n      invalid\n    tag_561:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sMasterChef.sol\":39572:39593  poolInfo[_pid] = pool */\n      dup4\n      mload\n        /* \"contracts/sMasterChef.sol\":39572:39586  poolInfo[_pid] */\n      0x05\n      swap3\n      swap1\n      swap3\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":39572:39593  poolInfo[_pid] = pool */\n      swap1\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      dup1\n      dup4\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup4\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      swap1\n      swap3\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":39611:39645  Deposit(msg.sender, _pid, _amount) */\n      mload\n        /* \"contracts/sMasterChef.sol\":39631:39635  _pid */\n      dup6\n      swap1\n        /* \"contracts/sMasterChef.sol\":39619:39629  msg.sender */\n      caller\n      swap1\n        /* \"contracts/sMasterChef.sol\":39611:39645  Deposit(msg.sender, _pid, _amount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n      tag_350\n      swap1\n        /* \"contracts/sMasterChef.sol\":39637:39644  _amount */\n      dup9\n      swap1\n        /* \"contracts/sMasterChef.sol\":39611:39645  Deposit(msg.sender, _pid, _amount) */\n      tag_66\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":3001:3245  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_204:\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      tag_565\n        /* \"contracts/sMasterChef.sol\":2278:2288  _msgSender */\n      tag_265\n        /* \"contracts/sMasterChef.sol\":2278:2290  _msgSender() */\n      jump\t// in\n    tag_565:\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      sload(0x00)\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":2268:2274  _owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":2268:2290  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/sMasterChef.sol\":2260:2327  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_566\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_268\n      jump\t// in\n    tag_566:\n        /* \"contracts/sMasterChef.sol\":3090:3112  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/sMasterChef.sol\":3082:3155  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_569\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_571\n      jump\t// in\n    tag_569:\n        /* \"contracts/sMasterChef.sol\":3192:3198  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/sMasterChef.sol\":3171:3209  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/sMasterChef.sol\":3192:3198  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/sMasterChef.sol\":3171:3209  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/sMasterChef.sol\":3220:3226  _owner */\n      0x00\n        /* \"contracts/sMasterChef.sol\":3220:3237  _owner = newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/sMasterChef.sol\":3001:3245  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":36495:36849  function shdwPerBlock(bool _isRegular) public view returns (uint256 amount) {\r... */\n    tag_207:\n        /* \"contracts/sMasterChef.sol\":36555:36569  uint256 amount */\n      0x00\n        /* \"contracts/sMasterChef.sol\":36586:36596  _isRegular */\n      dup2\n        /* \"contracts/sMasterChef.sol\":36582:36842  if (_isRegular) {\r... */\n      iszero\n      tag_573\n      jumpi\n        /* \"contracts/sMasterChef.sol\":36622:36705  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n      tag_574\n        /* \"contracts/sMasterChef.sol\":28915:28919  1e12 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":36622:36674  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":36652:36673  shdwRateToRegularFarm */\n      sload(0x0b)\n        /* \"contracts/sMasterChef.sol\":28440:28449  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"contracts/sMasterChef.sol\":36622:36651  MASTERCHEF_SHDW_PER_BLOCK.mul */\n      tag_249\n      swap1\n        /* \"contracts/sMasterChef.sol\":36622:36674  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":36622:36705  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n    tag_574:\n        /* \"contracts/sMasterChef.sol\":36613:36705  amount = MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToRegularFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":36582:36842  if (_isRegular) {\r... */\n      jump(tag_361)\n    tag_573:\n        /* \"contracts/sMasterChef.sol\":36747:36830  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm).div(SHDW_RATE_TOTAL_PRECISION) */\n      tag_215\n        /* \"contracts/sMasterChef.sol\":28915:28919  1e12 */\n      0xe8d4a51000\n        /* \"contracts/sMasterChef.sol\":36747:36799  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":36777:36798  shdwRateToSpecialFarm */\n      sload(0x0c)\n        /* \"contracts/sMasterChef.sol\":28440:28449  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"contracts/sMasterChef.sol\":36747:36776  MASTERCHEF_SHDW_PER_BLOCK.mul */\n      tag_249\n      swap1\n        /* \"contracts/sMasterChef.sol\":36747:36799  MASTERCHEF_SHDW_PER_BLOCK.mul(shdwRateToSpecialFarm) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":29153:29203  uint256 public shdwRateToRegularFarm = 62847222222 */\n    tag_210:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":28388:28449  uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 40 * 1e18 */\n    tag_213:\n        /* \"contracts/sMasterChef.sol\":28440:28449  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"contracts/sMasterChef.sol\":28388:28449  uint256 public constant MASTERCHEF_SHDW_PER_BLOCK = 40 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":47205:47713  function settlePendingShdw(\r... */\n    tag_244:\n        /* \"contracts/sMasterChef.sol\":47341:47361  UserInfo memory user */\n      tag_580\n      tag_502\n      jump\t// in\n    tag_580:\n      pop\n        /* \"contracts/sMasterChef.sol\":47364:47378  userInfo[_pid] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":47364:47372  userInfo */\n      0x06\n        /* \"contracts/sMasterChef.sol\":47364:47378  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":47364:47385  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sMasterChef.sol\":47341:47385  UserInfo memory user = userInfo[_pid][_user] */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n        /* \"contracts/sMasterChef.sol\":47364:47378  userInfo[_pid] */\n      swap1\n        /* \"contracts/sMasterChef.sol\":47422:47476  user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n      tag_581\n      swap1\n        /* \"contracts/sMasterChef.sol\":28626:28636  100 * 1e10 */\n      0xe8d4a51000\n      swap1\n        /* \"contracts/sMasterChef.sol\":47422:47455  user.amount.mul(_boostMultiplier) */\n      tag_248\n      swap1\n        /* \"contracts/sMasterChef.sol\":47438:47454  _boostMultiplier */\n      dup7\n        /* \"contracts/sMasterChef.sol\":47422:47437  user.amount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":47422:47455  user.amount.mul(_boostMultiplier) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":47422:47476  user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n    tag_581:\n        /* \"contracts/sMasterChef.sol\":47398:47476  uint256 boostedAmount = user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":47487:47502  uint256 accShdw */\n      0x00\n        /* \"contracts/sMasterChef.sol\":47505:47578  boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION) */\n      tag_583\n        /* \"contracts/sMasterChef.sol\":28501:28505  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sMasterChef.sol\":47505:47554  boostedAmount.mul(poolInfo[_pid].accShdwPerShare) */\n      tag_248\n        /* \"contracts/sMasterChef.sol\":47523:47531  poolInfo */\n      0x04\n        /* \"contracts/sMasterChef.sol\":47532:47536  _pid */\n      dup9\n        /* \"contracts/sMasterChef.sol\":47523:47537  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_585\n      jumpi\n      invalid\n    tag_585:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/sMasterChef.sol\":47523:47553  poolInfo[_pid].accShdwPerShare */\n      sload\n        /* \"contracts/sMasterChef.sol\":47505:47518  boostedAmount */\n      dup6\n      swap1\n        /* \"contracts/sMasterChef.sol\":47505:47522  boostedAmount.mul */\n      tag_249\n        /* \"contracts/sMasterChef.sol\":47505:47554  boostedAmount.mul(poolInfo[_pid].accShdwPerShare) */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":47505:47578  boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION) */\n    tag_583:\n        /* \"contracts/sMasterChef.sol\":47487:47578  uint256 accShdw = boostedAmount.mul(poolInfo[_pid].accShdwPerShare).div(ACC_SHDW_PRECISION) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":47589:47604  uint256 pending */\n      0x00\n        /* \"contracts/sMasterChef.sol\":47607:47635  accShdw.sub(user.rewardDebt) */\n      tag_587\n        /* \"contracts/sMasterChef.sol\":47619:47623  user */\n      dup5\n        /* \"contracts/sMasterChef.sol\":47619:47634  user.rewardDebt */\n      0x20\n      add\n      mload\n        /* \"contracts/sMasterChef.sol\":47607:47614  accShdw */\n      dup4\n        /* \"contracts/sMasterChef.sol\":47607:47618  accShdw.sub */\n      tag_257\n      swap1\n        /* \"contracts/sMasterChef.sol\":47607:47635  accShdw.sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_587:\n        /* \"contracts/sMasterChef.sol\":47589:47635  uint256 pending = accShdw.sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":47676:47705  _safeTransfer(_user, pending) */\n      tag_588\n        /* \"contracts/sMasterChef.sol\":47690:47695  _user */\n      dup8\n        /* \"contracts/sMasterChef.sol\":47697:47704  pending */\n      dup3\n        /* \"contracts/sMasterChef.sol\":47676:47689  _safeTransfer */\n      tag_321\n        /* \"contracts/sMasterChef.sol\":47676:47705  _safeTransfer(_user, pending) */\n      jump\t// in\n    tag_588:\n        /* \"contracts/sMasterChef.sol\":47205:47713  function settlePendingShdw(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":5475:5946  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_249:\n        /* \"contracts/sMasterChef.sol\":5533:5540  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":5778:5784  a == 0 */\n      dup3\n        /* \"contracts/sMasterChef.sol\":5774:5821  if (a == 0) {\r... */\n      tag_590\n      jumpi\n      pop\n        /* \"contracts/sMasterChef.sol\":5808:5809  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":5801:5809  return 0 */\n      jump(tag_215)\n        /* \"contracts/sMasterChef.sol\":5774:5821  if (a == 0) {\r... */\n    tag_590:\n        /* \"contracts/sMasterChef.sol\":5845:5850  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/sMasterChef.sol\":5849:5850  b */\n      dup3\n        /* \"contracts/sMasterChef.sol\":5845:5846  a */\n      dup5\n        /* \"contracts/sMasterChef.sol\":5845:5850  a * b */\n      dup3\n        /* \"contracts/sMasterChef.sol\":5845:5846  a */\n      dup2\n        /* \"contracts/sMasterChef.sol\":5869:5874  c / a */\n      tag_591\n      jumpi\n      invalid\n    tag_591:\n      div\n        /* \"contracts/sMasterChef.sol\":5869:5879  c / a == b */\n      eq\n        /* \"contracts/sMasterChef.sol\":5861:5917  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_594\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":6422:6554  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_250:\n        /* \"contracts/sMasterChef.sol\":6480:6487  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":6507:6546  div(a, b, \"SafeMath: division by zero\") */\n      tag_596\n        /* \"contracts/sMasterChef.sol\":6511:6512  a */\n      dup4\n        /* \"contracts/sMasterChef.sol\":6514:6515  b */\n      dup4\n        /* \"contracts/sMasterChef.sol\":6507:6546  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/sMasterChef.sol\":6507:6510  div */\n      tag_597\n        /* \"contracts/sMasterChef.sol\":6507:6546  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_596:\n        /* \"contracts/sMasterChef.sol\":6500:6546  return div(a, b, \"SafeMath: division by zero\") */\n      swap4\n        /* \"contracts/sMasterChef.sol\":6422:6554  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":4585:4721  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_257:\n        /* \"contracts/sMasterChef.sol\":4643:4650  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":4670:4713  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_596\n        /* \"contracts/sMasterChef.sol\":4674:4675  a */\n      dup4\n        /* \"contracts/sMasterChef.sol\":4677:4678  b */\n      dup4\n        /* \"contracts/sMasterChef.sol\":4670:4713  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/sMasterChef.sol\":4670:4673  sub */\n      tag_600\n        /* \"contracts/sMasterChef.sol\":4670:4713  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":4121:4302  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_258:\n        /* \"contracts/sMasterChef.sol\":4179:4186  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":4211:4216  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/sMasterChef.sol\":4235:4241  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/sMasterChef.sol\":4227:4273  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_604\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":669:775  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_265:\n        /* \"contracts/sMasterChef.sol\":757:767  msg.sender */\n      caller\n        /* \"contracts/sMasterChef.sol\":669:775  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":21026:21271  function safeTransferFrom(\r... */\n    tag_294:\n        /* \"contracts/sMasterChef.sol\":21148:21265  _callOptionalReturn(\r... */\n      tag_356\n        /* \"contracts/sMasterChef.sol\":21176:21181  token */\n      dup5\n        /* \"contracts/sMasterChef.sol\":21213:21240  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/sMasterChef.sol\":21242:21246  from */\n      dup6\n        /* \"contracts/sMasterChef.sol\":21248:21250  to */\n      dup6\n        /* \"contracts/sMasterChef.sol\":21252:21257  value */\n      dup6\n        /* \"contracts/sMasterChef.sol\":21190:21258  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_608\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_609\n      jump\t// in\n    tag_608:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"contracts/sMasterChef.sol\":21148:21167  _callOptionalReturn */\n      tag_610\n        /* \"contracts/sMasterChef.sol\":21148:21265  _callOptionalReturn(\r... */\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":47852:48354  function _safeTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_321:\n        /* \"contracts/sMasterChef.sol\":47929:47940  _amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/sMasterChef.sol\":47925:48347  if (_amount > 0) {\r... */\n      tag_395\n      jumpi\n        /* \"contracts/sMasterChef.sol\":48040:48069  SHDW.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":48072:48079  _amount */\n      dup2\n      swap1\n        /* \"contracts/sMasterChef.sol\":48040:48054  SHDW.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":48040:48044  SHDW */\n      immutable(\"0xad6001c41f5480e3ca6168a06649b3a3f0b7288943b7fbc0eb5698ed5504137a\")\n        /* \"contracts/sMasterChef.sol\":48040:48054  SHDW.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/sMasterChef.sol\":48040:48069  SHDW.balanceOf(address(this)) */\n      tag_613\n      swap1\n        /* \"contracts/sMasterChef.sol\":48063:48067  this */\n      address\n      swap1\n        /* \"contracts/sMasterChef.sol\":48040:48069  SHDW.balanceOf(address(this)) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_613:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_614\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_614:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_616\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_616:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_617\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_617:\n        /* \"contracts/sMasterChef.sol\":48040:48079  SHDW.balanceOf(address(this)) < _amount */\n      lt\n        /* \"contracts/sMasterChef.sol\":48036:48139  if (SHDW.balanceOf(address(this)) < _amount) {\r... */\n      iszero\n      tag_619\n      jumpi\n        /* \"contracts/sMasterChef.sol\":48100:48123  harvestFromMasterChef() */\n      tag_619\n        /* \"contracts/sMasterChef.sol\":48100:48121  harvestFromMasterChef */\n      tag_112\n        /* \"contracts/sMasterChef.sol\":48100:48123  harvestFromMasterChef() */\n      jump\t// in\n    tag_619:\n        /* \"contracts/sMasterChef.sol\":48171:48200  SHDW.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/sMasterChef.sol\":48153:48168  uint256 balance */\n      0x00\n      swap1\n        /* \"contracts/sMasterChef.sol\":48171:48185  SHDW.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":48171:48175  SHDW */\n      immutable(\"0xad6001c41f5480e3ca6168a06649b3a3f0b7288943b7fbc0eb5698ed5504137a\")\n        /* \"contracts/sMasterChef.sol\":48171:48185  SHDW.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/sMasterChef.sol\":48171:48200  SHDW.balanceOf(address(this)) */\n      tag_620\n      swap1\n        /* \"contracts/sMasterChef.sol\":48194:48198  this */\n      address\n      swap1\n        /* \"contracts/sMasterChef.sol\":48171:48200  SHDW.balanceOf(address(this)) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_620:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_621\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_621:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_623\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_623:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_624\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_624:\n        /* \"contracts/sMasterChef.sol\":48153:48200  uint256 balance = SHDW.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/sMasterChef.sol\":48229:48236  _amount */\n      dup2\n        /* \"contracts/sMasterChef.sol\":48219:48226  balance */\n      dup2\n        /* \"contracts/sMasterChef.sol\":48219:48236  balance < _amount */\n      lt\n        /* \"contracts/sMasterChef.sol\":48215:48290  if (balance < _amount) {\r... */\n      iszero\n      tag_625\n      jumpi\n        /* \"contracts/sMasterChef.sol\":48267:48274  balance */\n      dup1\n        /* \"contracts/sMasterChef.sol\":48257:48274  _amount = balance */\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":48215:48290  if (balance < _amount) {\r... */\n    tag_625:\n        /* \"contracts/sMasterChef.sol\":48304:48335  SHDW.safeTransfer(_to, _amount) */\n      tag_626\n        /* \"contracts/sMasterChef.sol\":48304:48321  SHDW.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/sMasterChef.sol\":48304:48308  SHDW */\n      immutable(\"0xad6001c41f5480e3ca6168a06649b3a3f0b7288943b7fbc0eb5698ed5504137a\")\n        /* \"contracts/sMasterChef.sol\":48304:48321  SHDW.safeTransfer */\n      and\n        /* \"contracts/sMasterChef.sol\":48322:48325  _to */\n      dup5\n        /* \"contracts/sMasterChef.sol\":48327:48334  _amount */\n      dup5\n        /* \"contracts/sMasterChef.sol\":48304:48321  SHDW.safeTransfer */\n      tag_338\n        /* \"contracts/sMasterChef.sol\":48304:48335  SHDW.safeTransfer(_to, _amount) */\n      jump\t// in\n    tag_626:\n        /* \"contracts/sMasterChef.sol\":47925:48347  if (_amount > 0) {\r... */\n      pop\n        /* \"contracts/sMasterChef.sol\":47852:48354  function _safeTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":20808:21020  function safeTransfer(\r... */\n    tag_338:\n        /* \"contracts/sMasterChef.sol\":20907:21014  _callOptionalReturn(\r... */\n      tag_626\n        /* \"contracts/sMasterChef.sol\":20935:20940  token */\n      dup4\n        /* \"contracts/sMasterChef.sol\":20972:20995  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/sMasterChef.sol\":20997:20999  to */\n      dup5\n        /* \"contracts/sMasterChef.sol\":21001:21006  value */\n      dup5\n        /* \"contracts/sMasterChef.sol\":20949:21007  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_608\n      swap3\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":7050:7328  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_597:\n        /* \"contracts/sMasterChef.sol\":7136:7143  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":7171:7183  errorMessage */\n      dup2\n        /* \"contracts/sMasterChef.sol\":7164:7169  b > 0 */\n      dup4\n        /* \"contracts/sMasterChef.sol\":7156:7184  require(b > 0, errorMessage) */\n      tag_631\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_633\n      jump\t// in\n    tag_631:\n      pop\n        /* \"contracts/sMasterChef.sol\":7195:7204  uint256 c */\n      0x00\n        /* \"contracts/sMasterChef.sol\":7211:7212  b */\n      dup4\n        /* \"contracts/sMasterChef.sol\":7207:7208  a */\n      dup6\n        /* \"contracts/sMasterChef.sol\":7207:7212  a / b */\n      dup2\n      tag_634\n      jumpi\n      invalid\n    tag_634:\n      div\n      swap6\n        /* \"contracts/sMasterChef.sol\":7050:7328  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":5024:5216  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_600:\n        /* \"contracts/sMasterChef.sol\":5110:5117  uint256 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":5146:5158  errorMessage */\n      dup2\n        /* \"contracts/sMasterChef.sol\":5138:5144  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/sMasterChef.sol\":5130:5159  require(b <= a, errorMessage) */\n      tag_636\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_633\n      jump\t// in\n    tag_636:\n      pop\n      pop\n      pop\n        /* \"contracts/sMasterChef.sol\":5182:5187  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/sMasterChef.sol\":5024:5216  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":23261:24025  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_610:\n        /* \"contracts/sMasterChef.sol\":23669:23692  bytes memory returndata */\n      0x60\n        /* \"contracts/sMasterChef.sol\":23702:23771  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_639\n        /* \"contracts/sMasterChef.sol\":23730:23734  data */\n      dup3\n        /* \"contracts/sMasterChef.sol\":23702:23771  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/sMasterChef.sol\":23710:23715  token */\n      dup6\n        /* \"contracts/sMasterChef.sol\":23702:23729  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_640\n      swap1\n        /* \"contracts/sMasterChef.sol\":23702:23771  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_639:\n        /* \"contracts/sMasterChef.sol\":23782:23799  returndata.length */\n      dup1\n      mload\n        /* \"contracts/sMasterChef.sol\":23669:23771  bytes memory returndata =\r... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":23782:23803  returndata.length > 0 */\n      iszero\n        /* \"contracts/sMasterChef.sol\":23778:24020  if (returndata.length > 0) {\r... */\n      tag_626\n      jumpi\n        /* \"contracts/sMasterChef.sol\":23929:23939  returndata */\n      dup1\n        /* \"contracts/sMasterChef.sol\":23918:23948  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_642\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_642:\n        /* \"contracts/sMasterChef.sol\":23900:24012  require(\r... */\n      tag_626\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_645\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":17865:18061  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_640:\n        /* \"contracts/sMasterChef.sol\":17968:17980  bytes memory */\n      0x60\n        /* \"contracts/sMasterChef.sol\":18000:18053  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_647\n        /* \"contracts/sMasterChef.sol\":18023:18029  target */\n      dup5\n        /* \"contracts/sMasterChef.sol\":18031:18035  data */\n      dup5\n        /* \"contracts/sMasterChef.sol\":18037:18038  0 */\n      0x00\n        /* \"contracts/sMasterChef.sol\":18040:18052  errorMessage */\n      dup6\n        /* \"contracts/sMasterChef.sol\":18000:18022  _functionCallWithValue */\n      tag_648\n        /* \"contracts/sMasterChef.sol\":18000:18053  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_647:\n        /* \"contracts/sMasterChef.sol\":17993:18053  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"contracts/sMasterChef.sol\":17865:18061  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sMasterChef.sol\":19242:20221  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_648:\n        /* \"contracts/sMasterChef.sol\":19372:19384  bytes memory */\n      0x60\n        /* \"contracts/sMasterChef.sol\":19405:19423  isContract(target) */\n      tag_650\n        /* \"contracts/sMasterChef.sol\":19416:19422  target */\n      dup6\n        /* \"contracts/sMasterChef.sol\":19405:19415  isContract */\n      tag_651\n        /* \"contracts/sMasterChef.sol\":19405:19423  isContract(target) */\n      jump\t// in\n    tag_650:\n        /* \"contracts/sMasterChef.sol\":19397:19457  require(isContract(target), \"Address: call to non-contract\") */\n      tag_652\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_654\n      jump\t// in\n    tag_652:\n        /* \"contracts/sMasterChef.sol\":19531:19543  bool success */\n      0x00\n        /* \"contracts/sMasterChef.sol\":19545:19568  bytes memory returndata */\n      0x60\n        /* \"contracts/sMasterChef.sol\":19572:19578  target */\n      dup7\n        /* \"contracts/sMasterChef.sol\":19572:19583  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sMasterChef.sol\":19592:19600  weiValue */\n      dup6\n        /* \"contracts/sMasterChef.sol\":19603:19607  data */\n      dup8\n        /* \"contracts/sMasterChef.sol\":19572:19608  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      tag_655\n      swap2\n      swap1\n      tag_656\n      jump\t// in\n    tag_655:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_659\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_658)\n    tag_659:\n      0x60\n      swap2\n      pop\n    tag_658:\n      pop\n        /* \"contracts/sMasterChef.sol\":19530:19608  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":19623:19630  success */\n      dup2\n        /* \"contracts/sMasterChef.sol\":19619:20214  if (success) {\r... */\n      iszero\n      tag_660\n      jumpi\n        /* \"contracts/sMasterChef.sol\":19654:19664  returndata */\n      swap2\n      pop\n        /* \"contracts/sMasterChef.sol\":19647:19664  return returndata */\n      tag_647\n      swap1\n      pop\n      jump\n        /* \"contracts/sMasterChef.sol\":19619:20214  if (success) {\r... */\n    tag_660:\n        /* \"contracts/sMasterChef.sol\":19768:19785  returndata.length */\n      dup1\n      mload\n        /* \"contracts/sMasterChef.sol\":19768:19789  returndata.length > 0 */\n      iszero\n        /* \"contracts/sMasterChef.sol\":19764:20203  if (returndata.length > 0) {\r... */\n      tag_662\n      jumpi\n        /* \"contracts/sMasterChef.sol\":20031:20041  returndata */\n      dup1\n        /* \"contracts/sMasterChef.sol\":20025:20042  mload(returndata) */\n      mload\n        /* \"contracts/sMasterChef.sol\":20092:20107  returndata_size */\n      dup1\n        /* \"contracts/sMasterChef.sol\":20079:20089  returndata */\n      dup3\n        /* \"contracts/sMasterChef.sol\":20075:20077  32 */\n      0x20\n        /* \"contracts/sMasterChef.sol\":20071:20090  add(32, returndata) */\n      add\n        /* \"contracts/sMasterChef.sol\":20064:20108  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/sMasterChef.sol\":19979:20127  {\r... */\n    tag_662:\n        /* \"contracts/sMasterChef.sol\":20174:20186  errorMessage */\n      dup4\n        /* \"contracts/sMasterChef.sol\":20167:20187  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_633\n      jump\t// in\n        /* \"contracts/sMasterChef.sol\":14947:15369  function isContract(address account) internal view returns (bool) {\r... */\n    tag_651:\n        /* \"contracts/sMasterChef.sol\":15314:15334  extcodesize(account) */\n      extcodesize\n        /* \"contracts/sMasterChef.sol\":15353:15361  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/sMasterChef.sol\":14947:15369  function isContract(address account) internal view returns (bool) {\r... */\n      jump\t// out\n    tag_240:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_502:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":851:1092   */\n    tag_80:\n      0x00\n        /* \"--CODEGEN--\":955:957   */\n      0x20\n        /* \"--CODEGEN--\":943:952   */\n      dup3\n        /* \"--CODEGEN--\":934:941   */\n      dup5\n        /* \"--CODEGEN--\":930:953   */\n      sub\n        /* \"--CODEGEN--\":926:958   */\n      slt\n        /* \"--CODEGEN--\":923:925   */\n      iszero\n      tag_668\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":961:973   */\n      revert\n        /* \"--CODEGEN--\":923:925   */\n    tag_668:\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_216\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_670\n      jump\t// in\n        /* \"--CODEGEN--\":1099:1459   */\n    tag_173:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1217:1219   */\n      0x40\n        /* \"--CODEGEN--\":1205:1214   */\n      dup4\n        /* \"--CODEGEN--\":1196:1203   */\n      dup6\n        /* \"--CODEGEN--\":1192:1215   */\n      sub\n        /* \"--CODEGEN--\":1188:1220   */\n      slt\n        /* \"--CODEGEN--\":1185:1187   */\n      iszero\n      tag_672\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1223:1235   */\n      revert\n        /* \"--CODEGEN--\":1185:1187   */\n    tag_672:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_673\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_670\n      jump\t// in\n    tag_673:\n        /* \"--CODEGEN--\":1275:1338   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1375:1377   */\n      0x20\n        /* \"--CODEGEN--\":1411:1433   */\n      dup4\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_674\n        /* \"--CODEGEN--\":206:226   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_675\n      jump\t// in\n    tag_674:\n        /* \"--CODEGEN--\":1383:1443   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":1179:1459   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1466:1832   */\n    tag_63:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1587:1589   */\n      0x40\n        /* \"--CODEGEN--\":1575:1584   */\n      dup4\n        /* \"--CODEGEN--\":1566:1573   */\n      dup6\n        /* \"--CODEGEN--\":1562:1585   */\n      sub\n        /* \"--CODEGEN--\":1558:1590   */\n      slt\n        /* \"--CODEGEN--\":1555:1557   */\n      iszero\n      tag_677\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":1593:1605   */\n      revert\n        /* \"--CODEGEN--\":1555:1557   */\n    tag_677:\n        /* \"--CODEGEN--\":85:91   */\n      dup3\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_678\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_670\n      jump\t// in\n    tag_678:\n        /* \"--CODEGEN--\":1645:1708   */\n      swap5\n        /* \"--CODEGEN--\":1745:1747   */\n      0x20\n        /* \"--CODEGEN--\":1784:1806   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"--CODEGEN--\":1549:1832   */\n      jump\t// out\n        /* \"--CODEGEN--\":1839:2330   */\n    tag_73:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1977:1979   */\n      0x60\n        /* \"--CODEGEN--\":1965:1974   */\n      dup5\n        /* \"--CODEGEN--\":1956:1963   */\n      dup7\n        /* \"--CODEGEN--\":1952:1975   */\n      sub\n        /* \"--CODEGEN--\":1948:1980   */\n      slt\n        /* \"--CODEGEN--\":1945:1947   */\n      iszero\n      tag_680\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":1983:1995   */\n      revert\n        /* \"--CODEGEN--\":1945:1947   */\n    tag_680:\n        /* \"--CODEGEN--\":85:91   */\n      dup4\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_681\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_670\n      jump\t// in\n    tag_681:\n        /* \"--CODEGEN--\":2035:2098   */\n      swap6\n        /* \"--CODEGEN--\":2135:2137   */\n      0x20\n        /* \"--CODEGEN--\":2174:2196   */\n      dup6\n      add\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n      swap6\n      pop\n        /* \"--CODEGEN--\":2243:2245   */\n      0x40\n        /* \"--CODEGEN--\":2282:2304   */\n      swap1\n      swap5\n      add\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n      swap4\n        /* \"--CODEGEN--\":1939:2330   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2337:2572   */\n    tag_100:\n      0x00\n        /* \"--CODEGEN--\":2438:2440   */\n      0x20\n        /* \"--CODEGEN--\":2426:2435   */\n      dup3\n        /* \"--CODEGEN--\":2417:2424   */\n      dup5\n        /* \"--CODEGEN--\":2413:2436   */\n      sub\n        /* \"--CODEGEN--\":2409:2441   */\n      slt\n        /* \"--CODEGEN--\":2406:2408   */\n      iszero\n      tag_683\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2444:2456   */\n      revert\n        /* \"--CODEGEN--\":2406:2408   */\n    tag_683:\n        /* \"--CODEGEN--\":219:225   */\n      dup2\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_216\n        /* \"--CODEGEN--\":255:260   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_675\n      jump\t// in\n        /* \"--CODEGEN--\":2579:2836   */\n    tag_301:\n      0x00\n        /* \"--CODEGEN--\":2691:2693   */\n      0x20\n        /* \"--CODEGEN--\":2679:2688   */\n      dup3\n        /* \"--CODEGEN--\":2670:2677   */\n      dup5\n        /* \"--CODEGEN--\":2666:2689   */\n      sub\n        /* \"--CODEGEN--\":2662:2694   */\n      slt\n        /* \"--CODEGEN--\":2659:2661   */\n      iszero\n      tag_686\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":2697:2709   */\n      revert\n        /* \"--CODEGEN--\":2659:2661   */\n    tag_686:\n        /* \"--CODEGEN--\":354:360   */\n      dup2\n        /* \"--CODEGEN--\":348:361   */\n      mload\n        /* \"--CODEGEN--\":366:396   */\n      tag_216\n        /* \"--CODEGEN--\":390:395   */\n      dup2\n        /* \"--CODEGEN--\":366:396   */\n      tag_675\n      jump\t// in\n        /* \"--CODEGEN--\":3119:3360   */\n    tag_84:\n      0x00\n        /* \"--CODEGEN--\":3223:3225   */\n      0x20\n        /* \"--CODEGEN--\":3211:3220   */\n      dup3\n        /* \"--CODEGEN--\":3202:3209   */\n      dup5\n        /* \"--CODEGEN--\":3198:3221   */\n      sub\n        /* \"--CODEGEN--\":3194:3226   */\n      slt\n        /* \"--CODEGEN--\":3191:3193   */\n      iszero\n      tag_692\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3229:3241   */\n      revert\n        /* \"--CODEGEN--\":3191:3193   */\n    tag_692:\n      pop\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n      swap2\n        /* \"--CODEGEN--\":3185:3360   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3367:3630   */\n    tag_289:\n      0x00\n        /* \"--CODEGEN--\":3482:3484   */\n      0x20\n        /* \"--CODEGEN--\":3470:3479   */\n      dup3\n        /* \"--CODEGEN--\":3461:3468   */\n      dup5\n        /* \"--CODEGEN--\":3457:3480   */\n      sub\n        /* \"--CODEGEN--\":3453:3485   */\n      slt\n        /* \"--CODEGEN--\":3450:3452   */\n      iszero\n      tag_694\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":3488:3500   */\n      revert\n        /* \"--CODEGEN--\":3450:3452   */\n    tag_694:\n      pop\n        /* \"--CODEGEN--\":788:801   */\n      mload\n      swap2\n        /* \"--CODEGEN--\":3444:3630   */\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3637:4003   */\n    tag_161:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3758:3760   */\n      0x40\n        /* \"--CODEGEN--\":3746:3755   */\n      dup4\n        /* \"--CODEGEN--\":3737:3744   */\n      dup6\n        /* \"--CODEGEN--\":3733:3756   */\n      sub\n        /* \"--CODEGEN--\":3729:3761   */\n      slt\n        /* \"--CODEGEN--\":3726:3728   */\n      iszero\n      tag_696\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":3764:3776   */\n      revert\n        /* \"--CODEGEN--\":3726:3728   */\n    tag_696:\n        /* \"--CODEGEN--\":653:659   */\n      dup3\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n        /* \"--CODEGEN--\":3816:3879   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3916:3918   */\n      0x20\n        /* \"--CODEGEN--\":3959:3968   */\n      dup4\n        /* \"--CODEGEN--\":3955:3977   */\n      add\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_674\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_670\n      jump\t// in\n        /* \"--CODEGEN--\":4010:4643   */\n    tag_184:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4173:4176   */\n      0x80\n        /* \"--CODEGEN--\":4161:4170   */\n      dup6\n        /* \"--CODEGEN--\":4152:4159   */\n      dup8\n        /* \"--CODEGEN--\":4148:4171   */\n      sub\n        /* \"--CODEGEN--\":4144:4177   */\n      slt\n        /* \"--CODEGEN--\":4141:4143   */\n      iszero\n      tag_699\n      jumpi\n      dup1\n      dup2\n        /* \"--CODEGEN--\":4180:4192   */\n      revert\n        /* \"--CODEGEN--\":4141:4143   */\n    tag_699:\n        /* \"--CODEGEN--\":653:659   */\n      dup5\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n        /* \"--CODEGEN--\":4232:4295   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":4332:4334   */\n      0x20\n        /* \"--CODEGEN--\":4389:4398   */\n      dup6\n        /* \"--CODEGEN--\":4385:4407   */\n      add\n        /* \"--CODEGEN--\":489:509   */\n      calldataload\n        /* \"--CODEGEN--\":514:561   */\n      tag_700\n        /* \"--CODEGEN--\":555:560   */\n      dup2\n        /* \"--CODEGEN--\":514:561   */\n      tag_670\n      jump\t// in\n    tag_700:\n        /* \"--CODEGEN--\":4340:4417   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":4454:4456   */\n      0x40\n        /* \"--CODEGEN--\":4490:4512   */\n      dup6\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_701\n        /* \"--CODEGEN--\":206:226   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_675\n      jump\t// in\n    tag_701:\n        /* \"--CODEGEN--\":4462:4522   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4559:4561   */\n      0x60\n        /* \"--CODEGEN--\":4595:4617   */\n      dup6\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_702\n        /* \"--CODEGEN--\":206:226   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_675\n      jump\t// in\n    tag_702:\n        /* \"--CODEGEN--\":4135:4643   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4650:5016   */\n    tag_109:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4771:4773   */\n      0x40\n        /* \"--CODEGEN--\":4759:4768   */\n      dup4\n        /* \"--CODEGEN--\":4750:4757   */\n      dup6\n        /* \"--CODEGEN--\":4746:4769   */\n      sub\n        /* \"--CODEGEN--\":4742:4774   */\n      slt\n        /* \"--CODEGEN--\":4739:4741   */\n      iszero\n      tag_704\n      jumpi\n      dup2\n      dup3\n        /* \"--CODEGEN--\":4777:4789   */\n      revert\n        /* \"--CODEGEN--\":4739:4741   */\n    tag_704:\n      pop\n      pop\n        /* \"--CODEGEN--\":640:660   */\n      dup1\n      calldataload\n      swap3\n        /* \"--CODEGEN--\":4929:4931   */\n      0x20\n        /* \"--CODEGEN--\":4968:4990   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n      swap2\n      pop\n        /* \"--CODEGEN--\":4733:5016   */\n      jump\t// out\n        /* \"--CODEGEN--\":5023:5508   */\n    tag_128:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":5158:5160   */\n      0x60\n        /* \"--CODEGEN--\":5146:5155   */\n      dup5\n        /* \"--CODEGEN--\":5137:5144   */\n      dup7\n        /* \"--CODEGEN--\":5133:5156   */\n      sub\n        /* \"--CODEGEN--\":5129:5161   */\n      slt\n        /* \"--CODEGEN--\":5126:5128   */\n      iszero\n      tag_706\n      jumpi\n      dup3\n      dup4\n        /* \"--CODEGEN--\":5164:5176   */\n      revert\n        /* \"--CODEGEN--\":5126:5128   */\n    tag_706:\n        /* \"--CODEGEN--\":653:659   */\n      dup4\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n        /* \"--CODEGEN--\":5216:5279   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":5316:5318   */\n      0x20\n        /* \"--CODEGEN--\":5359:5368   */\n      dup5\n        /* \"--CODEGEN--\":5355:5377   */\n      add\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n        /* \"--CODEGEN--\":5324:5387   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5424:5426   */\n      0x40\n        /* \"--CODEGEN--\":5464:5473   */\n      dup5\n        /* \"--CODEGEN--\":5460:5482   */\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_707\n        /* \"--CODEGEN--\":255:260   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_675\n      jump\t// in\n    tag_707:\n        /* \"--CODEGEN--\":5432:5492   */\n      dup1\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":5120:5508   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":5515:6126   */\n    tag_150:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":5667:5670   */\n      0x80\n        /* \"--CODEGEN--\":5655:5664   */\n      dup6\n        /* \"--CODEGEN--\":5646:5653   */\n      dup8\n        /* \"--CODEGEN--\":5642:5665   */\n      sub\n        /* \"--CODEGEN--\":5638:5671   */\n      slt\n        /* \"--CODEGEN--\":5635:5637   */\n      iszero\n      tag_709\n      jumpi\n      dup4\n      dup5\n        /* \"--CODEGEN--\":5674:5686   */\n      revert\n        /* \"--CODEGEN--\":5635:5637   */\n    tag_709:\n        /* \"--CODEGEN--\":653:659   */\n      dup5\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n        /* \"--CODEGEN--\":5726:5789   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":5826:5828   */\n      0x20\n        /* \"--CODEGEN--\":5869:5878   */\n      dup6\n        /* \"--CODEGEN--\":5865:5887   */\n      add\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n        /* \"--CODEGEN--\":5834:5897   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":5934:5936   */\n      0x40\n        /* \"--CODEGEN--\":5977:5986   */\n      dup6\n        /* \"--CODEGEN--\":5973:5995   */\n      add\n        /* \"--CODEGEN--\":640:660   */\n      calldataload\n        /* \"--CODEGEN--\":5942:6005   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6042:6044   */\n      0x60\n        /* \"--CODEGEN--\":6082:6091   */\n      dup6\n        /* \"--CODEGEN--\":6078:6100   */\n      add\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":231:261   */\n      tag_702\n        /* \"--CODEGEN--\":255:260   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_675\n      jump\t// in\n        /* \"--CODEGEN--\":17392:17663   */\n    tag_656:\n      0x00\n        /* \"--CODEGEN--\":6774:6779   */\n      dup3\n        /* \"--CODEGEN--\":32083:32095   */\n      mload\n        /* \"--CODEGEN--\":6885:6937   */\n      tag_712\n        /* \"--CODEGEN--\":6930:6936   */\n      dup2\n        /* \"--CODEGEN--\":6925:6928   */\n      dup5\n        /* \"--CODEGEN--\":6918:6922   */\n      0x20\n        /* \"--CODEGEN--\":6911:6916   */\n      dup8\n        /* \"--CODEGEN--\":6907:6923   */\n      add\n        /* \"--CODEGEN--\":6885:6937   */\n      tag_713\n      jump\t// in\n    tag_712:\n        /* \"--CODEGEN--\":6949:6965   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"--CODEGEN--\":17526:17663   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":17670:17892   */\n    tag_155:\n        /* \"--CODEGEN--\":32953:32995   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":32942:32996   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":6353:6390   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":17797:17799   */\n      0x20\n        /* \"--CODEGEN--\":17782:17800   */\n      add\n      swap1\n        /* \"--CODEGEN--\":17768:17892   */\n      jump\t// out\n        /* \"--CODEGEN--\":18144:18588   */\n    tag_609:\n        /* \"--CODEGEN--\":32953:32995   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":32942:32996   */\n      swap4\n      dup5\n      and\n        /* \"--CODEGEN--\":6353:6390   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":32942:32996   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":18491:18493   */\n      0x20\n        /* \"--CODEGEN--\":18476:18494   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6353:6390   */\n      mstore\n        /* \"--CODEGEN--\":18574:18576   */\n      0x40\n        /* \"--CODEGEN--\":18559:18577   */\n      dup2\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":18327:18329   */\n      0x60\n        /* \"--CODEGEN--\":18312:18330   */\n      add\n      swap1\n        /* \"--CODEGEN--\":18298:18588   */\n      jump\t// out\n        /* \"--CODEGEN--\":18595:18928   */\n    tag_296:\n        /* \"--CODEGEN--\":32953:32995   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":32942:32996   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":6353:6390   */\n      dup3\n      mstore\n        /* \"--CODEGEN--\":18914:18916   */\n      0x20\n        /* \"--CODEGEN--\":18899:18917   */\n      dup3\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      mstore\n        /* \"--CODEGEN--\":18750:18752   */\n      0x40\n        /* \"--CODEGEN--\":18735:18753   */\n      add\n      swap1\n        /* \"--CODEGEN--\":18721:18928   */\n      jump\t// out\n        /* \"--CODEGEN--\":18935:19145   */\n    tag_106:\n        /* \"--CODEGEN--\":32742:32755   */\n      swap1\n      iszero\n        /* \"--CODEGEN--\":32735:32756   */\n      iszero\n        /* \"--CODEGEN--\":6457:6491   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":19056:19058   */\n      0x20\n        /* \"--CODEGEN--\":19041:19059   */\n      add\n      swap1\n        /* \"--CODEGEN--\":19027:19145   */\n      jump\t// out\n        /* \"--CODEGEN--\":19676:19986   */\n    tag_633:\n      0x00\n        /* \"--CODEGEN--\":19823:19825   */\n      0x20\n        /* \"--CODEGEN--\":19844:19861   */\n      dup3\n        /* \"--CODEGEN--\":19837:19884   */\n      mstore\n        /* \"--CODEGEN--\":7603:7608   */\n      dup3\n        /* \"--CODEGEN--\":32083:32095   */\n      mload\n        /* \"--CODEGEN--\":32522:32528   */\n      dup1\n        /* \"--CODEGEN--\":19823:19825   */\n      0x20\n        /* \"--CODEGEN--\":19812:19821   */\n      dup5\n        /* \"--CODEGEN--\":19808:19826   */\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":7697:7749   */\n      tag_722\n        /* \"--CODEGEN--\":7742:7748   */\n      dup2\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n        /* \"--CODEGEN--\":19812:19821   */\n      dup6\n        /* \"--CODEGEN--\":32550:32564   */\n      add\n        /* \"--CODEGEN--\":19823:19825   */\n      0x20\n        /* \"--CODEGEN--\":7723:7728   */\n      dup8\n        /* \"--CODEGEN--\":7719:7735   */\n      add\n        /* \"--CODEGEN--\":7697:7749   */\n      tag_713\n      jump\t// in\n    tag_722:\n        /* \"--CODEGEN--\":34539:34541   */\n      0x1f\n        /* \"--CODEGEN--\":34519:34533   */\n      add\n        /* \"--CODEGEN--\":34535:34542   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"--CODEGEN--\":34515:34543   */\n      and\n        /* \"--CODEGEN--\":7761:7800   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n        /* \"--CODEGEN--\":7761:7800   */\n      add\n      swap3\n        /* \"--CODEGEN--\":19794:19986   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":19993:20409   */\n    tag_441:\n        /* \"--CODEGEN--\":20193:20195   */\n      0x20\n        /* \"--CODEGEN--\":20207:20254   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8037:8039   */\n      0x2d\n        /* \"--CODEGEN--\":20178:20196   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":8073:8107   */\n      0x734d6173746572436865663a20536864772072617465206d7573742062652067\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8053:8108   */\n      mstore\n        /* \"--CODEGEN--\":8142:8157   */\n      0x726561746572207468616e203000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8128:8140   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":8121:8158   */\n      mstore\n        /* \"--CODEGEN--\":8177:8189   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":20164:20409   */\n      jump\t// out\n        /* \"--CODEGEN--\":20416:20832   */\n    tag_645:\n        /* \"--CODEGEN--\":20616:20618   */\n      0x20\n        /* \"--CODEGEN--\":20630:20677   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8428:8430   */\n      0x2a\n        /* \"--CODEGEN--\":20601:20619   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":8464:8498   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8444:8499   */\n      mstore\n        /* \"--CODEGEN--\":8533:8545   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8519:8531   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":8512:8546   */\n      mstore\n        /* \"--CODEGEN--\":8565:8577   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":20587:20832   */\n      jump\t// out\n        /* \"--CODEGEN--\":20839:21255   */\n    tag_571:\n        /* \"--CODEGEN--\":21039:21041   */\n      0x20\n        /* \"--CODEGEN--\":21053:21100   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":8816:8818   */\n      0x26\n        /* \"--CODEGEN--\":21024:21042   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":8852:8886   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":8832:8887   */\n      mstore\n        /* \"--CODEGEN--\":8921:8929   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8907:8919   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":8900:8930   */\n      mstore\n        /* \"--CODEGEN--\":8949:8961   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":21010:21255   */\n      jump\t// out\n        /* \"--CODEGEN--\":21262:21678   */\n    tag_604:\n        /* \"--CODEGEN--\":21462:21464   */\n      0x20\n        /* \"--CODEGEN--\":21476:21523   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9200:9202   */\n      0x1b\n        /* \"--CODEGEN--\":21447:21465   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":9236:9265   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9216:9266   */\n      mstore\n        /* \"--CODEGEN--\":9285:9297   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":21433:21678   */\n      jump\t// out\n        /* \"--CODEGEN--\":21685:22101   */\n    tag_446:\n        /* \"--CODEGEN--\":21885:21887   */\n      0x20\n        /* \"--CODEGEN--\":21899:21946   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9536:9538   */\n      0x24\n        /* \"--CODEGEN--\":21870:21888   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":9572:9606   */\n      0x734d6173746572436865663a20546f74616c2072617465206d75737420626520\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9552:9607   */\n      mstore\n        /* \"--CODEGEN--\":9641:9647   */\n      0x3165313200000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":9627:9639   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":9620:9648   */\n      mstore\n        /* \"--CODEGEN--\":9667:9679   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":21856:22101   */\n      jump\t// out\n        /* \"--CODEGEN--\":22108:22524   */\n    tag_292:\n        /* \"--CODEGEN--\":22308:22310   */\n      0x20\n        /* \"--CODEGEN--\":22322:22369   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":9918:9920   */\n      0x22\n        /* \"--CODEGEN--\":22293:22311   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":9954:9988   */\n      0x734d6173746572436865663a2042616c616e6365206d75737420657863656564\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":9934:9989   */\n      mstore\n        /* \"--CODEGEN--\":10023:10027   */\n      0x2030000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":10009:10021   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":10002:10028   */\n      mstore\n        /* \"--CODEGEN--\":10047:10059   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":22279:22524   */\n      jump\t// out\n        /* \"--CODEGEN--\":22531:22947   */\n    tag_594:\n        /* \"--CODEGEN--\":22731:22733   */\n      0x20\n        /* \"--CODEGEN--\":22745:22792   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10298:10300   */\n      0x21\n        /* \"--CODEGEN--\":22716:22734   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":10334:10368   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10314:10369   */\n      mstore\n        /* \"--CODEGEN--\":10403:10406   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":10389:10401   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":10382:10407   */\n      mstore\n        /* \"--CODEGEN--\":10426:10438   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":22702:22947   */\n      jump\t// out\n        /* \"--CODEGEN--\":22954:23370   */\n    tag_330:\n        /* \"--CODEGEN--\":23154:23156   */\n      0x20\n        /* \"--CODEGEN--\":23168:23215   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10677:10679   */\n      0x16\n        /* \"--CODEGEN--\":23139:23157   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":10713:10737   */\n      0x77697468647261773a20496e73756666696369656e7400000000000000000000\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":10693:10738   */\n      mstore\n        /* \"--CODEGEN--\":10757:10769   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23125:23370   */\n      jump\t// out\n        /* \"--CODEGEN--\":23377:23793   */\n    tag_482:\n        /* \"--CODEGEN--\":23577:23579   */\n      0x20\n        /* \"--CODEGEN--\":23591:23638   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11008:11010   */\n      0x11\n        /* \"--CODEGEN--\":23562:23580   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":11044:11063   */\n      0x4e6f6e6520424550323020746f6b656e73000000000000000000000000000000\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11024:11064   */\n      mstore\n        /* \"--CODEGEN--\":11083:11095   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23548:23793   */\n      jump\t// out\n        /* \"--CODEGEN--\":23800:24216   */\n    tag_268:\n        /* \"--CODEGEN--\":24000:24002   */\n      0x20\n        /* \"--CODEGEN--\":24014:24061   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":23985:24003   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":11370:11404   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11350:11405   */\n      mstore\n        /* \"--CODEGEN--\":11424:11436   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":23971:24216   */\n      jump\t// out\n        /* \"--CODEGEN--\":24223:24639   */\n    tag_221:\n        /* \"--CODEGEN--\":24423:24425   */\n      0x20\n        /* \"--CODEGEN--\":24437:24484   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11675:11677   */\n      0x29\n        /* \"--CODEGEN--\":24408:24426   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":11711:11745   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f7374\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":11691:11746   */\n      mstore\n        /* \"--CODEGEN--\":11780:11791   */\n      0x20636f6e74726163740000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":11766:11778   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":11759:11792   */\n      mstore\n        /* \"--CODEGEN--\":11811:11823   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":24394:24639   */\n      jump\t// out\n        /* \"--CODEGEN--\":24646:25062   */\n    tag_530:\n        /* \"--CODEGEN--\":24846:24848   */\n      0x20\n        /* \"--CODEGEN--\":24860:24907   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12062:12064   */\n      0x41\n        /* \"--CODEGEN--\":24831:24849   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":12098:12132   */\n      0x734d6173746572436865663a205468652061646472657373206973206e6f7420\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":12078:12133   */\n      mstore\n        /* \"--CODEGEN--\":12167:12201   */\n      0x617661696c61626c6520746f206465706f73697420696e207468697320706f6f\n        /* \"--CODEGEN--\":12153:12165   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":12146:12202   */\n      mstore\n        /* \"--CODEGEN--\":12236:12239   */\n      0x6c00000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":12222:12234   */\n      0x80\n      dup3\n      add\n        /* \"--CODEGEN--\":12215:12240   */\n      mstore\n        /* \"--CODEGEN--\":12259:12271   */\n      0xa0\n      add\n      swap1\n        /* \"--CODEGEN--\":24817:25062   */\n      jump\t// out\n        /* \"--CODEGEN--\":25069:25485   */\n    tag_654:\n        /* \"--CODEGEN--\":25269:25271   */\n      0x20\n        /* \"--CODEGEN--\":25283:25330   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12510:12512   */\n      0x1d\n        /* \"--CODEGEN--\":25254:25272   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":12546:12577   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":12526:12578   */\n      mstore\n        /* \"--CODEGEN--\":12597:12609   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":25240:25485   */\n      jump\t// out\n        /* \"--CODEGEN--\":25492:25908   */\n    tag_275:\n        /* \"--CODEGEN--\":25692:25694   */\n      0x20\n        /* \"--CODEGEN--\":25706:25753   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12848:12850   */\n      0x40\n        /* \"--CODEGEN--\":25677:25695   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      dup2\n      swap1\n      mstore\n        /* \"--CODEGEN--\":12884:12918   */\n      0x734d6173746572436865663a204275726e2061646d696e206164647265737320\n        /* \"--CODEGEN--\":32550:32564   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":12864:12919   */\n      mstore\n        /* \"--CODEGEN--\":12953:12987   */\n      0x6973207468652073616d6520776974682063757272656e742061646472657373\n        /* \"--CODEGEN--\":12939:12951   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":12932:12988   */\n      mstore\n        /* \"--CODEGEN--\":13007:13019   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":25663:25908   */\n      jump\t// out\n        /* \"--CODEGEN--\":25915:26331   */\n    tag_238:\n        /* \"--CODEGEN--\":26115:26117   */\n      0x20\n        /* \"--CODEGEN--\":26129:26176   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":13258:13260   */\n      0x29\n        /* \"--CODEGEN--\":26100:26118   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":13294:13328   */\n      0x734d6173746572436865663a20496e76616c6964206e657720626f6f7374206d\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":13274:13329   */\n      mstore\n        /* \"--CODEGEN--\":13363:13374   */\n      0x756c7469706c6965720000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":13349:13361   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":13342:13375   */\n      mstore\n        /* \"--CODEGEN--\":13394:13406   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":26086:26331   */\n      jump\t// out\n        /* \"--CODEGEN--\":26338:26754   */\n    tag_485:\n        /* \"--CODEGEN--\":26538:26540   */\n      0x20\n        /* \"--CODEGEN--\":26552:26599   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":13645:13647   */\n      0x27\n        /* \"--CODEGEN--\":26523:26541   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":13681:13715   */\n      0x5348445720746f6b656e2063616e277420626520616464656420746f20666172\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":13661:13716   */\n      mstore\n        /* \"--CODEGEN--\":13750:13759   */\n      0x6d20706f6f6c7300000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":13736:13748   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":13729:13760   */\n      mstore\n        /* \"--CODEGEN--\":13779:13791   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":26509:26754   */\n      jump\t// out\n        /* \"--CODEGEN--\":26761:27177   */\n    tag_272:\n        /* \"--CODEGEN--\":26961:26963   */\n      0x20\n        /* \"--CODEGEN--\":26975:27022   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14030:14032   */\n      0x2d\n        /* \"--CODEGEN--\":26946:26964   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":14066:14100   */\n      0x734d6173746572436865663a204275726e2061646d696e206164647265737320\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14046:14101   */\n      mstore\n        /* \"--CODEGEN--\":14135:14150   */\n      0x6d7573742062652076616c696400000000000000000000000000000000000000\n        /* \"--CODEGEN--\":14121:14133   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":14114:14151   */\n      mstore\n        /* \"--CODEGEN--\":14170:14182   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":26932:27177   */\n      jump\t// out\n        /* \"--CODEGEN--\":27184:27600   */\n    tag_225:\n        /* \"--CODEGEN--\":27384:27386   */\n      0x20\n        /* \"--CODEGEN--\":27398:27445   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14421:14423   */\n      0x1f\n        /* \"--CODEGEN--\":27369:27387   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":14457:14490   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14437:14491   */\n      mstore\n        /* \"--CODEGEN--\":14510:14522   */\n      0x60\n      add\n      swap1\n        /* \"--CODEGEN--\":27355:27600   */\n      jump\t// out\n        /* \"--CODEGEN--\":27607:28023   */\n    tag_460:\n        /* \"--CODEGEN--\":27807:27809   */\n      0x20\n        /* \"--CODEGEN--\":27821:27868   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":14761:14763   */\n      0x35\n        /* \"--CODEGEN--\":27792:27810   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":14797:14831   */\n      0x734d6173746572436865663a204e657720626f6f737420636f6e747261637420\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":14777:14832   */\n      mstore\n        /* \"--CODEGEN--\":14866:14889   */\n      0x61646472657373206d7573742062652076616c69640000000000000000000000\n        /* \"--CODEGEN--\":14852:14864   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":14845:14890   */\n      mstore\n        /* \"--CODEGEN--\":14909:14921   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":27778:28023   */\n      jump\t// out\n        /* \"--CODEGEN--\":28030:28446   */\n    tag_234:\n        /* \"--CODEGEN--\":28230:28232   */\n      0x20\n        /* \"--CODEGEN--\":28244:28291   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15160:15162   */\n      0x2f\n        /* \"--CODEGEN--\":28215:28233   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":15196:15230   */\n      0x734d6173746572436865663a204f6e6c7920726567756c6172206661726d2063\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15176:15231   */\n      mstore\n        /* \"--CODEGEN--\":15265:15282   */\n      0x6f756c6420626520626f6f737465640000000000000000000000000000000000\n        /* \"--CODEGEN--\":15251:15263   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":15244:15283   */\n      mstore\n        /* \"--CODEGEN--\":15302:15314   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":28201:28446   */\n      jump\t// out\n        /* \"--CODEGEN--\":28453:28869   */\n    tag_229:\n        /* \"--CODEGEN--\":28653:28655   */\n      0x20\n        /* \"--CODEGEN--\":28667:28714   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15553:15555   */\n      0x2b\n        /* \"--CODEGEN--\":28638:28656   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":15589:15623   */\n      0x734d6173746572436865663a2054686520757365722061646472657373206d75\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15569:15624   */\n      mstore\n        /* \"--CODEGEN--\":15658:15671   */\n      0x73742062652076616c6964000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":15644:15656   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":15637:15672   */\n      mstore\n        /* \"--CODEGEN--\":15691:15703   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":28624:28869   */\n      jump\t// out\n        /* \"--CODEGEN--\":28876:29292   */\n    tag_468:\n        /* \"--CODEGEN--\":29076:29078   */\n      0x20\n        /* \"--CODEGEN--\":29090:29137   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":15942:15944   */\n      0x31\n        /* \"--CODEGEN--\":29061:29079   */\n      swap1\n      dup3\n      add\n        /* \"--CODEGEN--\":32510:32529   */\n      mstore\n        /* \"--CODEGEN--\":15978:16012   */\n      0x734d6173746572436865663a20546865207768697465206c6973742061646472\n        /* \"--CODEGEN--\":32550:32564   */\n      0x40\n      dup3\n      add\n        /* \"--CODEGEN--\":15958:16013   */\n      mstore\n        /* \"--CODEGEN--\":16047:16066   */\n      0x657373206d7573742062652076616c6964000000000000000000000000000000\n        /* \"--CODEGEN--\":16033:16045   */\n      0x60\n      dup3\n      add\n        /* \"--CODEGEN--\":16026:16067   */\n      mstore\n        /* \"--CODEGEN--\":16086:16098   */\n      0x80\n      add\n      swap1\n        /* \"--CODEGEN--\":29047:29292   */\n      jump\t// out\n        /* \"--CODEGEN--\":29299:29622   */\n    tag_117:\n      0x00\n        /* \"--CODEGEN--\":29476:29479   */\n      0xa0\n        /* \"--CODEGEN--\":29465:29474   */\n      dup3\n        /* \"--CODEGEN--\":29461:29480   */\n      add\n        /* \"--CODEGEN--\":29453:29480   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":16403:16419   */\n      dup3\n        /* \"--CODEGEN--\":16397:16420   */\n      mload\n        /* \"--CODEGEN--\":17230:17233   */\n      dup3\n        /* \"--CODEGEN--\":17223:17260   */\n      mstore\n        /* \"--CODEGEN--\":16579:16583   */\n      0x20\n        /* \"--CODEGEN--\":16572:16577   */\n      dup4\n        /* \"--CODEGEN--\":16568:16584   */\n      add\n        /* \"--CODEGEN--\":16562:16585   */\n      mload\n        /* \"--CODEGEN--\":16579:16583   */\n      0x20\n        /* \"--CODEGEN--\":16643:16646   */\n      dup4\n        /* \"--CODEGEN--\":16639:16653   */\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      mstore\n        /* \"--CODEGEN--\":16739:16743   */\n      0x40\n        /* \"--CODEGEN--\":16732:16737   */\n      dup4\n        /* \"--CODEGEN--\":16728:16744   */\n      add\n        /* \"--CODEGEN--\":16722:16745   */\n      mload\n        /* \"--CODEGEN--\":16739:16743   */\n      0x40\n        /* \"--CODEGEN--\":16803:16806   */\n      dup4\n        /* \"--CODEGEN--\":16799:16813   */\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      mstore\n        /* \"--CODEGEN--\":16906:16910   */\n      0x60\n        /* \"--CODEGEN--\":16899:16904   */\n      dup4\n        /* \"--CODEGEN--\":16895:16911   */\n      add\n        /* \"--CODEGEN--\":16889:16912   */\n      mload\n        /* \"--CODEGEN--\":16906:16910   */\n      0x60\n        /* \"--CODEGEN--\":16970:16973   */\n      dup4\n        /* \"--CODEGEN--\":16966:16980   */\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      mstore\n        /* \"--CODEGEN--\":17065:17069   */\n      0x80\n        /* \"--CODEGEN--\":17058:17063   */\n      dup4\n        /* \"--CODEGEN--\":17054:17070   */\n      add\n        /* \"--CODEGEN--\":17048:17071   */\n      mload\n        /* \"--CODEGEN--\":32742:32755   */\n      iszero\n        /* \"--CODEGEN--\":32735:32756   */\n      iszero\n        /* \"--CODEGEN--\":17065:17069   */\n      0x80\n        /* \"--CODEGEN--\":17123:17126   */\n      dup4\n        /* \"--CODEGEN--\":17119:17133   */\n      add\n        /* \"--CODEGEN--\":6457:6491   */\n      mstore\n        /* \"--CODEGEN--\":29447:29622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":29629:29851   */\n    tag_66:\n        /* \"--CODEGEN--\":17223:17260   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":29756:29758   */\n      0x20\n        /* \"--CODEGEN--\":29741:29759   */\n      add\n      swap1\n        /* \"--CODEGEN--\":29727:29851   */\n      jump\t// out\n        /* \"--CODEGEN--\":29858:30179   */\n    tag_496:\n        /* \"--CODEGEN--\":17223:17260   */\n      swap2\n      dup3\n      mstore\n        /* \"--CODEGEN--\":32742:32755   */\n      iszero\n        /* \"--CODEGEN--\":32735:32756   */\n      iszero\n        /* \"--CODEGEN--\":30165:30167   */\n      0x20\n        /* \"--CODEGEN--\":30150:30168   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6457:6491   */\n      mstore\n        /* \"--CODEGEN--\":30007:30009   */\n      0x40\n        /* \"--CODEGEN--\":29992:30010   */\n      add\n      swap1\n        /* \"--CODEGEN--\":29978:30179   */\n      jump\t// out\n        /* \"--CODEGEN--\":30186:30535   */\n    tag_353:\n        /* \"--CODEGEN--\":17223:17260   */\n      swap2\n      dup3\n      mstore\n        /* \"--CODEGEN--\":30521:30523   */\n      0x20\n        /* \"--CODEGEN--\":30506:30524   */\n      dup3\n      add\n        /* \"--CODEGEN--\":7388:7446   */\n      mstore\n        /* \"--CODEGEN--\":30349:30351   */\n      0x40\n        /* \"--CODEGEN--\":30334:30352   */\n      add\n      swap1\n        /* \"--CODEGEN--\":30320:30535   */\n      jump\t// out\n        /* \"--CODEGEN--\":30882:31326   */\n    tag_164:\n        /* \"--CODEGEN--\":17223:17260   */\n      swap3\n      dup4\n      mstore\n        /* \"--CODEGEN--\":31229:31231   */\n      0x20\n        /* \"--CODEGEN--\":31214:31232   */\n      dup4\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":31312:31314   */\n      0x40\n        /* \"--CODEGEN--\":31297:31315   */\n      dup3\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      mstore\n        /* \"--CODEGEN--\":31065:31067   */\n      0x60\n        /* \"--CODEGEN--\":31050:31068   */\n      add\n      swap1\n        /* \"--CODEGEN--\":31036:31326   */\n      jump\t// out\n        /* \"--CODEGEN--\":31333:31989   */\n    tag_87:\n        /* \"--CODEGEN--\":17223:17260   */\n      swap5\n      dup6\n      mstore\n        /* \"--CODEGEN--\":31731:31733   */\n      0x20\n        /* \"--CODEGEN--\":31716:31734   */\n      dup6\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"--CODEGEN--\":31814:31816   */\n      0x40\n        /* \"--CODEGEN--\":31799:31817   */\n      dup5\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"--CODEGEN--\":31897:31899   */\n      0x60\n        /* \"--CODEGEN--\":31882:31900   */\n      dup4\n      add\n        /* \"--CODEGEN--\":17223:17260   */\n      mstore\n        /* \"--CODEGEN--\":32742:32755   */\n      iszero\n        /* \"--CODEGEN--\":32735:32756   */\n      iszero\n        /* \"--CODEGEN--\":31974:31977   */\n      0x80\n        /* \"--CODEGEN--\":31959:31978   */\n      dup3\n      add\n        /* \"--CODEGEN--\":6457:6491   */\n      mstore\n        /* \"--CODEGEN--\":31566:31569   */\n      0xa0\n        /* \"--CODEGEN--\":31551:31570   */\n      add\n      swap1\n        /* \"--CODEGEN--\":31537:31989   */\n      jump\t// out\n        /* \"--CODEGEN--\":34175:34443   */\n    tag_713:\n        /* \"--CODEGEN--\":34240:34241   */\n      0x00\n        /* \"--CODEGEN--\":34247:34348   */\n    tag_753:\n        /* \"--CODEGEN--\":34261:34267   */\n      dup4\n        /* \"--CODEGEN--\":34258:34259   */\n      dup2\n        /* \"--CODEGEN--\":34255:34268   */\n      lt\n        /* \"--CODEGEN--\":34247:34348   */\n      iszero\n      tag_755\n      jumpi\n        /* \"--CODEGEN--\":34328:34339   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":34322:34340   */\n      mload\n        /* \"--CODEGEN--\":34309:34320   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":34302:34341   */\n      mstore\n        /* \"--CODEGEN--\":34283:34285   */\n      0x20\n        /* \"--CODEGEN--\":34276:34286   */\n      add\n        /* \"--CODEGEN--\":34247:34348   */\n      jump(tag_753)\n    tag_755:\n        /* \"--CODEGEN--\":34363:34369   */\n      dup4\n        /* \"--CODEGEN--\":34360:34361   */\n      dup2\n        /* \"--CODEGEN--\":34357:34370   */\n      gt\n        /* \"--CODEGEN--\":34354:34356   */\n      iszero\n      tag_356\n      jumpi\n      pop\n      pop\n        /* \"--CODEGEN--\":34240:34241   */\n      0x00\n        /* \"--CODEGEN--\":34410:34426   */\n      swap2\n      add\n        /* \"--CODEGEN--\":34403:34430   */\n      mstore\n        /* \"--CODEGEN--\":34224:34443   */\n      jump\t// out\n        /* \"--CODEGEN--\":34556:34673   */\n    tag_670:\n        /* \"--CODEGEN--\":32953:32995   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":34643:34648   */\n      dup2\n        /* \"--CODEGEN--\":32942:32996   */\n      and\n        /* \"--CODEGEN--\":34618:34623   */\n      dup2\n        /* \"--CODEGEN--\":34615:34650   */\n      eq\n        /* \"--CODEGEN--\":34605:34607   */\n      tag_758\n      jumpi\n        /* \"--CODEGEN--\":34664:34665   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":34654:34666   */\n      revert\n        /* \"--CODEGEN--\":34605:34607   */\n    tag_758:\n        /* \"--CODEGEN--\":34599:34673   */\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34680:34791   */\n    tag_675:\n        /* \"--CODEGEN--\":34761:34766   */\n      dup1\n        /* \"--CODEGEN--\":32742:32755   */\n      iszero\n        /* \"--CODEGEN--\":32735:32756   */\n      iszero\n        /* \"--CODEGEN--\":34739:34744   */\n      dup2\n        /* \"--CODEGEN--\":34736:34768   */\n      eq\n        /* \"--CODEGEN--\":34726:34728   */\n      tag_758\n      jumpi\n        /* \"--CODEGEN--\":34782:34783   */\n      0x00\n      dup1\n        /* \"--CODEGEN--\":34772:34784   */\n      revert\n\n    auxdata: 0xa2646970667358221220d18afb1e29210e815a91a31352105dfb52e75557f02218e839513c20d61f7f6d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60e06040526495e27d7580600a55640ea1fc81ce600b556444502b18b2600c553480156200002c57600080fd5b5060405162003cca38038062003cca8339810160408190526200004f91620000f3565b60006200005b620000ef565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060018055606093841b6001600160601b03199081166080529290931b90911660a05260c052600280546001600160a01b0319166001600160a01b0390921691909117905562000167565b3390565b6000806000806080858703121562000109578384fd5b845162000116816200014e565b602086015190945062000129816200014e565b60408601516060870151919450925062000143816200014e565b939692955090935050565b6001600160a01b03811681146200016457600080fd5b50565b60805160601c60a05160601c60c051613b03620001c760003980610dcb52806111dc52806115415250806105dc5280611e2f5280612af65280612bc95280612c76525080610ce45280610d9e52806111af5280611ccc5250613b036000f3fe608060405234801561001057600080fd5b50600436106102e95760003560e01c8063715018a611610191578063c40d337b116100e3578063dfcedeee11610097578063f474309e11610071578063f474309e14610561578063f5a26f4014610574578063f5b91cd31461057c576102e9565b8063dfcedeee14610533578063e2bbb1581461053b578063f2fde38b1461054e576102e9565b8063c799b59d116100c8578063c799b59d14610518578063cc6db2da1461052b578063d2ce6ae81461052b576102e9565b8063c40d337b146104fd578063c507aeaa14610505576102e9565b80638da5cb5b116101455780639dd2fcc31161011f5780639dd2fcc3146104cf578063ac1d0609146104e2578063c3083016146104f5576102e9565b80638da5cb5b1461049d57806393f1a40b146104a557806399d7e84a146104c7576102e9565b806378ed5d1f1161017657806378ed5d1f1461046f578063815d087f1461048257806381bdf98c14610495576102e9565b8063715018a61461045f57806378db4c3414610467576102e9565b8063372c12b11161024a57806361621aaa116101fe5780636661100f116101d85780636661100f1461044757806369b021281461044f5780636fda08c314610457576102e9565b806361621aaa14610424578063630b5ba11461042c57806364482f7914610434576102e9565b80634f70b15a1161022f5780634f70b15a146103e957806351eb05a6146103f15780635312ea8e14610411576102e9565b8063372c12b1146103b6578063441a3e70146103d6576102e9565b80631526fe27116102a157806319ab453c1161028657806319ab453c1461038857806319f95e2e1461039b57806336183ed6146103a3576102e9565b80631526fe271461035c57806316e80f4d14610380576102e9565b8063041a84c9116102d2578063041a84c91461032c578063081e3eda146103415780630bb844bc14610349576102e9565b8063033186e8146102ee57806303dcff7414610317575b600080fd5b6103016102fc366004612fd6565b610584565b60405161030e9190613a0c565b60405180910390f35b61031f6105da565b60405161030e91906131bd565b61033f61033a366004613001565b6105fe565b005b610301610976565b61033f610357366004612f82565b61097c565b61036f61036a36600461306d565b610af1565b60405161030e959493929190613a49565b610301610b32565b61033f610396366004612f82565b610b3e565b610301610e58565b61033f6103b1366004613035565b610e86565b6103c96103c4366004612f82565b610f4c565b60405161030e9190613235565b61033f6103e4366004613113565b610f61565b61033f611172565b6104046103ff36600461306d565b61123b565b60405161030e91906139d0565b61033f61041f36600461306d565b611411565b61030161153f565b61033f611563565b61033f610442366004613134565b6115f7565b61030161176e565b610301611774565b61030161177e565b61033f611784565b61030161184f565b61031f61047d36600461306d565b611855565b61033f61049036600461316c565b611889565b61031f6119eb565b61031f611a07565b6104b86104b336600461309d565b611a23565b60405161030e93929190613a33565b610301611a4f565b61033f6104dd366004612f82565b611a55565b61033f6104f0366004612f9e565b611b96565b61031f611cca565b610301611cee565b61033f6105133660046130c1565b611cf4565b61030161052636600461309d565b6120cd565b610301612279565b61031f612282565b61033f610549366004613113565b61229e565b61033f61055c366004612f82565b612669565b61030161056f366004613035565b61279f565b6103016127fc565b610301612802565b600081815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281206002015464e8d4a5100081116105ce5764e8d4a510006105d0565b805b9150505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035473ffffffffffffffffffffffffffffffffffffffff163314610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613599565b60405180910390fd5b60026001541415610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b600260015573ffffffffffffffffffffffffffffffffffffffff83166106e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613916565b600482815481106106f457fe5b600091825260209091206004600590920201015460ff16610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906138b9565b64e8d4a51000811015801561075c57506501d1a94a20008111155b610792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061370e565b61079a612f30565b6107a38361123b565b600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8916845290915281209192506107df8686610584565b90506107ec86868361280f565b61082c670de0b6b3a7640000610820856000015161082664e8d4a510006108208a89600001546128ec90919063ffffffff16565b90612940565b906128ec565b600183015581546108789061084c9064e8d4a510009061082090886128ec565b8354610872906108679064e8d4a510009061082090876128ec565b606087015190612989565b906129cb565b6060840152600480548491908790811061088e57fe5b6000918252602080832084516005939093020191825583810151600183015560408085015160028085019190915560608601516003850155608090950151600490930180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016931515939093179092558883526006815281832073ffffffffffffffffffffffffffffffffffffffff8b1680855291529181902090920186905590517f01abd62439b64f6c5dab6f94d56099495bd0c094f9c21f98f4d3562a21edb4ba9061096290889085908990613a33565b60405180910390a250506001805550505050565b60045490565b610984612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146109d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff8116610a25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906137c8565b60025473ffffffffffffffffffffffffffffffffffffffff82811691161415610a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906136b0565b6002805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907fd146fe330fdddf682413850a35b28edfccd4c4b53cfee802fd24950de5be1dbe90600090a35050565b60048181548110610afe57fe5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294509092909160ff1685565b670de0b6b3a764000081565b610b46612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610b9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190610bef9033906004016131bd565b60206040518083038186803b158015610c0757600080fd5b505afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190613085565b905080610c78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061343c565b610c9a73ffffffffffffffffffffffffffffffffffffffff8316333084612a0e565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063095ea7b390610d0e907f000000000000000000000000000000000000000000000000000000000000000090859060040161320f565b602060405180830381600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190613051565b506040517fe2bbb15800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e2bbb15890610df5907f0000000000000000000000000000000000000000000000000000000000000000908590600401613a25565b600060405180830381600087803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b505043600d5550506040517f57a86f7d14ccde89e22870afe839e3011216827daa9b24e18629f0a1e9d6cc1490600090a15050565b6000610e8164e8d4a51000610820600a5468022b1c8c1227a000006128ec90919063ffffffff16565b905090565b610e8e612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610ee2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b8015610ef057610ef0611563565b6000610f07600d544361298990919063ffffffff16565b90506000610f1d610f16610e58565b83906128ec565b600254909150610f439073ffffffffffffffffffffffffffffffffffffffff1682612ab1565b505043600d5550565b60076020526000908152604090205460ff1681565b60026001541415610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b6002600155610fab612f30565b610fb48361123b565b6000848152600660209081526040808320338452909152902080549192509083111561100c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906134f6565b60006110183386610584565b905061102533868361280f565b831561107a5781546110379085612989565b826000018190555061107a33856005888154811061105157fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169190612ca2565b6110ae670de0b6b3a7640000610820856000015161082664e8d4a510006108208789600001546128ec90919063ffffffff16565b60018301556110f66110c964e8d4a5100061082087856128ec565b600487815481106110d657fe5b90600052602060002090600502016003015461298990919063ffffffff16565b6004868154811061110357fe5b906000526020600020906005020160030181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161115f9190613a0c565b60405180910390a3505060018055505050565b6040517fe2bbb15800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e2bbb15890611207907f000000000000000000000000000000000000000000000000000000000000000090600090600401613a25565b600060405180830381600087803b15801561122157600080fd5b505af1158015611235573d6000803e3d6000fd5b50505050565b611243612f30565b6004828154811061125057fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301849052600281015491830191909152600381015460608301526004015460ff1615156080820152915043111561140c57606081015160808201516000906112c2576009546112c6565b6008545b90506000821180156112d85750600081115b156113455760006112f684602001514361298990919063ffffffff16565b9050600061131d8361082087604001516108266113168a6080015161279f565b87906128ec565b90506113406113388561082084670de0b6b3a76400006128ec565b8651906129cb565b855250505b436020840152600480548491908690811061135c57fe5b6000918252602091829020835160059290920201908155828201516001820155604080840151600283015560608401516003830155608090930151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558401518451915186927f3be3541fc42237d611b30329040bfa4569541d156560acdbbae57640d20b8f46926114019290918791613a33565b60405180910390a250505b919050565b6002600154141561144e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b600260018190555060006004828154811061146557fe5b6000918252602080832085845260068252604080852033808752935284208054858255600182018690556005909402909101945092906114bb9064e8d4a5100090610820906114b49089610584565b85906128ec565b9050808460030154116114cf5760006114de565b60038401546114de9082612989565b84600301819055506114f833836005888154811061105157fe5b843373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958460405161115f9190613a0c565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045460005b818110156115f357611579612f30565b6004828154811061158657fe5b60009182526020918290206040805160a08101825260059093029091018054835260018101549383019390935260028301549082018190526003830154606083015260049092015460ff16151560808201529150156115ea576115e88261123b565b505b50600101611569565b5050565b6115ff612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b61165c8361123b565b50801561166b5761166b611563565b6004838154811061167857fe5b600091825260209091206004600590920201015460ff16156116d3576116cb82610872600486815481106116a857fe5b90600052602060002090600502016002015460085461298990919063ffffffff16565b60085561170e565b61170a82610872600486815481106116e757fe5b90600052602060002090600502016002015460095461298990919063ffffffff16565b6009555b816004848154811061171c57fe5b906000526020600020906005020160020181905550827fc0cfd54d2de2b55f1e6e108d3ec53ff0a1abe6055401d32c61e9433b747ef9f8836040516117619190613a0c565b60405180910390a2505050565b600a5481565b6501d1a94a200081565b600c5481565b61178c612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146117e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600d5481565b6005818154811061186257fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b611891612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146118e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6000841180156118f55750600083115b80156119015750600082115b611937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613291565b64e8d4a5100061194b8361087287876129cb565b14611982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906133df565b801561199057611990611563565b61199a6000610e86565b600a849055600b839055600c8290556040517f2882b55ee231404a42d7d813dad9cfe57d65e1992a6d165a6e29466a8d1b7499906119dd90869086908690613a33565b60405180910390a150505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b60095481565b611a5d612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611ab1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff811615801590611af1575060035473ffffffffffffffffffffffffffffffffffffffff828116911614155b611b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061385c565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f4c0c07d0b548b824a1b998eb4d11fccf1cfbc1e47edcdb309970ba88315eb30390600090a250565b611b9e612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611bf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff8216611c3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613973565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600760205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016841515179055517fc551bbb22d0406dbfb8b6b7740cc521bcf44e1106029cf899c19b6a8e4c99d5190611cbe908490613235565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60085481565b611cfc612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190611da59030906004016131bd565b60206040518083038186803b158015611dbd57600080fd5b505afa158015611dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df59190613085565b1015611e2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061352d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611eb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061376b565b8015611ec157611ec1611563565b8115611edc57600854611ed490856129cb565b600855611eed565b600954611ee990856129cb565b6009555b60058054600180820183557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091556040805160a081018252600080825243602083019081529282018a8152606083018281528915156080850190815260048054808a018255945293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9389029384015593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d82015591517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055915461208e91612989565b7f18caa0724a26384928efe604ae6ddc99c242548876259770fc88fcb7e719d8fa86856040516120bf929190613a15565b60405180910390a350505050565b60006120d7612f30565b600484815481106120e457fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301939093526002830154908201526003820154606082015260049091015460ff1615156080820152905061213e612f61565b50600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452825291829020825160608082018552825482526001830154828501526002909201549381019390935283519084015191840151909190431180156121ac57508015155b156122255760006121ca85602001514361298990919063ffffffff16565b905060006121fe86608001516121e2576009546121e6565b6008545b61082088604001516108266113168b6080015161279f565b90506122206122198461082084670de0b6b3a76400006128ec565b85906129cb565b935050505b600061224564e8d4a5100061082061223d8a8c610584565b8751906128ec565b602085015190915061226d90612267670de0b6b3a764000061082085886128ec565b90612989565b98975050505050505050565b64e8d4a5100081565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b600260015414156122db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b60026001556122e8612f30565b6122f18361123b565b600084815260066020908152604080832033845290915290206080820151919250908061232d57503360009081526007602052604090205460ff165b612363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906135f6565b600061236f3386610584565b8254909150156123845761238433868361280f565b83156125805760006005868154811061239957fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a08231906123f89030906004016131bd565b60206040518083038186803b15801561241057600080fd5b505afa158015612424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124489190613085565b905061248733308760058a8154811061245d57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16929190612a0e565b612547816005888154811061249857fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a08231906124f79030906004016131bd565b60206040518083038186803b15801561250f57600080fd5b505afa158015612523573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122679190613085565b835490955061255690866129cb565b835561257961256e64e8d4a5100061082088866128ec565b6060860151906129cb565b6060850152505b6125b4670de0b6b3a7640000610820856000015161082664e8d4a510006108208789600001546128ec90919063ffffffff16565b826001018190555082600486815481106125ca57fe5b6000918252602091829020835160059290920201908155908201516001820155604080830151600283015560608301516003830155608090920151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905551859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159061115f908890613a0c565b612671612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146126c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff8116612712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061334b565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081156127d5576127ce64e8d4a51000610820600b5468022b1c8c1227a000006128ec90919063ffffffff16565b905061140c565b6105d464e8d4a51000610820600c5468022b1c8c1227a000006128ec90919063ffffffff16565b600b5481565b68022b1c8c1227a0000081565b612817612f61565b50600082815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320815160608101835281548082526001830154948201949094526002909101549181019190915291906128849064e8d4a510009061082090866128ec565b905060006128bc670de0b6b3a7640000610820600488815481106128a457fe5b600091825260209091206005909102015485906128ec565b905060006128d784602001518361298990919063ffffffff16565b90506128e38782612ab1565b50505050505050565b6000826128fb575060006105d4565b8282028284828161290857fe5b04146105ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613499565b600061298283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cc1565b9392505050565b600061298283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d12565b6000828201838110156105ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906133a8565b3390565b611235846323b872dd60e01b858585604051602401612a2f939291906131de565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612d58565b80156115f3576040517f70a08231000000000000000000000000000000000000000000000000000000008152819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190612b2b9030906004016131bd565b60206040518083038186803b158015612b4357600080fd5b505afa158015612b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b7b9190613085565b1015612b8957612b89611172565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190612bfe9030906004016131bd565b60206040518083038186803b158015612c1657600080fd5b505afa158015612c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4e9190613085565b905081811015612c5c578091505b612c9d73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168484612ca2565b505050565b612c9d8363a9059cbb60e01b8484604051602401612a2f92919061320f565b60008183612cfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9190613240565b506000838581612d0857fe5b0495945050505050565b60008184841115612d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9190613240565b505050900390565b6060612dba826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612e0e9092919063ffffffff16565b805190915015612c9d5780806020019051810190612dd89190613051565b612c9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906132ee565b6060612e1d8484600085612e25565b949350505050565b6060612e3085612f2a565b612e66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613679565b600060608673ffffffffffffffffffffffffffffffffffffffff168587604051612e9091906131a1565b60006040518083038185875af1925050503d8060008114612ecd576040519150601f19603f3d011682016040523d82523d6000602084013e612ed2565b606091505b50915091508115612ee6579150612e1d9050565b805115612ef65780518082602001fd5b836040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9190613240565b3b151590565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b60405180606001604052806000815260200160008152602001600081525090565b600060208284031215612f93578081fd5b81356105ce81613a9a565b60008060408385031215612fb0578081fd5b8235612fbb81613a9a565b91506020830135612fcb81613abf565b809150509250929050565b60008060408385031215612fe8578182fd5b8235612ff381613a9a565b946020939093013593505050565b600080600060608486031215613015578081fd5b833561302081613a9a565b95602085013595506040909401359392505050565b600060208284031215613046578081fd5b81356105ce81613abf565b600060208284031215613062578081fd5b81516105ce81613abf565b60006020828403121561307e578081fd5b5035919050565b600060208284031215613096578081fd5b5051919050565b600080604083850312156130af578182fd5b823591506020830135612fcb81613a9a565b600080600080608085870312156130d6578081fd5b8435935060208501356130e881613a9a565b925060408501356130f881613abf565b9150606085013561310881613abf565b939692955090935050565b60008060408385031215613125578182fd5b50508035926020909101359150565b600080600060608486031215613148578283fd5b8335925060208401359150604084013561316181613abf565b809150509250925092565b60008060008060808587031215613181578384fd5b843593506020850135925060408501359150606085013561310881613abf565b600082516131b3818460208701613a6e565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b600060208252825180602084015261325f816040850160208701613a6e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252602d908201527f734d6173746572436865663a20536864772072617465206d757374206265206760408201527f726561746572207468616e203000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526024908201527f734d6173746572436865663a20546f74616c2072617465206d7573742062652060408201527f3165313200000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f734d6173746572436865663a2042616c616e6365206d7573742065786365656460408201527f2030000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f77697468647261773a20496e73756666696369656e7400000000000000000000604082015260600190565b60208082526011908201527f4e6f6e6520424550323020746f6b656e73000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f737460408201527f20636f6e74726163740000000000000000000000000000000000000000000000606082015260800190565b60208082526041908201527f734d6173746572436865663a205468652061646472657373206973206e6f742060408201527f617661696c61626c6520746f206465706f73697420696e207468697320706f6f60608201527f6c00000000000000000000000000000000000000000000000000000000000000608082015260a00190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260409082018190527f734d6173746572436865663a204275726e2061646d696e206164647265737320908201527f6973207468652073616d6520776974682063757272656e742061646472657373606082015260800190565b60208082526029908201527f734d6173746572436865663a20496e76616c6964206e657720626f6f7374206d60408201527f756c7469706c6965720000000000000000000000000000000000000000000000606082015260800190565b60208082526027908201527f5348445720746f6b656e2063616e277420626520616464656420746f2066617260408201527f6d20706f6f6c7300000000000000000000000000000000000000000000000000606082015260800190565b6020808252602d908201527f734d6173746572436865663a204275726e2061646d696e20616464726573732060408201527f6d7573742062652076616c696400000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526035908201527f734d6173746572436865663a204e657720626f6f737420636f6e74726163742060408201527f61646472657373206d7573742062652076616c69640000000000000000000000606082015260800190565b6020808252602f908201527f734d6173746572436865663a204f6e6c7920726567756c6172206661726d206360408201527f6f756c6420626520626f6f737465640000000000000000000000000000000000606082015260800190565b6020808252602b908201527f734d6173746572436865663a2054686520757365722061646472657373206d7560408201527f73742062652076616c6964000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f734d6173746572436865663a20546865207768697465206c697374206164647260408201527f657373206d7573742062652076616c6964000000000000000000000000000000606082015260800190565b600060a0820190508251825260208301516020830152604083015160408301526060830151606083015260808301511515608083015292915050565b90815260200190565b9182521515602082015260400190565b918252602082015260400190565b9283526020830191909152604082015260600190565b9485526020850193909352604084019190915260608301521515608082015260a00190565b60005b83811015613a89578181015183820152602001613a71565b838111156112355750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114613abc57600080fd5b50565b8015158114613abc57600080fdfea2646970667358221220d18afb1e29210e815a91a31352105dfb52e75557f02218e839513c20d61f7f6d64736f6c634300060c0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH5 0x95E27D7580 PUSH1 0xA SSTORE PUSH5 0xEA1FC81CE PUSH1 0xB SSTORE PUSH5 0x44502B18B2 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3CCA CODESIZE SUB DUP1 PUSH3 0x3CCA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4F SWAP2 PUSH3 0xF3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x60 SWAP4 DUP5 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x80 MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x167 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x109 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x116 DUP2 PUSH3 0x14E JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x129 DUP2 PUSH3 0x14E JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 DUP8 ADD MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH3 0x143 DUP2 PUSH3 0x14E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH2 0x3B03 PUSH3 0x1C7 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xDCB MSTORE DUP1 PUSH2 0x11DC MSTORE DUP1 PUSH2 0x1541 MSTORE POP DUP1 PUSH2 0x5DC MSTORE DUP1 PUSH2 0x1E2F MSTORE DUP1 PUSH2 0x2AF6 MSTORE DUP1 PUSH2 0x2BC9 MSTORE DUP1 PUSH2 0x2C76 MSTORE POP DUP1 PUSH2 0xCE4 MSTORE DUP1 PUSH2 0xD9E MSTORE DUP1 PUSH2 0x11AF MSTORE DUP1 PUSH2 0x1CCC MSTORE POP PUSH2 0x3B03 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x191 JUMPI DUP1 PUSH4 0xC40D337B GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xDFCEDEEE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF474309E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF474309E EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF5A26F40 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xF5B91CD3 EQ PUSH2 0x57C JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54E JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0xC799B59D GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC799B59D EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xCC6DB2DA EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xD2CE6AE8 EQ PUSH2 0x52B JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0xC40D337B EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xC507AEAA EQ PUSH2 0x505 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x9DD2FCC3 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x9DD2FCC3 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xAC1D0609 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xC3083016 EQ PUSH2 0x4F5 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x99D7E84A EQ PUSH2 0x4C7 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x78ED5D1F GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x78ED5D1F EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x815D087F EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x81BDF98C EQ PUSH2 0x495 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x78DB4C34 EQ PUSH2 0x467 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 GT PUSH2 0x24A JUMPI DUP1 PUSH4 0x61621AAA GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6661100F GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x6661100F EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x69B02128 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x6FDA08C3 EQ PUSH2 0x457 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x61621AAA EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x434 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x4F70B15A GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x4F70B15A EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x411 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x3D6 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x19AB453C GT PUSH2 0x286 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x19F95E2E EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x36183ED6 EQ PUSH2 0x3A3 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x16E80F4D EQ PUSH2 0x380 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x41A84C9 GT PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x41A84C9 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xBB844BC EQ PUSH2 0x349 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x33186E8 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3DCFF74 EQ PUSH2 0x317 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x301 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD6 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH2 0x33F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x3001 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0x976 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST PUSH2 0x36F PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A49 JUMP JUMPDEST PUSH2 0x301 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x301 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3035 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x404 PUSH2 0x3FF CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x39D0 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x33F PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x3134 JUMP JUMPDEST PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x301 PUSH2 0x1774 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x33F PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x31F PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x316C JUMP JUMPDEST PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x31F PUSH2 0x1A07 JUMP JUMPDEST PUSH2 0x4B8 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x309D JUMP JUMPDEST PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x33F PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x301 PUSH2 0x1CEE JUMP JUMPDEST PUSH2 0x33F PUSH2 0x513 CALLDATASIZE PUSH1 0x4 PUSH2 0x30C1 JUMP JUMPDEST PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0x309D JUMP JUMPDEST PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x2282 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST PUSH2 0x33F PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x2669 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x3035 JUMP JUMPDEST PUSH2 0x279F JUMP JUMPDEST PUSH2 0x301 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x5CE JUMPI PUSH5 0xE8D4A51000 PUSH2 0x5D0 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3916 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6F4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x38B9 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI POP PUSH6 0x1D1A94A2000 DUP2 GT ISZERO JUMPDEST PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH2 0x79A PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x7A3 DUP4 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x7DF DUP7 DUP7 PUSH2 0x584 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EC DUP7 DUP7 DUP4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x82C PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x826 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP11 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2940 JUMP JUMPDEST SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP2 SLOAD PUSH2 0x878 SWAP1 PUSH2 0x84C SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 DUP9 PUSH2 0x28EC JUMP JUMPDEST DUP4 SLOAD PUSH2 0x872 SWAP1 PUSH2 0x867 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 DUP8 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD SWAP1 PUSH2 0x2989 JUMP JUMPDEST SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x88E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 SWAP1 SWAP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP1 DUP6 MSTORE SWAP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA SWAP1 PUSH2 0x962 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP10 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x984 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x36B0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xD146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0xB46 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBEF SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x343C JUMP JUMPDEST PUSH2 0xC9A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0xD0E SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x320F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD60 SWAP2 SWAP1 PUSH2 0x3051 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xE2BBB15800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH2 0xDF5 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3A25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP NUMBER PUSH1 0xD SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH1 0xA SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE8E PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF0 JUMPI PUSH2 0xEF0 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF07 PUSH1 0xD SLOAD NUMBER PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF1D PUSH2 0xF16 PUSH2 0xE58 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0xF43 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x2AB1 JUMP JUMPDEST POP POP NUMBER PUSH1 0xD SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xFAB PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0xFB4 DUP4 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP4 GT ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x34F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 CALLER DUP7 PUSH2 0x584 JUMP JUMPDEST SWAP1 POP PUSH2 0x1025 CALLER DUP7 DUP4 PUSH2 0x280F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x107A JUMPI DUP2 SLOAD PUSH2 0x1037 SWAP1 DUP6 PUSH2 0x2989 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x107A CALLER DUP6 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1051 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH2 0x10AE PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x826 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x10F6 PUSH2 0x10C9 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP8 DUP6 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x10D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1103 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE2BBB15800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH2 0x1207 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x3A25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1243 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1250 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP NUMBER GT ISZERO PUSH2 0x140C JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0x12C2 JUMPI PUSH1 0x9 SLOAD PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x12D8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 PUSH2 0x12F6 DUP5 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x131D DUP4 PUSH2 0x820 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x826 PUSH2 0x1316 DUP11 PUSH1 0x80 ADD MLOAD PUSH2 0x279F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1340 PUSH2 0x1338 DUP6 PUSH2 0x820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x28EC JUMP JUMPDEST DUP7 MLOAD SWAP1 PUSH2 0x29CB JUMP JUMPDEST DUP6 MSTORE POP POP JUMPDEST NUMBER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x135C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 ADD MLOAD DUP5 MLOAD SWAP2 MLOAD DUP7 SWAP3 PUSH32 0x3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46 SWAP3 PUSH2 0x1401 SWAP3 SWAP1 SWAP2 DUP8 SWAP2 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1465 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD SWAP5 POP SWAP3 SWAP1 PUSH2 0x14BB SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 PUSH2 0x14B4 SWAP1 DUP10 PUSH2 0x584 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x3 ADD SLOAD GT PUSH2 0x14CF JUMPI PUSH1 0x0 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x14DE SWAP1 DUP3 PUSH2 0x2989 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x14F8 CALLER DUP4 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1051 JUMPI INVALID JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP5 PUSH1 0x40 MLOAD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x1579 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1586 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP ISZERO PUSH2 0x15EA JUMPI PUSH2 0x15E8 DUP3 PUSH2 0x123B JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1569 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15FF PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH2 0x165C DUP4 PUSH2 0x123B JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x166B JUMPI PUSH2 0x166B PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1678 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16CB DUP3 PUSH2 0x872 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x16A8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x170E JUMP JUMPDEST PUSH2 0x170A DUP3 PUSH2 0x872 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x16E7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x171C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0xC0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1761 SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH6 0x1D1A94A2000 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x178C PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x17E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1862 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1891 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x18E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x18F5 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1901 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3291 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x194B DUP4 PUSH2 0x872 DUP8 DUP8 PUSH2 0x29CB JUMP JUMPDEST EQ PUSH2 0x1982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x33DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1990 JUMPI PUSH2 0x1990 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x199A PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2882B55EE231404A42D7D813DAD9CFE57D65E1992A6D165A6E29466A8D1B7499 SWAP1 PUSH2 0x19DD SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A5D PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1AF1 JUMPI POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1B27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1B9E PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1BF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1C3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3973 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xC551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51 SWAP1 PUSH2 0x1CBE SWAP1 DUP5 SWAP1 PUSH2 0x3235 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CFC PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1D50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1DA5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF5 SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST LT ISZERO PUSH2 0x1E2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x352D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x376B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC1 PUSH2 0x1563 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1EDC JUMPI PUSH1 0x8 SLOAD PUSH2 0x1ED4 SWAP1 DUP6 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EE9 SWAP1 DUP6 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE NUMBER PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP3 DUP2 MSTORE DUP10 ISZERO ISZERO PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 SLOAD DUP1 DUP11 ADD DUP3 SSTORE SWAP5 MSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 DUP10 MUL SWAP4 DUP5 ADD SSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19D DUP3 ADD SSTORE SWAP2 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19E DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19F SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 SLOAD PUSH2 0x208E SWAP2 PUSH2 0x2989 JUMP JUMPDEST PUSH32 0x18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20BF SWAP3 SWAP2 SWAP1 PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x20E4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x213E PUSH2 0x2F61 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 MLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD SWAP1 SWAP2 SWAP1 NUMBER GT DUP1 ISZERO PUSH2 0x21AC JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2225 JUMPI PUSH1 0x0 PUSH2 0x21CA DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21FE DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0x21E2 JUMPI PUSH1 0x9 SLOAD PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH2 0x820 DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x826 PUSH2 0x1316 DUP12 PUSH1 0x80 ADD MLOAD PUSH2 0x279F JUMP JUMPDEST SWAP1 POP PUSH2 0x2220 PUSH2 0x2219 DUP5 PUSH2 0x820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x28EC JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x29CB JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x2245 PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH2 0x223D DUP11 DUP13 PUSH2 0x584 JUMP JUMPDEST DUP8 MLOAD SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x226D SWAP1 PUSH2 0x2267 PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 DUP9 PUSH2 0x28EC JUMP JUMPDEST SWAP1 PUSH2 0x2989 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x22DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x22E8 PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x22F1 DUP4 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x80 DUP3 ADD MLOAD SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0x232D JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x2363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x35F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236F CALLER DUP7 PUSH2 0x584 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2384 JUMPI PUSH2 0x2384 CALLER DUP7 DUP4 PUSH2 0x280F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x2580 JUMPI PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2399 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x23F8 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2424 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2448 SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST SWAP1 POP PUSH2 0x2487 CALLER ADDRESS DUP8 PUSH1 0x5 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 SWAP1 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0x2547 DUP2 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x2498 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x24F7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x250F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2523 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2267 SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP6 POP PUSH2 0x2556 SWAP1 DUP7 PUSH2 0x29CB JUMP JUMPDEST DUP4 SSTORE PUSH2 0x2579 PUSH2 0x256E PUSH5 0xE8D4A51000 PUSH2 0x820 DUP9 DUP7 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP JUMPDEST PUSH2 0x25B4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x826 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x25CA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x115F SWAP1 DUP9 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH2 0x2671 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x26C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x27D5 JUMPI PUSH2 0x27CE PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH1 0xB SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x140C JUMP JUMPDEST PUSH2 0x5D4 PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH1 0xC SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH9 0x22B1C8C1227A00000 DUP2 JUMP JUMPDEST PUSH2 0x2817 PUSH2 0x2F61 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH2 0x2884 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 DUP7 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28BC PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x28A4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP6 SWAP1 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28D7 DUP5 PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x28E3 DUP8 DUP3 PUSH2 0x2AB1 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28FB JUMPI POP PUSH1 0x0 PUSH2 0x5D4 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2908 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2982 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2CC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2982 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x33A8 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1235 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2D58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2B2B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B7B SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST LT ISZERO PUSH2 0x2B89 JUMPI PUSH2 0x2B89 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2BFE SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4E SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2C5C JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x2C9D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP5 DUP5 PUSH2 0x2CA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2C9D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2F SWAP3 SWAP2 SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2CFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2D08 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2D50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DBA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2C9D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2DD8 SWAP2 SWAP1 PUSH2 0x3051 JUMP JUMPDEST PUSH2 0x2C9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E1D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2E25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E30 DUP6 PUSH2 0x2F2A JUMP JUMPDEST PUSH2 0x2E66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3679 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E90 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2ECD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2EE6 JUMPI SWAP2 POP PUSH2 0x2E1D SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2EF6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F93 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5CE DUP2 PUSH2 0x3A9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FB0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FBB DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2FCB DUP2 PUSH2 0x3ABF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FF3 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3015 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3020 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3046 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5CE DUP2 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3062 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5CE DUP2 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x307E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3096 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30AF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2FCB DUP2 PUSH2 0x3A9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x30D6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x30E8 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x30F8 DUP2 PUSH2 0x3ABF JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3108 DUP2 PUSH2 0x3ABF JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3125 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3148 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3161 DUP2 PUSH2 0x3ABF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3181 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3108 DUP2 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x31B3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3A6E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x325F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20536864772072617465206D7573742062652067 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E203000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20546F74616C2072617465206D75737420626520 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3165313200000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A2042616C616E6365206D75737420657863656564 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20496E73756666696369656E7400000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F6E6520424550323020746F6B656E73000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20636F6E74726163740000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A205468652061646472657373206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x617661696C61626C6520746F206465706F73697420696E207468697320706F6F PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x734D6173746572436865663A204275726E2061646D696E206164647265737320 SWAP1 DUP3 ADD MSTORE PUSH32 0x6973207468652073616D6520776974682063757272656E742061646472657373 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20496E76616C6964206E657720626F6F7374206D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x756C7469706C6965720000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x5348445720746F6B656E2063616E277420626520616464656420746F20666172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D20706F6F6C7300000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A204275726E2061646D696E206164647265737320 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D7573742062652076616C696400000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A204E657720626F6F737420636F6E747261637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x61646472657373206D7573742062652076616C69640000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A204F6E6C7920726567756C6172206661726D2063 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F756C6420626520626F6F737465640000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A2054686520757365722061646472657373206D75 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73742062652076616C6964000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20546865207768697465206C6973742061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x657373206D7573742062652076616C6964000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A89 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A71 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1235 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3ABC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP11 0xFB 0x1E 0x29 0x21 0xE DUP2 GAS SWAP2 LOG3 SGT MSTORE LT 0x5D 0xFB MSTORE 0xE7 SSTORE JUMPI CREATE 0x22 XOR 0xE8 CODECOPY MLOAD EXTCODECOPY KECCAK256 0xD6 0x1F PUSH32 0x6D64736F6C634300060C00330000000000000000000000000000000000000000 ",
							"sourceMap": "25023:23334:0:-:0;;;29077:12;29045:44;;29192:11;29153:50;;29302:12;29263:51;;30547:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1847:17;1867:12;:10;:12::i;:::-;1890:6;:18;;-1:-1:-1;;;;;;1890:18:0;-1:-1:-1;;;;;1890:18:0;;;;;;;1924:43;;1890:18;;-1:-1:-1;1890:18:0;1924:43;;1890:6;;1924:43;-1:-1:-1;10208:1:0;10329:22;;30699;;;;-1:-1:-1;;;;;;30699:22:0;;;;;30732:12;;;;;;;;;30755:24;;30790:9;:22;;-1:-1:-1;;;;;;30790:22:0;-1:-1:-1;;;;;30790:22:0;;;;;;;;;25023:23334;;669:106;757:10;669:106;:::o;635:738:-1:-;;;;;834:3;822:9;813:7;809:23;805:33;802:2;;;-1:-1;;841:12;802:2;418:6;412:13;430:52;476:5;430:52;:::i;:::-;1023:2;1087:22;;238:13;893:93;;-1:-1;256:47;238:13;256:47;:::i;:::-;1156:2;1206:22;;572:13;1275:2;1325:22;;83:13;1031:88;;-1:-1;572:13;-1:-1;101:33;83:13;101:33;:::i;:::-;796:577;;;;-1:-1;796:577;;-1:-1;;796:577::o;1914:117::-;-1:-1;;;;;1769:54;;1973:35;;1963:2;;2022:1;;2012:12;1963:2;1957:74;:::o;:::-;25023:23334:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"951": [
									{
										"length": 32,
										"start": 3300
									},
									{
										"length": 32,
										"start": 3486
									},
									{
										"length": 32,
										"start": 4527
									},
									{
										"length": 32,
										"start": 7372
									}
								],
								"954": [
									{
										"length": 32,
										"start": 1500
									},
									{
										"length": 32,
										"start": 7727
									},
									{
										"length": 32,
										"start": 10998
									},
									{
										"length": 32,
										"start": 11209
									},
									{
										"length": 32,
										"start": 11382
									}
								],
								"983": [
									{
										"length": 32,
										"start": 3531
									},
									{
										"length": 32,
										"start": 4572
									},
									{
										"length": 32,
										"start": 5441
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102e95760003560e01c8063715018a611610191578063c40d337b116100e3578063dfcedeee11610097578063f474309e11610071578063f474309e14610561578063f5a26f4014610574578063f5b91cd31461057c576102e9565b8063dfcedeee14610533578063e2bbb1581461053b578063f2fde38b1461054e576102e9565b8063c799b59d116100c8578063c799b59d14610518578063cc6db2da1461052b578063d2ce6ae81461052b576102e9565b8063c40d337b146104fd578063c507aeaa14610505576102e9565b80638da5cb5b116101455780639dd2fcc31161011f5780639dd2fcc3146104cf578063ac1d0609146104e2578063c3083016146104f5576102e9565b80638da5cb5b1461049d57806393f1a40b146104a557806399d7e84a146104c7576102e9565b806378ed5d1f1161017657806378ed5d1f1461046f578063815d087f1461048257806381bdf98c14610495576102e9565b8063715018a61461045f57806378db4c3414610467576102e9565b8063372c12b11161024a57806361621aaa116101fe5780636661100f116101d85780636661100f1461044757806369b021281461044f5780636fda08c314610457576102e9565b806361621aaa14610424578063630b5ba11461042c57806364482f7914610434576102e9565b80634f70b15a1161022f5780634f70b15a146103e957806351eb05a6146103f15780635312ea8e14610411576102e9565b8063372c12b1146103b6578063441a3e70146103d6576102e9565b80631526fe27116102a157806319ab453c1161028657806319ab453c1461038857806319f95e2e1461039b57806336183ed6146103a3576102e9565b80631526fe271461035c57806316e80f4d14610380576102e9565b8063041a84c9116102d2578063041a84c91461032c578063081e3eda146103415780630bb844bc14610349576102e9565b8063033186e8146102ee57806303dcff7414610317575b600080fd5b6103016102fc366004612fd6565b610584565b60405161030e9190613a0c565b60405180910390f35b61031f6105da565b60405161030e91906131bd565b61033f61033a366004613001565b6105fe565b005b610301610976565b61033f610357366004612f82565b61097c565b61036f61036a36600461306d565b610af1565b60405161030e959493929190613a49565b610301610b32565b61033f610396366004612f82565b610b3e565b610301610e58565b61033f6103b1366004613035565b610e86565b6103c96103c4366004612f82565b610f4c565b60405161030e9190613235565b61033f6103e4366004613113565b610f61565b61033f611172565b6104046103ff36600461306d565b61123b565b60405161030e91906139d0565b61033f61041f36600461306d565b611411565b61030161153f565b61033f611563565b61033f610442366004613134565b6115f7565b61030161176e565b610301611774565b61030161177e565b61033f611784565b61030161184f565b61031f61047d36600461306d565b611855565b61033f61049036600461316c565b611889565b61031f6119eb565b61031f611a07565b6104b86104b336600461309d565b611a23565b60405161030e93929190613a33565b610301611a4f565b61033f6104dd366004612f82565b611a55565b61033f6104f0366004612f9e565b611b96565b61031f611cca565b610301611cee565b61033f6105133660046130c1565b611cf4565b61030161052636600461309d565b6120cd565b610301612279565b61031f612282565b61033f610549366004613113565b61229e565b61033f61055c366004612f82565b612669565b61030161056f366004613035565b61279f565b6103016127fc565b610301612802565b600081815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281206002015464e8d4a5100081116105ce5764e8d4a510006105d0565b805b9150505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035473ffffffffffffffffffffffffffffffffffffffff163314610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613599565b60405180910390fd5b60026001541415610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b600260015573ffffffffffffffffffffffffffffffffffffffff83166106e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613916565b600482815481106106f457fe5b600091825260209091206004600590920201015460ff16610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906138b9565b64e8d4a51000811015801561075c57506501d1a94a20008111155b610792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061370e565b61079a612f30565b6107a38361123b565b600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8916845290915281209192506107df8686610584565b90506107ec86868361280f565b61082c670de0b6b3a7640000610820856000015161082664e8d4a510006108208a89600001546128ec90919063ffffffff16565b90612940565b906128ec565b600183015581546108789061084c9064e8d4a510009061082090886128ec565b8354610872906108679064e8d4a510009061082090876128ec565b606087015190612989565b906129cb565b6060840152600480548491908790811061088e57fe5b6000918252602080832084516005939093020191825583810151600183015560408085015160028085019190915560608601516003850155608090950151600490930180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016931515939093179092558883526006815281832073ffffffffffffffffffffffffffffffffffffffff8b1680855291529181902090920186905590517f01abd62439b64f6c5dab6f94d56099495bd0c094f9c21f98f4d3562a21edb4ba9061096290889085908990613a33565b60405180910390a250506001805550505050565b60045490565b610984612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146109d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff8116610a25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906137c8565b60025473ffffffffffffffffffffffffffffffffffffffff82811691161415610a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906136b0565b6002805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907fd146fe330fdddf682413850a35b28edfccd4c4b53cfee802fd24950de5be1dbe90600090a35050565b60048181548110610afe57fe5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294509092909160ff1685565b670de0b6b3a764000081565b610b46612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610b9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190610bef9033906004016131bd565b60206040518083038186803b158015610c0757600080fd5b505afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190613085565b905080610c78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061343c565b610c9a73ffffffffffffffffffffffffffffffffffffffff8316333084612a0e565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063095ea7b390610d0e907f000000000000000000000000000000000000000000000000000000000000000090859060040161320f565b602060405180830381600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190613051565b506040517fe2bbb15800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e2bbb15890610df5907f0000000000000000000000000000000000000000000000000000000000000000908590600401613a25565b600060405180830381600087803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b505043600d5550506040517f57a86f7d14ccde89e22870afe839e3011216827daa9b24e18629f0a1e9d6cc1490600090a15050565b6000610e8164e8d4a51000610820600a5468022b1c8c1227a000006128ec90919063ffffffff16565b905090565b610e8e612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610ee2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b8015610ef057610ef0611563565b6000610f07600d544361298990919063ffffffff16565b90506000610f1d610f16610e58565b83906128ec565b600254909150610f439073ffffffffffffffffffffffffffffffffffffffff1682612ab1565b505043600d5550565b60076020526000908152604090205460ff1681565b60026001541415610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b6002600155610fab612f30565b610fb48361123b565b6000848152600660209081526040808320338452909152902080549192509083111561100c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906134f6565b60006110183386610584565b905061102533868361280f565b831561107a5781546110379085612989565b826000018190555061107a33856005888154811061105157fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169190612ca2565b6110ae670de0b6b3a7640000610820856000015161082664e8d4a510006108208789600001546128ec90919063ffffffff16565b60018301556110f66110c964e8d4a5100061082087856128ec565b600487815481106110d657fe5b90600052602060002090600502016003015461298990919063ffffffff16565b6004868154811061110357fe5b906000526020600020906005020160030181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161115f9190613a0c565b60405180910390a3505060018055505050565b6040517fe2bbb15800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e2bbb15890611207907f000000000000000000000000000000000000000000000000000000000000000090600090600401613a25565b600060405180830381600087803b15801561122157600080fd5b505af1158015611235573d6000803e3d6000fd5b50505050565b611243612f30565b6004828154811061125057fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301849052600281015491830191909152600381015460608301526004015460ff1615156080820152915043111561140c57606081015160808201516000906112c2576009546112c6565b6008545b90506000821180156112d85750600081115b156113455760006112f684602001514361298990919063ffffffff16565b9050600061131d8361082087604001516108266113168a6080015161279f565b87906128ec565b90506113406113388561082084670de0b6b3a76400006128ec565b8651906129cb565b855250505b436020840152600480548491908690811061135c57fe5b6000918252602091829020835160059290920201908155828201516001820155604080840151600283015560608401516003830155608090930151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558401518451915186927f3be3541fc42237d611b30329040bfa4569541d156560acdbbae57640d20b8f46926114019290918791613a33565b60405180910390a250505b919050565b6002600154141561144e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b600260018190555060006004828154811061146557fe5b6000918252602080832085845260068252604080852033808752935284208054858255600182018690556005909402909101945092906114bb9064e8d4a5100090610820906114b49089610584565b85906128ec565b9050808460030154116114cf5760006114de565b60038401546114de9082612989565b84600301819055506114f833836005888154811061105157fe5b843373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958460405161115f9190613a0c565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045460005b818110156115f357611579612f30565b6004828154811061158657fe5b60009182526020918290206040805160a08101825260059093029091018054835260018101549383019390935260028301549082018190526003830154606083015260049092015460ff16151560808201529150156115ea576115e88261123b565b505b50600101611569565b5050565b6115ff612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b61165c8361123b565b50801561166b5761166b611563565b6004838154811061167857fe5b600091825260209091206004600590920201015460ff16156116d3576116cb82610872600486815481106116a857fe5b90600052602060002090600502016002015460085461298990919063ffffffff16565b60085561170e565b61170a82610872600486815481106116e757fe5b90600052602060002090600502016002015460095461298990919063ffffffff16565b6009555b816004848154811061171c57fe5b906000526020600020906005020160020181905550827fc0cfd54d2de2b55f1e6e108d3ec53ff0a1abe6055401d32c61e9433b747ef9f8836040516117619190613a0c565b60405180910390a2505050565b600a5481565b6501d1a94a200081565b600c5481565b61178c612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146117e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600d5481565b6005818154811061186257fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b611891612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146118e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6000841180156118f55750600083115b80156119015750600082115b611937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613291565b64e8d4a5100061194b8361087287876129cb565b14611982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906133df565b801561199057611990611563565b61199a6000610e86565b600a849055600b839055600c8290556040517f2882b55ee231404a42d7d813dad9cfe57d65e1992a6d165a6e29466a8d1b7499906119dd90869086908690613a33565b60405180910390a150505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b60095481565b611a5d612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611ab1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff811615801590611af1575060035473ffffffffffffffffffffffffffffffffffffffff828116911614155b611b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061385c565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f4c0c07d0b548b824a1b998eb4d11fccf1cfbc1e47edcdb309970ba88315eb30390600090a250565b611b9e612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611bf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff8216611c3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613973565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600760205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016841515179055517fc551bbb22d0406dbfb8b6b7740cc521bcf44e1106029cf899c19b6a8e4c99d5190611cbe908490613235565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60085481565b611cfc612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614611d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190611da59030906004016131bd565b60206040518083038186803b158015611dbd57600080fd5b505afa158015611dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df59190613085565b1015611e2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061352d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611eb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061376b565b8015611ec157611ec1611563565b8115611edc57600854611ed490856129cb565b600855611eed565b600954611ee990856129cb565b6009555b60058054600180820183557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091556040805160a081018252600080825243602083019081529282018a8152606083018281528915156080850190815260048054808a018255945293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9389029384015593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d82015591517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f90910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055915461208e91612989565b7f18caa0724a26384928efe604ae6ddc99c242548876259770fc88fcb7e719d8fa86856040516120bf929190613a15565b60405180910390a350505050565b60006120d7612f30565b600484815481106120e457fe5b60009182526020918290206040805160a0810182526005909302909101805483526001810154938301939093526002830154908201526003820154606082015260049091015460ff1615156080820152905061213e612f61565b50600084815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452825291829020825160608082018552825482526001830154828501526002909201549381019390935283519084015191840151909190431180156121ac57508015155b156122255760006121ca85602001514361298990919063ffffffff16565b905060006121fe86608001516121e2576009546121e6565b6008545b61082088604001516108266113168b6080015161279f565b90506122206122198461082084670de0b6b3a76400006128ec565b85906129cb565b935050505b600061224564e8d4a5100061082061223d8a8c610584565b8751906128ec565b602085015190915061226d90612267670de0b6b3a764000061082085886128ec565b90612989565b98975050505050505050565b64e8d4a5100081565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b600260015414156122db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613825565b60026001556122e8612f30565b6122f18361123b565b600084815260066020908152604080832033845290915290206080820151919250908061232d57503360009081526007602052604090205460ff165b612363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906135f6565b600061236f3386610584565b8254909150156123845761238433868361280f565b83156125805760006005868154811061239957fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a08231906123f89030906004016131bd565b60206040518083038186803b15801561241057600080fd5b505afa158015612424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124489190613085565b905061248733308760058a8154811061245d57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16929190612a0e565b612547816005888154811061249857fe5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a08231906124f79030906004016131bd565b60206040518083038186803b15801561250f57600080fd5b505afa158015612523573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122679190613085565b835490955061255690866129cb565b835561257961256e64e8d4a5100061082088866128ec565b6060860151906129cb565b6060850152505b6125b4670de0b6b3a7640000610820856000015161082664e8d4a510006108208789600001546128ec90919063ffffffff16565b826001018190555082600486815481106125ca57fe5b6000918252602091829020835160059290920201908155908201516001820155604080830151600283015560608301516003830155608090920151600490910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905551859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159061115f908890613a0c565b612671612a0a565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146126c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613564565b73ffffffffffffffffffffffffffffffffffffffff8116612712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9061334b565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081156127d5576127ce64e8d4a51000610820600b5468022b1c8c1227a000006128ec90919063ffffffff16565b905061140c565b6105d464e8d4a51000610820600c5468022b1c8c1227a000006128ec90919063ffffffff16565b600b5481565b68022b1c8c1227a0000081565b612817612f61565b50600082815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320815160608101835281548082526001830154948201949094526002909101549181019190915291906128849064e8d4a510009061082090866128ec565b905060006128bc670de0b6b3a7640000610820600488815481106128a457fe5b600091825260209091206005909102015485906128ec565b905060006128d784602001518361298990919063ffffffff16565b90506128e38782612ab1565b50505050505050565b6000826128fb575060006105d4565b8282028284828161290857fe5b04146105ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613499565b600061298283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cc1565b9392505050565b600061298283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d12565b6000828201838110156105ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906133a8565b3390565b611235846323b872dd60e01b858585604051602401612a2f939291906131de565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612d58565b80156115f3576040517f70a08231000000000000000000000000000000000000000000000000000000008152819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190612b2b9030906004016131bd565b60206040518083038186803b158015612b4357600080fd5b505afa158015612b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b7b9190613085565b1015612b8957612b89611172565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190612bfe9030906004016131bd565b60206040518083038186803b158015612c1657600080fd5b505afa158015612c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4e9190613085565b905081811015612c5c578091505b612c9d73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168484612ca2565b505050565b612c9d8363a9059cbb60e01b8484604051602401612a2f92919061320f565b60008183612cfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9190613240565b506000838581612d0857fe5b0495945050505050565b60008184841115612d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9190613240565b505050900390565b6060612dba826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612e0e9092919063ffffffff16565b805190915015612c9d5780806020019051810190612dd89190613051565b612c9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f906132ee565b6060612e1d8484600085612e25565b949350505050565b6060612e3085612f2a565b612e66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90613679565b600060608673ffffffffffffffffffffffffffffffffffffffff168587604051612e9091906131a1565b60006040518083038185875af1925050503d8060008114612ecd576040519150601f19603f3d011682016040523d82523d6000602084013e612ed2565b606091505b50915091508115612ee6579150612e1d9050565b805115612ef65780518082602001fd5b836040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f9190613240565b3b151590565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b60405180606001604052806000815260200160008152602001600081525090565b600060208284031215612f93578081fd5b81356105ce81613a9a565b60008060408385031215612fb0578081fd5b8235612fbb81613a9a565b91506020830135612fcb81613abf565b809150509250929050565b60008060408385031215612fe8578182fd5b8235612ff381613a9a565b946020939093013593505050565b600080600060608486031215613015578081fd5b833561302081613a9a565b95602085013595506040909401359392505050565b600060208284031215613046578081fd5b81356105ce81613abf565b600060208284031215613062578081fd5b81516105ce81613abf565b60006020828403121561307e578081fd5b5035919050565b600060208284031215613096578081fd5b5051919050565b600080604083850312156130af578182fd5b823591506020830135612fcb81613a9a565b600080600080608085870312156130d6578081fd5b8435935060208501356130e881613a9a565b925060408501356130f881613abf565b9150606085013561310881613abf565b939692955090935050565b60008060408385031215613125578182fd5b50508035926020909101359150565b600080600060608486031215613148578283fd5b8335925060208401359150604084013561316181613abf565b809150509250925092565b60008060008060808587031215613181578384fd5b843593506020850135925060408501359150606085013561310881613abf565b600082516131b3818460208701613a6e565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b600060208252825180602084015261325f816040850160208701613a6e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252602d908201527f734d6173746572436865663a20536864772072617465206d757374206265206760408201527f726561746572207468616e203000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526024908201527f734d6173746572436865663a20546f74616c2072617465206d7573742062652060408201527f3165313200000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f734d6173746572436865663a2042616c616e6365206d7573742065786365656460408201527f2030000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f77697468647261773a20496e73756666696369656e7400000000000000000000604082015260600190565b60208082526011908201527f4e6f6e6520424550323020746f6b656e73000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f737460408201527f20636f6e74726163740000000000000000000000000000000000000000000000606082015260800190565b60208082526041908201527f734d6173746572436865663a205468652061646472657373206973206e6f742060408201527f617661696c61626c6520746f206465706f73697420696e207468697320706f6f60608201527f6c00000000000000000000000000000000000000000000000000000000000000608082015260a00190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260409082018190527f734d6173746572436865663a204275726e2061646d696e206164647265737320908201527f6973207468652073616d6520776974682063757272656e742061646472657373606082015260800190565b60208082526029908201527f734d6173746572436865663a20496e76616c6964206e657720626f6f7374206d60408201527f756c7469706c6965720000000000000000000000000000000000000000000000606082015260800190565b60208082526027908201527f5348445720746f6b656e2063616e277420626520616464656420746f2066617260408201527f6d20706f6f6c7300000000000000000000000000000000000000000000000000606082015260800190565b6020808252602d908201527f734d6173746572436865663a204275726e2061646d696e20616464726573732060408201527f6d7573742062652076616c696400000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526035908201527f734d6173746572436865663a204e657720626f6f737420636f6e74726163742060408201527f61646472657373206d7573742062652076616c69640000000000000000000000606082015260800190565b6020808252602f908201527f734d6173746572436865663a204f6e6c7920726567756c6172206661726d206360408201527f6f756c6420626520626f6f737465640000000000000000000000000000000000606082015260800190565b6020808252602b908201527f734d6173746572436865663a2054686520757365722061646472657373206d7560408201527f73742062652076616c6964000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f734d6173746572436865663a20546865207768697465206c697374206164647260408201527f657373206d7573742062652076616c6964000000000000000000000000000000606082015260800190565b600060a0820190508251825260208301516020830152604083015160408301526060830151606083015260808301511515608083015292915050565b90815260200190565b9182521515602082015260400190565b918252602082015260400190565b9283526020830191909152604082015260600190565b9485526020850193909352604084019190915260608301521515608082015260a00190565b60005b83811015613a89578181015183820152602001613a71565b838111156112355750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114613abc57600080fd5b50565b8015158114613abc57600080fdfea2646970667358221220d18afb1e29210e815a91a31352105dfb52e75557f02218e839513c20d61f7f6d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x191 JUMPI DUP1 PUSH4 0xC40D337B GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xDFCEDEEE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF474309E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF474309E EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF5A26F40 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xF5B91CD3 EQ PUSH2 0x57C JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54E JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0xC799B59D GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC799B59D EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xCC6DB2DA EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xD2CE6AE8 EQ PUSH2 0x52B JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0xC40D337B EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xC507AEAA EQ PUSH2 0x505 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x9DD2FCC3 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x9DD2FCC3 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xAC1D0609 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xC3083016 EQ PUSH2 0x4F5 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x99D7E84A EQ PUSH2 0x4C7 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x78ED5D1F GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x78ED5D1F EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x815D087F EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x81BDF98C EQ PUSH2 0x495 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x78DB4C34 EQ PUSH2 0x467 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 GT PUSH2 0x24A JUMPI DUP1 PUSH4 0x61621AAA GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6661100F GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x6661100F EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x69B02128 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x6FDA08C3 EQ PUSH2 0x457 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x61621AAA EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x434 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x4F70B15A GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x4F70B15A EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x411 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x3D6 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x19AB453C GT PUSH2 0x286 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x19F95E2E EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x36183ED6 EQ PUSH2 0x3A3 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x16E80F4D EQ PUSH2 0x380 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x41A84C9 GT PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x41A84C9 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xBB844BC EQ PUSH2 0x349 JUMPI PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH4 0x33186E8 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3DCFF74 EQ PUSH2 0x317 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x301 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD6 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH2 0x33F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x3001 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0x976 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST PUSH2 0x36F PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A49 JUMP JUMPDEST PUSH2 0x301 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x301 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3035 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x404 PUSH2 0x3FF CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x39D0 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x33F PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x3134 JUMP JUMPDEST PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x301 PUSH2 0x1774 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x33F PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x31F PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x316C JUMP JUMPDEST PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x31F PUSH2 0x1A07 JUMP JUMPDEST PUSH2 0x4B8 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x309D JUMP JUMPDEST PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x33F PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x301 PUSH2 0x1CEE JUMP JUMPDEST PUSH2 0x33F PUSH2 0x513 CALLDATASIZE PUSH1 0x4 PUSH2 0x30C1 JUMP JUMPDEST PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0x309D JUMP JUMPDEST PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x2282 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST PUSH2 0x33F PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x2669 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x3035 JUMP JUMPDEST PUSH2 0x279F JUMP JUMPDEST PUSH2 0x301 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x5CE JUMPI PUSH5 0xE8D4A51000 PUSH2 0x5D0 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3916 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6F4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x38B9 JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI POP PUSH6 0x1D1A94A2000 DUP2 GT ISZERO JUMPDEST PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH2 0x79A PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x7A3 DUP4 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x7DF DUP7 DUP7 PUSH2 0x584 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EC DUP7 DUP7 DUP4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x82C PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x826 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP11 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2940 JUMP JUMPDEST SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP2 SLOAD PUSH2 0x878 SWAP1 PUSH2 0x84C SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 DUP9 PUSH2 0x28EC JUMP JUMPDEST DUP4 SLOAD PUSH2 0x872 SWAP1 PUSH2 0x867 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 DUP8 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD SWAP1 PUSH2 0x2989 JUMP JUMPDEST SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x88E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 SWAP1 SWAP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP9 DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP2 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP1 DUP6 MSTORE SWAP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP7 SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA SWAP1 PUSH2 0x962 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP10 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x984 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x36B0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xD146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0xB46 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBEF SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x343C JUMP JUMPDEST PUSH2 0xC9A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0xD0E SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x320F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD60 SWAP2 SWAP1 PUSH2 0x3051 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xE2BBB15800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH2 0xDF5 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3A25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP NUMBER PUSH1 0xD SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH1 0xA SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE8E PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF0 JUMPI PUSH2 0xEF0 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF07 PUSH1 0xD SLOAD NUMBER PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF1D PUSH2 0xF16 PUSH2 0xE58 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0xF43 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x2AB1 JUMP JUMPDEST POP POP NUMBER PUSH1 0xD SSTORE POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xFAB PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0xFB4 DUP4 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP4 GT ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x34F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 CALLER DUP7 PUSH2 0x584 JUMP JUMPDEST SWAP1 POP PUSH2 0x1025 CALLER DUP7 DUP4 PUSH2 0x280F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x107A JUMPI DUP2 SLOAD PUSH2 0x1037 SWAP1 DUP6 PUSH2 0x2989 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x107A CALLER DUP6 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1051 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH2 0x10AE PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x826 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x10F6 PUSH2 0x10C9 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP8 DUP6 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x10D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1103 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE2BBB15800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH2 0x1207 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x3A25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1243 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1250 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP NUMBER GT ISZERO PUSH2 0x140C JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0x12C2 JUMPI PUSH1 0x9 SLOAD PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x12D8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 PUSH2 0x12F6 DUP5 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x131D DUP4 PUSH2 0x820 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x826 PUSH2 0x1316 DUP11 PUSH1 0x80 ADD MLOAD PUSH2 0x279F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1340 PUSH2 0x1338 DUP6 PUSH2 0x820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x28EC JUMP JUMPDEST DUP7 MLOAD SWAP1 PUSH2 0x29CB JUMP JUMPDEST DUP6 MSTORE POP POP JUMPDEST NUMBER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x135C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE DUP3 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 ADD MLOAD DUP5 MLOAD SWAP2 MLOAD DUP7 SWAP3 PUSH32 0x3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46 SWAP3 PUSH2 0x1401 SWAP3 SWAP1 SWAP2 DUP8 SWAP2 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1465 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD SWAP5 POP SWAP3 SWAP1 PUSH2 0x14BB SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 PUSH2 0x14B4 SWAP1 DUP10 PUSH2 0x584 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x3 ADD SLOAD GT PUSH2 0x14CF JUMPI PUSH1 0x0 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x14DE SWAP1 DUP3 PUSH2 0x2989 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x14F8 CALLER DUP4 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1051 JUMPI INVALID JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP5 PUSH1 0x40 MLOAD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x1579 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1586 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP ISZERO PUSH2 0x15EA JUMPI PUSH2 0x15E8 DUP3 PUSH2 0x123B JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1569 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15FF PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH2 0x165C DUP4 PUSH2 0x123B JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x166B JUMPI PUSH2 0x166B PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1678 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16CB DUP3 PUSH2 0x872 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x16A8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x170E JUMP JUMPDEST PUSH2 0x170A DUP3 PUSH2 0x872 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x16E7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x171C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0xC0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1761 SWAP2 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH6 0x1D1A94A2000 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x178C PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x17E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1862 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1891 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x18E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x18F5 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1901 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3291 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x194B DUP4 PUSH2 0x872 DUP8 DUP8 PUSH2 0x29CB JUMP JUMPDEST EQ PUSH2 0x1982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x33DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1990 JUMPI PUSH2 0x1990 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x199A PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2882B55EE231404A42D7D813DAD9CFE57D65E1992A6D165A6E29466A8D1B7499 SWAP1 PUSH2 0x19DD SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A5D PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1AF1 JUMPI POP PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1B27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1B9E PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1BF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1C3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3973 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xC551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51 SWAP1 PUSH2 0x1CBE SWAP1 DUP5 SWAP1 PUSH2 0x3235 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CFC PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1D50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1DA5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF5 SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST LT ISZERO PUSH2 0x1E2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x352D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x376B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EC1 JUMPI PUSH2 0x1EC1 PUSH2 0x1563 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1EDC JUMPI PUSH1 0x8 SLOAD PUSH2 0x1ED4 SWAP1 DUP6 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EE9 SWAP1 DUP6 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE NUMBER PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP3 DUP2 MSTORE DUP10 ISZERO ISZERO PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 SLOAD DUP1 DUP11 ADD DUP3 SSTORE SWAP5 MSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 DUP10 MUL SWAP4 DUP5 ADD SSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19D DUP3 ADD SSTORE SWAP2 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19E DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19F SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 SLOAD PUSH2 0x208E SWAP2 PUSH2 0x2989 JUMP JUMPDEST PUSH32 0x18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20BF SWAP3 SWAP2 SWAP1 PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x20E4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x213E PUSH2 0x2F61 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 MLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD SWAP1 SWAP2 SWAP1 NUMBER GT DUP1 ISZERO PUSH2 0x21AC JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2225 JUMPI PUSH1 0x0 PUSH2 0x21CA DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21FE DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0x21E2 JUMPI PUSH1 0x9 SLOAD PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH2 0x820 DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x826 PUSH2 0x1316 DUP12 PUSH1 0x80 ADD MLOAD PUSH2 0x279F JUMP JUMPDEST SWAP1 POP PUSH2 0x2220 PUSH2 0x2219 DUP5 PUSH2 0x820 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x28EC JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x29CB JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x2245 PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH2 0x223D DUP11 DUP13 PUSH2 0x584 JUMP JUMPDEST DUP8 MLOAD SWAP1 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x226D SWAP1 PUSH2 0x2267 PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 DUP9 PUSH2 0x28EC JUMP JUMPDEST SWAP1 PUSH2 0x2989 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x22DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3825 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x22E8 PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x22F1 DUP4 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x80 DUP3 ADD MLOAD SWAP2 SWAP3 POP SWAP1 DUP1 PUSH2 0x232D JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x2363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x35F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236F CALLER DUP7 PUSH2 0x584 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2384 JUMPI PUSH2 0x2384 CALLER DUP7 DUP4 PUSH2 0x280F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x2580 JUMPI PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2399 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x23F8 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2424 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2448 SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST SWAP1 POP PUSH2 0x2487 CALLER ADDRESS DUP8 PUSH1 0x5 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 SWAP1 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0x2547 DUP2 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x2498 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x24F7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x250F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2523 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2267 SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP6 POP PUSH2 0x2556 SWAP1 DUP7 PUSH2 0x29CB JUMP JUMPDEST DUP4 SSTORE PUSH2 0x2579 PUSH2 0x256E PUSH5 0xE8D4A51000 PUSH2 0x820 DUP9 DUP7 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 PUSH2 0x29CB JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP JUMPDEST PUSH2 0x25B4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x826 PUSH5 0xE8D4A51000 PUSH2 0x820 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x25CA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x115F SWAP1 DUP9 SWAP1 PUSH2 0x3A0C JUMP JUMPDEST PUSH2 0x2671 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x26C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x27D5 JUMPI PUSH2 0x27CE PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH1 0xB SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x140C JUMP JUMPDEST PUSH2 0x5D4 PUSH5 0xE8D4A51000 PUSH2 0x820 PUSH1 0xC SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x28EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH9 0x22B1C8C1227A00000 DUP2 JUMP JUMPDEST PUSH2 0x2817 PUSH2 0x2F61 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH2 0x2884 SWAP1 PUSH5 0xE8D4A51000 SWAP1 PUSH2 0x820 SWAP1 DUP7 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28BC PUSH8 0xDE0B6B3A7640000 PUSH2 0x820 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x28A4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP6 SWAP1 PUSH2 0x28EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28D7 DUP5 PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x2989 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x28E3 DUP8 DUP3 PUSH2 0x2AB1 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28FB JUMPI POP PUSH1 0x0 PUSH2 0x5D4 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2908 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2982 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2CC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2982 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x33A8 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1235 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2D58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2B2B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B7B SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST LT ISZERO PUSH2 0x2B89 JUMPI PUSH2 0x2B89 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2BFE SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4E SWAP2 SWAP1 PUSH2 0x3085 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2C5C JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x2C9D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP5 DUP5 PUSH2 0x2CA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2C9D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A2F SWAP3 SWAP2 SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2CFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2D08 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2D50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DBA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E0E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2C9D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2DD8 SWAP2 SWAP1 PUSH2 0x3051 JUMP JUMPDEST PUSH2 0x2C9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E1D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2E25 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E30 DUP6 PUSH2 0x2F2A JUMP JUMPDEST PUSH2 0x2E66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3679 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E90 SWAP2 SWAP1 PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2ECD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2EE6 JUMPI SWAP2 POP PUSH2 0x2E1D SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2EF6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F93 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5CE DUP2 PUSH2 0x3A9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FB0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FBB DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2FCB DUP2 PUSH2 0x3ABF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FF3 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3015 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3020 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3046 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5CE DUP2 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3062 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5CE DUP2 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x307E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3096 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30AF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2FCB DUP2 PUSH2 0x3A9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x30D6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x30E8 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x30F8 DUP2 PUSH2 0x3ABF JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3108 DUP2 PUSH2 0x3ABF JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3125 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3148 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3161 DUP2 PUSH2 0x3ABF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3181 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x3108 DUP2 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x31B3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3A6E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x325F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20536864772072617465206D7573742062652067 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E203000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20546F74616C2072617465206D75737420626520 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3165313200000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A2042616C616E6365206D75737420657863656564 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x77697468647261773A20496E73756666696369656E7400000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F6E6520424550323020746F6B656E73000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20636F6E74726163740000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A205468652061646472657373206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x617661696C61626C6520746F206465706F73697420696E207468697320706F6F PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x734D6173746572436865663A204275726E2061646D696E206164647265737320 SWAP1 DUP3 ADD MSTORE PUSH32 0x6973207468652073616D6520776974682063757272656E742061646472657373 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20496E76616C6964206E657720626F6F7374206D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x756C7469706C6965720000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x5348445720746F6B656E2063616E277420626520616464656420746F20666172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D20706F6F6C7300000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A204275726E2061646D696E206164647265737320 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D7573742062652076616C696400000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A204E657720626F6F737420636F6E747261637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x61646472657373206D7573742062652076616C69640000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A204F6E6C7920726567756C6172206661726D2063 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6F756C6420626520626F6F737465640000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A2054686520757365722061646472657373206D75 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73742062652076616C6964000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x734D6173746572436865663A20546865207768697465206C6973742061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x657373206D7573742062652076616C6964000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A89 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A71 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1235 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3ABC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP11 0xFB 0x1E 0x29 0x21 0xE DUP2 GAS SWAP2 LOG3 SGT MSTORE LT 0x5D 0xFB MSTORE 0xE7 SSTORE JUMPI CREATE 0x22 XOR 0xE8 CODECOPY MLOAD EXTCODECOPY KECCAK256 0xD6 0x1F PUSH32 0x6D64736F6C634300060C00330000000000000000000000000000000000000000 ",
							"sourceMap": "25023:23334:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46703:241;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27296:28;;;:::i;:::-;;;;;;;:::i;45263:1293::-;;;;;;:::i;:::-;;:::i;:::-;;32017:100;;;:::i;43665:398::-;;;;;;:::i;:::-;;:::i;27564:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;28456:49::-;;;:::i;31448:510::-;;;;;;:::i;:::-;;:::i;36937:171::-;;;:::i;41878:401::-;;;;;;:::i;:::-;;:::i;27883:41::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;39822:904::-;;;;;;:::i;:::-;;:::i;40818:91::-;;;:::i;37291:949::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;41050:690::-;;;;;;:::i;:::-;;:::i;27999:35::-;;;:::i;36054:291::-;;;:::i;34082:730::-;;;;;;:::i;:::-;;:::i;29045:44::-;;;:::i;28734:56::-;;;:::i;29263:51::-;;;:::i;2698:148::-;;;:::i;29323:30::-;;;:::i;27658:23::-;;;;;;:::i;:::-;;:::i;42664:895::-;;;;;;:::i;:::-;;:::i;27399:24::-;;;:::i;2056:79::-;;;:::i;27731:64::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;28299:37::-;;;:::i;44665:366::-;;;;;;:::i;:::-;;:::i;44241:262::-;;;;;;:::i;:::-;;:::i;27208:38::-;;;:::i;28148:37::-;;;:::i;32666:1110::-;;;;;;:::i;:::-;;:::i;34986:970::-;;;;;;:::i;:::-;;:::i;28584:52::-;;;:::i;27486:28::-;;;:::i;38405:1248::-;;;;;;:::i;:::-;;:::i;3001:244::-;;;;;;:::i;:::-;;:::i;36495:354::-;;;;;;:::i;:::-;;:::i;29153:50::-;;;:::i;28388:61::-;;;:::i;46703:241::-;46781:7;46822:14;;;:8;:14;;;;;;;;:21;;;;;;;;;;:37;;;28626:10;46877:28;;:59;;28626:10;46877:59;;;46908:10;46877:59;46870:66;;;46703:241;;;;;:::o;27296:28::-;;;:::o;45263:1293::-;30951:13;;:27;:13;30968:10;30951:27;30943:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10252:1:::1;10858:7;;:19;;10850:63;;;;;;;;;;;;:::i;:::-;10252:1;10991:7;:18:::0;45440:19:::2;::::0;::::2;45432:75;;;;;;;;;;;;:::i;:::-;45526:8;45535:4;45526:14;;;;;;;;;::::0;;;::::2;::::0;;;:24:::2;:14;::::0;;::::2;;:24;::::0;::::2;;45518:84;;;;;;;;;;;;:::i;:::-;28626:10;45635:14;:33;;:74;;;;;28780:10;45672:14;:37;;45635:74;45613:165;;;;;;;;;;;;:::i;:::-;45791:20;;:::i;:::-;45814:16;45825:4;45814:10;:16::i;:::-;45841:21;45865:14:::0;;;:8:::2;:14;::::0;;;;;;;:21:::2;::::0;::::2;::::0;;;;;;;45791:39;;-1:-1:-1;45924:31:0::2;45880:5:::0;45874:4;45924:18:::2;:31::i;:::-;45899:56;;45966:46;45984:5;45991:4;45997:14;45966:17;:46::i;:::-;46043:126;28501:4;46043:78;46100:4;:20;;;46043:52;28626:10;46043:31;46059:14;46043:4;:11;;;:15;;:31;;;;:::i;:::-;:35:::0;::::2;:52::i;:::-;:56:::0;::::2;:78::i;:126::-;46025:15;::::0;::::2;:144:::0;46304:11;;46205:162:::2;::::0;46304:52:::2;::::0;28626:10:::2;::::0;46304:31:::2;::::0;46320:14;46304:15:::2;:31::i;:52::-;46232:11:::0;;46205:80:::2;::::0;46232:52:::2;::::0;28626:10:::2;::::0;46232:31:::2;::::0;46248:14;46232:15:::2;:31::i;:52::-;46205:22;::::0;::::2;::::0;;:26:::2;:80::i;:::-;:84:::0;::::2;:162::i;:::-;46180:22;::::0;::::2;:187:::0;46378:8:::2;:14:::0;;46180:4;;46378:8;46387:4;;46378:14;::::2;;;;;;::::0;;;::::2;::::0;;;:21;;:14:::2;::::0;;;::::2;;:21:::0;;;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;;::::0;;;::::2;::::0;;;46410:14;;;:8:::2;:14:::0;;;;;:21:::2;::::0;::::2;::::0;;;;;;;;;:37;;::::2;:54:::0;;;46482:66;;::::2;::::0;::::2;::::0;46410:14;;46517;;46410:54;;46482:66:::2;:::i;:::-;;;;;;;;-1:-1:-1::0;;10208:1:0::1;11170:22:::0;;-1:-1:-1;;;;45263:1293:0:o;32017:100::-;32094:8;:15;;32017:100::o;43665:398::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;43747:23:::1;::::0;::::1;43739:81;;;;;;;;;;;;:::i;:::-;43852:9;::::0;::::1;43839:22:::0;;::::1;43852:9:::0;::::1;43839:22;;43831:99;;;;;;;;;;;;:::i;:::-;43961:9;::::0;;::::1;43981:21:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;44018:37:::1;::::0;43961:9;::::1;::::0;43981:21;43961:9;;44018:37:::1;::::0;43941:17:::1;::::0;44018:37:::1;2338:1;43665:398:::0;:::o;27564:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27564:26:0;;;;;;;:::o;28456:49::-;28501:4;28456:49;:::o;31448:510::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;31529:32:::1;::::0;;;;31511:15:::1;::::0;31529:20:::1;::::0;::::1;::::0;::::1;::::0;:32:::1;::::0;31550:10:::1;::::0;31529:32:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31511:50:::0;-1:-1:-1;31580:12:0;31572:59:::1;;;;;;;;;;;;:::i;:::-;31642:63;:27;::::0;::::1;31670:10;31690:4;31697:7:::0;31642:27:::1;:63::i;:::-;31716:47;::::0;;;;:18:::1;::::0;::::1;::::0;::::1;::::0;:47:::1;::::0;31743:9:::1;::::0;31755:7;;31716:47:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;31774:38:0::1;::::0;;;;:17:::1;:9;:17;::::0;::::1;::::0;:38:::1;::::0;31792:10:::1;::::0;31804:7;;31774:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;31916:12:0::1;31898:15;:30:::0;-1:-1:-1;;31944:6:0::1;::::0;::::1;::::0;;;::::1;2338:1;31448:510:::0;:::o;36937:171::-;36988:14;37024:76;28915:4;37024:45;37054:14;;28440:9;37024:29;;:45;;;;:::i;:76::-;37015:85;;36937:171;:::o;41878:401::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;41946:11:::1;41942:61;;;41974:17;:15;:17::i;:::-;42015:18;42036:33;42053:15;;42036:12;:16;;:33;;;;:::i;:::-;42015:54;;42080:25;42108:36;42123:20;:18;:20::i;:::-;42108:10:::0;;:14:::1;:36::i;:::-;42201:9;::::0;42080:64;;-1:-1:-1;42187:43:0::1;::::0;42201:9:::1;;42080:64:::0;42187:13:::1;:43::i;:::-;-1:-1:-1::0;;42259:12:0::1;42241:15;:30:::0;-1:-1:-1;41878:401:0:o;27883:41::-;;;;;;;;;;;;;;;:::o;39822:904::-;10252:1;10858:7;;:19;;10850:63;;;;;;;;;;;;:::i;:::-;10252:1;10991:7;:18;39904:20:::1;;:::i;:::-;39927:16;39938:4;39927:10;:16::i;:::-;39954:21;39978:14:::0;;;:8:::1;:14;::::0;;;;;;;39993:10:::1;39978:26:::0;;;;;;;40025:11;;39904:39;;-1:-1:-1;39978:26:0;40025:22;-1:-1:-1;40025:22:0::1;40017:57;;;;;;;;;;;;:::i;:::-;40087:18;40108:36;40127:10;40139:4;40108:18;:36::i;:::-;40087:57;;40157:47;40175:10;40187:4;40193:10;40157:17;:47::i;:::-;40221:11:::0;;40217:144:::1;;40263:11:::0;;:24:::1;::::0;40279:7;40263:15:::1;:24::i;:::-;40249:4;:11;;:38;;;;40302:47;40329:10;40341:7;40302;40310:4;40302:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;;::::0;:47;:26:::1;:47::i;:::-;40391:122;28501:4;40391:74;40444:4;:20;;;40391:48;28626:10;40391:27;40407:10;40391:4;:11;;;:15;;:27;;;;:::i;:122::-;40373:15;::::0;::::1;:140:::0;40559:106:::1;40610:44;28626:10;40610:23;:7:::0;40622:10;40610:11:::1;:23::i;:44::-;40559:8;40568:4;40559:14;;;;;;;;;;;;;;;;;;:32;;;:36;;:106;;;;:::i;:::-;40524:8;40533:4;40524:14;;;;;;;;;;;;;;;;;;:32;;:141;;;;40704:4;40692:10;40683:35;;;40710:7;40683:35;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;10208:1:0;11170:22;;-1:-1:-1;;;39822:904:0:o;40818:91::-;40869:32;;;;;:17;:9;:17;;;;:32;;40887:10;;40899:1;;40869:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40818:91::o;37291:949::-;37341:20;;:::i;:::-;37381:8;37390:4;37381:14;;;;;;;;;;;;;;;;;37374:21;;;;;;;;37381:14;;;;;;;37374:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37410:12:0;:35;37406:827;;;37481:22;;;;37545:14;;;;37462:16;;37545:64;;37587:22;;37545:64;;;37562:22;;37545:64;37518:92;;37642:1;37631:8;:12;:35;;;;;37665:1;37647:15;:19;37631:35;37627:419;;;37687:18;37708:38;37725:4;:20;;;37708:12;:16;;:38;;;;:::i;:::-;37687:59;;37765:18;37786:126;37878:15;37786:65;37835:4;:15;;;37786:44;37801:28;37814:4;:14;;;37801:12;:28::i;:::-;37786:10;;:14;:44::i;:126::-;37765:147;-1:-1:-1;37954:76:0;37980:48;38019:8;37980:34;37765:147;28501:4;37980:14;:34::i;:48::-;37954:20;;;:24;:76::i;:::-;37931:99;;-1:-1:-1;;37627:419:0;38083:12;38060:20;;;:35;38110:8;:14;;38060:4;;38110:8;38119:4;;38110:14;;;;;;;;;;;;;;;:21;;:14;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38168:20;;;38200;;38151:70;;38162:4;;38151:70;;;;38168:20;;38190:8;;38151:70;:::i;:::-;;;;;;;;37406:827;;;37291:949;;;:::o;41050:690::-;10252:1;10858:7;;:19;;10850:63;;;;;;;;;;;;:::i;:::-;10252:1;10991:7;:18;;;;41124:21:::1;41148:8;41157:4;41148:14;;;;;;;;;::::0;;;::::1;::::0;;;41197;;;:8:::1;:14:::0;;;;;;41212:10:::1;41197:26:::0;;;;;;;41253:11;;41275:15;;;-1:-1:-1;41301:15:0;::::1;:19:::0;;;41148:14:::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;41197:26:0;41148:14;41355:69:::1;::::0;28626:10:::1;::::0;41355:48:::1;::::0;41366:36:::1;::::0;41206:4;41366:18:::1;:36::i;:::-;41355:6:::0;;:10:::1;:48::i;:69::-;41331:93;;41485:13;41460:4;:22;;;:38;:86;;41545:1;41460:86;;;41501:22;::::0;::::1;::::0;:41:::1;::::0;41528:13;41501:26:::1;:41::i;:::-;41435:4;:22;;:111;;;;41627:46;41654:10;41666:6;41627:7;41635:4;41627:13;;;;;;;:46;41719:4;41707:10;41689:43;;;41725:6;41689:43;;;;;;:::i;27999:35::-:0;;;:::o;36054:291::-;36116:8;:15;36099:14;36142:196;36170:6;36164:3;:12;36142:196;;;36200:20;;:::i;:::-;36223:8;36232:3;36223:13;;;;;;;;;;;;;;;;;36200:36;;;;;;;;36223:13;;;;;;;36200:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36255:20:0;36251:76;;36296:15;36307:3;36296:10;:15::i;:::-;;36251:76;-1:-1:-1;36178:5:0;;36142:196;;;;36054:291;:::o;34082:730::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;34331:16:::1;34342:4;34331:10;:16::i;:::-;;34364:11;34360:61;;;34392:17;:15;:17::i;:::-;34437:8;34446:4;34437:14;;;;;;;;;::::0;;;::::1;::::0;;;:24:::1;:14;::::0;;::::1;;:24;::::0;::::1;;34433:280;;;34503:70;34561:11;34503:53;34530:8;34539:4;34530:14;;;;;;;;;;;;;;;;;;:25;;;34503:22;;:26;;:53;;;;:::i;:70::-;34478:22;:95:::0;34433:280:::1;;;34631:70;34689:11;34631:53;34658:8;34667:4;34658:14;;;;;;;;;;;;;;;;;;:25;;;34631:22;;:26;;:53;;;;:::i;:70::-;34606:22;:95:::0;34433:280:::1;34751:11;34723:8;34732:4;34723:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;34786:4;34778:26;34792:11;34778:26;;;;;;:::i;:::-;;;;;;;;34082:730:::0;;;:::o;29045:44::-;;;;:::o;28734:56::-;28780:10;28734:56;:::o;29263:51::-;;;;:::o;2698:148::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;2805:1:::1;2789:6:::0;;2768:40:::1;::::0;::::1;2789:6:::0;;::::1;::::0;2768:40:::1;::::0;2805:1;;2768:40:::1;2836:1;2819:19:::0;;;::::1;::::0;;2698:148::o;29323:30::-;;;;:::o;27658:23::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27658:23:0;:::o;42664:895::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;42884:1:::1;42872:9;:13;:37;;;;;42908:1;42889:16;:20;42872:37;:61;;;;;42932:1;42913:16;:20;42872:61;42850:156;;;;;;;;;;;;:::i;:::-;28915:4;43039:53;43075:16:::0;43039:31:::1;:9:::0;43053:16;43039:13:::1;:31::i;:53::-;:82;43017:168;;;;;;;;;;;;:::i;:::-;43200:11;43196:61;;;43228:17;:15;:17::i;:::-;43316:15;43325:5;43316:8;:15::i;:::-;43344:14;:26:::0;;;43381:21:::1;:40:::0;;;43432:21:::1;:40:::0;;;43490:61:::1;::::0;::::1;::::0;::::1;::::0;43361:9;;43405:16;;43456;;43490:61:::1;:::i;:::-;;;;;;;;42664:895:::0;;;;:::o;27399:24::-;;;;;;:::o;2056:79::-;2094:7;2121:6;;;2056:79;:::o;27731:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;28299:37::-;;;;:::o;44665:366::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;44773:31:::1;::::0;::::1;::::0;;::::1;::::0;:69:::1;;-1:-1:-1::0;44829:13:0::1;::::0;::::1;44808:34:::0;;::::1;44829:13:::0;::::1;44808:34;;44773:69;44751:172;;;;;;;;;;;;:::i;:::-;44936:13;:33:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;44985:38:::1;::::0;::::1;::::0;-1:-1:-1;;44985:38:0::1;44665:366:::0;:::o;44241:262::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;44334:19:::1;::::0;::::1;44326:81;;;;;;;;;;;;:::i;:::-;44420:16;::::0;::::1;;::::0;;;:9:::1;:16;::::0;;;;;;:27;;;::::1;::::0;::::1;;;::::0;;44463:32;::::1;::::0;::::1;::::0;44420:27;;44463:32:::1;:::i;:::-;;;;;;;;44241:262:::0;;:::o;27208:38::-;;;:::o;28148:37::-;;;;:::o;32666:1110::-;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;32833:33:::1;::::0;;;;32870:1:::1;::::0;32833:18:::1;::::0;::::1;::::0;::::1;::::0;:33:::1;::::0;32860:4:::1;::::0;32833:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;32825:68;;;;;;;;;;;;:::i;:::-;33078:4;33066:16;;:8;:16;;;;33058:68;;;;;;;;;;;;:::i;:::-;33143:11;33139:61;;;33171:17;:15;:17::i;:::-;33216:10;33212:204;;;33268:22;::::0;:39:::1;::::0;33295:11;33268:26:::1;:39::i;:::-;33243:22;:64:::0;33212:204:::1;;;33365:22;::::0;:39:::1;::::0;33392:11;33365:26:::1;:39::i;:::-;33340:22;:64:::0;33212:204:::1;33426:7;:22:::0;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;33489:187:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;33489:187:0;;;33560:12:::1;33426:22;33489:187:::0;::::1;::::0;;;;;;;;;;;;;;;;::::1;;::::0;;;;;;33461:8:::1;:226:::0;;;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;33711:14;;:21:::1;::::0;:18:::1;:21::i;:::-;33703:65;33734:11;33757:10;33703:65;;;;;;;:::i;:::-;;;;;;;;32666:1110:::0;;;;:::o;34986:970::-;35059:7;35079:20;;:::i;:::-;35102:8;35111:4;35102:14;;;;;;;;;;;;;;;;;35079:37;;;;;;;;35102:14;;;;;;;35079:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35127:20:0;;:::i;:::-;-1:-1:-1;35150:14:0;;;;:8;:14;;;;;;;;:21;;;;;;;;;;;35127:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35208:20;;35258:22;;;;35312:20;;;;35208;;35258:22;35297:12;:35;:52;;;;-1:-1:-1;35336:13:0;;;35297:52;35293:453;;;35366:18;35387:38;35404:4;:20;;;35387:12;:16;;:38;;;;:::i;:::-;35366:59;;35442:18;35463:169;35552:4;:14;;;:64;;35594:22;;35552:64;;;35569:22;;35552:64;35463:65;35512:4;:15;;;35463:44;35478:28;35491:4;:14;;;35478:12;:28::i;35463:169::-;35442:190;-1:-1:-1;35665:69:0;35685:48;35724:8;35685:34;35442:190;28501:4;35685:14;:34::i;:48::-;35665:15;;:19;:69::i;:::-;35647:87;;35293:453;;;35758:21;35782:69;28626:10;35782:48;35798:31;35817:5;35824:4;35798:18;:31::i;:::-;35782:11;;;:15;:48::i;:69::-;35932:15;;;;35758:93;;-1:-1:-1;35869:79:0;;:58;28501:4;35869:34;35758:93;35887:15;35869:17;:34::i;:58::-;:62;;:79::i;:::-;35862:86;34986:970;-1:-1:-1;;;;;;;;34986:970:0:o;28584:52::-;28626:10;28584:52;:::o;27486:28::-;;;;;;:::o;38405:1248::-;10252:1;10858:7;;:19;;10850:63;;;;;;;;;;;;:::i;:::-;10252:1;10991:7;:18;38486:20:::1;;:::i;:::-;38509:16;38520:4;38509:10;:16::i;:::-;38536:21;38560:14:::0;;;:8:::1;:14;::::0;;;;;;;38575:10:::1;38560:26:::0;;;;;;;38621:14:::1;::::0;::::1;::::0;38486:39;;-1:-1:-1;38560:26:0;38621:14;:39:::1;;-1:-1:-1::0;38649:10:0::1;38639:21;::::0;;;:9:::1;:21;::::0;;;;;::::1;;38621:39;38599:154;;;;;;;;;;;;:::i;:::-;38766:18;38787:36;38806:10;38818:4;38787:18;:36::i;:::-;38840:11:::0;;38766:57;;-1:-1:-1;38840:15:0;38836:95:::1;;38872:47;38890:10;38902:4;38908:10;38872:17;:47::i;:::-;38947:11:::0;;38943:466:::1;;38975:14;38992:7;39000:4;38992:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;:38:::1;::::0;;;;:13:::1;::::0;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;39024:4:::1;::::0;38992:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38975:55;;39045:66;39076:10;39096:4;39103:7;39045;39053:4;39045:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;;::::0;:66;;:30:::1;:66::i;:::-;39136:50;39179:6;39136:7;39144:4;39136:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;:38:::1;::::0;;;;:13:::1;::::0;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;39168:4:::1;::::0;39136:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:50::-;39215:11:::0;;39126:60;;-1:-1:-1;39215:24:0::1;::::0;39126:60;39215:15:::1;:24::i;:::-;39201:38:::0;;39325:72:::1;39352:44;28626:10;39352:23;:7:::0;39364:10;39352:11:::1;:23::i;:44::-;39325:22;::::0;::::1;::::0;;:26:::1;:72::i;:::-;39300:22;::::0;::::1;:97:::0;-1:-1:-1;38943:466:0::1;39439:122;28501:4;39439:74;39492:4;:20;;;39439:48;28626:10;39439:27;39455:10;39439:4;:11;;;:15;;:27;;;;:::i;:122::-;39421:4;:15;;:140;;;;39589:4;39572:8;39581:4;39572:14;;;;;;;;;::::0;;;::::1;::::0;;;;:21;;:14:::1;::::0;;;::::1;;:21:::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;39611:34;39631:4;;39619:10:::1;::::0;39611:34:::1;::::0;::::1;::::0;39637:7;;39611:34:::1;:::i;3001:244::-:0;2278:12;:10;:12::i;:::-;2268:6;;:22;:6;;;:22;;;2260:67;;;;;;;;;;;;:::i;:::-;3090:22:::1;::::0;::::1;3082:73;;;;;;;;;;;;:::i;:::-;3192:6;::::0;;3171:38:::1;::::0;::::1;::::0;;::::1;::::0;3192:6;::::1;::::0;3171:38:::1;::::0;::::1;3220:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3001:244::o;36495:354::-;36555:14;36586:10;36582:260;;;36622:83;28915:4;36622:52;36652:21;;28440:9;36622:29;;:52;;;;:::i;:83::-;36613:92;;36582:260;;;36747:83;28915:4;36747:52;36777:21;;28440:9;36747:29;;:52;;;;:::i;29153:50::-;;;;:::o;28388:61::-;28440:9;28388:61;:::o;47205:508::-;47341:20;;:::i;:::-;-1:-1:-1;47364:14:0;;;;:8;:14;;;;;;;;:21;;;;;;;;;;47341:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47364:14;47422:54;;28626:10;;47422:33;;47438:16;47422:15;:33::i;:54::-;47398:78;;47487:15;47505:73;28501:4;47505:49;47523:8;47532:4;47523:14;;;;;;;;;;;;;;;;;;;;;:30;47505:13;;:17;:49::i;:73::-;47487:91;;47589:15;47607:28;47619:4;:15;;;47607:7;:11;;:28;;;;:::i;:::-;47589:46;;47676:29;47690:5;47697:7;47676:13;:29::i;:::-;47205:508;;;;;;;:::o;5475:471::-;5533:7;5778:6;5774:47;;-1:-1:-1;5808:1:0;5801:8;;5774:47;5845:5;;;5849:1;5845;:5;:1;5869:5;;;;;:10;5861:56;;;;;;;;;;;;:::i;6422:132::-;6480:7;6507:39;6511:1;6514;6507:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;6500:46;6422:132;-1:-1:-1;;;6422:132:0:o;4585:136::-;4643:7;4670:43;4674:1;4677;4670:43;;;;;;;;;;;;;;;;;:3;:43::i;4121:181::-;4179:7;4211:5;;;4235:6;;;;4227:46;;;;;;;;;;;;:::i;669:106::-;757:10;669:106;:::o;21026:245::-;21148:117;21176:5;21213:27;;;21242:4;21248:2;21252:5;21190:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21148:19;:117::i;47852:502::-;47929:11;;47925:422;;48040:29;;;;;48072:7;;48040:14;:4;:14;;;;:29;;48063:4;;48040:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;48036:103;;;48100:23;:21;:23::i;:::-;48171:29;;;;;48153:15;;48171:14;:4;:14;;;;:29;;48194:4;;48171:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;48153:47;;48229:7;48219;:17;48215:75;;;48267:7;48257:17;;48215:75;48304:31;:17;:4;:17;48322:3;48327:7;48304:17;:31::i;:::-;47925:422;47852:502;;:::o;20808:212::-;20907:107;20935:5;20972:23;;;20997:2;21001:5;20949:58;;;;;;;;;:::i;7050:278::-;7136:7;7171:12;7164:5;7156:28;;;;;;;;;;;;;:::i;:::-;;7195:9;7211:1;7207;:5;;;;;;;7050:278;-1:-1:-1;;;;;7050:278:0:o;5024:192::-;5110:7;5146:12;5138:6;;;;5130:29;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;5182:5:0;;;5024:192::o;23261:764::-;23669:23;23702:69;23730:4;23702:69;;;;;;;;;;;;;;;;;23710:5;23702:27;;;;:69;;;;;:::i;:::-;23782:17;;23669:102;;-1:-1:-1;23782:21:0;23778:242;;23929:10;23918:30;;;;;;;;;;;;:::i;:::-;23900:112;;;;;;;;;;;;:::i;17865:196::-;17968:12;18000:53;18023:6;18031:4;18037:1;18040:12;18000:22;:53::i;:::-;17993:60;17865:196;-1:-1:-1;;;;17865:196:0:o;19242:979::-;19372:12;19405:18;19416:6;19405:10;:18::i;:::-;19397:60;;;;;;;;;;;;:::i;:::-;19531:12;19545:23;19572:6;:11;;19592:8;19603:4;19572:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19530:78;;;;19623:7;19619:595;;;19654:10;-1:-1:-1;19647:17:0;;-1:-1:-1;19647:17:0;19619:595;19768:17;;:21;19764:439;;20031:10;20025:17;20092:15;20079:10;20075:2;20071:19;20064:44;19979:148;20174:12;20167:20;;;;;;;;;;;:::i;14947:422::-;15314:20;15353:8;;;14947:422::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;851:241::-;;955:2;943:9;934:7;930:23;926:32;923:2;;;-1:-1;;961:12;923:2;85:6;72:20;97:33;124:5;97:33;:::i;1099:360::-;;;1217:2;1205:9;1196:7;1192:23;1188:32;1185:2;;;-1:-1;;1223:12;1185:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1275:63;-1:-1;1375:2;1411:22;;206:20;231:30;206:20;231:30;:::i;:::-;1383:60;;;;1179:280;;;;;:::o;1466:366::-;;;1587:2;1575:9;1566:7;1562:23;1558:32;1555:2;;;-1:-1;;1593:12;1555:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1645:63;1745:2;1784:22;;;;640:20;;-1:-1;;;1549:283::o;1839:491::-;;;;1977:2;1965:9;1956:7;1952:23;1948:32;1945:2;;;-1:-1;;1983:12;1945:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2035:63;2135:2;2174:22;;640:20;;-1:-1;2243:2;2282:22;;;640:20;;1939:391;-1:-1;;;1939:391::o;2337:235::-;;2438:2;2426:9;2417:7;2413:23;2409:32;2406:2;;;-1:-1;;2444:12;2406:2;219:6;206:20;231:30;255:5;231:30;:::i;2579:257::-;;2691:2;2679:9;2670:7;2666:23;2662:32;2659:2;;;-1:-1;;2697:12;2659:2;354:6;348:13;366:30;390:5;366:30;:::i;3119:241::-;;3223:2;3211:9;3202:7;3198:23;3194:32;3191:2;;;-1:-1;;3229:12;3191:2;-1:-1;640:20;;3185:175;-1:-1;3185:175::o;3367:263::-;;3482:2;3470:9;3461:7;3457:23;3453:32;3450:2;;;-1:-1;;3488:12;3450:2;-1:-1;788:13;;3444:186;-1:-1;3444:186::o;3637:366::-;;;3758:2;3746:9;3737:7;3733:23;3729:32;3726:2;;;-1:-1;;3764:12;3726:2;653:6;640:20;3816:63;;3916:2;3959:9;3955:22;72:20;97:33;124:5;97:33;:::i;4010:633::-;;;;;4173:3;4161:9;4152:7;4148:23;4144:33;4141:2;;;-1:-1;;4180:12;4141:2;653:6;640:20;4232:63;;4332:2;4389:9;4385:22;489:20;514:47;555:5;514:47;:::i;:::-;4340:77;-1:-1;4454:2;4490:22;;206:20;231:30;206:20;231:30;:::i;:::-;4462:60;-1:-1;4559:2;4595:22;;206:20;231:30;206:20;231:30;:::i;:::-;4135:508;;;;-1:-1;4135:508;;-1:-1;;4135:508::o;4650:366::-;;;4771:2;4759:9;4750:7;4746:23;4742:32;4739:2;;;-1:-1;;4777:12;4739:2;-1:-1;;640:20;;;4929:2;4968:22;;;640:20;;-1:-1;4733:283::o;5023:485::-;;;;5158:2;5146:9;5137:7;5133:23;5129:32;5126:2;;;-1:-1;;5164:12;5126:2;653:6;640:20;5216:63;;5316:2;5359:9;5355:22;640:20;5324:63;;5424:2;5464:9;5460:22;206:20;231:30;255:5;231:30;:::i;:::-;5432:60;;;;5120:388;;;;;:::o;5515:611::-;;;;;5667:3;5655:9;5646:7;5642:23;5638:33;5635:2;;;-1:-1;;5674:12;5635:2;653:6;640:20;5726:63;;5826:2;5869:9;5865:22;640:20;5834:63;;5934:2;5977:9;5973:22;640:20;5942:63;;6042:2;6082:9;6078:22;206:20;231:30;255:5;231:30;:::i;17392:271::-;;6774:5;32083:12;6885:52;6930:6;6925:3;6918:4;6911:5;6907:16;6885:52;:::i;:::-;6949:16;;;;;17526:137;-1:-1;;17526:137::o;17670:222::-;32953:42;32942:54;;;;6353:37;;17797:2;17782:18;;17768:124::o;18144:444::-;32953:42;32942:54;;;6353:37;;32942:54;;;;18491:2;18476:18;;6353:37;18574:2;18559:18;;17223:37;;;;18327:2;18312:18;;18298:290::o;18595:333::-;32953:42;32942:54;;;;6353:37;;18914:2;18899:18;;17223:37;18750:2;18735:18;;18721:207::o;18935:210::-;32742:13;;32735:21;6457:34;;19056:2;19041:18;;19027:118::o;19676:310::-;;19823:2;19844:17;19837:47;7603:5;32083:12;32522:6;19823:2;19812:9;19808:18;32510:19;7697:52;7742:6;32550:14;19812:9;32550:14;19823:2;7723:5;7719:16;7697:52;:::i;:::-;34539:2;34519:14;34535:7;34515:28;7761:39;;;;32550:14;7761:39;;19794:192;-1:-1;;19794:192::o;19993:416::-;20193:2;20207:47;;;8037:2;20178:18;;;32510:19;8073:34;32550:14;;;8053:55;8142:15;8128:12;;;8121:37;8177:12;;;20164:245::o;20416:416::-;20616:2;20630:47;;;8428:2;20601:18;;;32510:19;8464:34;32550:14;;;8444:55;8533:12;8519;;;8512:34;8565:12;;;20587:245::o;20839:416::-;21039:2;21053:47;;;8816:2;21024:18;;;32510:19;8852:34;32550:14;;;8832:55;8921:8;8907:12;;;8900:30;8949:12;;;21010:245::o;21262:416::-;21462:2;21476:47;;;9200:2;21447:18;;;32510:19;9236:29;32550:14;;;9216:50;9285:12;;;21433:245::o;21685:416::-;21885:2;21899:47;;;9536:2;21870:18;;;32510:19;9572:34;32550:14;;;9552:55;9641:6;9627:12;;;9620:28;9667:12;;;21856:245::o;22108:416::-;22308:2;22322:47;;;9918:2;22293:18;;;32510:19;9954:34;32550:14;;;9934:55;10023:4;10009:12;;;10002:26;10047:12;;;22279:245::o;22531:416::-;22731:2;22745:47;;;10298:2;22716:18;;;32510:19;10334:34;32550:14;;;10314:55;10403:3;10389:12;;;10382:25;10426:12;;;22702:245::o;22954:416::-;23154:2;23168:47;;;10677:2;23139:18;;;32510:19;10713:24;32550:14;;;10693:45;10757:12;;;23125:245::o;23377:416::-;23577:2;23591:47;;;11008:2;23562:18;;;32510:19;11044;32550:14;;;11024:40;11083:12;;;23548:245::o;23800:416::-;24000:2;24014:47;;;23985:18;;;32510:19;11370:34;32550:14;;;11350:55;11424:12;;;23971:245::o;24223:416::-;24423:2;24437:47;;;11675:2;24408:18;;;32510:19;11711:34;32550:14;;;11691:55;11780:11;11766:12;;;11759:33;11811:12;;;24394:245::o;24646:416::-;24846:2;24860:47;;;12062:2;24831:18;;;32510:19;12098:34;32550:14;;;12078:55;12167:34;12153:12;;;12146:56;12236:3;12222:12;;;12215:25;12259:12;;;24817:245::o;25069:416::-;25269:2;25283:47;;;12510:2;25254:18;;;32510:19;12546:31;32550:14;;;12526:52;12597:12;;;25240:245::o;25492:416::-;25692:2;25706:47;;;12848:2;25677:18;;;32510:19;;;12884:34;32550:14;;;12864:55;12953:34;12939:12;;;12932:56;13007:12;;;25663:245::o;25915:416::-;26115:2;26129:47;;;13258:2;26100:18;;;32510:19;13294:34;32550:14;;;13274:55;13363:11;13349:12;;;13342:33;13394:12;;;26086:245::o;26338:416::-;26538:2;26552:47;;;13645:2;26523:18;;;32510:19;13681:34;32550:14;;;13661:55;13750:9;13736:12;;;13729:31;13779:12;;;26509:245::o;26761:416::-;26961:2;26975:47;;;14030:2;26946:18;;;32510:19;14066:34;32550:14;;;14046:55;14135:15;14121:12;;;14114:37;14170:12;;;26932:245::o;27184:416::-;27384:2;27398:47;;;14421:2;27369:18;;;32510:19;14457:33;32550:14;;;14437:54;14510:12;;;27355:245::o;27607:416::-;27807:2;27821:47;;;14761:2;27792:18;;;32510:19;14797:34;32550:14;;;14777:55;14866:23;14852:12;;;14845:45;14909:12;;;27778:245::o;28030:416::-;28230:2;28244:47;;;15160:2;28215:18;;;32510:19;15196:34;32550:14;;;15176:55;15265:17;15251:12;;;15244:39;15302:12;;;28201:245::o;28453:416::-;28653:2;28667:47;;;15553:2;28638:18;;;32510:19;15589:34;32550:14;;;15569:55;15658:13;15644:12;;;15637:35;15691:12;;;28624:245::o;28876:416::-;29076:2;29090:47;;;15942:2;29061:18;;;32510:19;15978:34;32550:14;;;15958:55;16047:19;16033:12;;;16026:41;16086:12;;;29047:245::o;29299:323::-;;29476:3;29465:9;29461:19;29453:27;;16403:16;16397:23;17230:3;17223:37;16579:4;16572:5;16568:16;16562:23;16579:4;16643:3;16639:14;17223:37;16739:4;16732:5;16728:16;16722:23;16739:4;16803:3;16799:14;17223:37;16906:4;16899:5;16895:16;16889:23;16906:4;16970:3;16966:14;17223:37;17065:4;17058:5;17054:16;17048:23;32742:13;32735:21;17065:4;17123:3;17119:14;6457:34;29447:175;;;;:::o;29629:222::-;17223:37;;;29756:2;29741:18;;29727:124::o;29858:321::-;17223:37;;;32742:13;32735:21;30165:2;30150:18;;6457:34;30007:2;29992:18;;29978:201::o;30186:349::-;17223:37;;;30521:2;30506:18;;7388:58;30349:2;30334:18;;30320:215::o;30882:444::-;17223:37;;;31229:2;31214:18;;17223:37;;;;31312:2;31297:18;;17223:37;31065:2;31050:18;;31036:290::o;31333:656::-;17223:37;;;31731:2;31716:18;;17223:37;;;;31814:2;31799:18;;17223:37;;;;31897:2;31882:18;;17223:37;32742:13;32735:21;31974:3;31959:19;;6457:34;31566:3;31551:19;;31537:452::o;34175:268::-;34240:1;34247:101;34261:6;34258:1;34255:13;34247:101;;;34328:11;;;34322:18;34309:11;;;34302:39;34283:2;34276:10;34247:101;;;34363:6;34360:1;34357:13;34354:2;;;-1:-1;;34240:1;34410:16;;34403:27;34224:219::o;34556:117::-;32953:42;34643:5;32942:54;34618:5;34615:35;34605:2;;34664:1;;34654:12;34605:2;34599:74;:::o;34680:111::-;34761:5;32742:13;32735:21;34739:5;34736:32;34726:2;;34782:1;;34772:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3021400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_SHDW_PRECISION()": "319",
								"BOOST_PRECISION()": "317",
								"DARK_CHEF()": "infinite",
								"MASTERCHEF_SHDW_PER_BLOCK()": "338",
								"MASTER_PID()": "infinite",
								"MAX_BOOST_PRECISION()": "317",
								"SHDW()": "infinite",
								"SHDW_RATE_TOTAL_PRECISION()": "339",
								"add(uint256,address,bool,bool)": "infinite",
								"boostContract()": "1113",
								"burnAdmin()": "1158",
								"burnShdw(bool)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getBoostMultiplier(address,uint256)": "1461",
								"harvestFromMasterChef()": "infinite",
								"init(address)": "infinite",
								"lastBurnedBlock()": "1119",
								"lpToken(uint256)": "2082",
								"massUpdatePools()": "infinite",
								"owner()": "1114",
								"pendingShdw(uint256,address)": "infinite",
								"poolInfo(uint256)": "5438",
								"poolLength()": "1119",
								"renounceOwnership()": "24234",
								"set(uint256,uint256,bool)": "infinite",
								"shdwPerBlock(bool)": "infinite",
								"shdwPerBlockToBurn()": "infinite",
								"shdwRateToBurn()": "1095",
								"shdwRateToRegularFarm()": "1116",
								"shdwRateToSpecialFarm()": "1139",
								"totalRegularAllocPoint()": "1096",
								"totalSpecialAllocPoint()": "1140",
								"transferOwnership(address)": "24479",
								"updateBoostContract(address)": "24087",
								"updateBoostMultiplier(address,uint256,uint256)": "infinite",
								"updateBurnAdmin(address)": "24517",
								"updatePool(uint256)": "infinite",
								"updateShdwRate(uint256,uint256,uint256,bool)": "infinite",
								"updateWhiteList(address,bool)": "infinite",
								"userInfo(uint256,address)": "3105",
								"whiteList(address)": "1325",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"_safeTransfer(address,uint256)": "infinite",
								"settlePendingShdw(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29077,
									"end": 29089,
									"name": "PUSH",
									"source": 0,
									"value": "95E27D7580"
								},
								{
									"begin": 29045,
									"end": 29089,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 29045,
									"end": 29089,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29192,
									"end": 29203,
									"name": "PUSH",
									"source": 0,
									"value": "EA1FC81CE"
								},
								{
									"begin": 29153,
									"end": 29203,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 29153,
									"end": 29203,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29302,
									"end": 29314,
									"name": "PUSH",
									"source": 0,
									"value": "44502B18B2"
								},
								{
									"begin": 29263,
									"end": 29314,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 29263,
									"end": 29314,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30547,
									"end": 30820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1847,
									"end": 1864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 1879,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1867,
									"end": 1877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1867,
									"end": 1879,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1867,
									"end": 1879,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1867,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1924,
									"end": 1967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1924,
									"end": 1967,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1890,
									"end": 1908,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1924,
									"end": 1967,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1924,
									"end": 1967,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1924,
									"end": 1967,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 10208,
									"end": 10209,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10329,
									"end": 10351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10329,
									"end": 10351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 30699,
									"end": 30721,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 30732,
									"end": 30744,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30755,
									"end": 30779,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 30755,
									"end": 30779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30799,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30790,
									"end": 30812,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 669,
									"end": 775,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 669,
									"end": 775,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 757,
									"end": 767,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 669,
									"end": 775,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 669,
									"end": 775,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 635,
									"end": 1373,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 635,
									"end": 1373,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 635,
									"end": 1373,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 1373,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 635,
									"end": 1373,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 1373,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 834,
									"end": 837,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": 822,
									"end": 831,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 813,
									"end": 820,
									"name": "DUP8",
									"source": -1
								},
								{
									"begin": 809,
									"end": 832,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 805,
									"end": 838,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 802,
									"end": 804,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 802,
									"end": 804,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "16"
								},
								{
									"begin": 802,
									"end": 804,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 841,
									"end": 853,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 802,
									"end": 804,
									"name": "tag",
									"source": -1,
									"value": "16"
								},
								{
									"begin": 802,
									"end": 804,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 418,
									"end": 424,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 412,
									"end": 425,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 430,
									"end": 482,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 476,
									"end": 481,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 430,
									"end": 482,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 430,
									"end": 482,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 430,
									"end": 482,
									"name": "tag",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 430,
									"end": 482,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 1087,
									"end": 1109,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 1087,
									"end": 1109,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 893,
									"end": 986,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 893,
									"end": 986,
									"name": "SWAP5",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 256,
									"end": 303,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "19"
								},
								{
									"begin": 238,
									"end": 251,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 256,
									"end": 303,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 256,
									"end": 303,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 256,
									"end": 303,
									"name": "tag",
									"source": -1,
									"value": "19"
								},
								{
									"begin": 256,
									"end": 303,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 1206,
									"end": 1228,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 1206,
									"end": 1228,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 572,
									"end": 585,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 1275,
									"end": 1277,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "DUP8",
									"source": -1
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 1031,
									"end": 1119,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1031,
									"end": 1119,
									"name": "SWAP5",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 572,
									"end": 585,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 83,
									"end": 96,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 796,
									"end": 1373,
									"name": "SWAP4",
									"source": -1
								},
								{
									"begin": 796,
									"end": 1373,
									"name": "SWAP7",
									"source": -1
								},
								{
									"begin": 796,
									"end": 1373,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 796,
									"end": 1373,
									"name": "SWAP6",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 796,
									"end": 1373,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 796,
									"end": 1373,
									"name": "SWAP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 796,
									"end": 1373,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1914,
									"end": 2031,
									"name": "tag",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 1914,
									"end": 2031,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1769,
									"end": 1823,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1769,
									"end": 1823,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 2008,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 2008,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 1963,
									"end": 1965,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 1963,
									"end": 1965,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 2022,
									"end": 2023,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 2023,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2012,
									"end": 2024,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 1963,
									"end": 1965,
									"name": "tag",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 1963,
									"end": 1965,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1957,
									"end": 2031,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1957,
									"end": 2031,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1957,
									"end": 2031,
									"name": "tag",
									"source": -1,
									"value": "14"
								},
								{
									"begin": 1957,
									"end": 2031,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "983"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "954"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "951"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25023,
									"end": 48357,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d18afb1e29210e815a91a31352105dfb52e75557f02218e839513c20d61f7f6d64736f6c634300060c0033",
									".code": [
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "C40D337B"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "DFCEDEEE"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "F474309E"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "F474309E"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "F5A26F40"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "F5B91CD3"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "DFCEDEEE"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "C799B59D"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "C799B59D"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "CC6DB2DA"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "D2CE6AE8"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "C40D337B"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "C507AEAA"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "9DD2FCC3"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "9DD2FCC3"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "AC1D0609"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "C3083016"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "99D7E84A"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "78ED5D1F"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "78ED5D1F"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "815D087F"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "81BDF98C"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "78DB4C34"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "372C12B1"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "61621AAA"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "6661100F"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "6661100F"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "69B02128"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "6FDA08C3"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "61621AAA"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "4F70B15A"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "4F70B15A"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "372C12B1"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "19AB453C"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "19AB453C"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "19F95E2E"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "36183ED6"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "16E80F4D"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "41A84C9"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "41A84C9"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "BB844BC"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "33186E8"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "3DCFF74"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25023,
											"end": 48357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46781,
											"end": 46788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46830,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46836,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46843,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46859,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46822,
											"end": 46859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46822,
											"end": 46859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 46877,
											"end": 46905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46877,
											"end": 46905,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46908,
											"end": 46918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 46877,
											"end": 46936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46870,
											"end": 46936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46870,
											"end": 46936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46870,
											"end": 46936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46944,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "954"
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27296,
											"end": 27324,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30951,
											"end": 30964,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30951,
											"end": 30964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30951,
											"end": 30978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30951,
											"end": 30964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30968,
											"end": 30978,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30951,
											"end": 30978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 30943,
											"end": 31024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10991,
											"end": 10998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45440,
											"end": 45459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45440,
											"end": 45459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45440,
											"end": 45459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 45432,
											"end": 45507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45535,
											"end": 45539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45526,
											"end": 45550,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 45526,
											"end": 45550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 45518,
											"end": 45602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 45635,
											"end": 45649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45635,
											"end": 45668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45635,
											"end": 45668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45635,
											"end": 45709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45635,
											"end": 45709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45635,
											"end": 45709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 45635,
											"end": 45709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45635,
											"end": 45709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28780,
											"end": 28790,
											"name": "PUSH",
											"source": 0,
											"value": "1D1A94A2000"
										},
										{
											"begin": 45672,
											"end": 45686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45672,
											"end": 45709,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 45672,
											"end": 45709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45635,
											"end": 45709,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 45635,
											"end": 45709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 45613,
											"end": 45778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45791,
											"end": 45811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 45791,
											"end": 45811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 45791,
											"end": 45811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45791,
											"end": 45811,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 45791,
											"end": 45811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45814,
											"end": 45830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 45825,
											"end": 45829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45814,
											"end": 45824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 45814,
											"end": 45830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45814,
											"end": 45830,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 45814,
											"end": 45830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45841,
											"end": 45862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45873,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45865,
											"end": 45886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45791,
											"end": 45830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45791,
											"end": 45830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45924,
											"end": 45955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 45880,
											"end": 45885,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45874,
											"end": 45878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 45924,
											"end": 45955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45924,
											"end": 45955,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 45924,
											"end": 45955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45899,
											"end": 45955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45899,
											"end": 45955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45966,
											"end": 46012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 45984,
											"end": 45989,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 45995,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45997,
											"end": 46011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45966,
											"end": 45983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 45966,
											"end": 46012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45966,
											"end": 46012,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 45966,
											"end": 46012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 46043,
											"end": 46121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 46100,
											"end": 46104,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46100,
											"end": 46120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 46059,
											"end": 46073,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46047,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46043,
											"end": 46054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 46043,
											"end": 46058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 46043,
											"end": 46074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 46043,
											"end": 46095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46043,
											"end": 46095,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 46043,
											"end": 46095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46043,
											"end": 46099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 46043,
											"end": 46121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46043,
											"end": 46169,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 46043,
											"end": 46169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46025,
											"end": 46040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46169,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46304,
											"end": 46315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46304,
											"end": 46315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 46205,
											"end": 46367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46304,
											"end": 46356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 46304,
											"end": 46356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46304,
											"end": 46335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 46304,
											"end": 46335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46320,
											"end": 46334,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46304,
											"end": 46319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 46304,
											"end": 46335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46304,
											"end": 46356,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 46304,
											"end": 46356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46232,
											"end": 46243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46232,
											"end": 46243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 46205,
											"end": 46285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46232,
											"end": 46284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 46232,
											"end": 46284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46232,
											"end": 46263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 46232,
											"end": 46263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46248,
											"end": 46262,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46232,
											"end": 46247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 46232,
											"end": 46263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46232,
											"end": 46284,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 46232,
											"end": 46284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46227,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46205,
											"end": 46227,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 46205,
											"end": 46285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46205,
											"end": 46285,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 46205,
											"end": 46285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46205,
											"end": 46289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 46205,
											"end": 46367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46205,
											"end": 46367,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 46205,
											"end": 46367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46180,
											"end": 46202,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46180,
											"end": 46202,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46180,
											"end": 46202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46180,
											"end": 46367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46180,
											"end": 46184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46180,
											"end": 46184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46387,
											"end": 46391,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46387,
											"end": 46391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46378,
											"end": 46399,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46418,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46464,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46464,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "PUSH",
											"source": 0,
											"value": "1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA"
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46517,
											"end": 46531,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46517,
											"end": 46531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46464,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 46410,
											"end": 46464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46482,
											"end": 46548,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11170,
											"end": 11192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11170,
											"end": 11192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45263,
											"end": 46556,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32094,
											"end": 32102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32094,
											"end": 32109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32094,
											"end": 32109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32017,
											"end": 32117,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43747,
											"end": 43770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43747,
											"end": 43770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43747,
											"end": 43770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 43739,
											"end": 43820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43852,
											"end": 43861,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43852,
											"end": 43861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43852,
											"end": 43861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43839,
											"end": 43861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43839,
											"end": 43861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43839,
											"end": 43861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43852,
											"end": 43861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43852,
											"end": 43861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43839,
											"end": 43861,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43839,
											"end": 43861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 43831,
											"end": 43930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44018,
											"end": 44055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44018,
											"end": 44055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43981,
											"end": 44002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43961,
											"end": 43970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44018,
											"end": 44055,
											"name": "PUSH",
											"source": 0,
											"value": "D146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE"
										},
										{
											"begin": 44018,
											"end": 44055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43941,
											"end": 43958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43941,
											"end": 43958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44018,
											"end": 44055,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43665,
											"end": 44063,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27590,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28505,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31511,
											"end": 31526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31529,
											"end": 31549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31550,
											"end": 31560,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31550,
											"end": 31560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 31529,
											"end": 31561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31580,
											"end": 31592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 31572,
											"end": 31631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 31642,
											"end": 31669,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31642,
											"end": 31669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31670,
											"end": 31680,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31690,
											"end": 31694,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31697,
											"end": 31704,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31642,
											"end": 31669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 31642,
											"end": 31705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31642,
											"end": 31705,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 31642,
											"end": 31705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31743,
											"end": 31752,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "951"
										},
										{
											"begin": 31743,
											"end": 31752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31755,
											"end": 31762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31755,
											"end": 31762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 31716,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB15800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31774,
											"end": 31783,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "951"
										},
										{
											"begin": 31774,
											"end": 31791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31791,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 31774,
											"end": 31791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31792,
											"end": 31802,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "983"
										},
										{
											"begin": 31792,
											"end": 31802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31804,
											"end": 31811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 31774,
											"end": 31812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31916,
											"end": 31928,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31898,
											"end": 31913,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 31898,
											"end": 31928,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31944,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31944,
											"end": 31950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14"
										},
										{
											"begin": 31944,
											"end": 31950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 31950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31944,
											"end": 31950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 31950,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31448,
											"end": 31958,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36988,
											"end": 37002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37024,
											"end": 37100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 28915,
											"end": 28919,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37024,
											"end": 37069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 37054,
											"end": 37068,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 37054,
											"end": 37068,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28449,
											"name": "PUSH",
											"source": 0,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 37024,
											"end": 37053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 37024,
											"end": 37053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37024,
											"end": 37069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37024,
											"end": 37069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37024,
											"end": 37069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37024,
											"end": 37069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37024,
											"end": 37069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37024,
											"end": 37100,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 37024,
											"end": 37100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37015,
											"end": 37100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37015,
											"end": 37100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36937,
											"end": 37108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41946,
											"end": 41957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 42003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41942,
											"end": 42003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 41942,
											"end": 42003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 41991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 41974,
											"end": 41989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 41974,
											"end": 41991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41974,
											"end": 41991,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 41974,
											"end": 41991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42015,
											"end": 42033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 42053,
											"end": 42068,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 42053,
											"end": 42068,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42036,
											"end": 42048,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 42036,
											"end": 42052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 42036,
											"end": 42052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 42036,
											"end": 42069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42015,
											"end": 42069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42015,
											"end": 42069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42080,
											"end": 42105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42108,
											"end": 42144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 42123,
											"end": 42143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 42123,
											"end": 42141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 42123,
											"end": 42143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42123,
											"end": 42143,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 42123,
											"end": 42143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42108,
											"end": 42118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42108,
											"end": 42118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42108,
											"end": 42122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 42108,
											"end": 42144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42108,
											"end": 42144,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 42108,
											"end": 42144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42210,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42201,
											"end": 42210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42080,
											"end": 42144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42080,
											"end": 42144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42187,
											"end": 42230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 42187,
											"end": 42230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42210,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42201,
											"end": 42210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42080,
											"end": 42144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42187,
											"end": 42200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 42187,
											"end": 42230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42187,
											"end": 42230,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 42187,
											"end": 42230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42259,
											"end": 42271,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 42241,
											"end": 42256,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 42241,
											"end": 42271,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41878,
											"end": 42279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10991,
											"end": 10998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39904,
											"end": 39924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 39904,
											"end": 39924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 39904,
											"end": 39924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39904,
											"end": 39924,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 39904,
											"end": 39924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39927,
											"end": 39943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 39938,
											"end": 39942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39927,
											"end": 39937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 39927,
											"end": 39943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39927,
											"end": 39943,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 39927,
											"end": 39943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39954,
											"end": 39975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39986,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 39992,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39993,
											"end": 40003,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40025,
											"end": 40036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40025,
											"end": 40036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39904,
											"end": 39943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39904,
											"end": 39943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39978,
											"end": 40004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40025,
											"end": 40047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 40025,
											"end": 40047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 40017,
											"end": 40074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40108,
											"end": 40144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 40127,
											"end": 40137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40139,
											"end": 40143,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40108,
											"end": 40126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 40108,
											"end": 40144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40108,
											"end": 40144,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 40108,
											"end": 40144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 40175,
											"end": 40185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40187,
											"end": 40191,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40193,
											"end": 40203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 40157,
											"end": 40204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40157,
											"end": 40204,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 40157,
											"end": 40204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40221,
											"end": 40232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40221,
											"end": 40232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 40361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 40217,
											"end": 40361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40263,
											"end": 40274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40263,
											"end": 40274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40263,
											"end": 40287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 40263,
											"end": 40287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40279,
											"end": 40286,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40263,
											"end": 40278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 40263,
											"end": 40287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40263,
											"end": 40287,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 40263,
											"end": 40287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 40253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 40260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40249,
											"end": 40260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 40287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 40287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 40287,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 40287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 40329,
											"end": 40339,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40341,
											"end": 40348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40309,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40310,
											"end": 40314,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40302,
											"end": 40328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 40302,
											"end": 40349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40302,
											"end": 40349,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 40302,
											"end": 40349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 40391,
											"end": 40465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 40444,
											"end": 40448,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40444,
											"end": 40464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40444,
											"end": 40464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40444,
											"end": 40464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 40391,
											"end": 40418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40395,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40391,
											"end": 40402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 40391,
											"end": 40406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40391,
											"end": 40418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40391,
											"end": 40418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40391,
											"end": 40513,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 40391,
											"end": 40513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40388,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40373,
											"end": 40388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40373,
											"end": 40513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 40610,
											"end": 40654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 40610,
											"end": 40633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 40610,
											"end": 40617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40622,
											"end": 40632,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40610,
											"end": 40621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 40610,
											"end": 40633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40610,
											"end": 40654,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 40610,
											"end": 40654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40568,
											"end": 40572,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40591,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40559,
											"end": 40591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 40559,
											"end": 40595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 40559,
											"end": 40665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40533,
											"end": 40537,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40556,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40524,
											"end": 40556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40665,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40704,
											"end": 40708,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40692,
											"end": 40702,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 40710,
											"end": 40717,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40683,
											"end": 40718,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11170,
											"end": 11192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11170,
											"end": 11192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39822,
											"end": 40726,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB15800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40869,
											"end": 40878,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "951"
										},
										{
											"begin": 40869,
											"end": 40886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40886,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 40869,
											"end": 40886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40887,
											"end": 40897,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "983"
										},
										{
											"begin": 40887,
											"end": 40897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40899,
											"end": 40900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40899,
											"end": 40900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40869,
											"end": 40901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37341,
											"end": 37361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 37341,
											"end": 37361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 37341,
											"end": 37361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37341,
											"end": 37361,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 37341,
											"end": 37361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37390,
											"end": 37394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37381,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37374,
											"end": 37395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37410,
											"end": 37422,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 37410,
											"end": 37445,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37406,
											"end": 38233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37406,
											"end": 38233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 37406,
											"end": 38233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37481,
											"end": 37503,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37481,
											"end": 37503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37481,
											"end": 37503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37481,
											"end": 37503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37545,
											"end": 37559,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37545,
											"end": 37559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37545,
											"end": 37559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37545,
											"end": 37559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37462,
											"end": 37478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37462,
											"end": 37478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37587,
											"end": 37609,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37587,
											"end": 37609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37562,
											"end": 37584,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37562,
											"end": 37584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 37545,
											"end": 37609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37518,
											"end": 37610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37518,
											"end": 37610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37642,
											"end": 37643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37631,
											"end": 37639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37631,
											"end": 37643,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37631,
											"end": 37666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37631,
											"end": 37666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37631,
											"end": 37666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 37631,
											"end": 37666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37631,
											"end": 37666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37665,
											"end": 37666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37647,
											"end": 37662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37647,
											"end": 37666,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37631,
											"end": 37666,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 37631,
											"end": 37666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37627,
											"end": 38046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37627,
											"end": 38046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 37627,
											"end": 38046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37687,
											"end": 37705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 37725,
											"end": 37729,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37725,
											"end": 37745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37708,
											"end": 37720,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 37708,
											"end": 37724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 37708,
											"end": 37724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 37708,
											"end": 37746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37687,
											"end": 37746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37687,
											"end": 37746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37765,
											"end": 37783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37786,
											"end": 37912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 37878,
											"end": 37893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37786,
											"end": 37851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 37835,
											"end": 37839,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37835,
											"end": 37850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37835,
											"end": 37850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37835,
											"end": 37850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37786,
											"end": 37830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 37801,
											"end": 37829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 37814,
											"end": 37818,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37801,
											"end": 37813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 37801,
											"end": 37829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37801,
											"end": 37829,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 37801,
											"end": 37829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37786,
											"end": 37796,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37786,
											"end": 37796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37786,
											"end": 37800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 37786,
											"end": 37830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37786,
											"end": 37912,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 37786,
											"end": 37912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37765,
											"end": 37912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37954,
											"end": 38030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 37980,
											"end": 38028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 38019,
											"end": 38027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37980,
											"end": 38014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 37765,
											"end": 37912,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 37980,
											"end": 37994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 37980,
											"end": 38014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37980,
											"end": 38028,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 37980,
											"end": 38028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37954,
											"end": 37974,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37954,
											"end": 37974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37954,
											"end": 37974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37954,
											"end": 37978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 37954,
											"end": 38030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37954,
											"end": 38030,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 37954,
											"end": 38030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 38030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 38030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37627,
											"end": 38046,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 37627,
											"end": 38046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38083,
											"end": 38095,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 38060,
											"end": 38080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38060,
											"end": 38080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38060,
											"end": 38080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38060,
											"end": 38095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38060,
											"end": 38064,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38060,
											"end": 38064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38123,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38131,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38168,
											"end": 38188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38168,
											"end": 38188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38168,
											"end": 38188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38162,
											"end": 38166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38162,
											"end": 38166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "PUSH",
											"source": 0,
											"value": "3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46"
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38168,
											"end": 38188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38168,
											"end": 38188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38190,
											"end": 38198,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38190,
											"end": 38198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38151,
											"end": 38221,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 37406,
											"end": 38233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37406,
											"end": 38233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37406,
											"end": 38233,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 37406,
											"end": 38233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37291,
											"end": 38240,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 41050,
											"end": 41740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10991,
											"end": 10998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41124,
											"end": 41145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41148,
											"end": 41156,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41157,
											"end": 41161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41205,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41211,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41212,
											"end": 41222,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41253,
											"end": 41264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41253,
											"end": 41264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41275,
											"end": 41290,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41275,
											"end": 41290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41275,
											"end": 41290,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 41301,
											"end": 41316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41301,
											"end": 41316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41301,
											"end": 41320,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41301,
											"end": 41320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41301,
											"end": 41320,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41197,
											"end": 41223,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 41355,
											"end": 41424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 41355,
											"end": 41403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 41366,
											"end": 41402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41210,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41366,
											"end": 41402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41366,
											"end": 41402,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 41366,
											"end": 41402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41361,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 41355,
											"end": 41403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41355,
											"end": 41424,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 41355,
											"end": 41424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41485,
											"end": 41498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41460,
											"end": 41464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41460,
											"end": 41482,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41460,
											"end": 41482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41460,
											"end": 41482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41460,
											"end": 41498,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41460,
											"end": 41546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 41460,
											"end": 41546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41545,
											"end": 41546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41460,
											"end": 41546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 41460,
											"end": 41546,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41460,
											"end": 41546,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 41460,
											"end": 41546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41523,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41501,
											"end": 41523,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 41501,
											"end": 41542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41528,
											"end": 41541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 41501,
											"end": 41542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41501,
											"end": 41542,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 41501,
											"end": 41542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41435,
											"end": 41439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41435,
											"end": 41457,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41435,
											"end": 41457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41435,
											"end": 41546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41435,
											"end": 41546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41435,
											"end": 41546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41435,
											"end": 41546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 41654,
											"end": 41664,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41666,
											"end": 41672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41634,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41635,
											"end": 41639,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41640,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 41627,
											"end": 41640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41640,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41673,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 41627,
											"end": 41673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41719,
											"end": 41723,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41707,
											"end": 41717,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "PUSH",
											"source": 0,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 41725,
											"end": 41731,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 41689,
											"end": 41732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "983"
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28034,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36116,
											"end": 36124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36116,
											"end": 36131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36099,
											"end": 36113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36170,
											"end": 36176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 36200,
											"end": 36220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 36200,
											"end": 36220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36200,
											"end": 36220,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 36200,
											"end": 36220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36232,
											"end": 36235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36223,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36255,
											"end": 36275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36251,
											"end": 36327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 36251,
											"end": 36327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36296,
											"end": 36311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 36307,
											"end": 36310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36296,
											"end": 36306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 36296,
											"end": 36311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36296,
											"end": 36311,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 36296,
											"end": 36311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36296,
											"end": 36311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36251,
											"end": 36327,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 36251,
											"end": 36327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36178,
											"end": 36183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36178,
											"end": 36183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36142,
											"end": 36338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36054,
											"end": 36345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34331,
											"end": 34347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 34342,
											"end": 34346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34331,
											"end": 34341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 34331,
											"end": 34347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34331,
											"end": 34347,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 34331,
											"end": 34347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34331,
											"end": 34347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34364,
											"end": 34375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34360,
											"end": 34421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34360,
											"end": 34421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 34360,
											"end": 34421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34392,
											"end": 34409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 34392,
											"end": 34407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 34392,
											"end": 34409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34392,
											"end": 34409,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 34392,
											"end": 34409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34446,
											"end": 34450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34461,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34437,
											"end": 34461,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 34437,
											"end": 34461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 34561,
											"end": 34572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 34530,
											"end": 34538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34539,
											"end": 34543,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34555,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34530,
											"end": 34555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34530,
											"end": 34555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34503,
											"end": 34525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 34503,
											"end": 34529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34503,
											"end": 34556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34503,
											"end": 34573,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 34503,
											"end": 34573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34478,
											"end": 34500,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34478,
											"end": 34573,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 34689,
											"end": 34700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 34658,
											"end": 34666,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34667,
											"end": 34671,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34683,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34658,
											"end": 34683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34653,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34631,
											"end": 34653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 34631,
											"end": 34657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34631,
											"end": 34684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34631,
											"end": 34684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34631,
											"end": 34701,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 34631,
											"end": 34701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34606,
											"end": 34628,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34606,
											"end": 34701,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 34433,
											"end": 34713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34732,
											"end": 34736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34748,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34723,
											"end": 34748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34762,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34723,
											"end": 34762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34786,
											"end": 34790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "PUSH",
											"source": 0,
											"value": "C0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8"
										},
										{
											"begin": 34792,
											"end": 34803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34778,
											"end": 34804,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28780,
											"end": 28790,
											"name": "PUSH",
											"source": 0,
											"value": "1D1A94A2000"
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28734,
											"end": 28790,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29314,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2768,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2768,
											"end": 2808,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2846,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29353,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27681,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42884,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42872,
											"end": 42881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 42872,
											"end": 42909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 42909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42889,
											"end": 42905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42889,
											"end": 42909,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42909,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 42872,
											"end": 42909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 42872,
											"end": 42933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42932,
											"end": 42933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42913,
											"end": 42929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42913,
											"end": 42933,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42933,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 42872,
											"end": 42933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 42850,
											"end": 43006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28919,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 43039,
											"end": 43092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 43075,
											"end": 43091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43039,
											"end": 43070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 43039,
											"end": 43048,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43053,
											"end": 43069,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43039,
											"end": 43052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 43039,
											"end": 43070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43039,
											"end": 43092,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 43039,
											"end": 43092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43039,
											"end": 43121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 43017,
											"end": 43185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43200,
											"end": 43211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 43196,
											"end": 43257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43228,
											"end": 43245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 43228,
											"end": 43243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 43228,
											"end": 43245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43228,
											"end": 43245,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 43228,
											"end": 43245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43316,
											"end": 43331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 43325,
											"end": 43330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43316,
											"end": 43324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 43316,
											"end": 43331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43316,
											"end": 43331,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 43316,
											"end": 43331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43344,
											"end": 43358,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 43344,
											"end": 43370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43344,
											"end": 43370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43344,
											"end": 43370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43381,
											"end": 43402,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 43381,
											"end": 43421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43381,
											"end": 43421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43381,
											"end": 43421,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43453,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 43432,
											"end": 43472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "PUSH",
											"source": 0,
											"value": "2882B55EE231404A42D7D813DAD9CFE57D65E1992A6D165A6E29466A8D1B7499"
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43361,
											"end": 43370,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43361,
											"end": 43370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43405,
											"end": 43421,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43405,
											"end": 43421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43472,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43490,
											"end": 43551,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 43559,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27399,
											"end": 27423,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27731,
											"end": 27795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28299,
											"end": 28336,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44773,
											"end": 44804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 44773,
											"end": 44842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44829,
											"end": 44842,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44829,
											"end": 44842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44829,
											"end": 44842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44808,
											"end": 44842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44808,
											"end": 44842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44808,
											"end": 44842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44829,
											"end": 44842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44829,
											"end": 44842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44808,
											"end": 44842,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44808,
											"end": 44842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44773,
											"end": 44842,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 44773,
											"end": 44842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 44751,
											"end": 44923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44949,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44985,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44985,
											"end": 45023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44985,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303"
										},
										{
											"begin": 44985,
											"end": 45023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 44985,
											"end": 45023,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44665,
											"end": 45031,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44334,
											"end": 44353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44334,
											"end": 44353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44334,
											"end": 44353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 44326,
											"end": 44407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44429,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "PUSH",
											"source": 0,
											"value": "C551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51"
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44420,
											"end": 44447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44463,
											"end": 44495,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44241,
											"end": 44503,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "951"
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28148,
											"end": 28185,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32870,
											"end": 32871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32870,
											"end": 32871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32833,
											"end": 32851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32851,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 32833,
											"end": 32851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32860,
											"end": 32864,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32860,
											"end": 32864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 32833,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32833,
											"end": 32871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 32825,
											"end": 32893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33078,
											"end": 33082,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "954"
										},
										{
											"begin": 33066,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33066,
											"end": 33082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33074,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33066,
											"end": 33082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33082,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33082,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 33058,
											"end": 33126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33143,
											"end": 33154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33139,
											"end": 33200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33139,
											"end": 33200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 33139,
											"end": 33200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33171,
											"end": 33188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 33171,
											"end": 33186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 33171,
											"end": 33188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33171,
											"end": 33188,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 33171,
											"end": 33188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33216,
											"end": 33226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33290,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33268,
											"end": 33290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 33268,
											"end": 33307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33295,
											"end": 33306,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 33268,
											"end": 33307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33268,
											"end": 33307,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 33268,
											"end": 33307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33265,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33243,
											"end": 33307,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33365,
											"end": 33387,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33365,
											"end": 33387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33365,
											"end": 33404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 33365,
											"end": 33404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33392,
											"end": 33403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33365,
											"end": 33391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 33365,
											"end": 33404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33365,
											"end": 33404,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 33365,
											"end": 33404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33362,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33340,
											"end": 33404,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 33212,
											"end": 33416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33433,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "PUSH",
											"source": 0,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33560,
											"end": 33572,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33426,
											"end": 33448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C"
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19D"
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19E"
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19F"
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33461,
											"end": 33687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33711,
											"end": 33725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33711,
											"end": 33725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33711,
											"end": 33732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 33711,
											"end": 33732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33711,
											"end": 33729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 33711,
											"end": 33732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33711,
											"end": 33732,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 33711,
											"end": 33732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "PUSH",
											"source": 0,
											"value": "18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA"
										},
										{
											"begin": 33734,
											"end": 33745,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33757,
											"end": 33767,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33768,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32666,
											"end": 33776,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35079,
											"end": 35099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 35079,
											"end": 35099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 35079,
											"end": 35099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35079,
											"end": 35099,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 35079,
											"end": 35099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35111,
											"end": 35115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35079,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35127,
											"end": 35147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 35127,
											"end": 35147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 35127,
											"end": 35147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35127,
											"end": 35147,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 35127,
											"end": 35147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35158,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35150,
											"end": 35171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35127,
											"end": 35171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35208,
											"end": 35228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35208,
											"end": 35228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35280,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35332,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35312,
											"end": 35332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35208,
											"end": 35228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35208,
											"end": 35228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35309,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35332,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 35297,
											"end": 35349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35336,
											"end": 35349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35336,
											"end": 35349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35336,
											"end": 35349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35349,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 35297,
											"end": 35349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35293,
											"end": 35746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35293,
											"end": 35746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 35293,
											"end": 35746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 35404,
											"end": 35408,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35404,
											"end": 35424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35404,
											"end": 35424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35404,
											"end": 35424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35399,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 35387,
											"end": 35403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 35387,
											"end": 35425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35366,
											"end": 35425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35442,
											"end": 35460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35463,
											"end": 35632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 35552,
											"end": 35556,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35552,
											"end": 35566,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35552,
											"end": 35566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35552,
											"end": 35566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35594,
											"end": 35616,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35594,
											"end": 35616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35569,
											"end": 35591,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35569,
											"end": 35591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 35552,
											"end": 35616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35463,
											"end": 35528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35512,
											"end": 35516,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35512,
											"end": 35527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35512,
											"end": 35527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35512,
											"end": 35527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35463,
											"end": 35507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35478,
											"end": 35506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 35491,
											"end": 35495,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35505,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35491,
											"end": 35505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35491,
											"end": 35505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35478,
											"end": 35506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35463,
											"end": 35632,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 35463,
											"end": 35632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35442,
											"end": 35632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35665,
											"end": 35734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 35685,
											"end": 35733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 35724,
											"end": 35732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35685,
											"end": 35719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35442,
											"end": 35632,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 35685,
											"end": 35699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 35685,
											"end": 35719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35685,
											"end": 35733,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 35685,
											"end": 35733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35665,
											"end": 35680,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35665,
											"end": 35680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35665,
											"end": 35684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 35665,
											"end": 35734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35665,
											"end": 35734,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 35665,
											"end": 35734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35293,
											"end": 35746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35293,
											"end": 35746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35293,
											"end": 35746,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 35293,
											"end": 35746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35782,
											"end": 35851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35782,
											"end": 35830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 35817,
											"end": 35822,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 35824,
											"end": 35828,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35782,
											"end": 35793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35782,
											"end": 35793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35782,
											"end": 35793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35782,
											"end": 35797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 35782,
											"end": 35830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35782,
											"end": 35851,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 35782,
											"end": 35851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35932,
											"end": 35947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35932,
											"end": 35947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35932,
											"end": 35947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35932,
											"end": 35947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35869,
											"end": 35948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 35869,
											"end": 35948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35869,
											"end": 35927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 35869,
											"end": 35903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35758,
											"end": 35851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35887,
											"end": 35902,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35869,
											"end": 35886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 35869,
											"end": 35903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35869,
											"end": 35927,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 35869,
											"end": 35927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35869,
											"end": 35931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35869,
											"end": 35931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 35869,
											"end": 35948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35869,
											"end": 35948,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 35869,
											"end": 35948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 35948,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34986,
											"end": 35956,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27486,
											"end": 27514,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38405,
											"end": 39653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10858,
											"end": 10865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 10850,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10991,
											"end": 10998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38486,
											"end": 38506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 38486,
											"end": 38506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 38486,
											"end": 38506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38486,
											"end": 38506,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 38486,
											"end": 38506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38509,
											"end": 38525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 38520,
											"end": 38524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38509,
											"end": 38519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 38509,
											"end": 38525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38509,
											"end": 38525,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 38509,
											"end": 38525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38536,
											"end": 38557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38568,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38575,
											"end": 38585,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38635,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38621,
											"end": 38635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38486,
											"end": 38525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38486,
											"end": 38525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38560,
											"end": 38586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 38621,
											"end": 38660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38649,
											"end": 38659,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38648,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38639,
											"end": 38660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38621,
											"end": 38660,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 38621,
											"end": 38660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 38599,
											"end": 38753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38766,
											"end": 38784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38787,
											"end": 38823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 38806,
											"end": 38816,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38818,
											"end": 38822,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38787,
											"end": 38805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38787,
											"end": 38823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38787,
											"end": 38823,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 38787,
											"end": 38823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38840,
											"end": 38851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38840,
											"end": 38851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38766,
											"end": 38823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38766,
											"end": 38823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38840,
											"end": 38855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38836,
											"end": 38931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 38836,
											"end": 38931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38872,
											"end": 38919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 38890,
											"end": 38900,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38902,
											"end": 38906,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38908,
											"end": 38918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38872,
											"end": 38889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 38872,
											"end": 38919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38872,
											"end": 38919,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 38872,
											"end": 38919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38947,
											"end": 38958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38947,
											"end": 38958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38943,
											"end": 39409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 38943,
											"end": 39409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 38989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38992,
											"end": 38999,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39000,
											"end": 39004,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39015,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 38992,
											"end": 39015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39024,
											"end": 39028,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39024,
											"end": 39028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 38992,
											"end": 39030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 39030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 39030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 39076,
											"end": 39086,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39096,
											"end": 39100,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39103,
											"end": 39110,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39052,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39053,
											"end": 39057,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "tag",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 39045,
											"end": 39111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39045,
											"end": 39111,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 39045,
											"end": 39111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 39179,
											"end": 39185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39143,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39144,
											"end": 39148,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39159,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 39136,
											"end": 39159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39168,
											"end": 39172,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39168,
											"end": 39172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 39136,
											"end": 39174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39136,
											"end": 39186,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 39136,
											"end": 39186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39215,
											"end": 39226,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39215,
											"end": 39226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39126,
											"end": 39186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39126,
											"end": 39186,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39215,
											"end": 39239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 39215,
											"end": 39239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39126,
											"end": 39186,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39215,
											"end": 39230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 39215,
											"end": 39239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39215,
											"end": 39239,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 39215,
											"end": 39239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39201,
											"end": 39239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39201,
											"end": 39239,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39325,
											"end": 39397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 39352,
											"end": 39396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 39352,
											"end": 39375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 39352,
											"end": 39359,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39364,
											"end": 39374,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39352,
											"end": 39363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 39352,
											"end": 39375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39352,
											"end": 39396,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 39352,
											"end": 39396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39325,
											"end": 39347,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39325,
											"end": 39347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39325,
											"end": 39347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39325,
											"end": 39347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39325,
											"end": 39347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39325,
											"end": 39351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 39325,
											"end": 39397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39325,
											"end": 39397,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 39325,
											"end": 39397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39300,
											"end": 39322,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39300,
											"end": 39322,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39300,
											"end": 39322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39300,
											"end": 39397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38943,
											"end": 39409,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 38943,
											"end": 39409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 39439,
											"end": 39513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 39492,
											"end": 39496,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39492,
											"end": 39512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39492,
											"end": 39512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39492,
											"end": 39512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 39439,
											"end": 39466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 39455,
											"end": 39465,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39443,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39439,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 39439,
											"end": 39454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39439,
											"end": 39466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39439,
											"end": 39561,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 39439,
											"end": 39561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39421,
											"end": 39425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39421,
											"end": 39436,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39421,
											"end": 39436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39421,
											"end": 39561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39421,
											"end": 39561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39421,
											"end": 39561,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39421,
											"end": 39561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39589,
											"end": 39593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39581,
											"end": 39585,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39572,
											"end": 39593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39611,
											"end": 39645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39631,
											"end": 39635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39631,
											"end": 39635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39619,
											"end": 39629,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39619,
											"end": 39629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39611,
											"end": 39645,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 39611,
											"end": 39645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39611,
											"end": 39645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 39611,
											"end": 39645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39637,
											"end": 39644,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39637,
											"end": 39644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39611,
											"end": 39645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 39611,
											"end": 39645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 2260,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3090,
											"end": 3112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 3082,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3209,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3245,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36495,
											"end": 36849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36555,
											"end": 36569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36586,
											"end": 36596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36582,
											"end": 36842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36582,
											"end": 36842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 36582,
											"end": 36842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36622,
											"end": 36705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 28915,
											"end": 28919,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36622,
											"end": 36674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 36652,
											"end": 36673,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 36652,
											"end": 36673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28449,
											"name": "PUSH",
											"source": 0,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 36622,
											"end": 36651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 36622,
											"end": 36651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36622,
											"end": 36674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36622,
											"end": 36674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36622,
											"end": 36674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36622,
											"end": 36674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36622,
											"end": 36674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36622,
											"end": 36705,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 36622,
											"end": 36705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36613,
											"end": 36705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36613,
											"end": 36705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36582,
											"end": 36842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 36582,
											"end": 36842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36582,
											"end": 36842,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 36582,
											"end": 36842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36747,
											"end": 36830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 28915,
											"end": 28919,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36747,
											"end": 36799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 36777,
											"end": 36798,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 36777,
											"end": 36798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28449,
											"name": "PUSH",
											"source": 0,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 36747,
											"end": 36776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 36747,
											"end": 36776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36747,
											"end": 36799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36747,
											"end": 36799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36747,
											"end": 36799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36747,
											"end": 36799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36747,
											"end": 36799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29153,
											"end": 29203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28449,
											"name": "PUSH",
											"source": 0,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28388,
											"end": 28449,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 47341,
											"end": 47361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 47341,
											"end": 47361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47341,
											"end": 47361,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 47341,
											"end": 47361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47372,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47385,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47341,
											"end": 47385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47364,
											"end": 47378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 47422,
											"end": 47476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 28626,
											"end": 28636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 47422,
											"end": 47455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47438,
											"end": 47454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47422,
											"end": 47455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47422,
											"end": 47476,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 47422,
											"end": 47476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47398,
											"end": 47476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47398,
											"end": 47476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47487,
											"end": 47502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47505,
											"end": 47578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 28501,
											"end": 28505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 47505,
											"end": 47554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 47523,
											"end": 47531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47532,
											"end": 47536,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47523,
											"end": 47553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47505,
											"end": 47518,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47505,
											"end": 47518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47505,
											"end": 47522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47505,
											"end": 47554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47505,
											"end": 47578,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 47505,
											"end": 47578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47487,
											"end": 47578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47487,
											"end": 47578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47589,
											"end": 47604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 47619,
											"end": 47623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47619,
											"end": 47634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47619,
											"end": 47634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47619,
											"end": 47634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47607,
											"end": 47614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47607,
											"end": 47618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 47607,
											"end": 47618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 47607,
											"end": 47635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47589,
											"end": 47635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47589,
											"end": 47635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47676,
											"end": 47705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 47690,
											"end": 47695,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47676,
											"end": 47689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 47676,
											"end": 47705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47676,
											"end": 47705,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 47676,
											"end": 47705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47713,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5946,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 5475,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5801,
											"end": 5809,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 5861,
											"end": 5917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6554,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 6422,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 6511,
											"end": 6512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 6507,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6546,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6422,
											"end": 6554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4585,
											"end": 4721,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4585,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4643,
											"end": 4650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 4674,
											"end": 4675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 4670,
											"end": 4713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4121,
											"end": 4302,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 4121,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 4227,
											"end": 4273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 669,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 669,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 767,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 669,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 775,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21026,
											"end": 21271,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 21026,
											"end": 21271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 21176,
											"end": 21181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21213,
											"end": 21240,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 21213,
											"end": 21240,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21213,
											"end": 21240,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21246,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21248,
											"end": 21250,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21252,
											"end": 21257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "tag",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 21148,
											"end": 21265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47852,
											"end": 48354,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 47852,
											"end": 48354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47929,
											"end": 47940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47929,
											"end": 47940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47925,
											"end": 48347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 47925,
											"end": 48347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48072,
											"end": 48079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48072,
											"end": 48079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48040,
											"end": 48044,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "954"
										},
										{
											"begin": 48040,
											"end": 48054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48054,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 48040,
											"end": 48054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48063,
											"end": 48067,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 48063,
											"end": 48067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "tag",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "tag",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "tag",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 48040,
											"end": 48069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48040,
											"end": 48079,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48036,
											"end": 48139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48036,
											"end": 48139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 48036,
											"end": 48139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48100,
											"end": 48123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 48100,
											"end": 48121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 48100,
											"end": 48123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48100,
											"end": 48123,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 48100,
											"end": 48123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48153,
											"end": 48168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48153,
											"end": 48168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48171,
											"end": 48175,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "954"
										},
										{
											"begin": 48171,
											"end": 48185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48185,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 48171,
											"end": 48185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48198,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 48194,
											"end": 48198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "tag",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "tag",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "tag",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 48171,
											"end": 48200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48153,
											"end": 48200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48153,
											"end": 48200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48229,
											"end": 48236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48219,
											"end": 48226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48219,
											"end": 48236,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48215,
											"end": 48290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48215,
											"end": 48290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 48215,
											"end": 48290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48267,
											"end": 48274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48257,
											"end": 48274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48257,
											"end": 48274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48215,
											"end": 48290,
											"name": "tag",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 48215,
											"end": 48290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48304,
											"end": 48335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 48304,
											"end": 48321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48304,
											"end": 48308,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "954"
										},
										{
											"begin": 48304,
											"end": 48321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48322,
											"end": 48325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48327,
											"end": 48334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48304,
											"end": 48321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 48304,
											"end": 48335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48304,
											"end": 48335,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 48304,
											"end": 48335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47925,
											"end": 48347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 48354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 48354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 48354,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20808,
											"end": 21020,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 20808,
											"end": 21020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 20935,
											"end": 20940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20972,
											"end": 20995,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 20972,
											"end": 20995,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20972,
											"end": 20995,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 20999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21006,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 20949,
											"end": 21007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7050,
											"end": 7328,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 7050,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "tag",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "tag",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7328,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7050,
											"end": 7328,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5024,
											"end": 5216,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 5024,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "tag",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5024,
											"end": 5216,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23261,
											"end": 24025,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 23261,
											"end": 24025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23669,
											"end": 23692,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 23730,
											"end": 23734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23715,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23702,
											"end": 23729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 23702,
											"end": 23729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "tag",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 23702,
											"end": 23771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23782,
											"end": 23799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23782,
											"end": 23799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23669,
											"end": 23771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23669,
											"end": 23771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23782,
											"end": 23803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 24020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 23778,
											"end": 24020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23929,
											"end": 23939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 23918,
											"end": 23948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 23900,
											"end": 24012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17865,
											"end": 18061,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 17865,
											"end": 18061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17980,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18000,
											"end": 18053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 18023,
											"end": 18029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18031,
											"end": 18035,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 18038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18040,
											"end": 18052,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 18000,
											"end": 18053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18000,
											"end": 18053,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 18000,
											"end": 18053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 18053,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17865,
											"end": 18061,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17865,
											"end": 18061,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19242,
											"end": 20221,
											"name": "tag",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 19242,
											"end": 20221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19372,
											"end": 19384,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19405,
											"end": 19423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 19416,
											"end": 19422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19405,
											"end": 19415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 19405,
											"end": 19423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19405,
											"end": 19423,
											"name": "tag",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 19405,
											"end": 19423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "tag",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 19397,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19531,
											"end": 19543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19545,
											"end": 19568,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19572,
											"end": 19578,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19572,
											"end": 19583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19592,
											"end": 19600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19607,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19623,
											"end": 19630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 20214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 20214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 19619,
											"end": 20214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19654,
											"end": 19664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19647,
											"end": 19664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 19647,
											"end": 19664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19647,
											"end": 19664,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19619,
											"end": 20214,
											"name": "tag",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 19619,
											"end": 20214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19768,
											"end": 19785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19768,
											"end": 19785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19768,
											"end": 19789,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 20203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 19764,
											"end": 20203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20031,
											"end": 20041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20025,
											"end": 20042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20092,
											"end": 20107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20079,
											"end": 20089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20075,
											"end": 20077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20064,
											"end": 20108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19979,
											"end": 20127,
											"name": "tag",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 19979,
											"end": 20127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20174,
											"end": 20186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 20167,
											"end": 20187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14947,
											"end": 15369,
											"name": "tag",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 14947,
											"end": 15369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15314,
											"end": 15334,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15353,
											"end": 15361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15353,
											"end": 15361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15353,
											"end": 15361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15369,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "502"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 851,
											"end": 1092,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 851,
											"end": 1092,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 851,
											"end": 1092,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 957,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 934,
											"end": 941,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 930,
											"end": 953,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 926,
											"end": 958,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "668"
										},
										{
											"begin": 923,
											"end": 925,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "tag",
											"source": -1,
											"value": "668"
										},
										{
											"begin": 923,
											"end": 925,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1459,
											"name": "tag",
											"source": -1,
											"value": "173"
										},
										{
											"begin": 1099,
											"end": 1459,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1099,
											"end": 1459,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1459,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1187,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "672"
										},
										{
											"begin": 1185,
											"end": 1187,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1187,
											"name": "tag",
											"source": -1,
											"value": "672"
										},
										{
											"begin": 1185,
											"end": 1187,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "673"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "673"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1375,
											"end": 1377,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1443,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1443,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1443,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1443,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1459,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1459,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1459,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1459,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1459,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1459,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1466,
											"end": 1832,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 1466,
											"end": 1832,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1832,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1832,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 1589,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1584,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1573,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1562,
											"end": 1585,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "677"
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "tag",
											"source": -1,
											"value": "677"
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "678"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "678"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1708,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1806,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1806,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1806,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1806,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1549,
											"end": 1832,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1839,
											"end": 2330,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 1839,
											"end": 2330,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 2330,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 2330,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 2330,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1979,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1965,
											"end": 1974,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1956,
											"end": 1963,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1952,
											"end": 1975,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1948,
											"end": 1980,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "680"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1983,
											"end": 1995,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "tag",
											"source": -1,
											"value": "680"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "681"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "681"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2098,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 2135,
											"end": 2137,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2304,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2282,
											"end": 2304,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 2282,
											"end": 2304,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 2330,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 2330,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2337,
											"end": 2572,
											"name": "tag",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 2337,
											"end": 2572,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2572,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2440,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2435,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2413,
											"end": 2436,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "683"
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2456,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "tag",
											"source": -1,
											"value": "683"
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 219,
											"end": 225,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 255,
											"end": 260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2836,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": 2579,
											"end": 2836,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2836,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2693,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2677,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2662,
											"end": 2694,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "686"
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2697,
											"end": 2709,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "tag",
											"source": -1,
											"value": "686"
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 354,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 348,
											"end": 361,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3360,
											"name": "tag",
											"source": -1,
											"value": "84"
										},
										{
											"begin": 3119,
											"end": 3360,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3360,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3211,
											"end": 3220,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3198,
											"end": 3221,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "692"
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3241,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "tag",
											"source": -1,
											"value": "692"
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3185,
											"end": 3360,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3185,
											"end": 3360,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3367,
											"end": 3630,
											"name": "tag",
											"source": -1,
											"value": "289"
										},
										{
											"begin": 3367,
											"end": 3630,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3630,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3484,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3479,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3468,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3457,
											"end": 3480,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3453,
											"end": 3485,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "694"
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3500,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "tag",
											"source": -1,
											"value": "694"
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 788,
											"end": 801,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 788,
											"end": 801,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3444,
											"end": 3630,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3444,
											"end": 3630,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3637,
											"end": 4003,
											"name": "tag",
											"source": -1,
											"value": "161"
										},
										{
											"begin": 3637,
											"end": 4003,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 4003,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 4003,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3760,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3744,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3733,
											"end": 3756,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3761,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "696"
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3764,
											"end": 3776,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "tag",
											"source": -1,
											"value": "696"
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3879,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3879,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3916,
											"end": 3918,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3959,
											"end": 3968,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3955,
											"end": 3977,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4643,
											"name": "tag",
											"source": -1,
											"value": "184"
										},
										{
											"begin": 4010,
											"end": 4643,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4010,
											"end": 4643,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4643,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4010,
											"end": 4643,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4643,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4173,
											"end": 4176,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 4161,
											"end": 4170,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4148,
											"end": 4171,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "699"
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4180,
											"end": 4192,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "tag",
											"source": -1,
											"value": "699"
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 489,
											"end": 509,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 514,
											"end": 561,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "700"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 514,
											"end": 561,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 514,
											"end": 561,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 561,
											"name": "tag",
											"source": -1,
											"value": "700"
										},
										{
											"begin": 514,
											"end": 561,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4340,
											"end": 4417,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "701"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "701"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4595,
											"end": 4617,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4595,
											"end": 4617,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "702"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "702"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4643,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4643,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4643,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4643,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4643,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4643,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4643,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4650,
											"end": 5016,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 4650,
											"end": 5016,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4650,
											"end": 5016,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 5016,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4771,
											"end": 4773,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4757,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4769,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4742,
											"end": 4774,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "704"
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "tag",
											"source": -1,
											"value": "704"
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4929,
											"end": 4931,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4990,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 4990,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 4990,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4733,
											"end": 5016,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5023,
											"end": 5508,
											"name": "tag",
											"source": -1,
											"value": "128"
										},
										{
											"begin": 5023,
											"end": 5508,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5508,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5508,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5508,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5160,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5144,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 5133,
											"end": 5156,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5129,
											"end": 5161,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "706"
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5164,
											"end": 5176,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "tag",
											"source": -1,
											"value": "706"
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5216,
											"end": 5279,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5216,
											"end": 5279,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5316,
											"end": 5318,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5368,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5324,
											"end": 5387,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5324,
											"end": 5387,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "707"
										},
										{
											"begin": 255,
											"end": 260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "707"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5492,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5492,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5492,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5492,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5508,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5508,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5508,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5508,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5508,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5508,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5515,
											"end": 6126,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": 5515,
											"end": 6126,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5515,
											"end": 6126,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 6126,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5515,
											"end": 6126,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 6126,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5667,
											"end": 5670,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5646,
											"end": 5653,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5642,
											"end": 5665,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5638,
											"end": 5671,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 5637,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "709"
										},
										{
											"begin": 5635,
											"end": 5637,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 5637,
											"name": "tag",
											"source": -1,
											"value": "709"
										},
										{
											"begin": 5635,
											"end": 5637,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5878,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5887,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5897,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5897,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 5936,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5986,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5973,
											"end": 5995,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 640,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 6005,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 6005,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6100,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "702"
										},
										{
											"begin": 255,
											"end": 260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 17392,
											"end": 17663,
											"name": "tag",
											"source": -1,
											"value": "656"
										},
										{
											"begin": 17392,
											"end": 17663,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17392,
											"end": 17663,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32083,
											"end": 32095,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 6885,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "712"
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6928,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6918,
											"end": 6922,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6911,
											"end": 6916,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 6907,
											"end": 6923,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6885,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "713"
										},
										{
											"begin": 6885,
											"end": 6937,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6885,
											"end": 6937,
											"name": "tag",
											"source": -1,
											"value": "712"
										},
										{
											"begin": 6885,
											"end": 6937,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 17526,
											"end": 17663,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17526,
											"end": 17663,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17670,
											"end": 17892,
											"name": "tag",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 17670,
											"end": 17892,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32953,
											"end": 32995,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17797,
											"end": 17799,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17782,
											"end": 17800,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17782,
											"end": 17800,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17768,
											"end": 17892,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18144,
											"end": 18588,
											"name": "tag",
											"source": -1,
											"value": "609"
										},
										{
											"begin": 18144,
											"end": 18588,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32953,
											"end": 32995,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 18491,
											"end": 18493,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18476,
											"end": 18494,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18476,
											"end": 18494,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18574,
											"end": 18576,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 18559,
											"end": 18577,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 18559,
											"end": 18577,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18327,
											"end": 18329,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 18312,
											"end": 18330,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18312,
											"end": 18330,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18298,
											"end": 18588,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18595,
											"end": 18928,
											"name": "tag",
											"source": -1,
											"value": "296"
										},
										{
											"begin": 18595,
											"end": 18928,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32953,
											"end": 32995,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18914,
											"end": 18916,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18899,
											"end": 18917,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18899,
											"end": 18917,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 18750,
											"end": 18752,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18735,
											"end": 18753,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18721,
											"end": 18928,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18935,
											"end": 19145,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 18935,
											"end": 19145,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32742,
											"end": 32755,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32742,
											"end": 32755,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32735,
											"end": 32756,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6491,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6491,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19056,
											"end": 19058,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19041,
											"end": 19059,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19041,
											"end": 19059,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19027,
											"end": 19145,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19676,
											"end": 19986,
											"name": "tag",
											"source": -1,
											"value": "633"
										},
										{
											"begin": 19676,
											"end": 19986,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19676,
											"end": 19986,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19823,
											"end": 19825,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19844,
											"end": 19861,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19837,
											"end": 19884,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7603,
											"end": 7608,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32083,
											"end": 32095,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 32522,
											"end": 32528,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19823,
											"end": 19825,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19812,
											"end": 19821,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 19808,
											"end": 19826,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7697,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "722"
										},
										{
											"begin": 7742,
											"end": 7748,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 19812,
											"end": 19821,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19823,
											"end": 19825,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7728,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 7719,
											"end": 7735,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7697,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "713"
										},
										{
											"begin": 7697,
											"end": 7749,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7697,
											"end": 7749,
											"name": "tag",
											"source": -1,
											"value": "722"
										},
										{
											"begin": 7697,
											"end": 7749,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34539,
											"end": 34541,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 34519,
											"end": 34533,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34535,
											"end": 34542,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 34515,
											"end": 34543,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7800,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7800,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7800,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7800,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7800,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7800,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 19794,
											"end": 19986,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19794,
											"end": 19986,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19993,
											"end": 20409,
											"name": "tag",
											"source": -1,
											"value": "441"
										},
										{
											"begin": 19993,
											"end": 20409,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20193,
											"end": 20195,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20207,
											"end": 20254,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20207,
											"end": 20254,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20207,
											"end": 20254,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8037,
											"end": 8039,
											"name": "PUSH",
											"source": -1,
											"value": "2D"
										},
										{
											"begin": 20178,
											"end": 20196,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20178,
											"end": 20196,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20178,
											"end": 20196,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8107,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A20536864772072617465206D7573742062652067"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8053,
											"end": 8108,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "PUSH",
											"source": -1,
											"value": "726561746572207468616E203000000000000000000000000000000000000000"
										},
										{
											"begin": 8128,
											"end": 8140,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8128,
											"end": 8140,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8128,
											"end": 8140,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8121,
											"end": 8158,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8177,
											"end": 8189,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8177,
											"end": 8189,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8177,
											"end": 8189,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20164,
											"end": 20409,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20416,
											"end": 20832,
											"name": "tag",
											"source": -1,
											"value": "645"
										},
										{
											"begin": 20416,
											"end": 20832,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20616,
											"end": 20618,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20677,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 20630,
											"end": 20677,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20630,
											"end": 20677,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8430,
											"name": "PUSH",
											"source": -1,
											"value": "2A"
										},
										{
											"begin": 20601,
											"end": 20619,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20601,
											"end": 20619,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20601,
											"end": 20619,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8498,
											"name": "PUSH",
											"source": -1,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8444,
											"end": 8499,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8533,
											"end": 8545,
											"name": "PUSH",
											"source": -1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8519,
											"end": 8531,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8519,
											"end": 8531,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8519,
											"end": 8531,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8512,
											"end": 8546,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20587,
											"end": 20832,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20839,
											"end": 21255,
											"name": "tag",
											"source": -1,
											"value": "571"
										},
										{
											"begin": 20839,
											"end": 21255,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21039,
											"end": 21041,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21053,
											"end": 21100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21053,
											"end": 21100,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21053,
											"end": 21100,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8816,
											"end": 8818,
											"name": "PUSH",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 21024,
											"end": 21042,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21024,
											"end": 21042,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21024,
											"end": 21042,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8852,
											"end": 8886,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8887,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8921,
											"end": 8929,
											"name": "PUSH",
											"source": -1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8900,
											"end": 8930,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21010,
											"end": 21255,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21262,
											"end": 21678,
											"name": "tag",
											"source": -1,
											"value": "604"
										},
										{
											"begin": 21262,
											"end": 21678,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21462,
											"end": 21464,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21476,
											"end": 21523,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21476,
											"end": 21523,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21476,
											"end": 21523,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": 21447,
											"end": 21465,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21447,
											"end": 21465,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21447,
											"end": 21465,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9236,
											"end": 9265,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9216,
											"end": 9266,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9285,
											"end": 9297,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9285,
											"end": 9297,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9285,
											"end": 9297,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21433,
											"end": 21678,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21685,
											"end": 22101,
											"name": "tag",
											"source": -1,
											"value": "446"
										},
										{
											"begin": 21685,
											"end": 22101,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21885,
											"end": 21887,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21899,
											"end": 21946,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21899,
											"end": 21946,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21899,
											"end": 21946,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 21870,
											"end": 21888,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21870,
											"end": 21888,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21870,
											"end": 21888,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9572,
											"end": 9606,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A20546F74616C2072617465206D75737420626520"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9552,
											"end": 9607,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9647,
											"name": "PUSH",
											"source": -1,
											"value": "3165313200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9627,
											"end": 9639,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 9627,
											"end": 9639,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9627,
											"end": 9639,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9620,
											"end": 9648,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21856,
											"end": 22101,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22108,
											"end": 22524,
											"name": "tag",
											"source": -1,
											"value": "292"
										},
										{
											"begin": 22108,
											"end": 22524,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22308,
											"end": 22310,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22322,
											"end": 22369,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22322,
											"end": 22369,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22322,
											"end": 22369,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9918,
											"end": 9920,
											"name": "PUSH",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 22293,
											"end": 22311,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22293,
											"end": 22311,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22293,
											"end": 22311,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9954,
											"end": 9988,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A2042616C616E6365206D75737420657863656564"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9934,
											"end": 9989,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "PUSH",
											"source": -1,
											"value": "2030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10009,
											"end": 10021,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10009,
											"end": 10021,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10009,
											"end": 10021,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10028,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10047,
											"end": 10059,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10047,
											"end": 10059,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10047,
											"end": 10059,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22279,
											"end": 22524,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22531,
											"end": 22947,
											"name": "tag",
											"source": -1,
											"value": "594"
										},
										{
											"begin": 22531,
											"end": 22947,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22731,
											"end": 22733,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22745,
											"end": 22792,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22745,
											"end": 22792,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22745,
											"end": 22792,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10298,
											"end": 10300,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 22716,
											"end": 22734,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22716,
											"end": 22734,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22716,
											"end": 22734,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10334,
											"end": 10368,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10314,
											"end": 10369,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10406,
											"name": "PUSH",
											"source": -1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10389,
											"end": 10401,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10389,
											"end": 10401,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10389,
											"end": 10401,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10382,
											"end": 10407,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10426,
											"end": 10438,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 10426,
											"end": 10438,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10426,
											"end": 10438,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22702,
											"end": 22947,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22954,
											"end": 23370,
											"name": "tag",
											"source": -1,
											"value": "330"
										},
										{
											"begin": 22954,
											"end": 23370,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23154,
											"end": 23156,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23168,
											"end": 23215,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23168,
											"end": 23215,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23168,
											"end": 23215,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 23139,
											"end": 23157,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23157,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23157,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10713,
											"end": 10737,
											"name": "PUSH",
											"source": -1,
											"value": "77697468647261773A20496E73756666696369656E7400000000000000000000"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10693,
											"end": 10738,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10757,
											"end": 10769,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10757,
											"end": 10769,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10757,
											"end": 10769,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23125,
											"end": 23370,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23377,
											"end": 23793,
											"name": "tag",
											"source": -1,
											"value": "482"
										},
										{
											"begin": 23377,
											"end": 23793,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23577,
											"end": 23579,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23591,
											"end": 23638,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 23591,
											"end": 23638,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23591,
											"end": 23638,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11008,
											"end": 11010,
											"name": "PUSH",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 23562,
											"end": 23580,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23562,
											"end": 23580,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23562,
											"end": 23580,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11044,
											"end": 11063,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F6E6520424550323020746F6B656E73000000000000000000000000000000"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11024,
											"end": 11064,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11083,
											"end": 11095,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11083,
											"end": 11095,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11083,
											"end": 11095,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23548,
											"end": 23793,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23800,
											"end": 24216,
											"name": "tag",
											"source": -1,
											"value": "268"
										},
										{
											"begin": 23800,
											"end": 24216,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24000,
											"end": 24002,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24014,
											"end": 24061,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24014,
											"end": 24061,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24014,
											"end": 24061,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23985,
											"end": 24003,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23985,
											"end": 24003,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23985,
											"end": 24003,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11370,
											"end": 11404,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11350,
											"end": 11405,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11424,
											"end": 11436,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11424,
											"end": 11436,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11424,
											"end": 11436,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23971,
											"end": 24216,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24223,
											"end": 24639,
											"name": "tag",
											"source": -1,
											"value": "221"
										},
										{
											"begin": 24223,
											"end": 24639,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24423,
											"end": 24425,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24437,
											"end": 24484,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24437,
											"end": 24484,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24437,
											"end": 24484,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 24408,
											"end": 24426,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24408,
											"end": 24426,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24408,
											"end": 24426,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11711,
											"end": 11745,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11691,
											"end": 11746,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11780,
											"end": 11791,
											"name": "PUSH",
											"source": -1,
											"value": "20636F6E74726163740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11766,
											"end": 11778,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11766,
											"end": 11778,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11766,
											"end": 11778,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11759,
											"end": 11792,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11811,
											"end": 11823,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 11811,
											"end": 11823,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11811,
											"end": 11823,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24394,
											"end": 24639,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24646,
											"end": 25062,
											"name": "tag",
											"source": -1,
											"value": "530"
										},
										{
											"begin": 24646,
											"end": 25062,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24846,
											"end": 24848,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24860,
											"end": 24907,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24860,
											"end": 24907,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24860,
											"end": 24907,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12062,
											"end": 12064,
											"name": "PUSH",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 24831,
											"end": 24849,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24831,
											"end": 24849,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24831,
											"end": 24849,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12098,
											"end": 12132,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A205468652061646472657373206973206E6F7420"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12078,
											"end": 12133,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12167,
											"end": 12201,
											"name": "PUSH",
											"source": -1,
											"value": "617661696C61626C6520746F206465706F73697420696E207468697320706F6F"
										},
										{
											"begin": 12153,
											"end": 12165,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12153,
											"end": 12165,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12153,
											"end": 12165,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12146,
											"end": 12202,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12236,
											"end": 12239,
											"name": "PUSH",
											"source": -1,
											"value": "6C00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12222,
											"end": 12234,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 12222,
											"end": 12234,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12222,
											"end": 12234,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12240,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12259,
											"end": 12271,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 12259,
											"end": 12271,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12259,
											"end": 12271,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24817,
											"end": 25062,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25069,
											"end": 25485,
											"name": "tag",
											"source": -1,
											"value": "654"
										},
										{
											"begin": 25069,
											"end": 25485,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25269,
											"end": 25271,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25283,
											"end": 25330,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25283,
											"end": 25330,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25283,
											"end": 25330,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12510,
											"end": 12512,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": 25254,
											"end": 25272,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25254,
											"end": 25272,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25254,
											"end": 25272,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12546,
											"end": 12577,
											"name": "PUSH",
											"source": -1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12526,
											"end": 12578,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12597,
											"end": 12609,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12597,
											"end": 12609,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12597,
											"end": 12609,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25240,
											"end": 25485,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25492,
											"end": 25908,
											"name": "tag",
											"source": -1,
											"value": "275"
										},
										{
											"begin": 25492,
											"end": 25908,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25692,
											"end": 25694,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25706,
											"end": 25753,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 25706,
											"end": 25753,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25706,
											"end": 25753,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12848,
											"end": 12850,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 25677,
											"end": 25695,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25677,
											"end": 25695,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25677,
											"end": 25695,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12884,
											"end": 12918,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A204275726E2061646D696E206164647265737320"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12864,
											"end": 12919,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12953,
											"end": 12987,
											"name": "PUSH",
											"source": -1,
											"value": "6973207468652073616D6520776974682063757272656E742061646472657373"
										},
										{
											"begin": 12939,
											"end": 12951,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 12939,
											"end": 12951,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12939,
											"end": 12951,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12932,
											"end": 12988,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13007,
											"end": 13019,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 13007,
											"end": 13019,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13007,
											"end": 13019,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25663,
											"end": 25908,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25915,
											"end": 26331,
											"name": "tag",
											"source": -1,
											"value": "238"
										},
										{
											"begin": 25915,
											"end": 26331,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26115,
											"end": 26117,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26129,
											"end": 26176,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26129,
											"end": 26176,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26129,
											"end": 26176,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13258,
											"end": 13260,
											"name": "PUSH",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 26100,
											"end": 26118,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26100,
											"end": 26118,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26100,
											"end": 26118,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13294,
											"end": 13328,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A20496E76616C6964206E657720626F6F7374206D"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13274,
											"end": 13329,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13363,
											"end": 13374,
											"name": "PUSH",
											"source": -1,
											"value": "756C7469706C6965720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13349,
											"end": 13361,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13349,
											"end": 13361,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13349,
											"end": 13361,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13342,
											"end": 13375,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26086,
											"end": 26331,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26338,
											"end": 26754,
											"name": "tag",
											"source": -1,
											"value": "485"
										},
										{
											"begin": 26338,
											"end": 26754,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26538,
											"end": 26540,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26552,
											"end": 26599,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26552,
											"end": 26599,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26552,
											"end": 26599,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13645,
											"end": 13647,
											"name": "PUSH",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 26523,
											"end": 26541,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26523,
											"end": 26541,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26523,
											"end": 26541,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13681,
											"end": 13715,
											"name": "PUSH",
											"source": -1,
											"value": "5348445720746F6B656E2063616E277420626520616464656420746F20666172"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13661,
											"end": 13716,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13750,
											"end": 13759,
											"name": "PUSH",
											"source": -1,
											"value": "6D20706F6F6C7300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13736,
											"end": 13748,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 13736,
											"end": 13748,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13736,
											"end": 13748,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13729,
											"end": 13760,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13779,
											"end": 13791,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 13779,
											"end": 13791,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13779,
											"end": 13791,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26509,
											"end": 26754,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26761,
											"end": 27177,
											"name": "tag",
											"source": -1,
											"value": "272"
										},
										{
											"begin": 26761,
											"end": 27177,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26961,
											"end": 26963,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26975,
											"end": 27022,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 26975,
											"end": 27022,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26975,
											"end": 27022,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14030,
											"end": 14032,
											"name": "PUSH",
											"source": -1,
											"value": "2D"
										},
										{
											"begin": 26946,
											"end": 26964,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26946,
											"end": 26964,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26946,
											"end": 26964,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14066,
											"end": 14100,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A204275726E2061646D696E206164647265737320"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14046,
											"end": 14101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14135,
											"end": 14150,
											"name": "PUSH",
											"source": -1,
											"value": "6D7573742062652076616C696400000000000000000000000000000000000000"
										},
										{
											"begin": 14121,
											"end": 14133,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14121,
											"end": 14133,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14121,
											"end": 14133,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14114,
											"end": 14151,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14170,
											"end": 14182,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 14170,
											"end": 14182,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14170,
											"end": 14182,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26932,
											"end": 27177,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27184,
											"end": 27600,
											"name": "tag",
											"source": -1,
											"value": "225"
										},
										{
											"begin": 27184,
											"end": 27600,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27384,
											"end": 27386,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27398,
											"end": 27445,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 27398,
											"end": 27445,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27398,
											"end": 27445,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14421,
											"end": 14423,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 27369,
											"end": 27387,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27369,
											"end": 27387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27369,
											"end": 27387,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14457,
											"end": 14490,
											"name": "PUSH",
											"source": -1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14437,
											"end": 14491,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14522,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14510,
											"end": 14522,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14522,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27355,
											"end": 27600,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27607,
											"end": 28023,
											"name": "tag",
											"source": -1,
											"value": "460"
										},
										{
											"begin": 27607,
											"end": 28023,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27807,
											"end": 27809,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27821,
											"end": 27868,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 27821,
											"end": 27868,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27821,
											"end": 27868,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14761,
											"end": 14763,
											"name": "PUSH",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 27792,
											"end": 27810,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27792,
											"end": 27810,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27792,
											"end": 27810,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14797,
											"end": 14831,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A204E657720626F6F737420636F6E747261637420"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14777,
											"end": 14832,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14866,
											"end": 14889,
											"name": "PUSH",
											"source": -1,
											"value": "61646472657373206D7573742062652076616C69640000000000000000000000"
										},
										{
											"begin": 14852,
											"end": 14864,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 14852,
											"end": 14864,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14852,
											"end": 14864,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14845,
											"end": 14890,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27778,
											"end": 28023,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28030,
											"end": 28446,
											"name": "tag",
											"source": -1,
											"value": "234"
										},
										{
											"begin": 28030,
											"end": 28446,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28230,
											"end": 28232,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28244,
											"end": 28291,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 28244,
											"end": 28291,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28244,
											"end": 28291,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15160,
											"end": 15162,
											"name": "PUSH",
											"source": -1,
											"value": "2F"
										},
										{
											"begin": 28215,
											"end": 28233,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28215,
											"end": 28233,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28215,
											"end": 28233,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15196,
											"end": 15230,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A204F6E6C7920726567756C6172206661726D2063"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15176,
											"end": 15231,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15282,
											"name": "PUSH",
											"source": -1,
											"value": "6F756C6420626520626F6F737465640000000000000000000000000000000000"
										},
										{
											"begin": 15251,
											"end": 15263,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15251,
											"end": 15263,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15251,
											"end": 15263,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15244,
											"end": 15283,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15302,
											"end": 15314,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 15302,
											"end": 15314,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15302,
											"end": 15314,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28201,
											"end": 28446,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28453,
											"end": 28869,
											"name": "tag",
											"source": -1,
											"value": "229"
										},
										{
											"begin": 28453,
											"end": 28869,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28653,
											"end": 28655,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28667,
											"end": 28714,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 28667,
											"end": 28714,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28667,
											"end": 28714,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15553,
											"end": 15555,
											"name": "PUSH",
											"source": -1,
											"value": "2B"
										},
										{
											"begin": 28638,
											"end": 28656,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28638,
											"end": 28656,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28638,
											"end": 28656,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15589,
											"end": 15623,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A2054686520757365722061646472657373206D75"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15569,
											"end": 15624,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15658,
											"end": 15671,
											"name": "PUSH",
											"source": -1,
											"value": "73742062652076616C6964000000000000000000000000000000000000000000"
										},
										{
											"begin": 15644,
											"end": 15656,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15644,
											"end": 15656,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15644,
											"end": 15656,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15637,
											"end": 15672,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15691,
											"end": 15703,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 15691,
											"end": 15703,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15691,
											"end": 15703,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28624,
											"end": 28869,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28876,
											"end": 29292,
											"name": "tag",
											"source": -1,
											"value": "468"
										},
										{
											"begin": 28876,
											"end": 29292,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29076,
											"end": 29078,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29090,
											"end": 29137,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 29090,
											"end": 29137,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29090,
											"end": 29137,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15942,
											"end": 15944,
											"name": "PUSH",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 29061,
											"end": 29079,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29061,
											"end": 29079,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29061,
											"end": 29079,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32510,
											"end": 32529,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15978,
											"end": 16012,
											"name": "PUSH",
											"source": -1,
											"value": "734D6173746572436865663A20546865207768697465206C6973742061646472"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32550,
											"end": 32564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15958,
											"end": 16013,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16047,
											"end": 16066,
											"name": "PUSH",
											"source": -1,
											"value": "657373206D7573742062652076616C6964000000000000000000000000000000"
										},
										{
											"begin": 16033,
											"end": 16045,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16033,
											"end": 16045,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16033,
											"end": 16045,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16026,
											"end": 16067,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16086,
											"end": 16098,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 16086,
											"end": 16098,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16086,
											"end": 16098,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29047,
											"end": 29292,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 29299,
											"end": 29622,
											"name": "tag",
											"source": -1,
											"value": "117"
										},
										{
											"begin": 29299,
											"end": 29622,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29299,
											"end": 29622,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29476,
											"end": 29479,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 29465,
											"end": 29474,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29461,
											"end": 29480,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29453,
											"end": 29480,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29453,
											"end": 29480,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16403,
											"end": 16419,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16397,
											"end": 16420,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 17230,
											"end": 17233,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16579,
											"end": 16583,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16577,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16568,
											"end": 16584,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16562,
											"end": 16585,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16579,
											"end": 16583,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16643,
											"end": 16646,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16639,
											"end": 16653,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16739,
											"end": 16743,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 16732,
											"end": 16737,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16728,
											"end": 16744,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16722,
											"end": 16745,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16739,
											"end": 16743,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 16803,
											"end": 16806,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16799,
											"end": 16813,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16906,
											"end": 16910,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16899,
											"end": 16904,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16895,
											"end": 16911,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16889,
											"end": 16912,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16906,
											"end": 16910,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16970,
											"end": 16973,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16966,
											"end": 16980,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17065,
											"end": 17069,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 17058,
											"end": 17063,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 17054,
											"end": 17070,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17048,
											"end": 17071,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 32742,
											"end": 32755,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32735,
											"end": 32756,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 17065,
											"end": 17069,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 17123,
											"end": 17126,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6491,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29447,
											"end": 29622,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 29447,
											"end": 29622,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 29447,
											"end": 29622,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29447,
											"end": 29622,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29447,
											"end": 29622,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 29629,
											"end": 29851,
											"name": "tag",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 29629,
											"end": 29851,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29756,
											"end": 29758,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29741,
											"end": 29759,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29741,
											"end": 29759,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29727,
											"end": 29851,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 29858,
											"end": 30179,
											"name": "tag",
											"source": -1,
											"value": "496"
										},
										{
											"begin": 29858,
											"end": 30179,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 32742,
											"end": 32755,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32735,
											"end": 32756,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 30165,
											"end": 30167,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30150,
											"end": 30168,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30150,
											"end": 30168,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6491,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30007,
											"end": 30009,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 29992,
											"end": 30010,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29992,
											"end": 30010,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29978,
											"end": 30179,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 30186,
											"end": 30535,
											"name": "tag",
											"source": -1,
											"value": "353"
										},
										{
											"begin": 30186,
											"end": 30535,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30521,
											"end": 30523,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30506,
											"end": 30524,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30506,
											"end": 30524,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7388,
											"end": 7446,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 30349,
											"end": 30351,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30334,
											"end": 30352,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30334,
											"end": 30352,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30320,
											"end": 30535,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 30882,
											"end": 31326,
											"name": "tag",
											"source": -1,
											"value": "164"
										},
										{
											"begin": 30882,
											"end": 31326,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31229,
											"end": 31231,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 31214,
											"end": 31232,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31214,
											"end": 31232,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31312,
											"end": 31314,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 31297,
											"end": 31315,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 31297,
											"end": 31315,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31065,
											"end": 31067,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 31050,
											"end": 31068,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31050,
											"end": 31068,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 31036,
											"end": 31326,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 31333,
											"end": 31989,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 31333,
											"end": 31989,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31731,
											"end": 31733,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 31716,
											"end": 31734,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31814,
											"end": 31816,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 31799,
											"end": 31817,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 31799,
											"end": 31817,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31897,
											"end": 31899,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 31882,
											"end": 31900,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31882,
											"end": 31900,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17260,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 32742,
											"end": 32755,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32735,
											"end": 32756,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 31974,
											"end": 31977,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 31959,
											"end": 31978,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 31959,
											"end": 31978,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6491,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 31566,
											"end": 31569,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 31551,
											"end": 31570,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31551,
											"end": 31570,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 31537,
											"end": 31989,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34175,
											"end": 34443,
											"name": "tag",
											"source": -1,
											"value": "713"
										},
										{
											"begin": 34175,
											"end": 34443,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34240,
											"end": 34241,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "tag",
											"source": -1,
											"value": "753"
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34261,
											"end": 34267,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34258,
											"end": 34259,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34255,
											"end": 34268,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "755"
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34328,
											"end": 34339,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34328,
											"end": 34339,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34328,
											"end": 34339,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34322,
											"end": 34340,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 34309,
											"end": 34320,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34309,
											"end": 34320,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 34309,
											"end": 34320,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34302,
											"end": 34341,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34283,
											"end": 34285,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 34276,
											"end": 34286,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "753"
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "tag",
											"source": -1,
											"value": "755"
										},
										{
											"begin": 34247,
											"end": 34348,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34363,
											"end": 34369,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34360,
											"end": 34361,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34357,
											"end": 34370,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 34354,
											"end": 34356,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 34354,
											"end": 34356,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "356"
										},
										{
											"begin": 34354,
											"end": 34356,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34240,
											"end": 34241,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34410,
											"end": 34426,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 34410,
											"end": 34426,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34403,
											"end": 34430,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34224,
											"end": 34443,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34556,
											"end": 34673,
											"name": "tag",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 34556,
											"end": 34673,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32953,
											"end": 32995,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34643,
											"end": 34648,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32942,
											"end": 32996,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 34618,
											"end": 34623,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34615,
											"end": 34650,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 34605,
											"end": 34607,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "758"
										},
										{
											"begin": 34605,
											"end": 34607,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34664,
											"end": 34665,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34664,
											"end": 34665,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 34654,
											"end": 34666,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 34605,
											"end": 34607,
											"name": "tag",
											"source": -1,
											"value": "758"
										},
										{
											"begin": 34605,
											"end": 34607,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34599,
											"end": 34673,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34599,
											"end": 34673,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34680,
											"end": 34791,
											"name": "tag",
											"source": -1,
											"value": "675"
										},
										{
											"begin": 34680,
											"end": 34791,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34761,
											"end": 34766,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 32742,
											"end": 32755,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32735,
											"end": 32756,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 34739,
											"end": 34744,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34736,
											"end": 34768,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 34726,
											"end": 34728,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "758"
										},
										{
											"begin": 34726,
											"end": 34728,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34782,
											"end": 34783,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34782,
											"end": 34783,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 34772,
											"end": 34784,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ACC_SHDW_PRECISION()": "16e80f4d",
							"BOOST_PRECISION()": "cc6db2da",
							"DARK_CHEF()": "c3083016",
							"MASTERCHEF_SHDW_PER_BLOCK()": "f5b91cd3",
							"MASTER_PID()": "61621aaa",
							"MAX_BOOST_PRECISION()": "69b02128",
							"SHDW()": "03dcff74",
							"SHDW_RATE_TOTAL_PRECISION()": "d2ce6ae8",
							"add(uint256,address,bool,bool)": "c507aeaa",
							"boostContract()": "dfcedeee",
							"burnAdmin()": "81bdf98c",
							"burnShdw(bool)": "36183ed6",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getBoostMultiplier(address,uint256)": "033186e8",
							"harvestFromMasterChef()": "4f70b15a",
							"init(address)": "19ab453c",
							"lastBurnedBlock()": "78db4c34",
							"lpToken(uint256)": "78ed5d1f",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"pendingShdw(uint256,address)": "c799b59d",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"shdwPerBlock(bool)": "f474309e",
							"shdwPerBlockToBurn()": "19f95e2e",
							"shdwRateToBurn()": "6661100f",
							"shdwRateToRegularFarm()": "f5a26f40",
							"shdwRateToSpecialFarm()": "6fda08c3",
							"totalRegularAllocPoint()": "c40d337b",
							"totalSpecialAllocPoint()": "99d7e84a",
							"transferOwnership(address)": "f2fde38b",
							"updateBoostContract(address)": "9dd2fcc3",
							"updateBoostMultiplier(address,uint256,uint256)": "041a84c9",
							"updateBurnAdmin(address)": "0bb844bc",
							"updatePool(uint256)": "51eb05a6",
							"updateShdwRate(uint256,uint256,uint256,bool)": "815d087f",
							"updateWhiteList(address,bool)": "ac1d0609",
							"userInfo(uint256,address)": "93f1a40b",
							"whiteList(address)": "372c12b1",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"_DARK_CHEF\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_SHDW\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_MASTER_PID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_burnAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Init\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"}],\"name\":\"SetPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boostContract\",\"type\":\"address\"}],\"name\":\"UpdateBoostContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMultiplier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"UpdateBoostMultiplier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"UpdateBurnAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accShdwPerShare\",\"type\":\"uint256\"}],\"name\":\"UpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"regularFarmRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"specialFarmRate\",\"type\":\"uint256\"}],\"name\":\"UpdateShdwRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"UpdateWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_SHDW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOOST_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DARK_CHEF\",\"outputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MASTERCHEF_SHDW_PER_BLOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MASTER_PID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BOOST_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHDW\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHDW_RATE_TOTAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isRegular\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"burnShdw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getBoostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestFromMasterChef\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"dummyToken\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBurnedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingShdw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"accShdwPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBoostedShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pools\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isRegular\",\"type\":\"bool\"}],\"name\":\"shdwPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwPerBlockToBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwRateToBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwRateToRegularFarm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shdwRateToSpecialFarm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRegularAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSpecialAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBoostContract\",\"type\":\"address\"}],\"name\":\"updateBoostContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateBoostMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"updateBurnAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"accShdwPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBoostedShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"internalType\":\"struct sMasterChef.PoolInfo\",\"name\":\"pool\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularFarmRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_specialFarmRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"updateShdwRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"updateWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boostMultiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(uint256,address,bool,bool)\":{\"params\":{\"_allocPoint\":\"Number of allocation points for the new pool.\",\"_isRegular\":\"Whether the pool is regular or special. LP farms are always \\\"regular\\\". \\\"Special\\\" pools are\",\"_lpToken\":\"Address of the LP BEP-20 token.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation. only for Shdw distributions within ShadowSwap products.\"}},\"burnShdw(bool)\":{\"params\":{\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"deposit(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of LP tokens to deposit.\",\"_pid\":\"The id of the pool. See `poolInfo`.\"}},\"emergencyWithdraw(uint256)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\"}},\"getBoostMultiplier(address,uint256)\":{\"params\":{\"_pid\":\"The pool id.\",\"_user\":\"The user address.\"}},\"init(address)\":{\"params\":{\"dummyToken\":\"The address of the BEP-20 token to be deposited into MCV1.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingShdw(uint256,address)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\",\"_user\":\"Address of the user.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"set(uint256,uint256,bool)\":{\"params\":{\"_allocPoint\":\"New number of allocation points for the pool.\",\"_pid\":\"The id of the pool. See `poolInfo`.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"shdwPerBlock(bool)\":{\"params\":{\"_isRegular\":\"If the pool belongs to regular or special.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBoostContract(address)\":{\"params\":{\"_newBoostContract\":\"The new address for handling all the share boosts.\"}},\"updateBoostMultiplier(address,uint256,uint256)\":{\"params\":{\"_newMultiplier\":\"New boost multiplier.\",\"_pid\":\"The pool id for the boost factor updates.\",\"_user\":\"The user address for boost factor updates.\"}},\"updateBurnAdmin(address)\":{\"params\":{\"_newAdmin\":\"The new burn admin address.\"}},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\"},\"returns\":{\"pool\":\"Returns the pool that was updated.\"}},\"updateShdwRate(uint256,uint256,uint256,bool)\":{\"params\":{\"_burnRate\":\"The % of Shdw to burn each block.\",\"_regularFarmRate\":\"The % of Shdw to regular pools each block.\",\"_specialFarmRate\":\"The % of Shdw to special pools each block.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"updateWhiteList(address,bool)\":{\"params\":{\"_isValid\":\"The flag for valid or invalid.\",\"_user\":\"The address to be updated.\"}},\"withdraw(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of LP tokens to withdraw.\",\"_pid\":\"The id of the pool. See `poolInfo`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BOOST_PRECISION()\":{\"notice\":\"Basic boost factor, none boosted user's boost factor\"},\"DARK_CHEF()\":{\"notice\":\"Address of MCV1 contract.\"},\"MASTERCHEF_SHDW_PER_BLOCK()\":{\"notice\":\"40 Shdws per block in MCV1\"},\"MASTER_PID()\":{\"notice\":\"The pool id of the MCV2 mock token pool in MCV1.\"},\"MAX_BOOST_PRECISION()\":{\"notice\":\"Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION\"},\"SHDW()\":{\"notice\":\"Address of Shdw contract.\"},\"SHDW_RATE_TOTAL_PRECISION()\":{\"notice\":\"total Shdw rate = toBurn + toRegular + toSpecial\"},\"add(uint256,address,bool,bool)\":{\"notice\":\"Add a new pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.\"},\"boostContract()\":{\"notice\":\"The contract handles the share boosts.\"},\"burnAdmin()\":{\"notice\":\"The only address can withdraw all the burn SHDW.\"},\"burnShdw(bool)\":{\"notice\":\"Send Shdw pending for burn to `burnAdmin`.\"},\"constructor\":\"_DARK_CHEF The ShadowSwap MCV1 contract address.  _Shdw The Shadow token contract address.  _MASTER_PID The pool id of the dummy pool on the MCV1.  _burnAdmin The address of burn admin.\",\"deposit(uint256,uint256)\":{\"notice\":\"Deposit LP tokens to pool.\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Withdraw without caring about the rewards. EMERGENCY ONLY.\"},\"getBoostMultiplier(address,uint256)\":{\"notice\":\"Get user boost multiplier for specific pool id.\"},\"harvestFromMasterChef()\":{\"notice\":\"Harvests Shdw from `DARK_CHEF` MCV1 and pool `MASTER_PID` to MCV2.\"},\"init(address)\":{\"notice\":\"Deposits a dummy token to `DARK_CHEF` MCV1. This is required because MCV1 holds the minting permission of Shdw. It will transfer all the `dummyToken` in the tx sender address. The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint.\"},\"lpToken(uint256)\":{\"notice\":\"Address of the LP token for each MCV2 pool.\"},\"massUpdatePools()\":{\"notice\":\"Update Shdw reward for all the active pools. Be careful of gas spending!\"},\"pendingShdw(uint256,address)\":{\"notice\":\"View function for checking pending Shdw rewards.\"},\"poolInfo(uint256)\":{\"notice\":\"Info of each MCV2 pool.\"},\"poolLength()\":{\"notice\":\"Returns the number of MCV2 pools.\"},\"set(uint256,uint256,bool)\":{\"notice\":\"Update the given pool's Shdw allocation point. Can only be called by the owner.\"},\"shdwPerBlock(bool)\":{\"notice\":\"Calculates and returns the `amount` of Shdw per block.\"},\"shdwPerBlockToBurn()\":{\"notice\":\"Calculates and returns the `amount` of Shdw per block to burn.\"},\"shdwRateToBurn()\":{\"notice\":\"The last block number of Shdw burn action being executed.Shdw distribute % for burn\"},\"shdwRateToRegularFarm()\":{\"notice\":\"Shdw distribute % for regular farm pool\"},\"shdwRateToSpecialFarm()\":{\"notice\":\"Shdw distribute % for special pools\"},\"totalRegularAllocPoint()\":{\"notice\":\"Total regular allocation points. Must be the sum of all regular pools' allocation points.\"},\"totalSpecialAllocPoint()\":{\"notice\":\"Total special allocation points. Must be the sum of all special pools' allocation points.\"},\"updateBoostContract(address)\":{\"notice\":\"Update boost contract address and max boost factor.\"},\"updateBoostMultiplier(address,uint256,uint256)\":{\"notice\":\"Update user boost factor.\"},\"updateBurnAdmin(address)\":{\"notice\":\"Update burn admin address.\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables for the given pool.\"},\"updateShdwRate(uint256,uint256,uint256,bool)\":{\"notice\":\"Update the % of Shdw distributions for burn, regular pools and special pools.\"},\"updateWhiteList(address,bool)\":{\"notice\":\"Update whitelisted addresses for special pools.\"},\"userInfo(uint256,address)\":{\"notice\":\"Info of each pool user.\"},\"whiteList(address)\":{\"notice\":\"The whitelist of addresses allowed to deposit in special pools.\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraw LP tokens from pool.\"}},\"notice\":\"The (older) MasterChef contract gives out a constant number of Shdw tokens per block. It is the only address with minting rights for Shdw. The idea for this sMasterChef  (sMCV) contract is therefore to be the owner of a dummy token that is deposited into the MasterChef V1 (MCV1) contract. The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sMasterChef.sol\":\"sMasterChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/sMasterChef.sol\":{\"keccak256\":\"0x81e5573fcb59cd934962f1e38ad0cbeac42d19d49092f600c5025b639a8297d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ec29491d193027d76b47ad9914014105c560129714d2daf21b81e3d217d9adf\",\"dweb:/ipfs/QmQrJoDXGoev7uLshXn3oLwMcEhjaAs7UhgB68MvoWHpUC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 336,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 957,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "burnAdmin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 960,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "boostContract",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 964,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(PoolInfo)948_storage)dyn_storage"
							},
							{
								"astId": 968,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "lpToken",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_contract(IBEP20)465)dyn_storage"
							},
							{
								"astId": 975,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)937_storage))"
							},
							{
								"astId": 980,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 986,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "totalRegularAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 989,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "totalSpecialAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1018,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "shdwRateToBurn",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1022,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "shdwRateToRegularFarm",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1026,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "shdwRateToSpecialFarm",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1028,
								"contract": "contracts/sMasterChef.sol:sMasterChef",
								"label": "lastBurnedBlock",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IBEP20)465)dyn_storage": {
								"base": "t_contract(IBEP20)465",
								"encoding": "dynamic_array",
								"label": "contract IBEP20[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)948_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)948_storage",
								"encoding": "dynamic_array",
								"label": "struct sMasterChef.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)465": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)937_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct sMasterChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)937_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)937_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)937_storage)"
							},
							"t_struct(PoolInfo)948_storage": {
								"encoding": "inplace",
								"label": "struct sMasterChef.PoolInfo",
								"members": [
									{
										"astId": 939,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "accShdwPerShare",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 941,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 943,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "allocPoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 945,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "totalBoostedShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 947,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "isRegular",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)937_storage": {
								"encoding": "inplace",
								"label": "struct sMasterChef.UserInfo",
								"members": [
									{
										"astId": 932,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 934,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 936,
										"contract": "contracts/sMasterChef.sol:sMasterChef",
										"label": "boostMultiplier",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"BOOST_PRECISION()": {
								"notice": "Basic boost factor, none boosted user's boost factor"
							},
							"DARK_CHEF()": {
								"notice": "Address of MCV1 contract."
							},
							"MASTERCHEF_SHDW_PER_BLOCK()": {
								"notice": "40 Shdws per block in MCV1"
							},
							"MASTER_PID()": {
								"notice": "The pool id of the MCV2 mock token pool in MCV1."
							},
							"MAX_BOOST_PRECISION()": {
								"notice": "Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION"
							},
							"SHDW()": {
								"notice": "Address of Shdw contract."
							},
							"SHDW_RATE_TOTAL_PRECISION()": {
								"notice": "total Shdw rate = toBurn + toRegular + toSpecial"
							},
							"add(uint256,address,bool,bool)": {
								"notice": "Add a new pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do."
							},
							"boostContract()": {
								"notice": "The contract handles the share boosts."
							},
							"burnAdmin()": {
								"notice": "The only address can withdraw all the burn SHDW."
							},
							"burnShdw(bool)": {
								"notice": "Send Shdw pending for burn to `burnAdmin`."
							},
							"constructor": "_DARK_CHEF The ShadowSwap MCV1 contract address.  _Shdw The Shadow token contract address.  _MASTER_PID The pool id of the dummy pool on the MCV1.  _burnAdmin The address of burn admin.",
							"deposit(uint256,uint256)": {
								"notice": "Deposit LP tokens to pool."
							},
							"emergencyWithdraw(uint256)": {
								"notice": "Withdraw without caring about the rewards. EMERGENCY ONLY."
							},
							"getBoostMultiplier(address,uint256)": {
								"notice": "Get user boost multiplier for specific pool id."
							},
							"harvestFromMasterChef()": {
								"notice": "Harvests Shdw from `DARK_CHEF` MCV1 and pool `MASTER_PID` to MCV2."
							},
							"init(address)": {
								"notice": "Deposits a dummy token to `DARK_CHEF` MCV1. This is required because MCV1 holds the minting permission of Shdw. It will transfer all the `dummyToken` in the tx sender address. The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint."
							},
							"lpToken(uint256)": {
								"notice": "Address of the LP token for each MCV2 pool."
							},
							"massUpdatePools()": {
								"notice": "Update Shdw reward for all the active pools. Be careful of gas spending!"
							},
							"pendingShdw(uint256,address)": {
								"notice": "View function for checking pending Shdw rewards."
							},
							"poolInfo(uint256)": {
								"notice": "Info of each MCV2 pool."
							},
							"poolLength()": {
								"notice": "Returns the number of MCV2 pools."
							},
							"set(uint256,uint256,bool)": {
								"notice": "Update the given pool's Shdw allocation point. Can only be called by the owner."
							},
							"shdwPerBlock(bool)": {
								"notice": "Calculates and returns the `amount` of Shdw per block."
							},
							"shdwPerBlockToBurn()": {
								"notice": "Calculates and returns the `amount` of Shdw per block to burn."
							},
							"shdwRateToBurn()": {
								"notice": "The last block number of Shdw burn action being executed.Shdw distribute % for burn"
							},
							"shdwRateToRegularFarm()": {
								"notice": "Shdw distribute % for regular farm pool"
							},
							"shdwRateToSpecialFarm()": {
								"notice": "Shdw distribute % for special pools"
							},
							"totalRegularAllocPoint()": {
								"notice": "Total regular allocation points. Must be the sum of all regular pools' allocation points."
							},
							"totalSpecialAllocPoint()": {
								"notice": "Total special allocation points. Must be the sum of all special pools' allocation points."
							},
							"updateBoostContract(address)": {
								"notice": "Update boost contract address and max boost factor."
							},
							"updateBoostMultiplier(address,uint256,uint256)": {
								"notice": "Update user boost factor."
							},
							"updateBurnAdmin(address)": {
								"notice": "Update burn admin address."
							},
							"updatePool(uint256)": {
								"notice": "Update reward variables for the given pool."
							},
							"updateShdwRate(uint256,uint256,uint256,bool)": {
								"notice": "Update the % of Shdw distributions for burn, regular pools and special pools."
							},
							"updateWhiteList(address,bool)": {
								"notice": "Update whitelisted addresses for special pools."
							},
							"userInfo(uint256,address)": {
								"notice": "Info of each pool user."
							},
							"whiteList(address)": {
								"notice": "The whitelist of addresses allowed to deposit in special pools."
							},
							"withdraw(uint256,uint256)": {
								"notice": "Withdraw LP tokens from pool."
							}
						},
						"notice": "The (older) MasterChef contract gives out a constant number of Shdw tokens per block. It is the only address with minting rights for Shdw. The idea for this sMasterChef  (sMCV) contract is therefore to be the owner of a dummy token that is deposited into the MasterChef V1 (MCV1) contract. The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/sMasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/sMasterChef.sol",
					"exportedSymbols": {
						"Address": [
							659
						],
						"Context": [
							24
						],
						"IBEP20": [
							465
						],
						"IMasterChef": [
							919
						],
						"Ownable": [
							131
						],
						"ReentrancyGuard": [
							365
						],
						"SafeBEP20": [
							868
						],
						"SafeMath": [
							326
						],
						"sMasterChef": [
							2572
						]
					},
					"id": 2573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "60:33:0"
						},
						{
							"id": 3,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "739:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 8,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "757:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "757:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 7,
												"id": 10,
												"nodeType": "Return",
												"src": "750:17:0"
											}
										]
									},
									"documentation": null,
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 12,
												"src": "722:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "721:17:0"
									},
									"scope": 24,
									"src": "669:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "848:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 17,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$24",
														"typeString": "contract Context"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "859:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 19,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1000:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1000:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 16,
												"id": 21,
												"nodeType": "Return",
												"src": "993:15:0"
											}
										]
									},
									"documentation": null,
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 23,
												"src": "834:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 14,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "833:14:0"
									},
									"scope": 24,
									"src": "783:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2573,
							"src": "636:383:0"
						},
						{
							"id": 25,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1023:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 27,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 24,
										"src": "1575:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$24",
											"typeString": "contract Context"
										}
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "1575:7:0"
								}
							],
							"contractDependencies": [
								24
							],
							"contractKind": "contract",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "1048:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								24
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 131,
									"src": "1590:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1590:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 36,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1648:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1679:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1647:57:0"
									},
									"src": "1621:84:0"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1836:139:0",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 57,
														"src": "1847:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 40,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1847:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 42,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1847:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 45,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1899:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1890:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1890:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1953:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1945:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 50,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1945:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1945:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 54,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1957:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1924:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "EmitStatement",
												"src": "1919:48:0"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1713:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1824:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1836:0:0"
									},
									"scope": 131,
									"src": "1812:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "2103:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "2121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "2114:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1983:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2094:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2093:9:0"
									},
									"scope": 131,
									"src": "2056:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2249:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 71,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "2268:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "2278:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2278:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2268:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2292:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2260:67:0"
											},
											{
												"id": 78,
												"nodeType": "PlaceholderStatement",
												"src": "2338:1:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2143:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 80,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2246:2:0"
									},
									"src": "2228:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2752:94:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2805:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2797:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 88,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2797:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2797:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 86,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2768:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2768:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "EmitStatement",
												"src": "2763:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2819:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2836:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 95,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2828:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2828:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2819:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "2819:19:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2355:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 84,
											"modifierName": {
												"argumentTypes": null,
												"id": 83,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "2742:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2742:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:0"
									},
									"scope": 131,
									"src": "2698:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3071:174:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 111,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "3090:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3110:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3102:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3102:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3102:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3090:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3114:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3082:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3082:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3082:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 121,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "3192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "3200:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "3171:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3171:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "3166:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 125,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3220:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "3229:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3220:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "3220:17:0"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "2854:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 108,
											"modifierName": {
												"argumentTypes": null,
												"id": 107,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "3061:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3061:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "3028:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3027:18:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3071:0:0"
									},
									"scope": 131,
									"src": "3001:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2573,
							"src": "1555:1693:0"
						},
						{
							"id": 132,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3254:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 133,
								"nodeType": "StructuredDocumentation",
								"src": "3281:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 326,
							"linearizedBaseContracts": [
								326
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4188:114:0",
										"statements": [
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 158,
														"src": "4199:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "4211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4215:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4199:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "4235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "4240:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4235:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4243:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4227:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "4227:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 156,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "4293:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 142,
												"id": 157,
												"nodeType": "Return",
												"src": "4286:8:0"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "3882:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "4134:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "4145:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4133:22:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "4179:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4178:9:0"
									},
									"scope": 326,
									"src": "4121:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "4652:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 170,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4674:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 171,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4680:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 169,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															176,
															204
														],
														"referencedDeclaration": 204,
														"src": "4670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4670:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 168,
												"id": 174,
												"nodeType": "Return",
												"src": "4663:50:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4310:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 176,
												"src": "4598:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 176,
												"src": "4609:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4597:22:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 176,
												"src": "4643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4642:9:0"
									},
									"scope": 326,
									"src": "4585:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "5119:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "5138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 190,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "5143:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 192,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "5146:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5130:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "5130:29:0"
											},
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 203,
														"src": "5170:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 197,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "5182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "5186:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5170:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 201,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "5207:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 187,
												"id": 202,
												"nodeType": "Return",
												"src": "5200:8:0"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4729:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "5037:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "5048:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "5059:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5059:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5036:50:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 204,
												"src": "5110:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5109:9:0"
									},
									"scope": 326,
									"src": "5024:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "5542:404:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5778:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5783:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5778:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 220,
												"nodeType": "IfStatement",
												"src": "5774:47:0",
												"trueBody": {
													"id": 219,
													"nodeType": "Block",
													"src": "5786:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5808:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 213,
															"id": 218,
															"nodeType": "Return",
															"src": "5801:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 238,
														"src": "5833:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5845:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "5849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5833:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 228,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "5869:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 229,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "5873:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5869:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 231,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "5878:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5869:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5881:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5861:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "5861:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 236,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "5937:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 237,
												"nodeType": "Return",
												"src": "5930:8:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "5224:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "5488:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "5499:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5487:22:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "5533:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5532:9:0"
									},
									"scope": 326,
									"src": "5475:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6489:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 250,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "6511:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 251,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "6514:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6517:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 249,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															284
														],
														"referencedDeclaration": 284,
														"src": "6507:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6507:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "6500:46:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "5954:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "6435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "6446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6434:22:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "6480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6479:9:0"
									},
									"scope": 326,
									"src": "6422:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "7145:183:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 269,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "7164:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7168:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7164:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 272,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "7171:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7156:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "7156:28:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 283,
														"src": "7195:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "7207:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7207:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7195:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 281,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "7319:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 267,
												"id": 282,
												"nodeType": "Return",
												"src": "7312:8:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6562:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "7063:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "7074:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "7085:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7085:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7062:50:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "7136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7135:9:0"
									},
									"scope": 326,
									"src": "7050:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "7860:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 295,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7882:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 296,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7885:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7888:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 294,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															301,
															325
														],
														"referencedDeclaration": 325,
														"src": "7878:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7878:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "7871:44:0"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "7336:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 301,
												"src": "7806:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 301,
												"src": "7817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7805:22:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 301,
												"src": "7851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7850:9:0"
									},
									"scope": 326,
									"src": "7793:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "8503:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 314,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "8522:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8527:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8522:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 317,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "8530:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8514:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "8514:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "8561:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "8565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8561:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 323,
												"nodeType": "Return",
												"src": "8554:12:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "7931:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "8421:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "8432:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "8443:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8443:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8420:50:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "8494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8493:9:0"
									},
									"scope": 326,
									"src": "8408:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2573,
							"src": "3858:4719:0"
						},
						{
							"id": 327,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "8583:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "8610:765:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 365,
							"linearizedBaseContracts": [
								365
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 331,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 365,
									"src": "10168:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10168:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10208:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 334,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 365,
									"src": "10216:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10216:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10252:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 365,
									"src": "10262:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10262:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "10318:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 339,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "10329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 340,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "10339:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10329:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "10329:22:0"
											}
										]
									},
									"documentation": null,
									"id": 344,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10306:2:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10318:0:0"
									},
									"scope": 365,
									"src": "10294:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "10767:433:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 348,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "10858:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 349,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "10869:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10858:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10879:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10850:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "10850:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 354,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "10991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 355,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "11001:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10991:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "10991:18:0"
											},
											{
												"id": 358,
												"nodeType": "PlaceholderStatement",
												"src": "11022:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 359,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11170:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "11180:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11170:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "11170:22:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "10367:370:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 364,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10764:2:0"
									},
									"src": "10743:457:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2573,
							"src": "9377:1826:0"
						},
						{
							"id": 366,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11209:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 465,
							"linearizedBaseContracts": [
								465
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "11259:64:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11347:2:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "11373:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11372:9:0"
									},
									"scope": 465,
									"src": "11327:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11388:49:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11458:2:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 378,
												"src": "11484:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 375,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11484:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11483:7:0"
									},
									"scope": 465,
									"src": "11441:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "11497:47:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11563:2:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "11589:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11588:15:0"
									},
									"scope": 465,
									"src": "11548:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "11610:45:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11672:2:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "11698:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11698:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11697:15:0"
									},
									"scope": 465,
									"src": "11659:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "11719:50:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11790:2:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "11816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11815:9:0"
									},
									"scope": 465,
									"src": "11773:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "11831:70:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 404,
												"src": "11924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11923:17:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 404,
												"src": "11964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11963:9:0"
									},
									"scope": 465,
									"src": "11905:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "11979:203:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "12204:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "12223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12203:35:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "12257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12256:6:0"
									},
									"scope": 465,
									"src": "12186:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "12269:258:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12549:33:0"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12620:9:0"
									},
									"scope": 465,
									"src": "12531:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "12636:629:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "13286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "13303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13285:33:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "13337:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13337:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13336:6:0"
									},
									"scope": 465,
									"src": "13269:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "13349:288:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "13669:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "13690:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "13714:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13662:71:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "13752:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13751:6:0"
									},
									"scope": 465,
									"src": "13641:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "13764:153:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 455,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 455,
												"src": "13936:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 455,
												"src": "13958:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 455,
												"src": "13978:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13935:57:0"
									},
									"src": "13921:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "13999:145:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 464,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "14163:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "14186:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "14211:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14162:63:0"
									},
									"src": "14148:78:0"
								}
							],
							"scope": 2573,
							"src": "11237:2992:0"
						},
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "14239:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 467,
								"nodeType": "StructuredDocumentation",
								"src": "14266:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 659,
							"linearizedBaseContracts": [
								659
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "15013:356:0",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 483,
														"src": "15215:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "15215:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15304:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15306:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "15326:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "15314:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15314:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15306:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 470,
														"isOffset": false,
														"isSlot": false,
														"src": "15326:7:0",
														"valueSize": 1
													},
													{
														"declaration": 476,
														"isOffset": false,
														"isSlot": false,
														"src": "15306:4:0",
														"valueSize": 1
													}
												],
												"id": 478,
												"nodeType": "InlineAssembly",
												"src": "15295:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 479,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "15353:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15360:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15353:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 474,
												"id": 482,
												"nodeType": "Return",
												"src": "15346:15:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "14360:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "14967:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14966:17:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "15007:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15006:6:0"
									},
									"scope": 659,
									"src": "14947:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "16375:326:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 495,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16402:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		],
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16394:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 493,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16394:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16394:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16394:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 498,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "16419:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16394:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16427:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16386:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "16386:73:0"
											},
											{
												"assignments": [
													504,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 517,
														"src": "16551:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 503,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16551:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 511,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16601:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 505,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "16569:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16569:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 507,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "16592:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "16569:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16569:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16550:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 513,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "16623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16632:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16615:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "16615:78:0"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "15377:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "16323:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16323:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "16350:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16322:43:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16375:0:0"
									},
									"scope": 659,
									"src": "16304:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "17551:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 529,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "17580:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 530,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "17588:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17594:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 528,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															535,
															555
														],
														"referencedDeclaration": 555,
														"src": "17567:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17567:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 527,
												"id": 533,
												"nodeType": "Return",
												"src": "17560:67:0"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "16709:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "17484:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "17500:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17500:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17483:35:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "17537:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17536:14:0"
									},
									"scope": 659,
									"src": "17462:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "17982:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "18023:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "18031:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18037:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 551,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "18040:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 547,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "18000:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18000:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 546,
												"id": 553,
												"nodeType": "Return",
												"src": "17993:60:0"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "17643:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "17887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "17903:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17903:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "17922:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17922:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17886:63:0"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "17968:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17968:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17967:14:0"
									},
									"scope": 659,
									"src": "17865:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "18549:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 568,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "18589:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 569,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "18597:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 570,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "18603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18610:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 567,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															575,
															608
														],
														"referencedDeclaration": 608,
														"src": "18567:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18567:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 566,
												"id": 573,
												"nodeType": "Return",
												"src": "18560:94:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "18069:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "18467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "18483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "18502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18466:50:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "18535:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18534:14:0"
									},
									"scope": 659,
									"src": "18436:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "19059:175:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 592,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "19086:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		],
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19078:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 590,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "19078:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19078:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "19078:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "19103:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19078:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19110:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19070:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "19070:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 601,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "19192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 602,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "19200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "19206:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "19213:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 600,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "19169:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19169:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 588,
												"id": 606,
												"nodeType": "Return",
												"src": "19162:64:0"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "18670:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 608,
												"src": "18949:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 608,
												"src": "18965:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18965:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 608,
												"src": "18984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 608,
												"src": "18999:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18999:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18948:78:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 608,
												"src": "19045:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19044:14:0"
									},
									"scope": 659,
									"src": "18918:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "19386:835:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 623,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "19416:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 622,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "19405:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19405:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19425:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19397:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "19397:60:0"
											},
											{
												"assignments": [
													629,
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 657,
														"src": "19531:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 628,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 657,
														"src": "19545:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 630,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19545:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 636,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "19603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 632,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "19572:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "19572:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 634,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "19592:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "19572:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19572:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19530:78:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 639,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "19623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 655,
													"nodeType": "Block",
													"src": "19682:532:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 643,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "19768:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19768:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19788:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "19768:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 653,
																"nodeType": "Block",
																"src": "20148:55:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 650,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "20174:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 649,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "20167:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20167:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 652,
																		"nodeType": "ExpressionStatement",
																		"src": "20167:20:0"
																	}
																]
															},
															"id": 654,
															"nodeType": "IfStatement",
															"src": "19764:439:0",
															"trueBody": {
																"id": 648,
																"nodeType": "Block",
																"src": "19791:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "19979:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "20002:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "20031:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "20025:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20025:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "20006:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "20075:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "20079:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "20071:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20071:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "20092:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "20064:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20064:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "20064:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 631,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "20031:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 631,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "20079:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 647,
																		"nodeType": "InlineAssembly",
																		"src": "19970:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 656,
												"nodeType": "IfStatement",
												"src": "19619:595:0",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "19632:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 640,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "19654:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 620,
															"id": 641,
															"nodeType": "Return",
															"src": "19647:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "19274:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "19290:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "19309:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "19327:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 615,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19327:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19273:81:0"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "19372:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19372:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19371:14:0"
									},
									"scope": 659,
									"src": "19242:979:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2573,
							"src": "14337:5887:0"
						},
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20228:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "20255:465:0",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 868,
							"linearizedBaseContracts": [
								868
							],
							"name": "SafeBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 664,
									"libraryName": {
										"contractScope": null,
										"id": 662,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 326,
										"src": "20751:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$326",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "20745:27:0",
									"typeName": {
										"id": 663,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20764:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 667,
									"libraryName": {
										"contractScope": null,
										"id": 665,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 659,
										"src": "20782:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$659",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "20776:26:0",
									"typeName": {
										"id": 666,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "20794:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "20900:120:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 677,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "20935:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 680,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "20972:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$465",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "20972:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20972:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 683,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "20997:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "21001:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 678,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "20949:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "20949:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20949:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 676,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "20907:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20907:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "20907:107:0"
											}
										]
									},
									"documentation": null,
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "20836:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 668,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "20836:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "20855:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "20872:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20829:61:0"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20900:0:0"
									},
									"scope": 868,
									"src": "20808:212:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "21141:130:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 701,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "21176:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 704,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "21213:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$465",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 446,
																		"src": "21213:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "21213:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 707,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "21242:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 708,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "21248:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "21252:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 702,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "21190:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "21190:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21190:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 700,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "21148:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21148:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "21148:117:0"
											}
										]
									},
									"documentation": null,
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "21058:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 690,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "21058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "21077:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "21096:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "21113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21051:80:0"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21141:0:0"
									},
									"scope": 868,
									"src": "21026:245:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "21620:539:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "21902:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21911:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "21902:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 728,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21901:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 733,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "21942:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$868",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$868",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 732,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21934:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 731,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "21934:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "21934:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 719,
																					"src": "21949:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 729,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "21918:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$465",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 424,
																				"src": "21918:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21918:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21961:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "21918:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 739,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21917:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "21901:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21972:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21885:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "21885:150:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 745,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "22070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 748,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "22107:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$465",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 434,
																		"src": "22107:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "22107:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 751,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "22131:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 752,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "22140:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "22084:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22084:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22084:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 744,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "22042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22042:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "22042:111:0"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "21277:243:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 757,
												"src": "21551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 716,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "21551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 757,
												"src": "21570:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 757,
												"src": "21592:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21544:66:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21620:0:0"
									},
									"scope": 868,
									"src": "21524:635:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "22271:211:0",
										"statements": [
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 792,
														"src": "22278:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22278:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 777,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "22345:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 772,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "22325:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$868",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$868",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22317:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 770,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22317:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22317:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 774,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "22332:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 768,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "22301:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$465",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 424,
																"src": "22301:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22301:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 159,
														"src": "22301:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22301:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22278:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 781,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "22386:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 784,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "22423:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$465",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 434,
																		"src": "22423:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "22423:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 787,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "22447:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 788,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "22456:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "22400:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22400:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22400:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 780,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "22358:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22358:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "22358:118:0"
											}
										]
									},
									"documentation": null,
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "22202:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 758,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "22202:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "22221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "22243:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22195:66:0"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22271:0:0"
									},
									"scope": 868,
									"src": "22165:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "22594:290:0",
										"statements": [
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 829,
														"src": "22601:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 813,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "22685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22701:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 808,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "22655:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$868",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$868",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22647:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 806,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22647:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22647:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 810,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "22662:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "22631:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$465",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 424,
																"src": "22631:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22631:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "22631:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22631:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22601:152:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 818,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22788:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 821,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "22825:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$465",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 434,
																		"src": "22825:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "22825:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 824,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "22849:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 825,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "22858:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 819,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "22802:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22802:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22802:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 817,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "22760:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22760:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "22760:118:0"
											}
										]
									},
									"documentation": null,
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "22525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 794,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "22525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "22544:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "22566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22518:66:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22594:0:0"
									},
									"scope": 868,
									"src": "22488:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "23331:694:0",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 866,
														"src": "23669:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 838,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "23669:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 845,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "23730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23736:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 842,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "23710:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$465",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$465",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23702:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 555,
														"src": "23702:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23702:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23669:102:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 849,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "23782:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "23782:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23802:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23782:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 865,
												"nodeType": "IfStatement",
												"src": "23778:242:0",
												"trueBody": {
													"id": 864,
													"nodeType": "Block",
													"src": "23805:215:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 856,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 839,
																				"src": "23929:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 858,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "23942:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 857,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "23942:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 859,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "23941:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 854,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "23918:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "23918:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23918:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23959:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 853,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "23900:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23900:112:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 863,
															"nodeType": "ExpressionStatement",
															"src": "23900:112:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "22890:367:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 867,
												"src": "23290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 832,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "23290:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 867,
												"src": "23304:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23304:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23289:33:0"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23331:0:0"
									},
									"scope": 868,
									"src": "23261:764:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2573,
							"src": "20722:3306:0"
						},
						{
							"id": 869,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "24036:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 919,
							"linearizedBaseContracts": [
								919
							],
							"name": "IMasterChef",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e2bbb158",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 876,
												"src": "24109:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 876,
												"src": "24123:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24108:31:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24148:0:0"
									},
									"scope": 919,
									"src": "24092:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "441a3e70",
									"id": 883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 883,
												"src": "24175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 883,
												"src": "24189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24174:31:0"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24214:0:0"
									},
									"scope": 919,
									"src": "24157:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "41441d3b",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "24245:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24244:17:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24270:0:0"
									},
									"scope": 919,
									"src": "24223:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1058d281",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "24301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24300:17:0"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24326:0:0"
									},
									"scope": 919,
									"src": "24279:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c799b59d",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingShdw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 902,
												"src": "24356:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 902,
												"src": "24370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24355:29:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 902,
												"src": "24408:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24407:9:0"
									},
									"scope": 919,
									"src": "24335:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "93f1a40b",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userInfo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "24443:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "24457:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24442:29:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "24495:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "24504:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24494:18:0"
									},
									"scope": 919,
									"src": "24425:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5312ea8e",
									"id": 918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "24548:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24547:14:0"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24570:0:0"
									},
									"scope": 919,
									"src": "24521:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2573,
							"src": "24063:511:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 921,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 131,
										"src": "25047:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$131",
											"typeString": "contract Ownable"
										}
									},
									"id": 922,
									"nodeType": "InheritanceSpecifier",
									"src": "25047:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 923,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 365,
										"src": "25056:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$365",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 924,
									"nodeType": "InheritanceSpecifier",
									"src": "25056:15:0"
								}
							],
							"contractDependencies": [
								24,
								131,
								365
							],
							"contractKind": "contract",
							"documentation": {
								"id": 920,
								"nodeType": "StructuredDocumentation",
								"src": "24588:435:0",
								"text": "@notice The (older) MasterChef contract gives out a constant number of Shdw tokens per block.\n It is the only address with minting rights for Shdw.\n The idea for this sMasterChef  (sMCV) contract is therefore to be the owner of a dummy token\n that is deposited into the MasterChef V1 (MCV1) contract.\n The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives."
							},
							"fullyImplemented": true,
							"id": 2572,
							"linearizedBaseContracts": [
								2572,
								365,
								131,
								24
							],
							"name": "sMasterChef",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 927,
									"libraryName": {
										"contractScope": null,
										"id": 925,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 326,
										"src": "25085:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$326",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "25079:27:0",
									"typeName": {
										"id": 926,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 930,
									"libraryName": {
										"contractScope": null,
										"id": 928,
										"name": "SafeBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 868,
										"src": "25118:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeBEP20_$868",
											"typeString": "library SafeBEP20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "25112:27:0",
									"typeName": {
										"contractScope": null,
										"id": 929,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 465,
										"src": "25132:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$465",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "sMasterChef.UserInfo",
									"id": 937,
									"members": [
										{
											"constant": false,
											"id": 932,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 937,
											"src": "26004:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 931,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26004:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 934,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 937,
											"src": "26029:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 933,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26029:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 936,
											"mutability": "mutable",
											"name": "boostMultiplier",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 937,
											"src": "26058:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 935,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26058:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2572,
									"src": "25977:112:0",
									"visibility": "public"
								},
								{
									"canonicalName": "sMasterChef.PoolInfo",
									"id": 948,
									"members": [
										{
											"constant": false,
											"id": 939,
											"mutability": "mutable",
											"name": "accShdwPerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 948,
											"src": "27002:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 938,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27002:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 941,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 948,
											"src": "27036:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 940,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27036:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 948,
											"src": "27070:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 942,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27070:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "totalBoostedShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 948,
											"src": "27099:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 944,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27099:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "isRegular",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 948,
											"src": "27135:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 946,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "27135:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2572,
									"src": "26975:182:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "27165:37:0",
										"text": "@notice Address of MCV1 contract."
									},
									"functionSelector": "c3083016",
									"id": 951,
									"mutability": "immutable",
									"name": "DARK_CHEF",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27208:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterChef_$919",
										"typeString": "contract IMasterChef"
									},
									"typeName": {
										"contractScope": null,
										"id": 950,
										"name": "IMasterChef",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 919,
										"src": "27208:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterChef_$919",
											"typeString": "contract IMasterChef"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "27253:37:0",
										"text": "@notice Address of Shdw contract."
									},
									"functionSelector": "03dcff74",
									"id": 954,
									"mutability": "immutable",
									"name": "SHDW",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27296:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$465",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 953,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 465,
										"src": "27296:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$465",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "27333:60:0",
										"text": "@notice The only address can withdraw all the burn SHDW."
									},
									"functionSelector": "81bdf98c",
									"id": 957,
									"mutability": "mutable",
									"name": "burnAdmin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27399:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 956,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27399:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "27430:50:0",
										"text": "@notice The contract handles the share boosts."
									},
									"functionSelector": "dfcedeee",
									"id": 960,
									"mutability": "mutable",
									"name": "boostContract",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27486:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 959,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27486:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "27523:35:0",
										"text": "@notice Info of each MCV2 pool."
									},
									"functionSelector": "1526fe27",
									"id": 964,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27564:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
										"typeString": "struct sMasterChef.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 962,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 948,
											"src": "27564:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
												"typeString": "struct sMasterChef.PoolInfo"
											}
										},
										"id": 963,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "27564:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage_ptr",
											"typeString": "struct sMasterChef.PoolInfo[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "27597:55:0",
										"text": "@notice Address of the LP token for each MCV2 pool."
									},
									"functionSelector": "78ed5d1f",
									"id": 968,
									"mutability": "mutable",
									"name": "lpToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27658:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
										"typeString": "contract IBEP20[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 966,
											"name": "IBEP20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 465,
											"src": "27658:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IBEP20_$465",
												"typeString": "contract IBEP20"
											}
										},
										"id": 967,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "27658:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage_ptr",
											"typeString": "contract IBEP20[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "27690:35:0",
										"text": "@notice Info of each pool user."
									},
									"functionSelector": "93f1a40b",
									"id": 975,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27731:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo))"
									},
									"typeName": {
										"id": 974,
										"keyType": {
											"id": 970,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "27739:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "27731:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo))"
										},
										"valueType": {
											"id": 973,
											"keyType": {
												"id": 971,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "27758:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "27750:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
												"typeString": "mapping(address => struct sMasterChef.UserInfo)"
											},
											"valueType": {
												"contractScope": null,
												"id": 972,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 937,
												"src": "27769:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
													"typeString": "struct sMasterChef.UserInfo"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "27802:75:0",
										"text": "@notice The whitelist of addresses allowed to deposit in special pools."
									},
									"functionSelector": "372c12b1",
									"id": 980,
									"mutability": "mutable",
									"name": "whiteList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27883:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 979,
										"keyType": {
											"id": 977,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27891:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27883:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 978,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "27902:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "27933:60:0",
										"text": "@notice The pool id of the MCV2 mock token pool in MCV1."
									},
									"functionSelector": "61621aaa",
									"id": 983,
									"mutability": "immutable",
									"name": "MASTER_PID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "27999:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 982,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27999:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "28041:101:0",
										"text": "@notice Total regular allocation points. Must be the sum of all regular pools' allocation points."
									},
									"functionSelector": "c40d337b",
									"id": 986,
									"mutability": "mutable",
									"name": "totalRegularAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "28148:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 985,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28148:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "28192:101:0",
										"text": "@notice Total special allocation points. Must be the sum of all special pools' allocation points."
									},
									"functionSelector": "99d7e84a",
									"id": 989,
									"mutability": "mutable",
									"name": "totalSpecialAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "28299:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 988,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28299:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "28343:39:0",
										"text": "@notice 40 Shdws per block in MCV1"
									},
									"functionSelector": "f5b91cd3",
									"id": 995,
									"mutability": "constant",
									"name": "MASTERCHEF_SHDW_PER_BLOCK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "28388:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 991,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_40000000000000000000_by_1",
											"typeString": "int_const 40000000000000000000"
										},
										"id": 994,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3430",
											"id": 992,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28440:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_40_by_1",
												"typeString": "int_const 40"
											},
											"value": "40"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653138",
											"id": 993,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28445:4:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "28440:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40000000000000000000_by_1",
											"typeString": "int_const 40000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "16e80f4d",
									"id": 998,
									"mutability": "constant",
									"name": "ACC_SHDW_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "28456:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 996,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28456:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31653138",
										"id": 997,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "28501:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "28514:64:0",
										"text": "@notice Basic boost factor, none boosted user's boost factor"
									},
									"functionSelector": "cc6db2da",
									"id": 1004,
									"mutability": "constant",
									"name": "BOOST_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "28584:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1000,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28584:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"id": 1003,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "313030",
											"id": 1001,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28626:3:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653130",
											"id": 1002,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28632:4:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "28626:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "28643:85:0",
										"text": "@notice Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION"
									},
									"functionSelector": "69b02128",
									"id": 1010,
									"mutability": "constant",
									"name": "MAX_BOOST_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "28734:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1006,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28734:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000_by_1",
											"typeString": "int_const 2000000000000"
										},
										"id": 1009,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "323030",
											"id": 1007,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28780:3:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653130",
											"id": 1008,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28786:4:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "28780:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000_by_1",
											"typeString": "int_const 2000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "28797:60:0",
										"text": "@notice total Shdw rate = toBurn + toRegular + toSpecial"
									},
									"functionSelector": "d2ce6ae8",
									"id": 1014,
									"mutability": "constant",
									"name": "SHDW_RATE_TOTAL_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "28863:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1012,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28863:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31653132",
										"id": 1013,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "28915:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"value": "1e12"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "28926:113:0",
										"text": "@notice The last block number of Shdw burn action being executed.\n @notice Shdw distribute % for burn"
									},
									"functionSelector": "6661100f",
									"id": 1018,
									"mutability": "mutable",
									"name": "shdwRateToBurn",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "29045:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1016,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29045:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "363433373530303030303030",
										"id": 1017,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29077:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_643750000000_by_1",
											"typeString": "int_const 643750000000"
										},
										"value": "643750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "29096:51:0",
										"text": "@notice Shdw distribute % for regular farm pool"
									},
									"functionSelector": "f5a26f40",
									"id": 1022,
									"mutability": "mutable",
									"name": "shdwRateToRegularFarm",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "29153:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3632383437323232323232",
										"id": 1021,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29192:11:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_62847222222_by_1",
											"typeString": "int_const 62847222222"
										},
										"value": "62847222222"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "29210:47:0",
										"text": "@notice Shdw distribute % for special pools"
									},
									"functionSelector": "6fda08c3",
									"id": 1026,
									"mutability": "mutable",
									"name": "shdwRateToSpecialFarm",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "29263:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1024,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323933343032373737373738",
										"id": 1025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29302:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_293402777778_by_1",
											"typeString": "int_const 293402777778"
										},
										"value": "293402777778"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78db4c34",
									"id": 1028,
									"mutability": "mutable",
									"name": "lastBurnedBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2572,
									"src": "29323:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1027,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29323:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1030,
									"name": "Init",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29372:2:0"
									},
									"src": "29362:13:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1040,
									"name": "AddPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1040,
												"src": "29395:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1040,
												"src": "29416:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1040,
												"src": "29436:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1035,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "29436:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1040,
												"src": "29460:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29394:81:0"
									},
									"src": "29381:95:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1046,
									"name": "SetPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1046,
												"src": "29496:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1046,
												"src": "29517:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29495:41:0"
									},
									"src": "29482:55:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1056,
									"name": "UpdatePool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "29560:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "29581:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "29606:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": false,
												"mutability": "mutable",
												"name": "accShdwPerShare",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "29624:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29559:89:0"
									},
									"src": "29543:106:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1064,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1064,
												"src": "29669:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1064,
												"src": "29691:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1064,
												"src": "29712:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29668:59:0"
									},
									"src": "29655:73:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1072,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1072,
												"src": "29749:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1072,
												"src": "29771:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1072,
												"src": "29792:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29748:59:0"
									},
									"src": "29734:74:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1080,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1080,
												"src": "29838:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1080,
												"src": "29860:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1080,
												"src": "29881:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29837:59:0"
									},
									"src": "29814:83:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1088,
									"name": "UpdateShdwRate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "29926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"indexed": false,
												"mutability": "mutable",
												"name": "regularFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "29944:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "specialFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "29969:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29925:68:0"
									},
									"src": "29905:89:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1094,
									"name": "UpdateBurnAdmin",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1094,
												"src": "30022:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1094,
												"src": "30048:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30021:52:0"
									},
									"src": "30000:74:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1100,
									"name": "UpdateWhiteList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "30102:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "isValid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "30124:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30101:36:0"
									},
									"src": "30080:58:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1104,
									"name": "UpdateBoostContract",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"indexed": true,
												"mutability": "mutable",
												"name": "boostContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1104,
												"src": "30170:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30169:31:0"
									},
									"src": "30144:57:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1114,
									"name": "UpdateBoostMultiplier",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "30235:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "30257:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "30270:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "30293:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30234:81:0"
									},
									"src": "30207:109:0"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "30688:132:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1126,
														"name": "DARK_CHEF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "30699:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterChef_$919",
															"typeString": "contract IMasterChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1127,
														"name": "_DARK_CHEF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "30711:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterChef_$919",
															"typeString": "contract IMasterChef"
														}
													},
													"src": "30699:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterChef_$919",
														"typeString": "contract IMasterChef"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "30699:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1130,
														"name": "SHDW",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "30732:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$465",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1131,
														"name": "_SHDW",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "30739:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$465",
															"typeString": "contract IBEP20"
														}
													},
													"src": "30732:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "30732:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1134,
														"name": "MASTER_PID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "30755:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1135,
														"name": "_MASTER_PID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "30768:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30755:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "30755:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1138,
														"name": "burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "30790:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1139,
														"name": "_burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "30802:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30790:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "30790:22:0"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "30324:217:0",
										"text": "_DARK_CHEF The ShadowSwap MCV1 contract address.\n  _Shdw The Shadow token contract address.\n  _MASTER_PID The pool id of the dummy pool on the MCV1.\n  _burnAdmin The address of burn admin."
									},
									"id": 1143,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "_DARK_CHEF",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "30569:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMasterChef_$919",
													"typeString": "contract IMasterChef"
												},
												"typeName": {
													"contractScope": null,
													"id": 1116,
													"name": "IMasterChef",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 919,
													"src": "30569:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterChef_$919",
														"typeString": "contract IMasterChef"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "_SHDW",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "30602:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1118,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "30602:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "_MASTER_PID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "30625:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "_burnAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "30655:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30558:122:0"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30688:0:0"
									},
									"scope": 2572,
									"src": "30547:273:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "30932:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1147,
																"name": "boostContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "30951:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1148,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "30968:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "30968:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "30951:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f737420636f6e7472616374",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30980:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a155494b2ae1988f4d4766e30c7e243e43a8e464b9dace7f312568724be3e210",
																"typeString": "literal_string \"Ownable: caller is not the boost contract\""
															},
															"value": "Ownable: caller is not the boost contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a155494b2ae1988f4d4766e30c7e243e43a8e464b9dace7f312568724be3e210",
																"typeString": "literal_string \"Ownable: caller is not the boost contract\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30943:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "30943:81:0"
											},
											{
												"id": 1154,
												"nodeType": "PlaceholderStatement",
												"src": "31035:1:0"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "30828:69:0",
										"text": " @dev Throws if caller is not the boost contract."
									},
									"id": 1156,
									"name": "onlyBoostContract",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30929:2:0"
									},
									"src": "30903:141:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "31500:458:0",
										"statements": [
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1216,
														"src": "31511:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1168,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "31550:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "31550:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1166,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "31529:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "31529:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31529:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31511:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1173,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "31580:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31591:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31580:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a2042616c616e6365206d757374206578636565642030",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31594:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4844c9d6e4e7bbefc5b6f0c4c2c451fe2969b0565201a130cb7799a33efc04c0",
																"typeString": "literal_string \"sMasterChef: Balance must exceed 0\""
															},
															"value": "sMasterChef: Balance must exceed 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4844c9d6e4e7bbefc5b6f0c4c2c451fe2969b0565201a130cb7799a33efc04c0",
																"typeString": "literal_string \"sMasterChef: Balance must exceed 0\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "31572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31572:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "31572:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1182,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "31670:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "31670:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1186,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "31690:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sMasterChef_$2572",
																		"typeString": "contract sMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_sMasterChef_$2572",
																		"typeString": "contract sMasterChef"
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31682:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31682:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31682:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1188,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "31697:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1179,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "31642:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 714,
														"src": "31642:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$465_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31642:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "31642:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1196,
																	"name": "DARK_CHEF",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "31743:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$919",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$919",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31735:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31735:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31735:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1198,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "31755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1191,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "31716:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 434,
														"src": "31716:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31716:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "31716:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1204,
															"name": "MASTER_PID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "31792:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1205,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "31804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1201,
															"name": "DARK_CHEF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "31774:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$919",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "31774:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31774:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "31774:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1208,
														"name": "lastBurnedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "31898:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1209,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "31916:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "31916:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31898:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "31898:30:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1213,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "31944:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31944:6:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "EmitStatement",
												"src": "31939:11:0"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "31052:390:0",
										"text": "@notice Deposits a dummy token to `DARK_CHEF` MCV1. This is required because MCV1 holds the minting permission of Shdw.\n It will transfer all the `dummyToken` in the tx sender address.\n The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint.\n @param dummyToken The address of the BEP-20 token to be deposited into MCV1."
									},
									"functionSelector": "19ab453c",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1162,
											"modifierName": {
												"argumentTypes": null,
												"id": 1161,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "31490:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31490:9:0"
										}
									],
									"name": "init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "dummyToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1217,
												"src": "31462:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1158,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "31462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31461:19:0"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31500:0:0"
									},
									"scope": 2572,
									"src": "31448:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "32075:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1223,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "32086:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1224,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "32094:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "32094:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32086:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "32086:23:0"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "31966:45:0",
										"text": "@notice Returns the number of MCV2 pools."
									},
									"functionSelector": "081e3eda",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32036:2:0"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "pools",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "32060:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32059:15:0"
									},
									"scope": 2572,
									"src": "32017:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "32814:962:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1248,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "32860:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			],
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32852:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1246,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32852:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32852:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1244,
																		"name": "_lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "32833:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$465",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 404,
																	"src": "32833:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32833:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32870:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32833:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f6e6520424550323020746f6b656e73",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32873:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_976fcd99e378855f54fbdeea01e87b7504114be86395037187d407afbd9302ac",
																"typeString": "literal_string \"None BEP20 tokens\""
															},
															"value": "None BEP20 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_976fcd99e378855f54fbdeea01e87b7504114be86395037187d407afbd9302ac",
																"typeString": "literal_string \"None BEP20 tokens\""
															}
														],
														"id": 1243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "32825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32825:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "32825:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1257,
																"name": "_lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "33066:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$465",
																	"typeString": "contract IBEP20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1258,
																"name": "SHDW",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "33078:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$465",
																	"typeString": "contract IBEP20"
																}
															},
															"src": "33066:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5348445720746f6b656e2063616e277420626520616464656420746f206661726d20706f6f6c73",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33084:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db63b7e09795e2ee2f68ed067d01469dbe4d6ea975d66a71f40f9e59703fe45a",
																"typeString": "literal_string \"SHDW token can't be added to farm pools\""
															},
															"value": "SHDW token can't be added to farm pools"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db63b7e09795e2ee2f68ed067d01469dbe4d6ea975d66a71f40f9e59703fe45a",
																"typeString": "literal_string \"SHDW token can't be added to farm pools\""
															}
														],
														"id": 1256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "33058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33058:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "33058:68:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1263,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1238,
													"src": "33143:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "33139:61:0",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "33156:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1264,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "33171:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33171:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1266,
															"nodeType": "ExpressionStatement",
															"src": "33171:17:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1269,
													"name": "_isRegular",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1236,
													"src": "33216:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "33325:91:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1278,
																	"name": "totalSpecialAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "33340:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1281,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "33392:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1279,
																			"name": "totalSpecialAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "33365:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 159,
																		"src": "33365:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33365:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33340:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1284,
															"nodeType": "ExpressionStatement",
															"src": "33340:64:0"
														}
													]
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "33212:204:0",
												"trueBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "33228:91:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1270,
																	"name": "totalRegularAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "33243:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1273,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "33295:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1271,
																			"name": "totalRegularAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "33268:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 159,
																		"src": "33268:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33268:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33243:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "33243:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1290,
															"name": "_lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "33439:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1287,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "33426:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
																"typeString": "contract IBEP20[] storage ref"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "33426:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_IBEP20_$465_$returns$__$",
															"typeString": "function (contract IBEP20)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33426:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "33426:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1297,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "33521:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1298,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "33560:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "33560:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33600:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"argumentTypes": null,
																	"id": 1301,
																	"name": "_isRegular",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "33623:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33663:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1296,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "33489:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$948_storage_ptr_$",
																	"typeString": "type(struct sMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"allocPoint",
																"lastRewardBlock",
																"accShdwPerShare",
																"isRegular",
																"totalBoostedShare"
															],
															"nodeType": "FunctionCall",
															"src": "33489:187:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																"typeString": "struct sMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																"typeString": "struct sMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1293,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "33461:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "33461:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$948_storage_$returns$__$",
															"typeString": "function (struct sMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33461:226:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "33461:226:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33730:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1307,
																		"name": "lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "33711:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
																			"typeString": "contract IBEP20[] storage ref"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "33711:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 176,
																"src": "33711:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33711:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1312,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "33734:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1313,
															"name": "_lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "33747:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"id": 1314,
															"name": "_isRegular",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "33757:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1306,
														"name": "AddPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "33703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IBEP20_$465_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,contract IBEP20,bool)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33703:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "EmitStatement",
												"src": "33698:70:0"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "32125:535:0",
										"text": "@notice Add a new pool. Can only be called by the owner.\n DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n @param _allocPoint Number of allocation points for the new pool.\n @param _lpToken Address of the LP BEP-20 token.\n @param _isRegular Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are\n @param _withUpdate Whether call \"massUpdatePools\" operation.\n only for Shdw distributions within ShadowSwap products."
									},
									"functionSelector": "c507aeaa",
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1241,
											"modifierName": {
												"argumentTypes": null,
												"id": 1240,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "32804:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "32804:9:0"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "32689:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "_lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "32719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$465",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1233,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 465,
													"src": "32719:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$465",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "_isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "32745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32745:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "32771:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32678:116:0"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32814:0:0"
									},
									"scope": 2572,
									"src": "32666:1110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "34201:611:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1331,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "34342:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1330,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "34331:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$948_memory_ptr_$",
															"typeString": "function (uint256) returns (struct sMasterChef.PoolInfo memory)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34331:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
														"typeString": "struct sMasterChef.PoolInfo memory"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "34331:16:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1334,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1325,
													"src": "34364:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "34360:61:0",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "34377:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1335,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "34392:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34392:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1337,
															"nodeType": "ExpressionStatement",
															"src": "34392:17:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1340,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "34437:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1342,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1341,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "34446:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34437:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
															"typeString": "struct sMasterChef.PoolInfo storage ref"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isRegular",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 947,
													"src": "34437:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "34591:122:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1358,
																	"name": "totalSpecialAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "34606:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1367,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "34689:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1361,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 964,
																							"src": "34658:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																								"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1363,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1362,
																							"name": "_pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1321,
																							"src": "34667:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "34658:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																							"typeString": "struct sMasterChef.PoolInfo storage ref"
																						}
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 943,
																					"src": "34658:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1359,
																					"name": "totalSpecialAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "34631:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 176,
																				"src": "34631:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34631:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 159,
																		"src": "34631:57:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34631:70:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34606:95:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1370,
															"nodeType": "ExpressionStatement",
															"src": "34606:95:0"
														}
													]
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "34433:280:0",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "34463:122:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1344,
																	"name": "totalRegularAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "34478:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1353,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "34561:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1347,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 964,
																							"src": "34530:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																								"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 1349,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1348,
																							"name": "_pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1321,
																							"src": "34539:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "34530:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																							"typeString": "struct sMasterChef.PoolInfo storage ref"
																						}
																					},
																					"id": 1350,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 943,
																					"src": "34530:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1345,
																					"name": "totalRegularAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "34503:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 176,
																				"src": "34503:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34503:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 159,
																		"src": "34503:57:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34503:70:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34478:95:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1356,
															"nodeType": "ExpressionStatement",
															"src": "34478:95:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1373,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "34723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																	"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1375,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1374,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "34732:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34723:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "34723:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1377,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "34751:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34723:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "34723:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1381,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "34786:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1382,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "34792:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1380,
														"name": "SetPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "34778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34778:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "EmitStatement",
												"src": "34773:31:0"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "33784:292:0",
										"text": "@notice Update the given pool's Shdw allocation point. Can only be called by the owner.\n @param _pid The id of the pool. See `poolInfo`.\n @param _allocPoint New number of allocation points for the pool.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "64482f79",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1328,
											"modifierName": {
												"argumentTypes": null,
												"id": 1327,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "34191:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "34191:9:0"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "34105:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "34128:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "34158:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34094:87:0"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34201:0:0"
									},
									"scope": 2572,
									"src": "34082:730:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "35068:888:0",
										"statements": [
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1501,
														"src": "35079:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1396,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 948,
															"src": "35079:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																"typeString": "struct sMasterChef.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1401,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1398,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "35102:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
															"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1400,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1399,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "35111:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35102:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
														"typeString": "struct sMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35079:37:0"
											},
											{
												"assignments": [
													1403
												],
												"declarations": [
													{
														"constant": false,
														"id": 1403,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1501,
														"src": "35127:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_memory_ptr",
															"typeString": "struct sMasterChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1402,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 937,
															"src": "35127:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1409,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1404,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "35150:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1406,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1405,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "35159:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35150:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
															"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1408,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1407,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "35165:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35150:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$937_storage",
														"typeString": "struct sMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35127:44:0"
											},
											{
												"assignments": [
													1411
												],
												"declarations": [
													{
														"constant": false,
														"id": 1411,
														"mutability": "mutable",
														"name": "accShdwPerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1501,
														"src": "35182:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35182:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1412,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "35208:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo memory"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accShdwPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 939,
													"src": "35208:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35182:46:0"
											},
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "lpSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1501,
														"src": "35239:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1419,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1417,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "35258:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo memory"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalBoostedShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 945,
													"src": "35258:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35239:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1420,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "35297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "35297:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1422,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "35312:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																	"typeString": "struct sMasterChef.PoolInfo memory"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "35312:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "35297:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1425,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "35336:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35348:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "35336:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35297:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1474,
												"nodeType": "IfStatement",
												"src": "35293:453:0",
												"trueBody": {
													"id": 1473,
													"nodeType": "Block",
													"src": "35351:395:0",
													"statements": [
														{
															"assignments": [
																1430
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1430,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1473,
																	"src": "35366:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1429,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35366:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1437,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1434,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1397,
																			"src": "35404:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 941,
																		"src": "35404:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1431,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "35387:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "35387:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 176,
																	"src": "35387:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35387:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35366:59:0"
														},
														{
															"assignments": [
																1439
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1439,
																	"mutability": "mutable",
																	"name": "shdwReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1473,
																	"src": "35442:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35442:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1459,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1452,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1397,
																						"src": "35552:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																							"typeString": "struct sMasterChef.PoolInfo memory"
																						}
																					},
																					"id": 1453,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isRegular",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 947,
																					"src": "35552:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"id": 1455,
																					"name": "totalSpecialAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "35594:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "35552:64:0",
																				"trueExpression": {
																					"argumentTypes": null,
																					"id": 1454,
																					"name": "totalRegularAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "35569:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1457,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "35551:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1448,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1397,
																					"src": "35512:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																						"typeString": "struct sMasterChef.PoolInfo memory"
																					}
																				},
																				"id": 1449,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 943,
																				"src": "35512:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 1443,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1397,
																									"src": "35491:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																										"typeString": "struct sMasterChef.PoolInfo memory"
																									}
																								},
																								"id": 1444,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "isRegular",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 947,
																								"src": "35491:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 1442,
																							"name": "shdwPerBlock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1573,
																							"src": "35478:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
																								"typeString": "function (bool) view returns (uint256)"
																							}
																						},
																						"id": 1445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "35478:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1440,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1430,
																						"src": "35463:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 239,
																					"src": "35463:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35463:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 239,
																			"src": "35463:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35463:65:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 256,
																	"src": "35463:69:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35463:169:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35442:190:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1460,
																	"name": "accShdwPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "35647:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1468,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1416,
																					"src": "35724:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1465,
																							"name": "ACC_SHDW_PRECISION",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 998,
																							"src": "35700:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1463,
																							"name": "shdwReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1439,
																							"src": "35685:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1464,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 239,
																						"src": "35685:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35685:34:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 256,
																				"src": "35685:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35685:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1461,
																			"name": "accShdwPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "35665:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 159,
																		"src": "35665:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35665:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35647:87:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "35647:87:0"
														}
													]
												}
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1501,
														"src": "35758:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1488,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1486,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "35835:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1481,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1391,
																			"src": "35817:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1482,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "35824:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1480,
																		"name": "getBoostMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2461,
																		"src": "35798:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35798:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1477,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "35782:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$937_memory_ptr",
																			"typeString": "struct sMasterChef.UserInfo memory"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 932,
																	"src": "35782:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 239,
																"src": "35782:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35782:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 256,
														"src": "35782:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35782:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35758:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1497,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "35932:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$937_memory_ptr",
																	"typeString": "struct sMasterChef.UserInfo memory"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 934,
															"src": "35932:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1494,
																	"name": "ACC_SHDW_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "35908:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1491,
																			"name": "accShdwPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "35887:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1489,
																			"name": "boostedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1476,
																			"src": "35869:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 239,
																		"src": "35869:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35869:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 256,
																"src": "35869:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35869:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 176,
														"src": "35869:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35869:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1395,
												"id": 1500,
												"nodeType": "Return",
												"src": "35862:86:0"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "34820:160:0",
										"text": "@notice View function for checking pending Shdw rewards.\n @param _pid The id of the pool. See `poolInfo`.\n @param _user Address of the user."
									},
									"functionSelector": "c799b59d",
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingShdw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1502,
												"src": "35007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1502,
												"src": "35021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35006:29:0"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1502,
												"src": "35059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35058:9:0"
									},
									"scope": 2572,
									"src": "34986:970:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "36088:257:0",
										"statements": [
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1539,
														"src": "36099:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36099:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1508,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "36116:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
															"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "36116:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36099:32:0"
											},
											{
												"body": {
													"id": 1537,
													"nodeType": "Block",
													"src": "36185:153:0",
													"statements": [
														{
															"assignments": [
																1522
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1522,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1537,
																	"src": "36200:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																		"typeString": "struct sMasterChef.PoolInfo"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1521,
																		"name": "PoolInfo",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 948,
																		"src": "36200:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																			"typeString": "struct sMasterChef.PoolInfo"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1526,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1523,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "36223:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																		"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1525,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1524,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "36232:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36223:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																	"typeString": "struct sMasterChef.PoolInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36200:36:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1527,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "36255:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																			"typeString": "struct sMasterChef.PoolInfo memory"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 943,
																	"src": "36255:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36274:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "36255:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1536,
															"nodeType": "IfStatement",
															"src": "36251:76:0",
															"trueBody": {
																"id": 1535,
																"nodeType": "Block",
																"src": "36277:50:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1532,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "36307:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1531,
																				"name": "updatePool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1700,
																				"src": "36296:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$948_memory_ptr_$",
																					"typeString": "function (uint256) returns (struct sMasterChef.PoolInfo memory)"
																				}
																			},
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36296:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 1534,
																		"nodeType": "ExpressionStatement",
																		"src": "36296:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1515,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "36164:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1516,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "36170:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36164:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1538,
												"initializationExpression": {
													"assignments": [
														1512
													],
													"declarations": [
														{
															"constant": false,
															"id": 1512,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1538,
															"src": "36147:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1511,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1514,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36161:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "36147:15:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "36178:5:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1518,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "36180:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1520,
													"nodeType": "ExpressionStatement",
													"src": "36178:5:0"
												},
												"nodeType": "ForStatement",
												"src": "36142:196:0"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "35964:84:0",
										"text": "@notice Update Shdw reward for all the active pools. Be careful of gas spending!"
									},
									"functionSelector": "630b5ba1",
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36078:2:0"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36088:0:0"
									},
									"scope": 2572,
									"src": "36054:291:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "36571:278:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1548,
													"name": "_isRegular",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1543,
													"src": "36586:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1570,
													"nodeType": "Block",
													"src": "36723:119:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1560,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "36738:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1566,
																			"name": "SHDW_RATE_TOTAL_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1014,
																			"src": "36804:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1563,
																					"name": "shdwRateToSpecialFarm",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "36777:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1561,
																					"name": "MASTERCHEF_SHDW_PER_BLOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "36747:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 239,
																				"src": "36747:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36747:52:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 256,
																		"src": "36747:56:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36747:83:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36738:92:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1569,
															"nodeType": "ExpressionStatement",
															"src": "36738:92:0"
														}
													]
												},
												"id": 1571,
												"nodeType": "IfStatement",
												"src": "36582:260:0",
												"trueBody": {
													"id": 1559,
													"nodeType": "Block",
													"src": "36598:119:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1549,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "36613:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1555,
																			"name": "SHDW_RATE_TOTAL_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1014,
																			"src": "36679:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1552,
																					"name": "shdwRateToRegularFarm",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1022,
																					"src": "36652:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1550,
																					"name": "MASTERCHEF_SHDW_PER_BLOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "36622:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 239,
																				"src": "36622:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36622:52:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 256,
																		"src": "36622:56:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36622:83:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36613:92:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1558,
															"nodeType": "ExpressionStatement",
															"src": "36613:92:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "36353:136:0",
										"text": "@notice Calculates and returns the `amount` of Shdw per block.\n @param _isRegular If the pool belongs to regular or special."
									},
									"functionSelector": "f474309e",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shdwPerBlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "_isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1573,
												"src": "36517:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36516:17:0"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1573,
												"src": "36555:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36554:16:0"
									},
									"scope": 2572,
									"src": "36495:354:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "37004:104:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1579,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "37015:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1585,
																"name": "SHDW_RATE_TOTAL_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "37074:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1582,
																		"name": "shdwRateToBurn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "37054:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1580,
																		"name": "MASTERCHEF_SHDW_PER_BLOCK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "37024:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "37024:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37024:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "37024:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37024:76:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37015:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "37015:85:0"
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "36857:74:0",
										"text": "@notice Calculates and returns the `amount` of Shdw per block to burn."
									},
									"functionSelector": "19f95e2e",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shdwPerBlockToBurn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36964:2:0"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1590,
												"src": "36988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36987:16:0"
									},
									"scope": 2572,
									"src": "36937:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "37363:877:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1598,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "37374:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1599,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "37381:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1601,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1600,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "37390:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "37381:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
															"typeString": "struct sMasterChef.PoolInfo storage ref"
														}
													},
													"src": "37374:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
														"typeString": "struct sMasterChef.PoolInfo memory"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "37374:21:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1604,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "37410:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "37410:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1606,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "37425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																"typeString": "struct sMasterChef.PoolInfo memory"
															}
														},
														"id": 1607,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "37425:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37410:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "37406:827:0",
												"trueBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "37447:786:0",
													"statements": [
														{
															"assignments": [
																1610
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1610,
																	"mutability": "mutable",
																	"name": "lpSupply",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1697,
																	"src": "37462:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1609,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "37462:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1613,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1611,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "37481:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																		"typeString": "struct sMasterChef.PoolInfo memory"
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "37481:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "37462:41:0"
														},
														{
															"assignments": [
																1615
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1615,
																	"mutability": "mutable",
																	"name": "totalAllocPoint",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1697,
																	"src": "37518:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1614,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "37518:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1622,
															"initialValue": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"condition": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1616,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "37545:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																					"typeString": "struct sMasterChef.PoolInfo memory"
																				}
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "isRegular",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 947,
																			"src": "37545:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"argumentTypes": null,
																			"id": 1619,
																			"name": "totalSpecialAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "37587:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "37545:64:0",
																		"trueExpression": {
																			"argumentTypes": null,
																			"id": 1618,
																			"name": "totalRegularAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "37562:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "37544:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "37518:92:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1623,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "37631:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37642:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "37631:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1626,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "37647:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37665:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "37647:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "37631:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1674,
															"nodeType": "IfStatement",
															"src": "37627:419:0",
															"trueBody": {
																"id": 1673,
																"nodeType": "Block",
																"src": "37668:378:0",
																"statements": [
																	{
																		"assignments": [
																			1631
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1631,
																				"mutability": "mutable",
																				"name": "multiplier",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1673,
																				"src": "37687:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1630,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "37687:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1638,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1635,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1596,
																						"src": "37725:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																							"typeString": "struct sMasterChef.PoolInfo memory"
																						}
																					},
																					"id": 1636,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lastRewardBlock",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 941,
																					"src": "37725:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1632,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -4,
																						"src": "37708:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "37708:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 176,
																				"src": "37708:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37708:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "37687:59:0"
																	},
																	{
																		"assignments": [
																			1640
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1640,
																				"mutability": "mutable",
																				"name": "shdwReward",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1673,
																				"src": "37765:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1639,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "37765:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1655,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1653,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1615,
																					"src": "37878:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 1649,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1596,
																								"src": "37835:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																									"typeString": "struct sMasterChef.PoolInfo memory"
																								}
																							},
																							"id": 1650,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "allocPoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 943,
																							"src": "37835:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"expression": {
																												"argumentTypes": null,
																												"id": 1644,
																												"name": "pool",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1596,
																												"src": "37814:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																													"typeString": "struct sMasterChef.PoolInfo memory"
																												}
																											},
																											"id": 1645,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "isRegular",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 947,
																											"src": "37814:14:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										],
																										"id": 1643,
																										"name": "shdwPerBlock",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1573,
																										"src": "37801:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
																											"typeString": "function (bool) view returns (uint256)"
																										}
																									},
																									"id": 1646,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "37801:28:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 1641,
																									"name": "multiplier",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1631,
																									"src": "37786:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1642,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 239,
																								"src": "37786:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1647,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "37786:44:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 239,
																						"src": "37786:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37786:65:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 256,
																				"src": "37786:69:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37786:126:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "37765:147:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1656,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1596,
																					"src": "37931:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																						"typeString": "struct sMasterChef.PoolInfo memory"
																					}
																				},
																				"id": 1658,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "accShdwPerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 939,
																				"src": "37931:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1667,
																										"name": "lpSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1610,
																										"src": "38019:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1664,
																												"name": "ACC_SHDW_PRECISION",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 998,
																												"src": "37995:18:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 1662,
																												"name": "shdwReward",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1640,
																												"src": "37980:10:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1663,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 239,
																											"src": "37980:14:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1665,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "37980:34:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1666,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "div",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 256,
																									"src": "37980:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1668,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "37980:48:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1669,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "37979:50:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1659,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1596,
																							"src": "37954:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																								"typeString": "struct sMasterChef.PoolInfo memory"
																							}
																						},
																						"id": 1660,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accShdwPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 939,
																						"src": "37954:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 159,
																					"src": "37954:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "37954:76:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "37931:99:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1672,
																		"nodeType": "ExpressionStatement",
																		"src": "37931:99:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1675,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "38060:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																			"typeString": "struct sMasterChef.PoolInfo memory"
																		}
																	},
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 941,
																	"src": "38060:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1678,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "38083:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "38083:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38060:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1681,
															"nodeType": "ExpressionStatement",
															"src": "38060:35:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1682,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "38110:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																			"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1684,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1683,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "38119:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38110:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																		"typeString": "struct sMasterChef.PoolInfo storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1685,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "38127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																		"typeString": "struct sMasterChef.PoolInfo memory"
																	}
																},
																"src": "38110:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																	"typeString": "struct sMasterChef.PoolInfo storage ref"
																}
															},
															"id": 1687,
															"nodeType": "ExpressionStatement",
															"src": "38110:21:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1689,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "38162:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1690,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "38168:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 941,
																		"src": "38168:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1692,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "38190:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1693,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "38200:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 939,
																		"src": "38200:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1688,
																	"name": "UpdatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "38151:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38151:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1696,
															"nodeType": "EmitStatement",
															"src": "38146:75:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "37116:169:0",
										"text": "@notice Update reward variables for the given pool.\n @param _pid The id of the pool. See `poolInfo`.\n @return pool Returns the pool that was updated."
									},
									"functionSelector": "51eb05a6",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1700,
												"src": "37311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37310:14:0"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1700,
												"src": "37341:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
													"typeString": "struct sMasterChef.PoolInfo"
												},
												"typeName": {
													"contractScope": null,
													"id": 1595,
													"name": "PoolInfo",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 948,
													"src": "37341:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
														"typeString": "struct sMasterChef.PoolInfo"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37340:22:0"
									},
									"scope": 2572,
									"src": "37291:949:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "38475:1178:0",
										"statements": [
											{
												"assignments": [
													1711
												],
												"declarations": [
													{
														"constant": false,
														"id": 1711,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1861,
														"src": "38486:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1710,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 948,
															"src": "38486:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																"typeString": "struct sMasterChef.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1715,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1713,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "38520:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1712,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "38509:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$948_memory_ptr_$",
															"typeString": "function (uint256) returns (struct sMasterChef.PoolInfo memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38509:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
														"typeString": "struct sMasterChef.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38486:39:0"
											},
											{
												"assignments": [
													1717
												],
												"declarations": [
													{
														"constant": false,
														"id": 1717,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1861,
														"src": "38536:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
															"typeString": "struct sMasterChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1716,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 937,
															"src": "38536:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1724,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1718,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "38560:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1720,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1719,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "38569:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "38560:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
															"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1723,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1721,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "38575:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "38575:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38560:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$937_storage",
														"typeString": "struct sMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38536:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1726,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "38621:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																		"typeString": "struct sMasterChef.PoolInfo memory"
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isRegular",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 947,
																"src": "38621:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1728,
																	"name": "whiteList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "38639:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1731,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1729,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "38649:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "38649:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "38639:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "38621:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a205468652061646472657373206973206e6f7420617661696c61626c6520746f206465706f73697420696e207468697320706f6f6c",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38675:67:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb3cf691fa6e0165fb60802352af60a5805ec5dbece1b899f527d7c9e00d1bbf",
																"typeString": "literal_string \"sMasterChef: The address is not available to deposit in this pool\""
															},
															"value": "sMasterChef: The address is not available to deposit in this pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb3cf691fa6e0165fb60802352af60a5805ec5dbece1b899f527d7c9e00d1bbf",
																"typeString": "literal_string \"sMasterChef: The address is not available to deposit in this pool\""
															}
														],
														"id": 1725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38599:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38599:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "38599:154:0"
											},
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1861,
														"src": "38766:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1739,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "38806:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "38806:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1741,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "38818:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1738,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2461,
														"src": "38787:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38787:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38766:57:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1744,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "38840:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "38840:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38854:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38840:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "38836:95:0",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "38857:74:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1749,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "38890:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "38890:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1751,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1703,
																		"src": "38902:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1752,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "38908:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1748,
																	"name": "settlePendingShdw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "38872:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38872:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1754,
															"nodeType": "ExpressionStatement",
															"src": "38872:47:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1757,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "38947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38957:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38947:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1827,
												"nodeType": "IfStatement",
												"src": "38943:466:0",
												"trueBody": {
													"id": 1826,
													"nodeType": "Block",
													"src": "38960:449:0",
													"statements": [
														{
															"assignments": [
																1761
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1761,
																	"mutability": "mutable",
																	"name": "before",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1826,
																	"src": "38975:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1760,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38975:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1771,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1768,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "39024:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			],
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "39016:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1766,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "39016:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39016:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1762,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "38992:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1764,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1763,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "39000:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38992:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$465",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 404,
																	"src": "38992:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38992:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "38975:55:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1776,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "39076:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "39076:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1780,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "39096:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			],
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "39088:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1778,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "39088:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39088:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1782,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "39103:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1772,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "39045:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1774,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1773,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "39053:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "39045:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$465",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "39045:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$465_$",
																		"typeString": "function (contract IBEP20,address,address,uint256)"
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39045:66:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1784,
															"nodeType": "ExpressionStatement",
															"src": "39045:66:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1785,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "39126:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1796,
																			"name": "before",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1761,
																			"src": "39179:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1792,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "39168:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_sMasterChef_$2572",
																								"typeString": "contract sMasterChef"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_sMasterChef_$2572",
																								"typeString": "contract sMasterChef"
																							}
																						],
																						"id": 1791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "39160:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1790,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "39160:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1793,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "39160:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1786,
																						"name": "lpToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 968,
																						"src": "39136:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
																							"typeString": "contract IBEP20[] storage ref"
																						}
																					},
																					"id": 1788,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1787,
																						"name": "_pid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1703,
																						"src": "39144:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "39136:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$465",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 404,
																				"src": "39136:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39136:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 176,
																		"src": "39136:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39136:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39126:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1799,
															"nodeType": "ExpressionStatement",
															"src": "39126:60:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1800,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1717,
																		"src": "39201:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																			"typeString": "struct sMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 932,
																	"src": "39201:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1806,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "39231:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1803,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1717,
																				"src": "39215:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																					"typeString": "struct sMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 932,
																			"src": "39215:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 159,
																		"src": "39215:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39215:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39201:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1809,
															"nodeType": "ExpressionStatement",
															"src": "39201:38:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1810,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "39300:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																			"typeString": "struct sMasterChef.PoolInfo memory"
																		}
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 945,
																	"src": "39300:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1821,
																					"name": "BOOST_PRECISION",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "39380:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1818,
																							"name": "multiplier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1737,
																							"src": "39364:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1816,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1705,
																							"src": "39352:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1817,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 239,
																						"src": "39352:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1819,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "39352:23:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 256,
																				"src": "39352:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39352:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1813,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1711,
																				"src": "39325:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																					"typeString": "struct sMasterChef.PoolInfo memory"
																				}
																			},
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "totalBoostedShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 945,
																			"src": "39325:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 159,
																		"src": "39325:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39325:72:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39300:97:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1825,
															"nodeType": "ExpressionStatement",
															"src": "39300:97:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1828,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "39421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 934,
														"src": "39421:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1844,
																"name": "ACC_SHDW_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "39532:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1840,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "39492:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 939,
																		"src": "39492:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1837,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "39471:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1834,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1737,
																						"src": "39455:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1831,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1717,
																							"src": "39439:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																								"typeString": "struct sMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1832,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 932,
																						"src": "39439:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 239,
																					"src": "39439:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "39439:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 256,
																			"src": "39439:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39439:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "39439:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39439:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "39439:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39439:122:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39421:140:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "39421:140:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1848,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "39572:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1850,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1849,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "39581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39572:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
															"typeString": "struct sMasterChef.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1851,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "39589:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo memory"
														}
													},
													"src": "39572:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
														"typeString": "struct sMasterChef.PoolInfo storage ref"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "39572:21:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1855,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "39619:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "39619:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1857,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "39631:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1858,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "39637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1854,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "39611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39611:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "EmitStatement",
												"src": "39606:39:0"
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "38248:151:0",
										"text": "@notice Deposit LP tokens to pool.\n @param _pid The id of the pool. See `poolInfo`.\n @param _amount Amount of LP tokens to deposit."
									},
									"functionSelector": "e2bbb158",
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1708,
											"modifierName": {
												"argumentTypes": null,
												"id": 1707,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 364,
												"src": "38462:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "38462:12:0"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1862,
												"src": "38422:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1862,
												"src": "38436:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38421:31:0"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38475:0:0"
									},
									"scope": 2572,
									"src": "38405:1248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "39893:833:0",
										"statements": [
											{
												"assignments": [
													1873
												],
												"declarations": [
													{
														"constant": false,
														"id": 1873,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1980,
														"src": "39904:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1872,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 948,
															"src": "39904:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																"typeString": "struct sMasterChef.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1877,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1875,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "39938:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "39927:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$948_memory_ptr_$",
															"typeString": "function (uint256) returns (struct sMasterChef.PoolInfo memory)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39927:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
														"typeString": "struct sMasterChef.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39904:39:0"
											},
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1980,
														"src": "39954:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
															"typeString": "struct sMasterChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1878,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 937,
															"src": "39954:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1886,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1880,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "39978:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1882,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1881,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "39987:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39978:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
															"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1885,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1883,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "39993:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "39993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39978:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$937_storage",
														"typeString": "struct sMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39954:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1888,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "40025:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																		"typeString": "struct sMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 932,
																"src": "40025:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1890,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "40040:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40025:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a20496e73756666696369656e74",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40049:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91153f1e08c08b3649039f676200b5fdbb93ae05537216b5b196d3348e98ee68",
																"typeString": "literal_string \"withdraw: Insufficient\""
															},
															"value": "withdraw: Insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91153f1e08c08b3649039f676200b5fdbb93ae05537216b5b196d3348e98ee68",
																"typeString": "literal_string \"withdraw: Insufficient\""
															}
														],
														"id": 1887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "40017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40017:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "40017:57:0"
											},
											{
												"assignments": [
													1896
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1980,
														"src": "40087:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1895,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1902,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1898,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "40127:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "40127:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1900,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "40139:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1897,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2461,
														"src": "40108:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40108:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40087:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1904,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "40175:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "40175:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1906,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "40187:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1907,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "40193:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1903,
														"name": "settlePendingShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2517,
														"src": "40157:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40157:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "40157:47:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1910,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "40221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40231:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40221:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1933,
												"nodeType": "IfStatement",
												"src": "40217:144:0",
												"trueBody": {
													"id": 1932,
													"nodeType": "Block",
													"src": "40234:127:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1913,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "40249:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																			"typeString": "struct sMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 932,
																	"src": "40249:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1919,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1867,
																			"src": "40279:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1916,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1879,
																				"src": "40263:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																					"typeString": "struct sMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 932,
																			"src": "40263:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 176,
																		"src": "40263:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40263:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40249:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1922,
															"nodeType": "ExpressionStatement",
															"src": "40249:38:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1927,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "40329:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "40329:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1929,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "40341:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1923,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "40302:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1925,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1924,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "40310:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "40302:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$465",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "40302:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$465_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40302:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1931,
															"nodeType": "ExpressionStatement",
															"src": "40302:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1934,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "40373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 934,
														"src": "40373:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1950,
																"name": "ACC_SHDW_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "40484:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1946,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1873,
																			"src": "40444:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 939,
																		"src": "40444:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1943,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "40423:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1940,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1896,
																						"src": "40407:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1937,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1879,
																							"src": "40391:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																								"typeString": "struct sMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1938,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 932,
																						"src": "40391:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1939,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 239,
																					"src": "40391:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "40391:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 256,
																			"src": "40391:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40391:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "40391:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40391:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "40391:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40391:122:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40373:140:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "40373:140:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1954,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "40524:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																	"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1956,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1955,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "40533:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "40524:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref"
															}
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "40524:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1968,
																		"name": "BOOST_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "40638:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1965,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1896,
																				"src": "40622:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1963,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1867,
																				"src": "40610:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 239,
																			"src": "40610:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40610:23:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 256,
																	"src": "40610:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40610:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1958,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "40559:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																			"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1960,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1959,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "40568:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40559:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																		"typeString": "struct sMasterChef.PoolInfo storage ref"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "40559:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 176,
															"src": "40559:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40559:106:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40524:141:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "40524:141:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1974,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "40692:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "40692:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1976,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "40704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1977,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "40710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1973,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "40683:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40683:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1979,
												"nodeType": "EmitStatement",
												"src": "40678:40:0"
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "39661:155:0",
										"text": "@notice Withdraw LP tokens from pool.\n @param _pid The id of the pool. See `poolInfo`.\n @param _amount Amount of LP tokens to withdraw."
									},
									"functionSelector": "441a3e70",
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1870,
											"modifierName": {
												"argumentTypes": null,
												"id": 1869,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 364,
												"src": "39880:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "39880:12:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "39840:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1981,
												"src": "39854:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39839:31:0"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39893:0:0"
									},
									"scope": 2572,
									"src": "39822:904:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "40858:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1988,
															"name": "MASTER_PID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "40887:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40899:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1985,
															"name": "DARK_CHEF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "40869:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$919",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "40869:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40869:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "40869:32:0"
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "40734:78:0",
										"text": "@notice Harvests Shdw from `DARK_CHEF` MCV1 and pool `MASTER_PID` to MCV2."
									},
									"functionSelector": "4f70b15a",
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvestFromMasterChef",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40848:2:0"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40858:0:0"
									},
									"scope": 2572,
									"src": "40818:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "41113:627:0",
										"statements": [
											{
												"assignments": [
													2002
												],
												"declarations": [
													{
														"constant": false,
														"id": 2002,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2079,
														"src": "41124:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
															"typeString": "struct sMasterChef.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 2001,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 948,
															"src": "41124:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																"typeString": "struct sMasterChef.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2006,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 2003,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "41148:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
															"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2005,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2004,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "41157:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41148:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
														"typeString": "struct sMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41124:38:0"
											},
											{
												"assignments": [
													2008
												],
												"declarations": [
													{
														"constant": false,
														"id": 2008,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2079,
														"src": "41173:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
															"typeString": "struct sMasterChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 2007,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 937,
															"src": "41173:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2015,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2009,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "41197:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2011,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2010,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "41206:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "41197:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
															"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2014,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2012,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "41212:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "41212:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41197:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$937_storage",
														"typeString": "struct sMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41173:50:0"
											},
											{
												"assignments": [
													2017
												],
												"declarations": [
													{
														"constant": false,
														"id": 2017,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2079,
														"src": "41236:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2020,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2018,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "41253:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
															"typeString": "struct sMasterChef.UserInfo storage pointer"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 932,
													"src": "41253:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41236:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2021,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "41275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "41275:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41289:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "41275:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "41275:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2027,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "41301:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 934,
														"src": "41301:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41319:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "41301:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "41301:19:0"
											},
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2079,
														"src": "41331:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2033,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2046,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2044,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "41408:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2038,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "41385:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "41385:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2040,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "41397:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2037,
																		"name": "getBoostMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2461,
																		"src": "41366:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41366:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2035,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "41355:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 239,
																"src": "41355:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41355:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 256,
														"src": "41355:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41355:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41331:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2047,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "41435:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																"typeString": "struct sMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "41435:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2050,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "41460:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																		"typeString": "struct sMasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "41460:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2052,
																"name": "boostedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "41485:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41460:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41545:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "41460:86:0",
														"trueExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2057,
																	"name": "boostedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "41528:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2054,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "41501:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																			"typeString": "struct sMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 945,
																	"src": "41501:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 176,
																"src": "41501:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41501:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41435:111:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "41435:111:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "41654:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "41654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2069,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "41666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2063,
																"name": "lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "41627:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IBEP20_$465_$dyn_storage",
																	"typeString": "contract IBEP20[] storage ref"
																}
															},
															"id": 2065,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2064,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "41635:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "41627:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$465",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "41627:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$465_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41627:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "41627:46:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2073,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "41707:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "41707:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2075,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "41719:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2076,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "41725:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2072,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "41689:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41689:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "EmitStatement",
												"src": "41684:48:0"
											}
										]
									},
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "40917:127:0",
										"text": "@notice Withdraw without caring about the rewards. EMERGENCY ONLY.\n @param _pid The id of the pool. See `poolInfo`."
									},
									"functionSelector": "5312ea8e",
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1999,
											"modifierName": {
												"argumentTypes": null,
												"id": 1998,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 364,
												"src": "41100:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "41100:12:0"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2080,
												"src": "41077:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41076:14:0"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41113:0:0"
									},
									"scope": 2572,
									"src": "41050:690:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "41931:348:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 2088,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2083,
													"src": "41946:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2093,
												"nodeType": "IfStatement",
												"src": "41942:61:0",
												"trueBody": {
													"id": 2092,
													"nodeType": "Block",
													"src": "41959:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2089,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "41974:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41974:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2091,
															"nodeType": "ExpressionStatement",
															"src": "41974:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2120,
														"src": "42015:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2101,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2099,
															"name": "lastBurnedBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "42053:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2096,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "42036:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "42036:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 176,
														"src": "42036:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42036:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42015:54:0"
											},
											{
												"assignments": [
													2103
												],
												"declarations": [
													{
														"constant": false,
														"id": 2103,
														"mutability": "mutable",
														"name": "pendingShdwToBurn",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2120,
														"src": "42080:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2106,
																"name": "shdwPerBlockToBurn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "42123:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42123:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2104,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "42108:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "42108:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42108:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42080:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2111,
															"name": "burnAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "42201:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2112,
															"name": "pendingShdwToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "42212:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2110,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2571,
														"src": "42187:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42187:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "42187:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2115,
														"name": "lastBurnedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "42241:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2116,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "42259:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "42259:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42241:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "42241:30:0"
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "41748:124:0",
										"text": "@notice Send Shdw pending for burn to `burnAdmin`.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "36183ed6",
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2086,
											"modifierName": {
												"argumentTypes": null,
												"id": 2085,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "41921:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "41921:9:0"
										}
									],
									"name": "burnShdw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2121,
												"src": "41896:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41895:18:0"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41931:0:0"
									},
									"scope": 2572,
									"src": "41878:401:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "42839:720:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2136,
																		"name": "_burnRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "42872:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42884:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "42872:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2139,
																		"name": "_regularFarmRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "42889:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42908:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "42889:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "42872:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2143,
																	"name": "_specialFarmRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "42913:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42932:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "42913:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42872:61:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a20536864772072617465206d7573742062652067726561746572207468616e2030",
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42948:47:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c8e066eafda30a72db83e235fef3b4732444c3982121915b72b5822d94f9a8f",
																"typeString": "literal_string \"sMasterChef: Shdw rate must be greater than 0\""
															},
															"value": "sMasterChef: Shdw rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c8e066eafda30a72db83e235fef3b4732444c3982121915b72b5822d94f9a8f",
																"typeString": "literal_string \"sMasterChef: Shdw rate must be greater than 0\""
															}
														],
														"id": 2135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "42850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42850:156:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "42850:156:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2156,
																		"name": "_specialFarmRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2128,
																		"src": "43075:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2153,
																				"name": "_regularFarmRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2126,
																				"src": "43053:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2151,
																				"name": "_burnRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2124,
																				"src": "43039:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 159,
																			"src": "43039:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43039:31:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 159,
																	"src": "43039:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43039:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2158,
																"name": "SHDW_RATE_TOTAL_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "43096:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43039:82:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a20546f74616c2072617465206d7573742062652031653132",
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43136:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428f978b06ed97d63bcdba641d24713d1c5821744181d3927121784c59a4f86e",
																"typeString": "literal_string \"sMasterChef: Total rate must be 1e12\""
															},
															"value": "sMasterChef: Total rate must be 1e12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428f978b06ed97d63bcdba641d24713d1c5821744181d3927121784c59a4f86e",
																"typeString": "literal_string \"sMasterChef: Total rate must be 1e12\""
															}
														],
														"id": 2150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "43017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43017:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "43017:168:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 2163,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2130,
													"src": "43200:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2168,
												"nodeType": "IfStatement",
												"src": "43196:61:0",
												"trueBody": {
													"id": 2167,
													"nodeType": "Block",
													"src": "43213:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2164,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "43228:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43228:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2166,
															"nodeType": "ExpressionStatement",
															"src": "43228:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43325:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2169,
														"name": "burnShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "43316:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43316:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2172,
												"nodeType": "ExpressionStatement",
												"src": "43316:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2173,
														"name": "shdwRateToBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "43344:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2174,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "43361:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43344:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2176,
												"nodeType": "ExpressionStatement",
												"src": "43344:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2177,
														"name": "shdwRateToRegularFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "43381:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2178,
														"name": "_regularFarmRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "43405:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43381:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "43381:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2181,
														"name": "shdwRateToSpecialFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "43432:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2182,
														"name": "_specialFarmRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "43456:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43432:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2184,
												"nodeType": "ExpressionStatement",
												"src": "43432:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2186,
															"name": "_burnRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "43505:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2187,
															"name": "_regularFarmRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "43516:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2188,
															"name": "_specialFarmRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "43534:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2185,
														"name": "UpdateShdwRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "43490:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43490:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "EmitStatement",
												"src": "43485:66:0"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "42287:371:0",
										"text": "@notice Update the % of Shdw distributions for burn, regular pools and special pools.\n @param _burnRate The % of Shdw to burn each block.\n @param _regularFarmRate The % of Shdw to regular pools each block.\n @param _specialFarmRate The % of Shdw to special pools each block.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "815d087f",
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2133,
											"modifierName": {
												"argumentTypes": null,
												"id": 2132,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "42829:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "42829:9:0"
										}
									],
									"name": "updateShdwRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "_burnRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2192,
												"src": "42698:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "_regularFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2192,
												"src": "42726:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "_specialFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2192,
												"src": "42761:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2192,
												"src": "42796:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42796:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "42687:132:0"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42839:0:0"
									},
									"scope": 2572,
									"src": "42664:895:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "43728:335:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2201,
																"name": "_newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "43747:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43768:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "43760:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2202,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "43760:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43760:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "43747:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a204275726e2061646d696e2061646472657373206d7573742062652076616c6964",
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43772:47:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e959168bbd38c1913039b5593993317b19babfc207d848d759973b778fc4b1ca",
																"typeString": "literal_string \"sMasterChef: Burn admin address must be valid\""
															},
															"value": "sMasterChef: Burn admin address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e959168bbd38c1913039b5593993317b19babfc207d848d759973b778fc4b1ca",
																"typeString": "literal_string \"sMasterChef: Burn admin address must be valid\""
															}
														],
														"id": 2200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "43739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43739:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2209,
												"nodeType": "ExpressionStatement",
												"src": "43739:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2211,
																"name": "_newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "43839:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2212,
																"name": "burnAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "43852:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43839:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a204275726e2061646d696e2061646472657373206973207468652073616d6520776974682063757272656e742061646472657373",
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43863:66:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd1e175c9b78c09a6fa5b3a09d0e632daade2bf18ceea9e3d92451d63a4719ad",
																"typeString": "literal_string \"sMasterChef: Burn admin address is the same with current address\""
															},
															"value": "sMasterChef: Burn admin address is the same with current address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd1e175c9b78c09a6fa5b3a09d0e632daade2bf18ceea9e3d92451d63a4719ad",
																"typeString": "literal_string \"sMasterChef: Burn admin address is the same with current address\""
															}
														],
														"id": 2210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "43831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43831:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2216,
												"nodeType": "ExpressionStatement",
												"src": "43831:99:0"
											},
											{
												"assignments": [
													2218
												],
												"declarations": [
													{
														"constant": false,
														"id": 2218,
														"mutability": "mutable",
														"name": "_oldAdmin",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2230,
														"src": "43941:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2217,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43941:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2220,
												"initialValue": {
													"argumentTypes": null,
													"id": 2219,
													"name": "burnAdmin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 957,
													"src": "43961:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43941:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2221,
														"name": "burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "43981:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2222,
														"name": "_newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "43993:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43981:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "43981:21:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2226,
															"name": "_oldAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "44034:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2227,
															"name": "_newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "44045:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2225,
														"name": "UpdateBurnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "44018:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44018:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2229,
												"nodeType": "EmitStatement",
												"src": "44013:42:0"
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "43567:92:0",
										"text": "@notice Update burn admin address.\n @param _newAdmin The new burn admin address."
									},
									"functionSelector": "0bb844bc",
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2198,
											"modifierName": {
												"argumentTypes": null,
												"id": 2197,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "43718:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "43718:9:0"
										}
									],
									"name": "updateBurnAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "_newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2231,
												"src": "43690:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "43689:19:0"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43728:0:0"
									},
									"scope": 2572,
									"src": "43665:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "44315:188:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2242,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "44334:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44351:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44343:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2243,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "44343:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44343:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "44334:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a20546865207768697465206c6973742061646472657373206d7573742062652076616c6964",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44355:51:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb1268e323a5349b846669016890b7f44312d7ad66f2dc671a7c3c2db9ffa35f",
																"typeString": "literal_string \"sMasterChef: The white list address must be valid\""
															},
															"value": "sMasterChef: The white list address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb1268e323a5349b846669016890b7f44312d7ad66f2dc671a7c3c2db9ffa35f",
																"typeString": "literal_string \"sMasterChef: The white list address must be valid\""
															}
														],
														"id": 2241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "44326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44326:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "44326:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2251,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "44420:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2253,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2252,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "44430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44420:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2254,
														"name": "_isValid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "44439:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "44420:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "44420:27:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2258,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "44479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2259,
															"name": "_isValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "44486:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2257,
														"name": "UpdateWhiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "44463:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44463:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2261,
												"nodeType": "EmitStatement",
												"src": "44458:37:0"
											}
										]
									},
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "44071:164:0",
										"text": "@notice Update whitelisted addresses for special pools.\n @param _user The address to be updated.\n @param _isValid The flag for valid or invalid."
									},
									"functionSelector": "ac1d0609",
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2239,
											"modifierName": {
												"argumentTypes": null,
												"id": 2238,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "44305:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "44305:9:0"
										}
									],
									"name": "updateWhiteList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2263,
												"src": "44266:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "_isValid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2263,
												"src": "44281:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44281:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "44265:30:0"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44315:0:0"
									},
									"scope": 2572,
									"src": "44241:262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "44740:291:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2272,
																	"name": "_newBoostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "44773:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44802:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "44794:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2273,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "44794:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44794:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "44773:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2278,
																	"name": "_newBoostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "44808:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2279,
																	"name": "boostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "44829:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "44808:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "44773:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a204e657720626f6f737420636f6e74726163742061646472657373206d7573742062652076616c6964",
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44857:55:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec629eab5ae786c4cf5802f61fb40ee8786e867164f483bf0dca6a59374710e9",
																"typeString": "literal_string \"sMasterChef: New boost contract address must be valid\""
															},
															"value": "sMasterChef: New boost contract address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec629eab5ae786c4cf5802f61fb40ee8786e867164f483bf0dca6a59374710e9",
																"typeString": "literal_string \"sMasterChef: New boost contract address must be valid\""
															}
														],
														"id": 2271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "44751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44751:172:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "44751:172:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2285,
														"name": "boostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "44936:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2286,
														"name": "_newBoostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "44952:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44936:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2288,
												"nodeType": "ExpressionStatement",
												"src": "44936:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2290,
															"name": "_newBoostContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "45005:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2289,
														"name": "UpdateBoostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "44985:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44985:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "EmitStatement",
												"src": "44980:43:0"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "44511:148:0",
										"text": "@notice Update boost contract address and max boost factor.\n @param _newBoostContract The new address for handling all the share boosts."
									},
									"functionSelector": "9dd2fcc3",
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2269,
											"modifierName": {
												"argumentTypes": null,
												"id": 2268,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "44730:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "44730:9:0"
										}
									],
									"name": "updateBoostContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "_newBoostContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2294,
												"src": "44694:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "44693:27:0"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44740:0:0"
									},
									"scope": 2572,
									"src": "44665:366:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "45421:1135:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2309,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "45440:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "45457:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "45449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2310,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "45449:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45449:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "45440:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a2054686520757365722061646472657373206d7573742062652076616c6964",
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45461:45:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3fc393a5ad31af9d516f0d7871627088156feb13c56b048248b889080aa393f",
																"typeString": "literal_string \"sMasterChef: The user address must be valid\""
															},
															"value": "sMasterChef: The user address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3fc393a5ad31af9d516f0d7871627088156feb13c56b048248b889080aa393f",
																"typeString": "literal_string \"sMasterChef: The user address must be valid\""
															}
														],
														"id": 2308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "45432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45432:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "45432:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2319,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "45526:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																		"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2321,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2320,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "45535:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "45526:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																	"typeString": "struct sMasterChef.PoolInfo storage ref"
																}
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isRegular",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "45526:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a204f6e6c7920726567756c6172206661726d20636f756c6420626520626f6f73746564",
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45552:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_edd1a350b42028c90fd0381ced5fab78c5193777e9309ee5ae1e8cee22e441bf",
																"typeString": "literal_string \"sMasterChef: Only regular farm could be boosted\""
															},
															"value": "sMasterChef: Only regular farm could be boosted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_edd1a350b42028c90fd0381ced5fab78c5193777e9309ee5ae1e8cee22e441bf",
																"typeString": "literal_string \"sMasterChef: Only regular farm could be boosted\""
															}
														],
														"id": 2318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "45518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45518:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "45518:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2327,
																	"name": "_newMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "45635:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2328,
																	"name": "BOOST_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "45653:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45635:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2330,
																	"name": "_newMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "45672:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2331,
																	"name": "MAX_BOOST_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "45690:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45672:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "45635:74:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "734d6173746572436865663a20496e76616c6964206e657720626f6f7374206d756c7469706c696572",
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45724:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8867dd7a5a23a4ff9bc140a004f3158e3f79e819debf37e5b2b91518e1bcfd0",
																"typeString": "literal_string \"sMasterChef: Invalid new boost multiplier\""
															},
															"value": "sMasterChef: Invalid new boost multiplier"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8867dd7a5a23a4ff9bc140a004f3158e3f79e819debf37e5b2b91518e1bcfd0",
																"typeString": "literal_string \"sMasterChef: Invalid new boost multiplier\""
															}
														],
														"id": 2326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "45613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45613:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "45613:165:0"
											},
											{
												"assignments": [
													2338
												],
												"declarations": [
													{
														"constant": false,
														"id": 2338,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2433,
														"src": "45791:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 2337,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 948,
															"src": "45791:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_storage_ptr",
																"typeString": "struct sMasterChef.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2342,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2340,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "45825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2339,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "45814:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$948_memory_ptr_$",
															"typeString": "function (uint256) returns (struct sMasterChef.PoolInfo memory)"
														}
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45814:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
														"typeString": "struct sMasterChef.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45791:39:0"
											},
											{
												"assignments": [
													2344
												],
												"declarations": [
													{
														"constant": false,
														"id": 2344,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2433,
														"src": "45841:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
															"typeString": "struct sMasterChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 2343,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 937,
															"src": "45841:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2350,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2345,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "45865:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2347,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2346,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "45874:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "45865:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
															"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2349,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2348,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "45880:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45865:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$937_storage",
														"typeString": "struct sMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45841:45:0"
											},
											{
												"assignments": [
													2352
												],
												"declarations": [
													{
														"constant": false,
														"id": 2352,
														"mutability": "mutable",
														"name": "prevMultiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2433,
														"src": "45899:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2357,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2354,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "45943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2355,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "45950:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2353,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2461,
														"src": "45924:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45924:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45899:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2359,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "45984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2360,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "45991:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2361,
															"name": "prevMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "45997:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2358,
														"name": "settlePendingShdw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2517,
														"src": "45966:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45966:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "45966:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2364,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "46025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2366,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 934,
														"src": "46025:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2380,
																"name": "ACC_SHDW_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "46140:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2376,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2338,
																			"src": "46100:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accShdwPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 939,
																		"src": "46100:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2373,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "46079:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2370,
																						"name": "_newMultiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2301,
																						"src": "46059:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2367,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2344,
																							"src": "46043:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																								"typeString": "struct sMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2368,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 932,
																						"src": "46043:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2369,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 239,
																					"src": "46043:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "46043:31:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 256,
																			"src": "46043:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46043:52:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "46043:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46043:78:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "46043:82:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46043:126:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46025:144:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2383,
												"nodeType": "ExpressionStatement",
												"src": "46025:144:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2384,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "46180:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																"typeString": "struct sMasterChef.PoolInfo memory"
															}
														},
														"id": 2386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "46180:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2406,
																		"name": "BOOST_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "46340:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2403,
																				"name": "_newMultiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2301,
																				"src": "46320:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 2400,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2344,
																					"src": "46304:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																						"typeString": "struct sMasterChef.UserInfo storage pointer"
																					}
																				},
																				"id": 2401,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 932,
																				"src": "46304:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 239,
																			"src": "46304:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46304:31:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 256,
																	"src": "46304:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46304:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2396,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "46268:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2393,
																						"name": "prevMultiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2352,
																						"src": "46248:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2390,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2344,
																							"src": "46232:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																								"typeString": "struct sMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 2391,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 932,
																						"src": "46232:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2392,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 239,
																					"src": "46232:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "46232:31:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 256,
																			"src": "46232:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46232:52:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2387,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2338,
																			"src": "46205:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
																				"typeString": "struct sMasterChef.PoolInfo memory"
																			}
																		},
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalBoostedShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 945,
																		"src": "46205:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 176,
																	"src": "46205:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46205:80:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 159,
															"src": "46205:84:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46205:162:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46180:187:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2410,
												"nodeType": "ExpressionStatement",
												"src": "46180:187:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2411,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "46378:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 2413,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2412,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "46387:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46378:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
															"typeString": "struct sMasterChef.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2414,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "46395:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$948_memory_ptr",
															"typeString": "struct sMasterChef.PoolInfo memory"
														}
													},
													"src": "46378:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
														"typeString": "struct sMasterChef.PoolInfo storage ref"
													}
												},
												"id": 2416,
												"nodeType": "ExpressionStatement",
												"src": "46378:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2417,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "46410:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
																	}
																},
																"id": 2420,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2418,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "46419:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "46410:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
																	"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
																}
															},
															"id": 2421,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2419,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "46425:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46410:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage",
																"typeString": "struct sMasterChef.UserInfo storage ref"
															}
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "boostMultiplier",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 936,
														"src": "46410:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2423,
														"name": "_newMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "46450:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46410:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2425,
												"nodeType": "ExpressionStatement",
												"src": "46410:54:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2427,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "46504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2428,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "46511:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2429,
															"name": "prevMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "46517:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2430,
															"name": "_newMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "46533:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2426,
														"name": "UpdateBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "46482:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46482:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2432,
												"nodeType": "EmitStatement",
												"src": "46477:71:0"
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "45039:218:0",
										"text": "@notice Update user boost factor.\n @param _user The user address for boost factor updates.\n @param _pid The pool id for the boost factor updates.\n @param _newMultiplier New boost multiplier."
									},
									"functionSelector": "041a84c9",
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2304,
											"modifierName": {
												"argumentTypes": null,
												"id": 2303,
												"name": "onlyBoostContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1156,
												"src": "45390:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "45390:17:0"
										},
										{
											"arguments": null,
											"id": 2306,
											"modifierName": {
												"argumentTypes": null,
												"id": 2305,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 364,
												"src": "45408:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "45408:12:0"
										}
									],
									"name": "updateBoostMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2434,
												"src": "45304:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2434,
												"src": "45328:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "_newMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2434,
												"src": "45351:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "45293:87:0"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45421:0:0"
									},
									"scope": 2572,
									"src": "45263:1293:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "46790:154:0",
										"statements": [
											{
												"assignments": [
													2445
												],
												"declarations": [
													{
														"constant": false,
														"id": 2445,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2460,
														"src": "46801:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2452,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2446,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "46822:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
																}
															},
															"id": 2448,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2447,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2439,
																"src": "46831:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46822:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
																"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
															}
														},
														"id": 2450,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2449,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "46837:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "46822:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_storage",
															"typeString": "struct sMasterChef.UserInfo storage ref"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "boostMultiplier",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 936,
													"src": "46822:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46801:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2453,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "46877:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2454,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "46890:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46877:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 2457,
														"name": "BOOST_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "46921:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "46877:59:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 2456,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "46908:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2443,
												"id": 2459,
												"nodeType": "Return",
												"src": "46870:66:0"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "46564:133:0",
										"text": "@notice Get user boost multiplier for specific pool id.\n @param _user The user address.\n @param _pid The pool id."
									},
									"functionSelector": "033186e8",
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBoostMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2461,
												"src": "46731:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2461,
												"src": "46746:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "46730:29:0"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2461,
												"src": "46781:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "46780:9:0"
									},
									"scope": 2572,
									"src": "46703:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "47330:383:0",
										"statements": [
											{
												"assignments": [
													2472
												],
												"declarations": [
													{
														"constant": false,
														"id": 2472,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2516,
														"src": "47341:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$937_memory_ptr",
															"typeString": "struct sMasterChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 2471,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 937,
															"src": "47341:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$937_storage_ptr",
																"typeString": "struct sMasterChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2478,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2473,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "47364:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct sMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2475,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2474,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "47373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "47364:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$937_storage_$",
															"typeString": "mapping(address => struct sMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2477,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2476,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2464,
														"src": "47379:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "47364:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$937_storage",
														"typeString": "struct sMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47341:44:0"
											},
											{
												"assignments": [
													2480
												],
												"declarations": [
													{
														"constant": false,
														"id": 2480,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2516,
														"src": "47398:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2489,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2487,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "47460:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2484,
																	"name": "_boostMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "47438:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2481,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "47422:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$937_memory_ptr",
																			"typeString": "struct sMasterChef.UserInfo memory"
																		}
																	},
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 932,
																	"src": "47422:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 239,
																"src": "47422:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47422:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 256,
														"src": "47422:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47422:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47398:78:0"
											},
											{
												"assignments": [
													2491
												],
												"declarations": [
													{
														"constant": false,
														"id": 2491,
														"mutability": "mutable",
														"name": "accShdw",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2516,
														"src": "47487:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2502,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2500,
															"name": "ACC_SHDW_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "47559:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2494,
																			"name": "poolInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "47523:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_PoolInfo_$948_storage_$dyn_storage",
																				"typeString": "struct sMasterChef.PoolInfo storage ref[] storage ref"
																			}
																		},
																		"id": 2496,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2495,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2466,
																			"src": "47532:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "47523:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$948_storage",
																			"typeString": "struct sMasterChef.PoolInfo storage ref"
																		}
																	},
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "accShdwPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 939,
																	"src": "47523:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2492,
																	"name": "boostedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "47505:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 239,
																"src": "47505:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47505:49:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 256,
														"src": "47505:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47505:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47487:91:0"
											},
											{
												"assignments": [
													2504
												],
												"declarations": [
													{
														"constant": false,
														"id": 2504,
														"mutability": "mutable",
														"name": "pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2516,
														"src": "47589:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2510,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2507,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "47619:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$937_memory_ptr",
																	"typeString": "struct sMasterChef.UserInfo memory"
																}
															},
															"id": 2508,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 934,
															"src": "47619:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2505,
															"name": "accShdw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "47607:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 176,
														"src": "47607:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47607:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47589:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2512,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2464,
															"src": "47690:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2513,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "47697:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2511,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2571,
														"src": "47676:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47676:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2515,
												"nodeType": "ExpressionStatement",
												"src": "47676:29:0"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "46952:247:0",
										"text": "@notice Settles, distribute the pending Shdw rewards for given user.\n @param _user The user address for settling rewards.\n @param _pid The pool id.\n @param _boostMultiplier The user boost multiplier in specific pool id."
									},
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "settlePendingShdw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2517,
												"src": "47242:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2517,
												"src": "47266:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "_boostMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2517,
												"src": "47289:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "47231:89:0"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47330:0:0"
									},
									"scope": 2572,
									"src": "47205:508:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2570,
										"nodeType": "Block",
										"src": "47914:440:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2525,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2522,
														"src": "47929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47939:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "47929:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2569,
												"nodeType": "IfStatement",
												"src": "47925:422:0",
												"trueBody": {
													"id": 2568,
													"nodeType": "Block",
													"src": "47942:405:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2532,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "48063:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_sMasterChef_$2572",
																						"typeString": "contract sMasterChef"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_sMasterChef_$2572",
																						"typeString": "contract sMasterChef"
																					}
																				],
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "48055:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2530,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "48055:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "48055:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2528,
																			"name": "SHDW",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "48040:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$465",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 404,
																		"src": "48040:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "48040:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2535,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "48072:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48040:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2541,
															"nodeType": "IfStatement",
															"src": "48036:103:0",
															"trueBody": {
																"id": 2540,
																"nodeType": "Block",
																"src": "48081:58:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2537,
																				"name": "harvestFromMasterChef",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1993,
																				"src": "48100:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "48100:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2539,
																		"nodeType": "ExpressionStatement",
																		"src": "48100:23:0"
																	}
																]
															}
														},
														{
															"assignments": [
																2543
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2543,
																	"mutability": "mutable",
																	"name": "balance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2568,
																	"src": "48153:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2542,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "48153:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2551,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2548,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "48194:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sMasterChef_$2572",
																					"typeString": "contract sMasterChef"
																				}
																			],
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48186:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2546,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48186:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48186:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2544,
																		"name": "SHDW",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "48171:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$465",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 404,
																	"src": "48171:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48171:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "48153:47:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2552,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "48219:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2553,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "48229:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48219:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2560,
															"nodeType": "IfStatement",
															"src": "48215:75:0",
															"trueBody": {
																"id": 2559,
																"nodeType": "Block",
																"src": "48238:52:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2555,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2522,
																				"src": "48257:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 2556,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2543,
																				"src": "48267:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "48257:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2558,
																		"nodeType": "ExpressionStatement",
																		"src": "48257:17:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2564,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2520,
																		"src": "48322:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2565,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2522,
																		"src": "48327:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2561,
																		"name": "SHDW",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "48304:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$465",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "48304:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$465_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$465_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48304:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2567,
															"nodeType": "ExpressionStatement",
															"src": "48304:31:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "47721:125:0",
										"text": "@notice Safe Transfer Shdw.\n @param _to The Shdw receiver address.\n @param _amount transfer Shdw amounts."
									},
									"id": 2571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2571,
												"src": "47875:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2571,
												"src": "47888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "47874:30:0"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47914:0:0"
									},
									"scope": 2572,
									"src": "47852:502:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2573,
							"src": "25023:23334:0"
						}
					],
					"src": "35:48322:0"
				},
				"id": 0
			}
		}
	}
}